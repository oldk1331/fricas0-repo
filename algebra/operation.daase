
(2087022 . 1)                
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| (|Integer|)))
                                  #1="failed"))
                    (|:| |basis|
                         (|List| (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|IntegerLinearDependence| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| (|Integer|))) #1#))
                    (|:| |basis|
                         (|List| (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|IntegerLinearDependence| *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|IntegerLinearDependence| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
   (|ofCategory| *5 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|IntegerLinearDependence| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Integer|)))
   (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *5 (|Join| (|ConvertibleTo| *2) (|CommutativeRing|)))
       (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *1 (|ComplexPattern| *4 *5 *3))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *3 (|ComplexCategory| *5))))
 ((*1 *2 *1)
  (AND (|ofType| *5 (|List| *4)) (|isDomain| *2 (|JetBundlePolynomial| *3 *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundlePolynomial| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|)) (|ofType| *5 (|List| *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|OutputFormatterCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|FramedModule| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GeneralPolynomialSet| *3 *4 *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|FreeGroup| *5)))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|GroupPresentationFunctions1| *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|ConvertibleFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ConvertibleTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *6))
       (|ofCategory| *6 (|Join| (|DifferentialRing|) (|LeftModule| *5)))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|LinearOrdinaryDifferentialOperator3| *4 *5 *6))
       (|isDomain| *1 (|LODOConvertions| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator3| *4 *5 *6))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|DifferentialRing|) (|LeftModule| *5)))
       (|isDomain| *2 (|LinearOrdinaryDifferentialOperator1| *6))
       (|isDomain| *1 (|LODOConvertions| *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|LieSquareMatrix| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Integer|)))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *4 *5 *6 *7 *8))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SingletonAsOrderedSet|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|SquareFreeRegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *4 *5 *6 *7
                                                               *8))))
 ((*1 *1 *2 *3 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *5)))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *6)))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *6)))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4))))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|RealClosure| (|Fraction| *4))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SquareFreeRegularTriangularSet| *4
                                                 (|IndexedExponents|
                                                  (|OrderedVariableList| *6))
                                                 (|OrderedVariableList| *6)
                                                 (|NewSparseMultivariatePolynomial|
                                                  *4
                                                  (|OrderedVariableList| *6))))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *4
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *5 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|PolynomialSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|UniqueFactorizationDomain|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|UnivariatePolynomialSquareFree| *4 *3))
       (|ofCategory| *3
                     (|Join| (|UnivariatePolynomialCategory| *4)
                             (|IntegralDomain|)
                             (CATEGORY |domain| (SIGNATURE |gcd| (% % %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|SquareFreeRegularTriangularSet| *4
                                                      (|IndexedExponents|
                                                       (|OrderedVariableList|
                                                        *6))
                                                      (|OrderedVariableList|
                                                       *6)
                                                      (|NewSparseMultivariatePolynomial|
                                                       *4
                                                       (|OrderedVariableList|
                                                        *6)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Float|))
       (|isDomain| *2 (|List| (|List| (|Float|))))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *4 *5)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Stream| *4) (|Stream| *4)))
       (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *4))
       (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|List| (|Stream| *5)) (|List| (|Stream| *5))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|Stream| *5)))
   (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *5))
   (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *6)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *6 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| (|Expression| *6)))
       (|isDomain| *1 (|DegreeReductionPackage| *5 *6))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|IntegrationResult| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|IntegrationResultToFunction| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentExpansionCategory| *3 *2))
       (|ofCategory| *3 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2))
       (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3))
       (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|XPolynomial| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|XRecursivePolynomial| *3 *4))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| (|Symbol|)) (|:| |c| (|XPolynomial| *3)))))
   (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| *3)
                          (|:| |c| (|XRecursivePolynomial| *3 *4)))))
   (|isDomain| *1 (|XRecursivePolynomial| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianGroup|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianSemiGroup|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Color|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|DirectedGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|DenavitHartenbergMatrix| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FreeModule| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FreeModule| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|FunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2
                     (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3)))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Permutation| (|Integer|)))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|LeftModule| *2)) (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Magma|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6)) (|isDomain| *4 (|Mapping| *6 *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Mapping| *7 *5))
       (|isDomain| *1 (|MappingPackage3| *5 *6 *7))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *2 *4))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *2))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|MultifunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RightModule| *2)) (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|UndirectedGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|VectorCategory| *3))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|WeightedGraph| (|Product| *3 *3) *4))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2 *1 *1 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *6))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *8 (|Type|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *8 *9 *10))
       (|isDomain| *1
                   (|TwoDimensionalArrayFunctions| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|TwoDimensionalArrayCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *7))
       (|isDomain| *4 (|CartesianTensor| *5 *6 *7)) (|ofType| *5 (|Integer|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *7 (|CommutativeRing|))
       (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|CartesianTensor| *5 *6 *8))
       (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Complex| *6))
       (|isDomain| *1 (|ComplexFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Expression| *3) (|Expression| *3)))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6))
       (|isDomain| *4 (|DirectProduct| *5 *6))
       (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|isDomain| *2 (|DirectProduct| *5 *7))
       (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Equation| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Equation| *6))
       (|isDomain| *1 (|EquationFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|Kernel| *6)) (|ofCategory| *6 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ExpressionSpaceFunctions1| *6 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *5)) (|isDomain| *4 (|Kernel| *5))
       (|ofCategory| *5 (|ExpressionSpace|))
       (|ofCategory| *2 (|ExpressionSpace|))
       (|isDomain| *1 (|ExpressionSpaceFunctions2| *5 *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Expression| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *2 (|Expression| *6))
       (|isDomain| *1 (|ExpressionFunctions2| *5 *6))))
 ((*1 *2 *3 *1)
  (|partial| AND
   (|isDomain| *3
               (|Mapping| (|Union| (|Polynomial| (|Integer|)) "failed")
                          (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                                    (|:| |denom| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|Mapping| (|Polynomial| (|Integer|))
                          (|Polynomial| (|Integer|))))
   (|isDomain| *3
               (|Record| (|:| |var| (|Symbol|))
                         (|:| |coef|
                              (|SparseUnivariatePolynomial|
                               (|Fraction| (|Polynomial| (|Integer|)))))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Mapping| (|Polynomial| (|Integer|))
                          (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|FiniteAbelianMonoidRing| *7 *5))
       (|isDomain| *1 (|FiniteAbelianMonoidRingFunctions2| *5 *6 *4 *7 *2))
       (|ofCategory| *4 (|FiniteAbelianMonoidRing| *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *5))
       (|isDomain| *4 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *9 (|Field|))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| (|Fraction| *10)))
       (|isDomain| *2 (|FiniteDivisor| *9 *10 *11 *12))
       (|isDomain| *1 (|FiniteDivisorFunctions2| *5 *6 *7 *8 *9 *10 *11 *12))
       (|ofCategory| *12 (|FunctionFieldCategory| *9 *10 *11))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|FullyEvalableOver| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *8 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *8))
       (|ofCategory| *2 (|FunctionFieldCategory| *8 *9 *10))
       (|isDomain| *1
                   (|FunctionFieldCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10
                                                      *2))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| (|Fraction| *9)))))
 ((*1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *6) (|finiteAggregate|)))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|Comparable|))
       (|ofCategory| *2 (|FreeModuleCategory| *6 *7))
       (|isDomain| *1 (|FreeModuleCoefficientFunctions2| *5 *6 *7 *4 *2))
       (|ofCategory| *4 (|FreeModuleCategory| *5 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|Factored| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Factored| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *6))
       (|isDomain| *1 (|FactoredFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Fraction| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|FractionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *5))
       (|isDomain| *4 (|FractionalIdeal| *5 *6 *7 *8))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|QuotientFieldCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *8 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6)))
       (|ofCategory| *9 (|EuclideanDomain|))
       (|ofCategory| *10 (|QuotientFieldCategory| *9))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| *10))
       (|isDomain| *2 (|FractionalIdeal| *9 *10 *11 *12))
       (|isDomain| *1 (|FractionalIdealFunctions2| *5 *6 *7 *8 *9 *10 *11 *12))
       (|ofCategory| *12
                     (|Join| (|FramedAlgebra| *10 *11)
                             (|RetractableTo| *10)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|FramedNonAssociativeAlgebra| *6))
       (|isDomain| *1 (|FramedNonAssociativeAlgebraFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *2 (|FunctionSpace| *6))
       (|isDomain| *1 (|FunctionSpaceFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|FunctionSpace| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *2 (|FiniteSetAggregate| *6))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|FiniteSetAggregate| *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|HomogeneousAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|IndexedProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|IntegrationResult| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|IntegrationResult| *6))
       (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *6 *5))
   (|isDomain| *4
               (|Union| (|Record| (|:| |ratpart| *5) (|:| |coeff| *5))
                        "failed"))
   (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|))
   (|isDomain| *2 (|Record| (|:| |ratpart| *6) (|:| |coeff| *6)))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *2 *5))
   (|isDomain| *4 (|Union| *5 "failed")) (|ofCategory| *5 (|Field|))
   (|ofCategory| *2 (|Field|))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *2))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *6 *5))
   (|isDomain| *4
               (|Union|
                (|Record| (|:| |mainpart| *5)
                          (|:| |limitedlogs|
                               (|List|
                                (|Record| (|:| |coeff| *5)
                                          (|:| |logand| *5)))))
                "failed"))
   (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |mainpart| *6)
                         (|:| |limitedlogs|
                              (|List|
                               (|Record| (|:| |coeff| *6)
                                         (|:| |logand| *6))))))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|InfiniteTuple| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|InfiniteTuple| *6))
       (|isDomain| *1 (|InfiniteTupleFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7))
       (|isDomain| *4 (|InfiniteTuple| *6))
       (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|InfiniteTuple| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6))
       (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7))
       (|isDomain| *4 (|InfiniteTuple| *6)) (|isDomain| *5 (|Stream| *7))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
       (|ofCategory| *8 (|Type|)) (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|ListFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|List| *8))
       (|isDomain| *1 (|ListFunctions3| *6 *7 *8))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *8 "failed") *5))
   (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *6 (|FiniteLinearAggregate| *5))
   (|ofCategory| *7 (|FiniteLinearAggregate| *5))
   (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
   (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
   (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *8))
   (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *1 (|MultipleMap| *5 *6 *4 *7 *8 *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *8)) (|ofCategory| *8 (|Ring|))
       (|ofCategory| *9 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|PolynomialCategory| *9 *7 *5))
       (|isDomain| *1 (|MPolyCatFunctions2| *5 *6 *7 *8 *9 *4 *2))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *8 *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|Ring|))
       (|ofCategory| *2 (|PolynomialCategory| *9 *8 *6))
       (|isDomain| *1 (|MPolyCatFunctions3| *5 *6 *7 *8 *9 *4 *2))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *9 *7 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|MonoidRing| *5 *7))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|Monoid|)) (|isDomain| *2 (|MonoidRing| *6 *7))
       (|isDomain| *1 (|MonoidRingFunctions2| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|NewSparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|NewSparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|NewSparseUnivariatePolynomialFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|OctonionCategory| *6))
       (|isDomain| *1 (|OctonionCategoryFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|OctonionCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OnePointCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|OnePointCompletion| *6))
       (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| *6))
       (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OnePointCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OrderedCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|OrderedCompletion| *6))
       (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *2 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| *6))
       (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OrderedCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricPlaneCurve| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricPlaneCurve| *6))
       (|isDomain| *1 (|ParametricPlaneCurveFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricSpaceCurve| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSpaceCurve| *6))
       (|isDomain| *1 (|ParametricSpaceCurveFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricSurface| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSurface| *6))
       (|isDomain| *1 (|ParametricSurfaceFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6))
       (|isDomain| *4 (|PatternMatchResult| *5 *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *5 *7))
       (|isDomain| *1 (|PatternMatchResultFunctions2| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Pattern| *6))
       (|isDomain| *1 (|PatternFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Polynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Polynomial| *6))
       (|isDomain| *1 (|PolynomialFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *7)) (|isDomain| *4 (|Mapping| *2 *8))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2
                     (CATEGORY |domain| (SIGNATURE + (% % %))
                      (SIGNATURE * (% % %))
                      (SIGNATURE ^ (% % (|NonNegativeInteger|)))))
       (|isDomain| *1 (|PolynomialCategoryLifting| *6 *7 *8 *5 *2))
       (|ofCategory| *5 (|PolynomialCategory| *8 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|PrimitiveArray| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|PrimitiveArray| *6))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Point| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Point| *6)) (|isDomain| *1 (|PointFunctions2| *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Polynomial| *4)))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %))
                              (SIGNATURE |variable|
                               ((|Union| % "failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2 (|QuotientFieldCategory| *6))
       (|isDomain| *1 (|QuotientFieldCategoryFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|QuotientFieldCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|QuaternionCategory| *6))
       (|isDomain| *1 (|QuaternionCategoryFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|QuaternionCategory| *5))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *5 *5 *5))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *10 *7))
       (|ofCategory| *7 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *10 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *8 (|DirectProductCategory| *6 *7))
       (|ofCategory| *9 (|DirectProductCategory| *5 *7))
       (|ofCategory| *2 (|RectangularMatrixCategory| *5 *6 *10 *11 *12))
       (|isDomain| *1
                   (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *10
                                                          *11 *12 *2))
       (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9))
       (|ofCategory| *11 (|DirectProductCategory| *6 *10))
       (|ofCategory| *12 (|DirectProductCategory| *5 *10))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Segment| *6))
       (|isDomain| *1 (|SegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|SegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|SegmentBinding| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|SegmentBinding| *6))
       (|isDomain| *1 (|SegmentBindingFunctions2| *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2))
       (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Sequence| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *6))
       (|isDomain| *1 (|SequenceFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Stream| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Stream| *6))
       (|isDomain| *1 (|StreamFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6))
       (|isDomain| *5 (|Stream| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|StreamFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|SparseUnivariatePolynomialFunctions2| *5 *6))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4 *4))
       (|ofCategory| *1 (|TableAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UnivariateLaurentSeries| *5 *7 *9))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6)
       (|isDomain| *2 (|UnivariateLaurentSeries| *6 *8 *10))
       (|isDomain| *1 (|UnivariateLaurentSeriesFunctions2| *5 *6 *7 *8 *9 *10))
       (|ofType| *8 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UniversalSegment| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|UniversalSegment| *6))
       (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UniversalSegment| *5))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Stream| *6))
       (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *6))
       (|isDomain| *4 (|UnivariatePolynomial| *5 *6)) (|ofType| *5 (|Symbol|))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *8 (|Ring|))
       (|isDomain| *2 (|UnivariatePolynomial| *7 *8))
       (|isDomain| *1 (|UnivariatePolynomialFunctions2| *5 *6 *7 *8))
       (|ofType| *7 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *1 (|UnivariatePolynomialCategoryFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UnivariatePuiseuxSeries| *5 *7 *9))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6)
       (|isDomain| *2 (|UnivariatePuiseuxSeries| *6 *8 *10))
       (|isDomain| *1 (|UnivariatePuiseuxSeriesFunctions2| *5 *6 *7 *8 *9 *10))
       (|ofType| *8 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *6 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *6))
       (|isDomain| *1 (|UnivariateTaylorSeriesFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|VectorFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *6 "failed") *5))
   (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Type|))
   (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Vector| *6))
   (|isDomain| *1 (|VectorFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|)) (|ofCategory| *1 (|Aggregate|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPolynomialRing| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|Algebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofType| *6 (|Vector| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 2))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|CartesianTensor| *3 *4 *5)))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|DirectProduct| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SKICombinators| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|Lambda| *4)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Lambda| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|SKICombinators| *4)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SKICombinators| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|ILogic|)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Matrix| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) %))
                              (SIGNATURE |fullDisplay| ((|Void|) %)))))
       (|isDomain| *1 (|Database| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 10))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|DirichletRing| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|DirichletRing| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|)))
       (|isDomain| *1 (|DirichletRing| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|)))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|DirichletRing| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Distribution| *5))
       (|isDomain| *1 (|DistributionFunctions2| *4 *5))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| (|Expression| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|) (|IntegralDomain|)
                             (|ConvertibleTo| (|Float|))))
       (|isDomain| *2 (|SegmentBinding| (|Float|)))
       (|isDomain| *1 (|DrawNumericHack| *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)
       (|ofCategory| *3
                     (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|GcdDomain|)))
       (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *5))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4))
       (|isDomain| *1 (|FiniteFieldHomomorphisms| *3 *4 *2))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4))
       (|isDomain| *1 (|FiniteFieldHomomorphisms| *2 *4 *3))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|XRecursivePolynomial| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|XDistributedPolynomial| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|MachineFloat|)))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1="void")))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
   (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Fraction| *3))))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| *3)))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FourierComponent| *4))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|AbelianGroup|)))
       (|isDomain| *1 (|FourierSeries| *3 *4))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierSeries| *2 *3))
       (|ofCategory| *2
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|Join| (|OrderedSet|) (|AbelianGroup|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranScalarType|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|MachineFloat|)))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| *3))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofType| *6 (|Vector| (|Matrix| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 16))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|IndexCard|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Expression| (|Integer|)) *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleExpression| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|JetBundleExpression| *3))))
   (|isDomain| *1 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleBaseFunctionCategory| *4))
       (|isDomain| *2 (|List| (|JetBundleLinearFunction| *4 *5)))
       (|isDomain| *1 (|JetBundleLinearFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleLinearFunction| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetBundleLinearFunction| *4 *5))
       (|ofCategory| *5 (|JetBundleBaseFunctionCategory| *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|JetBundleSymAna| *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofType| *4 (|Union| *2 (|List| *2)))
       (|ofType| *5 (|Union| *2 (|List| *2)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|JetBundle| *3 *4))
       (|ofType| *3 (|List| *2)) (|ofType| *4 (|List| *2))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleXExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleXExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|AssociatedJordanAlgebra| *3 *2))
       (|ofCategory| *2 (|NonAssociativeAlgebra| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|CoercibleTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|CoercibleFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|LeftAlgebra| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LatticeMeetOfJoins|))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LatticeMeetOfJoins|))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XPBWPolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|AssociatedLieAlgebra| *3 *2))
       (|ofCategory| *2 (|NonAssociativeAlgebra| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMagma| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3))))
   (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3))))
   (|ofCategory| *3 (|SetCategory|))
   (|isDomain| *1 (|ThreeDimensionalMatrix| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|MachineInteger|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|MachineFloat|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|Integer|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|MachineInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|MachineInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MakeCachableSet| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4)))
       (|isDomain| *1 (|ModuleMonomial| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|))
       (|ofType| *5 (|Mapping| (|Boolean|) *2 *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4)))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|ModuleMonomial| *3 *4 *5))
       (|ofType| *5 (|Mapping| (|Boolean|) *2 *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|ofCategory| *1 (|MonoidRingCategory| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|NonAssociativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|NoneFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PartialDifferentialRing| *3))
       (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3)
       (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathErrorKind|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|))
       (|isDomain| *1 (|UnivariateSkewPolynomial| *3 *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Automorphism| *4))
       (|ofType| *6 (|Mapping| *4 *4))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6))
       (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|List| (|NonNegativeInteger|)))
       (|ofType| *6 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Polynomial| *3))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|List| (|NonNegativeInteger|)))
       (|ofType| *6 (|NonNegativeInteger|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|AlgebraicNumber|)))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PolynomialAN2Expression|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|AlgebraicNumber|))))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PolynomialAN2Expression|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Tree| *3)) (|isDomain| *1 (|PendantTree| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PermutationGroup| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Factored| *3)))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| *3)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PiDomain|)) (|isDomain| *2 (|Expression| *4))
       (|isDomain| *1 (|PiCoercions| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ResolveLatticeCompletion| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Exit|)) (|isDomain| *1 (|ResolveLatticeCompletion| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|ofType| *6 (|List| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|RationalFunction| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|SArgand|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|SArgand|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4))
       (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|SquareMatrix| *3 *4))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Character|)) (|ofCategory| *1 (|StringAggregate|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|STransform| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Switch|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Table| (|Symbol|) (|FortranType|)))
       (|isDomain| *1 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|TexFormat|)) (|isDomain| *1 (|TexFormat1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TexmacsFormat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|TaylorSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Tuple| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| '|x| *3))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Segment| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|UniversalSegment| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|))
       (|isDomain| *1 (|UnivariatePolynomial| *3 *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3))
       (|ofType| *3 *2)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|GraphImage|))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Void|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Vector| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4))
       (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|ofType| *7 (|List| (|NonNegativeInteger|)))
       (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4))
       (|ofType| *7 (|List| (|NonNegativeInteger|)))
       (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|XAlgebra| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|XmlElement|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|FreeMonoid| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedMonoid|))
       (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|FreeMonoid| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedMonoid|))
       (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|ofType| *2 (|List| (|Symbol|))) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *2) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5))
                   (|Record| (|:| |index| *4) (|:| |exponent| *5))))
       (|isDomain| *1 (|GeneralModulePolynomial| *2 *3 *4 *5 *6 *7))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *3 *5 (|OrderedVariableList| *2)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|XRecursivePolynomial| *4 *2))
       (|ofCategory| *1 (|FreeLieAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4))
       (|ofCategory| *1 (|XFreeAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *5 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *5))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Field|)))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 *4))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *2 *3))
       (|ofCategory| *2 (|Algebra| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *3 *2))
       (|ofCategory| *3 (|Algebra| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|LieAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *2 *3))
       (|ofCategory| *2 (|Module| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *2))
       (|ofCategory| *3 (|Module| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|OrdinaryWeightedPolynomials| *2 *3 *4 *5))
   (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|))
   (|ofType| *3 (|List| (|Symbol|)))
   (|ofType| *4 (|List| (|NonNegativeInteger|)))
   (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *4 *2))
       (|ofCategory| *6 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *3))
   (|isDomain| *1 (|WeightedPolynomials| *2 *3 *4 *5 *6 *7 *8))
   (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))
   (|ofType| *7 (|List| (|NonNegativeInteger|)))
   (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|Ring|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FactoringUtilities| *5 *6 *7 *8))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|GradedModule| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|AbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *5 *3))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *3 *4 *5 *6))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PrimitiveArray| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorPolynomialOperationsF| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PrimitiveArray| (|PrimeField| *4)))
       (|ofType| *4 (|PositiveInteger|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorPolynomialOperationsP| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *2 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|OrderedAbelianMonoidSup|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|ofCategory| *7 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|GcdDomain|) (|Comparable|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|ExpressionFactorPolynomial| *5 *6))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Integer|)))
       (|isDomain| *2 (|Factored| (|Complex| (|Integer|))))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|OrderedSet|)
                         (CATEGORY |domain|
                          (SIGNATURE |convert| ((|Symbol|) %)))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
   (|isDomain| *1 (|GeneralizedMultivariateFactorize| *4 *5 *6 *7 *3))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *3 (|PolynomialCategory| *7 *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|MonogenicAlgebra| *5 *6)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|InnerAlgFactor| *5 *6 *7 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *7))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7))
                          (|SparseUnivariatePolynomial| *7)))
   (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|Factored| *3))
   (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *3))
   (|ofCategory| *3 (|PolynomialCategory| *7 *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7))
                              (|SparseUnivariatePolynomial| *7)))
       (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *8 (|PolynomialCategory| *7 *6 *5))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))
                (|List| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|List| (|Expression| (|Integer|)))) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator1|
                 (|Fraction|
                  (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LyndonWord| *4)))
       (|isDomain| *1 (|LyndonWord| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MPolyCatPolyFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|Polynomial| *6) *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4
                                           *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MRationalFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|Fraction| *6) *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|RationalFunctionFactor| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Polynomial| (|Integer|)))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|UniqueFactorizationDomain|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |quotient| (|XDistributedPolynomial| *4 *5))
                             (|:| |remainder|
                                  (|XDistributedPolynomial| *4 *5))))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |g| (|XDistributedPolynomial| *4 *5))
                         (|:| |c1| (|XDistributedPolynomial| *4 *5))
                         (|:| |c2| (|XDistributedPolynomial| *4 *5))
                         (|:| |cu| (|XDistributedPolynomial| *4 *5))
                         (|:| |cv| (|XDistributedPolynomial| *4 *5))))
   (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
   (|isDomain| *1 (|LiePolynomial| *3 *4))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|LiePolynomial| *3 *4))
   (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|CubicalFacet|)))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|CombinatorialOpsCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteCubicalComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|ProductFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3
                     (|Join| (|Algebra| (|Fraction| (|Integer|)))
                             (|TranscendentalFunctionCategory|)
                             (|CommutativeRing|)))
       (|isDomain| *1 (|StreamExponentialSeriesTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *4 (|Module| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |coef| (|NonNegativeInteger|))
                              (|:| |logand| *4))))
       (|isDomain| *1 (|FactoredFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3
                     (|Join| (|Algebra| (|Fraction| (|Integer|)))
                             (|TranscendentalFunctionCategory|)
                             (|CommutativeRing|)))
       (|isDomain| *1 (|StreamExponentialSeriesTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *4 (|Module| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|TextFile|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|TextFile|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|XmlElement|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XmlElement|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|XmlElement|)))
       (|isDomain| *4 (|List| (|XmlAttribute|)))
       (|isDomain| *1 (|XmlElement|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|XmlAttribute|)))
       (|isDomain| *1 (|XmlElement|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|XmlAttribute|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XmlElement|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExportXml|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XmlElement|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExportXml|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetVectorField| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|TwoDimensionalArray| (|JetVectorField| *4 *5)))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |key| *3) (|:| |entry| *4))))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *1 (|TableAggregate| *3 *4))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|TableAggregate| *2 *3)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|SingleInteger|) *3))
       (|ofCategory| *3 (|Hashable|)) (|isDomain| *1 (|XHashTable| *3 *4))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |k| (|FreeMonoid| *3)) (|:| |c| *4)))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|))
       (|ofType| *5 (|SquareMatrix| *4 *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|ModuleMonomial| *5 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *6 *7 *8))
       (|ofCategory| *8
                     (|PolynomialCategory| *2 *6 (|OrderedVariableList| *4)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *1 (|XFreeAlgebra| *4 *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LieExponentials| *2 *3 *4))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|BasicType|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|NormRetractPackage| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|ofType| *6 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Finite|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *2)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|Finite|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |alpha| (|Matrix| *5))
                             (|:| |mu| (|List| (|Matrix| *5)))
                             (|:| |var| (|List| *4))
                             (|:| |beta| (|Matrix| *5))))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Matrix| *5)))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *5 *6))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|OutputForm|)))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| (*2 %))
                              (SIGNATURE |fullDisplay| (*2 %)))))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OutputFormatterCategory|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TexmacsFormat|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |rows| (|List| (|FreeMonoid| *4)))
                         (|:| |cols| (|List| (|FreeMonoid| *4)))
                         (|:| H (|Matrix| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2 (|OutputForm|))
   (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |rows| (|List| (|FreeMonoid| *4)))
                             (|:| |cols| (|List| (|FreeMonoid| *4)))
                             (|:| H (|Matrix| *5))))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|FreeMonoid| *4)))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| *6))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| *8))
   (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
   (|isDomain| *4 (|Mapping| *8 *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| *6))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| *8))
   (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
   (|isDomain| *4 (|Mapping| *8 *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *4 *5 *6 *7)))
       (|isDomain| *1 (|WuWenTsunTriangularSet| *4 *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *6 *7 *8 *9)))
       (|isDomain| *1 (|WuWenTsunTriangularSet| *6 *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *4 *5 *6 *7))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|List| *3)) (|ofType| *7 *3)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofType| *8 (|List| *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|WeightedPolynomials| *4 *5 *6 *7 *8 *9 *10))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofType| *9 (|List| *3)) (|ofType| *10 *3)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|WeightedGraph| *4 *5))
   (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |weight| *5))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|)) (|:| |weight| *5)
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
   (|isDomain| *1 (|WeightedGraph| *4 *5))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |weight| *4))))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
   (|isDomain| *1 (|WeightedGraph| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|WeightedGraph| *5 *4))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Union| *5 "disjoint"))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))
       (|isDomain| *1 (|WeightedGraph| *4 *2))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))
       (|isDomain| *1 (|WeightedGraph| *4 *2))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|DirectedGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *1 (|ListPackage| *3))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|MultifunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|UndirectedGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|WeightedGraph| (|Product| *3 *3) *4))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|TwoDimensionalArray| (|Union| *4 "disjoint")))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| %) %)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| (|Integer|)))
                             (|:| |basisDen| (|Integer|))
                             (|:| |basisInv| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                             (|:| |basisInv| (|Matrix| *3))))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *3 *5 *6))
       (|ofCategory| *6 (|MonogenicAlgebra| *3 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                             (|:| |basisInv| (|Matrix| *3))))
       (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *4 *3 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *3 *5))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| %) %)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| (|Integer|)))
                             (|:| |basisDen| (|Integer|))
                             (|:| |basisInv| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4))
       (|ofCategory| *4 (|FramedAlgebra| (|Integer|) *3))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4)
                             (|:| |basisInv| (|Matrix| *4))))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *3 *4 *5 *6))
       (|ofCategory| *6 (|MonogenicAlgebra| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4)
                             (|:| |basisInv| (|Matrix| *4))))
       (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *3 *4 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|TaylorSeries| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|TaylorSeries| *5)))
       (|isDomain| *1 (|WeierstrassPreparation| *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 *2)))
 ((*1 *2)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FramedModule| *3))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Vector| (|List| (|Integer|))))
       (|isDomain| *1 (|HallBasis|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|Vector| (|Vector| *4)))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *6 (|shallowlyMutable|))
       (|ofCategory| *4 (|DivisionRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *9 (|shallowlyMutable|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *10))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *10 (|MatrixCategory| *7 *8 *9))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|isDomain| *2 (|List| *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianSemiGroup|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|Color|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Database| *2))
       (|ofCategory| *2
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) %))
                              (SIGNATURE |fullDisplay| ((|Void|) %)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|AbelianMonoid|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|DivisionRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|OctonionCategory&| *3 *4))
       (|ofCategory| *3 (|OctonionCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|)))
 ((*1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3)
       (|ofType| *5 *3)))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
   (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FramedModule| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Matrix| *5))) (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1) (|isDomain| *1 (|Void|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|SubSpace| 3 *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *4))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1 *3 *4 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Color|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|GraphImage|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *2 *1 *3 *4 *4 *4 *4 *5 *5 *5 *5 *6 *5 *6 *5)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *5 (|Integer|)) (|isDomain| *6 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Vector|
                (|Record| (|:| |scaleX| (|DoubleFloat|))
                          (|:| |scaleY| (|DoubleFloat|))
                          (|:| |deltaX| (|DoubleFloat|))
                          (|:| |deltaY| (|DoubleFloat|))
                          (|:| |points| (|Integer|))
                          (|:| |connect| (|Integer|))
                          (|:| |spline| (|Integer|)) (|:| |axes| (|Integer|))
                          (|:| |axesColor| (|Palette|))
                          (|:| |units| (|Integer|))
                          (|:| |unitsColor| (|Palette|))
                          (|:| |showing| (|Integer|)))))
   (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Vector| (|Union| (|GraphImage|) "undefined")))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *4 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *6 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2 (|GraphImage|)) (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|List|
                (|Vector|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *2
               (|Matrix|
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|VectorHermitePadeSolver|))))) 
(((*1 *1 *1) (|isDomain| *1 (|AlgebraicNumber|)))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *2))))
 ((*1 *2 *3 *1 *2 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *1 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *4))
                             (|:| |deg| (|PositiveInteger|))))
       (|isDomain| *1 (|DegreeReductionPackage| *4 *5))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *6 *2))
       (|isDomain| *4 (|DirectProduct| *5 *6))
       (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *2))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *4 *2 *3 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *3))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Expression| *2)) (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |poly| *3) (|:| |repr| (|Vector| *3))
                             (|:| |mult| *5)))
       (|isDomain| *1 (|ExtendedPolynomialReduction| *5 *6 *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *2 *6))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))
       (|ofCategory| *6 (|Join| (|LinearAggregate| *2) (|finiteAggregate|)))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *2 *6))
       (|ofCategory| *4 (|FiniteSetAggregate| *5))
       (|ofCategory| *6 (|FiniteSetAggregate| *2))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|JetBundleExpression| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|JetBundleXExpression| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListFunctions2| *5 *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *8 (|FiniteLinearAggregate| *2))
       (|ofCategory| *9 (|FiniteLinearAggregate| *2))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *2 *8 *9 *10))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *10 (|MatrixCategory| *2 *8 *9))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *1 (|MonogenicAlgebra| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|isDomain| *4 (|PrimitiveArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *2))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|ofType| *6 (|List| *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *7 *2))
       (|ofCategory| *7 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *8 (|DirectProductCategory| *6 *7))
       (|ofCategory| *9 (|DirectProductCategory| *5 *7))
       (|ofCategory| *10 (|DirectProductCategory| *6 *2))
       (|ofCategory| *11 (|DirectProductCategory| *5 *2))
       (|isDomain| *1
                   (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *2
                                                          *10 *11 *12))
       (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9))
       (|ofCategory| *12 (|RectangularMatrixCategory| *5 *6 *2 *10 *11))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Stream| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|StreamFunctions2| *5 *2))))
 ((*1 *2 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *2))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *5 *6 *7))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|VectorFunctions2| *5 *2))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5))
       (|isDomain| *4 (|OneDimensionalArray| *6)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *5))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *7 *5))
       (|isDomain| *4 (|DirectProduct| *6 *7))
       (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *7 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|DirectProduct| *6 *5))
       (|isDomain| *1 (|DirectProductFunctions2| *6 *7 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *6 *4 *5 *2))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *6) (|finiteAggregate|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|FiniteSetAggregate| *5))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *6 *4 *5 *2))
       (|ofCategory| *4 (|FiniteSetAggregate| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|ListFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5))
       (|isDomain| *4 (|PrimitiveArray| *6)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|PrimitiveArray| *5))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Mapping| *3 *6 *3)) (|isDomain| *5 (|Stream| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamFunctions2| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|VectorFunctions2| *6 *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Complex| (|DoubleFloat|))))
       (|isDomain| *1 (|ComplexDoubleFloatVector|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Vector| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|VectorCategory| *3))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianGroup|)))
 ((*1 *1 *1) (|ofCategory| *1 (|AbelianGroup|)))
 ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|CardinalNumber|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Database| *2))
       (|ofCategory| *2
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) %))
                              (SIGNATURE |fullDisplay| ((|Void|) %)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|AbelianGroup|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiRng|))
       (|ofCategory| *2 (|AbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|)))
       (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianMonoid|)) (|ofCategory| *2 (|SemiRng|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PointCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|RadicalCategory|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *4 *5 *6 *6 *3)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *1 *3 *4 *4 *5)
  (|partial| AND (|isDomain| *4 (|Vector| (|Integer|)))
   (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |nvars| (|Integer|))
                         (|:| |offsetdata| (|Vector| (|Integer|)))
                         (|:| |expdata| (|SortedExponentVector|))
                         (|:| |coeffdata| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Vector| (|Integer|)))
   (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *2 *2 *4)
  (AND (|isDomain| *2 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Vector| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *2 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *3 (|Vector| (|Integer|)))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|U32Vector|)))
                         (|:| |denoms| (|PrimitiveArray| (|U32Vector|)))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|U32Vector|))
                         (|:| |denom| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Integer|))
   (|isDomain| *2 (|Record| (|:| |num| (|Integer|)) (|:| |den| (|Integer|))))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|Integer|)))
                         (|:| |denoms| (|PrimitiveArray| (|Integer|)))))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1) (|isDomain| *1 (|OutputBox|)))
 ((*1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1)
  (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))
 ((*1 *1) (|isDomain| *1 (|SymbolTable|)))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|OrderedVariableList| *3)) (|ofType| *3 (|List| *2))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|QueryEquation|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3))
       (|ofType| *3 *2)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|ILogic|))
       (|ofCategory| *1 (|VarCat|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|String|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|ILogic|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|String|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| *1)
                             (|:| |pout| (|NonNegativeInteger|))))
       (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Reference| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *3 *3)
  (AND (|isDomain| *3 (|Equation| *6)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *5 *6))))
 ((*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| (|Equation| *7)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|Equation| *8)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *8)) (|isDomain| *6 (|List| *8))
       (|ofCategory| *8 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *6 (|List| (|Equation| *8)))
       (|ofCategory| *8 (|FunctionSpace| *7)) (|isDomain| *5 (|Equation| *8))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 ((*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *5)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *5 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *5))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ExpressionSolve| *7 *3 *2 *8))
       (|ofCategory| *8
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *3)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *5)))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *1 (|TaylorSolve| *5 *2 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UTSodetools| *4 *5 *6 *2))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Mapping| *6 (|List| *6)))
       (|isDomain| *1 (|UTSodetools| *4 *5 *3 *6))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|UTSodetools| *5 *2 *6 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UTSodetools| *4 *3 *5 *2))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| (|Mapping| *6 (|List| *6))))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|List| *2))) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *2))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 (|List| *5)))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|List| (|Stream| *4))))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4) (|Stream| *4)))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4)))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|)))
       (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *7 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *7 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerTaylorSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *5))
       (|ofCategory| *5 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3
                   (|Stream|
                    (|Record| (|:| |k| (|Fraction| (|Integer|)))
                              (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Stream|
                (|Record| (|:| |k| (|NonNegativeInteger|)) (|:| |c| *3))))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Stream| *5))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|)))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|)))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4 (|RetractableTo| (|Integer|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|CardinalNumber|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DivisionRing|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *4 *5 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateLaurentSeriesCategory| *4))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *4 *5 *2 *6))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5))
       (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Group|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|MappingPackage1| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|Monoid|)) (|ofCategory| *3 (|SemiRng|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *3 *4))
       (|ofCategory| *4 (|LeftModule| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Operator| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RadicalCategory|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *3 *4))
       (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 *4))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| '|x| *4))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 *4))
       (|isDomain| *1 (|UnivariateTaylorSeries| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialExtension| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|DifferentialExtension| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))
       (|isDomain| *1 (|IntegrationResult| *2)) (|isDomain| *3 (|Symbol|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2))
       (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Union| *1 "0"))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| #1="failed")
                            (|:| |pole| #2="potentialPole")))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3)))
       (|isDomain| *5 (|String|))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| #1#) (|:| |pole| #2#)))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4
                   (|SegmentBinding| (|OrderedCompletion| (|Expression| *5))))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5)))
                            (|:| |f2|
                                 (|List|
                                  (|OrderedCompletion| (|Expression| *5))))
                            (|:| |fail| #3="failed")
                            (|:| |pole| #4="potentialPole")))
       (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
       (|isDomain| *4
                   (|SegmentBinding| (|OrderedCompletion| (|Expression| *6))))
       (|isDomain| *5 (|String|))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6)))
                            (|:| |f2|
                                 (|List|
                                  (|OrderedCompletion| (|Expression| *6))))
                            (|:| |fail| #3#) (|:| |pole| #4#)))
       (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|SegmentBinding|
                (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|ofCategory| *5
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5)))
                        (|:| |f2|
                             (|List| (|OrderedCompletion| (|Expression| *5))))
                        (|:| |fail| #3#) (|:| |pole| #4#)))
   (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|SegmentBinding|
                (|OrderedCompletion| (|Fraction| (|Polynomial| *6)))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6)))
                        (|:| |f2|
                             (|List| (|OrderedCompletion| (|Expression| *6))))
                        (|:| |fail| #3#) (|:| |pole| #4#)))
   (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Union| *3 (|List| *3)))
       (|isDomain| *1 (|FunctionSpaceIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| (|Fraction| *5)))
       (|isDomain| *1 (|RationalIntegration| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Union| (|Expression| *5) (|List| (|Expression| *5))))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Polynomial| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|UnivariateSeriesWithRationalExponents| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
       (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSeriesWithRationalExponents| *2 *3))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4))
       (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|SequenceCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|Segment| (|Integer|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "right")
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "left") (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 (|Integer|))
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *2)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|DataList| (|String|)))
       (|isDomain| *1 (|Database| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % *3))
                              (SIGNATURE |display| ((|Void|) %))
                              (SIGNATURE |fullDisplay| ((|Void|) %)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|QueryEquation|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) %))
                              (SIGNATURE |fullDisplay| ((|Void|) %)))))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "count") (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DataList| *4)) (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "sort") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "unique") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Eltable| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|XDistributedPolynomial| *4 *5))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *1 *2 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|IndexCard|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|Library|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PermutationCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Permutation| *4))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DirectProduct| *4 *2))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|QuadraticForm| *4 *2))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "value") (|ofCategory| *1 (|RecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|Ruleset| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *2))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| *1))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Fraction| *1))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "last") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "first") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5))
   (|ofCategory| *2 (|IntegralDomain|))
   (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *3 *2))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *1 (|shallowlyMutable|)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|Segment| (|Integer|)))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "right") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "left") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *4 *5))
       (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|Library|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "value") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *4 *5)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|TableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "last") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "first") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))
 ((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *1
               (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5
                                                                    *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2
               (|Record|
                (|:| |%term|
                     (|Record|
                      (|:| |%coef| (|UnivariatePuiseuxSeries| *4 *5 *6))
                      (|:| |%expon|
                           (|ExponentialOfUnivariatePuiseuxSeries| *4 *5 *6))
                      (|:| |%expTerms|
                           (|List|
                            (|Record| (|:| |k| (|Fraction| (|Integer|)))
                                      (|:| |c| *4))))))
                (|:| |%type| (|String|))))
   (|isDomain| *1
               (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5
                                                                    *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *5 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *7 (|Fraction| (|Integer|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *7 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *7 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *7))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *3))
       (|ofCategory| *3 (|UnivariateLaurentSeriesCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *2 (|Fraction| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *4)
                             (|LinearlyExplicitOver| *4)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *5)
                             (|LinearlyExplicitOver| *5)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *4 *3))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |flag| (|Union| "nil" "sqfr" "irred" "prime"))
                         (|:| |factor| *4)
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|ofCategory| *4
                 (|Join| (|UnivariatePolynomialCategory| *3) (|IntegralDomain|)
                         (CATEGORY |domain| (SIGNATURE |gcd| (% % %)))))
   (|ofCategory| *3 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|UniqueFactorizationDomain|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *2))
       (|ofCategory| *2
                     (|Join| (|UnivariatePolynomialCategory| *3)
                             (|IntegralDomain|)
                             (CATEGORY |domain| (SIGNATURE |gcd| (% % %)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Stream| (|Record| (|:| |k| *4) (|:| |c| *3))))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|String|)) (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGroup|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *4 *5 *6 *7))
       (|ofCategory| *4 (|Join| (|Finite|) (|Field|)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *7 (|FunctionFieldCategory| *4 *5 *6))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FindOrderFinite| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|FiniteDivisor| *6 *7 *4 *8))
       (|isDomain| *5 (|Mapping| *9 *6)) (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|ofCategory| *8 (|FunctionFieldCategory| *6 *7 *4))
       (|ofCategory| *9 (|Join| (|Finite|) (|Field|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ReducedDivisor| *6 *7 *4 *8 *9))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BalancedPAdicRational| *4)) (|ofType| *4 *3)))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|PAdicRational| *4)) (|ofType| *4 *3)))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofType| *4 *3)
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|PAdicRationalConstructor| *4 *5))
       (|ofCategory| *5 (|PAdicIntegerCategory| *4))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|has| *2 (SIGNATURE ^ (*2 *2 *3)))
       (|has| *2 (SIGNATURE |coerce| (*2 (|Symbol|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|PointCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *3)))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Equation| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Evalable| *2)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|Equation| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|BasicOperator|)))
       (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|BasicOperator|)))
       (|isDomain| *3 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *3)))
       (|ofCategory| *1 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Equation| *3)) (|ofCategory| *1 (|Evalable| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|Integer|)))
       (|isDomain| *4 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|EvaluateCycleIndicators| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FreeLieAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Mapping| *1 *1))
       (|ofCategory| *1 (|FunctionSpace2| *5 *6))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *6 (|KernelCategory| *1))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|FunctionSpace2| *5 *6))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *6 (|KernelCategory| *1))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|FunctionSpace2| *5 *6))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *6 (|KernelCategory| *1))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|FunctionSpace2| *5 *6))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *6 (|KernelCategory| *1))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|BasicOperator|))) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace2| *5 *6))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *6 (|KernelCategory| *1))
       (|ofCategory| *5 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *1 (|FunctionSpace2| *4 *5))
       (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *5 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|InnerEvalable| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *1 (|InnerEvalable| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|MoebiusTransform| *3))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PermutationCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *2 *6 *7))
       (|ofCategory| *1 (|TensorProductProperty| *5 *6 *7 *3 *2))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *6 (|Module| *5))
       (|ofCategory| *7 (|Module| *5))
       (|ofCategory| *3 (|TensorProductCategory| *5 *6 *7))
       (|ofCategory| *2 (|Module| *5))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|has| *3 (SIGNATURE ^ (*3 *3 *4))) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *5))))
   (|isDomain| *3 (|Vector| (|Expression| *5))) (|isDomain| *4 (|Integer|))
   (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|TransSolvePackageService| *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *1 (|ListPackage| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ComplexCategory&| *3 *2))
       (|ofCategory| *3 (|ComplexCategory| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedAlgebra&| *3 *2 *4))
       (|ofCategory| *3 (|FramedAlgebra| *2 *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4))
       (|ofCategory| *4 (|FramedAlgebra| *2 *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| *1))
   (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| *3) (|:| |quotient| *1)
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |polyPart| (|LaurentPolynomial| *4 *5))
                             (|:| |fracPart| (|Fraction| *5))))
       (|isDomain| *1 (|LaurentPolynomial| *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |primePart| *1) (|:| |commonPart| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDivisionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|Field|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *3 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|CommonDenominator| *4 *5 *3))
       (|ofCategory| *3 (|FiniteLinearAggregate| *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *6) (|:| |den| *4)))
       (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *6 *3))
       (|ofCategory| *6 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *4)) (|:| |den| *4)))
       (|isDomain| *1 (|MatrixCommonDenominator| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record| (|:| |eq| *7)
                             (|:| |rh| (|List| (|Fraction| *6)))))
       (|isDomain| *1 (|PrimitiveRatDE| *5 *6 *7 *3))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *3
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|PolynomialCommonDenominator| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|CommonDenominator| *3 *4 *2))
       (|ofCategory| *2 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))
       (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *2 *3))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|MatrixCommonDenominator| *4 *5))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialCommonDenominator| *3 *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *3 *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|CommonDenominator| *2 *4 *3))
       (|ofCategory| *3 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|InnerCommonDenominator| *2 *4 *5 *3))
       (|ofCategory| *5 (|Join| (|LinearAggregate| *2) (|finiteAggregate|)))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|MatrixCommonDenominator| *2 *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PolynomialCommonDenominator| *2 *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *2 *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| *3)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UniversalSegment| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BalancedPAdicRational| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|BalancedPAdicRational| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PAdicRational| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PAdicRational| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|ofType| *3 *2)
       (|isDomain| *1 (|PAdicRationalConstructor| *3 *4))
       (|ofCategory| *4 (|PAdicIntegerCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofType| *2 (|Integer|))
       (|isDomain| *1 (|PAdicRationalConstructor| *2 *3))
       (|ofCategory| *3 (|PAdicIntegerCategory| *2))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *7
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|))) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|)))
       (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|isDomain| *5 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|Vector| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariateFormalPowerSeriesFunctions| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| *5))
       (|isDomain| *4
                   (|Record| (|:| |i_mod| (|Integer|))
                             (|:| |deg| (|Integer|))))
       (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ModularFactorizationK| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ModularFactorization|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ModularFactorizationGeneral| *3 *5 *4 *6 *7))
       (|ofCategory| *7 (|ModularFactorizationOperations| *3 *5 *4 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Record| (|:| |cont| *4)
                             (|:| |factors|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *4))
                                    (|:| |exponent|
                                         (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Integer|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerPrimesPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UniqueFactorizationDomain|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |high| (|List| (|Symbol|)))
                         (|:| |low| (|List| (|Symbol|)))))
   (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2))
       (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))))) 
(((*1 *2)
  (AND
   (|isDomain| *2 (|Record| (|:| |low| (|List| *3)) (|:| |high| (|List| *3))))
   (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UndirectedGraph| *5))
       (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SingleInteger|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|U64Int|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *6)))
   (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *6 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *6))))
   (|isDomain| *1 (|TwoFactorize| *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *2))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|)))
       (|isDomain| *5 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *2 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|DirectProductCategory| *3 *4))
       (|ofCategory| *4 (|Monoid|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5))
                   (|Record| (|:| |index| *2) (|:| |exponent| *5))))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))
 ((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Point| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2 (|TubePlot| *3)) (|isDomain| *1 (|NumericTubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|TubePlot| *2))
       (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|TubePlot| *2))
       (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *9))
   (|isDomain| *4 (|Mapping| (|Boolean|) *9))
   (|isDomain| *5 (|Mapping| (|Boolean|) *9 *9))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *9))))
   (|ofCategory| *1 (|TriangularSetCategory| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| *8))
   (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *8))))
   (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2
                   (|Record| (|:| |close| (|List| *6))
                             (|:| |open| (|List| *6))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1 *4)
  (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *3))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *7 (|List| *7)))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *1 *3 *4)
  (AND (|isDomain| *2 (|List| *8)) (|isDomain| *3 (|Mapping| *8 *8 *8))
       (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *10))
       (|isDomain| *1 (|LazardSetSolvingPackage| *5 *6 *7 *8 *9 *10))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *10
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|SquareFreeRegularTriangularSet| *5
                                                  (|IndexedExponents|
                                                   (|OrderedVariableList| *6))
                                                  (|OrderedVariableList| *6)
                                                  (|NewSparseMultivariatePolynomial|
                                                   *5
                                                   (|OrderedVariableList|
                                                    *6)))))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))
 ((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|RegularChain| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |close| *1) (|:| |open| (|List| *7)))))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|ofType| *6 *3)
       (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
       (|ofType| *5 (|Symbol|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|TaylorSeriesExpansion| *4 *5 *6 *2 *3))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *7 *7))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *4 *5 *6 *2 *7))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *5 *6 *7 *2 *8))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *5 *6 *7))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|List| (|Mapping| *3 *3)))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *7 (|OrderedAbelianMonoid|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *9 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *2 (|PowerSeriesCategory| *3 *7 *8))
       (|isDomain| *1 (|TaylorSeriesExpansion&| *6 *3 *7 *8 *2 *9))
       (|ofCategory| *6 (|TaylorSeriesExpansion| *3 *7 *8 *2 *9))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|PowerSeriesCategory| *6 *7 *8))
       (|ofCategory| *7 (|OrderedAbelianMonoid|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *9 (|UnivariateTaylorSeriesCategory| *6))
       (|isDomain| *1 (|TaylorSeriesExpansion&| *5 *6 *7 *8 *2 *9))
       (|ofCategory| *5 (|TaylorSeriesExpansion| *6 *7 *8 *2 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|List| (|Mapping| *3 *3)))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *3 *6 *7 *2 *8))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *2 (|PowerSeriesCategory| *3 *6 *7))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|List| (|Mapping| *5 *5)))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *5 *6 *7 *2 *8))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *5 *6 *7))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|SquareMatrix| *4 *2))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|PolynomialCategory| *4 (|IndexedExponents| *5) *5))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *5 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Polynomial| *4))
       (|isDomain| *1 (|TaylorSeries| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|SparseMultivariateTaylorSeries| *4 *3 *5)))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *3 *5))
       (|ofCategory| *5 (|PolynomialCategory| *4 (|IndexedExponents| *3) *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|TaylorSeries| *4)))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *3 (|PatternMatchable| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *2 (|PatternMatchable| *3))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |Sys| (|List| *1))
                             (|:| JM (|SparseEchelonMatrix| *5 *1))
                             (|:| |Depend|
                                  (|Union| "failed"
                                           (|List|
                                            (|List|
                                             (|NonNegativeInteger|)))))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CharacteristicZero|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|AlgebraicNumber|))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|SimplifyAlgebraicNumberConvertPackage|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|TrigonometricManipulationsAux| *4 *2))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Complex| (|Expression| *4)))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Complex| *3))
   (|isDomain| *1 (|TrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|TrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Expression| *4))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Expression| *4))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|TrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|TrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|Tree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Tree| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Tree| *2))) (|isDomain| *1 (|Tree| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1) (|isDomain| *1 (|PiDomain|)))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *1) (|ofCategory| *1 (|TranscendentalFunctionCategory|)))) 
(((*1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelThreeSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ToolsForSign| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3)
  (|partial| AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|OrderedCompletion| *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ElementaryFunctionSign| *6 *3))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|ofCategory| *6
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *6 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *4))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *6))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *6))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TexmacsFormat|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *2)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|TimeoutPackage| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))
 ((*1 *2 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *1 (|File| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|LinearMultivariateMatrixPencil| *5))
       (|isDomain| *3 (|List| (|FreeMonoid| *4)))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|Formatter| *2))
       (|ofCategory| *2 (|FormatterCategory|))))
 ((*1 *1) (|isDomain| *1 (|HashState|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OperatorHandlers| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|ListAggregate| *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1) (|isDomain| *1 (|Symbol|))) ((*1 *1) (|isDomain| *1 (|Symbol|)))
 ((*1 *1) (|isDomain| *1 (|TexFormat|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|UnittestAux| *2))
       (|ofCategory| *2 (|RealNumberSystem|)) (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|UnittestAux| *2))
       (|ofCategory| *2 (|RealNumberSystem|)) (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|RealNumberSystem|)) (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestAux| *5))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|RealNumberSystem|)) (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestAux| *5))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4))
       (|ofCategory| *4 (|RealNumberSystem|)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4))
       (|ofCategory| *4 (|RealNumberSystem|)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UnittestAux| *3))
       (|ofCategory| *3 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|TensorProductCategory| *4 *2 *3))
       (|ofCategory| *2 (|Module| *4)) (|ofCategory| *3 (|Module| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|Module| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|TensorPowerCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|TensorPower| *3 *4 *5 *6))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|FreeModuleCategory| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|ofCategory| *6 (|Comparable|))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *5))
       (|isDomain| *1 (|FreeModuleFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|FreeModuleCategory| *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *2 *4))
       (|ofCategory| *1 (|FreeModuleCategory| *2 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|List| *7)))
       (|isDomain| *4 (|TensorPower| *5 *6 *7 *8))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofCategory| *6 (|CommutativeRing|)) (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|FreeModuleCategory| *6 *7))
       (|ofCategory| *2 (|Module| *6))
       (|isDomain| *1 (|TensorPowerFunctions2| *5 *6 *7 *8 *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinarySearchTree| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinaryTournament| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *2 (|SetCategory|))
   (|isDomain| *1 (|TabulatedComputationPackage| *3 *2))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|TangentExpansions| *2))
       (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|TangentExpansions| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|TangentExpansions| *2))
       (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|JetDifferential| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|List| (|JetDifferential| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Tableau| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|List| (|List| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|List| (|List| *5)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|Tableau| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *4))
                             (|:| |f2| (|List| (|List| (|List| *4))))
                             (|:| |f3| (|List| (|List| *4)))
                             (|:| |f4| (|List| (|List| (|List| *4))))))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *4 *5 *4 *4 *4)
  (AND (|isDomain| *4 (|List| (|List| (|List| *6))))
       (|isDomain| *5 (|List| (|List| *6))) (|isDomain| *3 (|List| *6))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *6))
                             (|:| |f2| (|List| (|List| (|List| *6))))
                             (|:| |f3| (|List| (|List| *6)))
                             (|:| |f4| (|List| (|List| (|List| *6))))))
       (|isDomain| *1 (|TableauxBumpers| *6))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|DivisionRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|FiniteLinearAggregate| *4))
   (|ofCategory| *6 (|FiniteLinearAggregate| *4))
   (|ofCategory| *7 (|QuotientFieldCategory| *4))
   (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
   (|isDomain| *1
               (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9 *2))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
   (|ofCategory| *8 (|FiniteLinearAggregate| *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
   (|ofCategory| *2 (|AbelianMonoid|))
   (|ofCategory| *3 (|FiniteLinearAggregate| *2))
   (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|SquareMatrixCategory| *2 *3 *4 *5))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|DirectProductCategory| *2 *3))
   (|ofCategory| *5 (|DirectProductCategory| *2 *3))
   (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Tableau| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Tableau| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6 *6))
       (|isDomain| *5 (|List| (|List| *6))) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *4 (|List| *6))
       (|isDomain| *2
                   (|Record| (|:| |fs| (|Boolean|)) (|:| |sd| (|List| *6))
                             (|:| |td| (|List| (|List| *6)))))
       (|isDomain| *1 (|TableauxBumpers| *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|List| (|Polynomial| *5))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|Equation| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
   (|isDomain| *1 (|FloatingRealPackage| *4))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Symbol|))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|isDomain| *2 (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4))))
   (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *4 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *2 *4 *2 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *2 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1="failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| *7 #1#))
                              (|:| |basis| (|List| *7)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *5) #2="failed"))
                    (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                             (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                              (|:| |basis| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|Vector| *5))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                              (|:| |basis| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *4))))
 ((*1 *2 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|NonLinearFirstOrderODESolver| *5 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
   (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Symbol|))
   (|ofCategory| *6
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2 (|List| (|Vector| *6)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| (|Equation| *7)))
   (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |particular| *7) (|:| |basis| (|List| *7)))
                    *7 #3="failed"))
       (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |particular| *3) (|:| |basis| (|List| *3)))
                    *3 #3#))
       (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Equation| *2))
   (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *4 (|Equation| *2)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|isDomain| *5
               (|Mapping|
                (|Union|
                 (|Record| (|:| |particular| *6) (|:| |basis| (|List| *6)))
                 "failed")
                *7 *6))
   (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *6))
                         (|:| |basis| (|Matrix| *6))))
   (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Vector| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record|
                     (|:| |particular|
                          (|List|
                           (|Record| (|:| |ratpart| *6)
                                     (|:| |coeffs| (|Vector| *6)))))
                     (|:| |basis| (|List| *6)))
                    *7 (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| (|Vector| *6))
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *3 (|Matrix| *7))
   (|isDomain| *5 (|List| (|Vector| *4)))
   (|isDomain| *6
               (|Mapping|
                (|Record|
                 (|:| |particular|
                      (|List|
                       (|Record| (|:| |ratpart| *4)
                                 (|:| |coeffs| (|Vector| *4)))))
                 (|:| |basis| (|List| *4)))
                *7 (|List| *4)))
   (|ofCategory| *4 (|Field|))
   (|ofCategory| *7 (|UnivariateSkewPolynomialCategory| *4))
   (|isDomain| *2
               (|Record|
                (|:| |particular|
                     (|List|
                      (|Record| (|:| |ratpart| (|Vector| *4))
                                (|:| |coeffs| (|Vector| *4)))))
                (|:| |basis| (|List| (|Vector| *4)))))
   (|isDomain| *1 (|OrePolynomialMatrixOperations| *4 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Float|)) (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|TransSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Expression| *4)))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|TransSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Expression| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Kernel| (|Expression| *5))))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Expression| *5)))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))) 
(((*1 *2 *3 *2 *3)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *4 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *3 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|SymbolTable|))))
 ((*1 *2 *3 *2 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|FortranType|))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|FortranScalarType|))
       (|isDomain| *2
                   (|List|
                    (|Union| (|:| |name| (|Symbol|))
                             (|:| |bounds|
                                  (|List|
                                   (|Union| (|:| S (|Symbol|))
                                            (|:| P
                                                 (|Polynomial|
                                                  (|Integer|)))))))))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|List|
                 (|Union| (|:| |name| (|Symbol|))
                          (|:| |bounds|
                               (|List|
                                (|Union| (|:| S (|Symbol|))
                                         (|:| P
                                              (|Polynomial|
                                               (|Integer|))))))))))
   (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |key| (|Symbol|))
                          (|:| |entry| (|FortranType|)))))
   (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Union| (|:| |fst| (|FortranScalarType|))
                        (|:| |void| #1="void")))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| #1#)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| #1#)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| "void")))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SymbolTable|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|SymmetricFunctions| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|SymmetricFunctions| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FunctionCalled| *3))
       (|ofType| *3 *2)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|KernelCategory| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RuleCalled| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |sub| (|List| (|OutputForm|)))
                         (|:| |sup| (|List| (|OutputForm|)))
                         (|:| |presup| (|List| (|OutputForm|)))
                         (|:| |presub| (|List| (|OutputForm|)))
                         (|:| |args| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |sub| (|List| (|OutputForm|)))
                         (|:| |sup| (|List| (|OutputForm|)))
                         (|:| |presup| (|List| (|OutputForm|)))
                         (|:| |presub| (|List| (|OutputForm|)))
                         (|:| |args| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Symbol|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|OutputForm|))))
       (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|StringCategory|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|)))
 ((*1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1) (|ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|JetVectorField| *5 (|JetBundleExpression| *5)))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *5 *6 *7))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *7 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|JetVectorField| *5 (|JetBundleExpression| *5)))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *5 *6 *7))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *7 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
   (|ofCategory| *4 (|JetBundleCategory|))
   (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
   (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
   (|isDomain| *2
               (|List|
                (|JetBundleLinearFunction| (|JetBundleSymAna| *4 *5 *6)
                                           (|JetBundleXExpression|
                                            (|JetBundleSymAna| *4 *5 *6)))))
   (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|JetBundleExpression| *4))
       (|isDomain| *1 (|JetCoordinateTransformation| *3 *4 *5 *6))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleCategory|)) (|ofType| *5 (|Vector| *2))
       (|ofType| *6 (|Vector| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|JetBundleExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|JetBundleExpression| *5))
       (|isDomain| *1 (|JetCoordinateTransformation| *4 *5 *6 *7))
       (|ofCategory| *5 (|JetBundleCategory|)) (|ofType| *6 (|Vector| *2))
       (|ofType| *7 (|Vector| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|JetBundleExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6)))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|JetVectorField| *3 (|JetBundleExpression| *3)))
       (|isDomain| *1 (|SymmetryAnalysis| *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofType| *4 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Switch|)))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|OutputForm|) (|OutputForm|) (|OutputForm|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|ListMonoidOps| *5 *6 *7))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|AbelianMonoid|))
       (|ofType| *7 *6)))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|SparseUnivariateSkewPolynomial| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Automorphism| *3))
       (|ofType| *5 (|Mapping| *3 *3))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Segment| *3))
       (|ofCategory| *3 (|PolynomialCategory| *7 *6 *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|))))
       (|isDomain| *1 (|InnerPolySum| *6 *4 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|))))
       (|isDomain| *1 (|InnerPolySum| *5 *4 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceSum| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|)
                             (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|)
                             (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceSum| *4 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Polynomial| *5)))
       (|isDomain| *3 (|Polynomial| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|Collection| *3))))
 ((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |exponent| (|NonNegativeInteger|))
                          (|:| |center| *4) (|:| |num| *4))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
   (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))
 ((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|Union| (|:| |fst| (|FortranScalarType|))
                        (|:| |void| #1="void")))
   (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
   (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Boolean|))
   (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *1 (|IndexedProductCategory| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InfiniteTuple| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LieAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *3))))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModuleMonomial| *2 *3 *4))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3))
                   (|Record| (|:| |index| *2) (|:| |exponent| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4))))
   (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *1 (|PatternMatchResult| *3 *4))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|Product| *2 *3)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|List| (|SplittingNode| *3 *5)))
       (|isDomain| *1 (|SplittingNode| *3 *5))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Record| (|:| |val| *4) (|:| |tower| *5))))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|List| (|SplittingNode| *4 *5)))
       (|isDomain| *1 (|SplittingNode| *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |tower| *4)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *3 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *2 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|SplittingNode| *2 *3)))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *2 *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|SplittingTree| *2 *3)))
       (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|SuchThat| *2 *3)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *3 *2))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursiveAggregate| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Point| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Point| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *5))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Boolean|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|SubSpaceComponentProperty|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Point| *4)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SubSpaceComponentProperty|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Point| *4))) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|SubResultantPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|PrimitiveArray| *3))
       (|isDomain| *1 (|SubResultantPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatElementaryFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|Float|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |sinh| (|Stream| *4))
                             (|:| |cosh| (|Stream| *4))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |sin| (|Stream| *4))
                             (|:| |cos| (|Stream| *4))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *4))))) 
(((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *4 (|Integer|)))
       (|isDomain| *5 (|Mapping| (|Stream| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| *4 (|Integer|)))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *1 (|ODEIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
   (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
   (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|CommutativeRing|))
   (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
   (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
   (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *3)))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2))
   (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
   (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|ComplexCategory| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|EntireRing|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *3 (|OrderedAbelianMonoid|))
   (|ofCategory| *2 (|EntireRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
   (|ofCategory| *2 (|AbelianMonoid|))
   (|ofCategory| *3 (|FiniteLinearAggregate| *2))
   (|ofCategory| *4 (|FiniteLinearAggregate| *2))
   (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|EntireRing|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *5 (|DirectProductCategory| *4 *2))
   (|ofCategory| *6 (|DirectProductCategory| *3 *2))
   (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *2 *2)
  (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
   (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|String|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SingleInteger|))) (|isDomain| *1 (|String|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Stream| *4))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |cycle?| (|Boolean|))
                             (|:| |prefix| (|NonNegativeInteger|))
                             (|:| |period| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|Stream| *3))) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Stream| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Stream| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Algebra| *2))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|Distribution| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |puiseux| (|Fraction| (|Integer|)))
                         (|:| |laurent| (|Fraction| (|Integer|)))
                         (|:| |coef| (|Sequence| *3))))
   (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Distribution| *3))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Algebra| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
   (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))
   (|isDomain| *2 (|Distribution| *4))
   (|isDomain| *1 (|STransformPackage| *4 *5 *6 *3))
   (|ofCategory| *3 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))
       (|isDomain| *1 (|STransformPackage| *4 *5 *6 *2))
       (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))
       (|isDomain| *1 (|STransformPackage| *4 *5 *6 *2))
       (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateLaurentSeriesConstructorCategory| *4 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|STransformPackage| *4 *2 *5 *6))
       (|ofCategory| *6 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|STransform| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|STransform| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DoubleFloat|)))
       (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| (|List| *4) *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|StreamTensor| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1) (|ofCategory| *1 (|StepThrough|)))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|StepThrough|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Stack| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5))
                   (|Record| (|:| |index| *4) (|:| |exponent| *5))))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *5 (|OrderedVariableList| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|isDomain| *2 (|ModuleMonomial| *5 *6 *7))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *8
                     (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3 *1 *4 *4 *4 *4 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *3)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3 *1 *4 *4 *4 *4 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *3)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |val| (|List| *8))
                             (|:| |towers|
                                  (|List|
                                   (|RegularTriangularSet| *5 *6 *7 *8)))))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |val| (|List| *8))
                             (|:| |towers|
                                  (|List|
                                   (|SquareFreeRegularTriangularSet| *5 *6 *7
                                                                     *8)))))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1
               (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *2 *5 *6)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11))))
   (|isDomain| *5
               (|Record| (|:| |done| (|List| *11))
                         (|:| |todo|
                              (|List|
                               (|Record| (|:| |val| (|List| *10))
                                         (|:| |tower| *11))))))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9))
   (|ofCategory| *11 (|RegularTriangularSetCategory| *7 *8 *9 *10))
   (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|OrderedSet|))
   (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *10 *11))))
 ((*1 *2 *3 *4 *2 *5 *6)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11))))
   (|isDomain| *5
               (|Record| (|:| |done| (|List| *11))
                         (|:| |todo|
                              (|List|
                               (|Record| (|:| |val| (|List| *10))
                                         (|:| |tower| *11))))))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9))
   (|ofCategory| *11 (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *10))
   (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|OrderedSet|))
   (|isDomain| *1
               (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *10 *11))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2
                   (|Record|
                    (|:| |id| (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))
                    (|:| |principalPart| *6)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |poly| *6) (|:| |normal| (|Fraction| *6))
                             (|:| |special| (|Fraction| *6))))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|PartialFractionUtilities| *4 *3))))
 ((*1 *2 *3 *2 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *2 *4 *4 *4 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *2 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))
 ((*1 *2 *3 *2 *4 *4 *4 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *9 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *9 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))
 ((*1 *1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))
 ((*1 *1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Character|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|UniversalSegment| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|CachableSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|CubicalFacet|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *3 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|OrientedFacet|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *3 (|CharacterClass|))))
 ((*1 *2 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |less| (|BinarySearchTree| *3))
                         (|:| |greater| (|BinarySearchTree| *3))))
   (|isDomain| *1 (|BinarySearchTree| *3)) (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|IntegrationResult| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *3
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|IntegrationResultToFunction| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *3))))
       (|ofCategory| *3
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3)))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3)))
       (|isDomain| *1 (|ParallelIntegrationTools| *5 *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5)))
       (|isDomain| *4 (|Vector| (|Vector| *5))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|CharacterClass|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|StringAggregate|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Character|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|StringAggregate|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *2 *4))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SquareMatrix| *2 *3))
       (|ofType| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|SquareMatrix| *3 *4))
       (|ofType| *3 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|not| (|ofCategory| *1 (|arbitraryPrecision|)))
       (|not| (|ofCategory| *1 (|arbitraryExponent|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedMultisetAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|)))
 ((*1 *1) (|isDomain| *1 (|SingleInteger|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|not| (|ofCategory| *1 (|arbitraryPrecision|)))
       (|not| (|ofCategory| *1 (|arbitraryExponent|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1) (|isDomain| *1 (|SingleInteger|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PointCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|List| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|List| (|DoubleFloat|)))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|SplittingTree| *2 *3))
   (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
   (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|SplittingTree| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|SplittingTree| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|SplittingNode| *4 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *4 *5))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|SplittingNode| *5 *6))
       (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *5 *6))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|SplittingNode| *4 *5)))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *4 *5))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SplittingNode| *3 *4)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|HashState|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|QueryEquation|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *3 *2))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
   (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1 *1) (|isDomain| *1 (|BasicOperator|)))
 ((*1 *1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SplittingNode| *3 *2))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1 *1 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *5 *6))))) 
(((*1 *2 *1 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *4 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RetractableTo| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))))
 ((*1 *1 *2 *2 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|SpecialFunctionCategory|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RetractableTo| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|SpecialFunctionCategory|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *1 *1) (|isDomain| *1 (|Partition|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|OrderedRing|)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FortranProgramCategory|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SubSpace| 3 *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Point| *4)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Point| *3))))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *3))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|List| (|SubSpaceComponentProperty|)))
       (|isDomain| *4 (|SubSpaceComponentProperty|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *5))))
       (|isDomain| *3 (|List| (|SubSpaceComponentProperty|)))
       (|isDomain| *4 (|SubSpaceComponentProperty|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|List| (|NonNegativeInteger|)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|List| (|Point| *3)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|SubSpaceComponentProperty|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|SubSpaceComponentProperty|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |points| (|NonNegativeInteger|))
                             (|:| |curves| (|NonNegativeInteger|))
                             (|:| |polygons| (|NonNegativeInteger|))
                             (|:| |constructs| (|NonNegativeInteger|))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))
 ((*1 *2 *3 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6))
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|ofCategory| *6 (|EuclideanDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|SortPackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *4)
                             (|finiteAggregate|) (|shallowlyMutable|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|SortPackage| *3 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *3)
                             (|finiteAggregate|) (|shallowlyMutable|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|SortPackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *4)
                             (|finiteAggregate|) (|shallowlyMutable|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|SortPackage| *3 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *3)
                             (|finiteAggregate|) (|shallowlyMutable|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SmallOrdinal|))))) 
(((*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *2 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *3))))
   (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|TransSolvePackageService| *3))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|RootUtilities| *4 *5))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))
   (|isDomain| *2 (|List| (|Expression| *4)))
   (|isDomain| *1 (|RadicalSolvePackage| *4))))) 
(((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RadicalSolvePackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Expression| *5))
                               (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Expression| *5))
                               (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4)))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4)))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))) 
(((*1 *2 *2 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Field|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
   (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|ofCategory| *6 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Field|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
   (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| *5))
   (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
   (|isDomain| *2 (|Vector| (|Fraction| *5)))
   (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|ofCategory| *6 (|LinearlyExplicitOver| *5))
   (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
   (|isDomain| *2 (|Vector| (|Fraction| *5)))
   (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *2)
  (|partial| AND (|ofCategory| *4 (|Field|))
   (|ofCategory| *5 (|Join| (|FiniteLinearAggregate| *4) (|shallowlyMutable|)))
   (|ofCategory| *2 (|Join| (|FiniteLinearAggregate| *4) (|shallowlyMutable|)))
   (|isDomain| *1 (|LinearSystemMatrixPackage| *4 *5 *2 *3))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *2))))
 ((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Matrix| *4))
   (|ofCategory| *4 (|Field|))
   (|isDomain| *1 (|LinearSystemMatrixPackage1| *4))))
 ((*1 *2 *3 *2 *4 *5)
  (|partial| AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|Mapping| *2 *2))
   (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|ODETools| *2 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Stream| *7)))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Mapping| (|Stream| *7) *7))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *5 *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| *6 *7))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *6 *8))
       (|isDomain| *1 (|SparsePolynomialCoercionHelpers| *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|SmithNormalForm| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping|
                (|Record| (|:| |Smith| (|Matrix| (|Integer|)))
                          (|:| |leftEqMat| (|Matrix| (|Integer|)))
                          (|:| |rightEqMat| (|Matrix| (|Integer|))))
                (|Matrix| (|Integer|))))
   (|isDomain| *3 (|Matrix| (|Integer|)))
   (|isDomain| *2
               (|Record| (|:| |Smith| (|Matrix| (|Integer|)))
                         (|:| |leftEqMat| (|Matrix| (|Integer|)))
                         (|:| |rightEqMat| (|Matrix| (|Integer|)))))
   (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2
                   (|Record| (|:| |Smith| *3) (|:| |leftEqMat| *3)
                             (|:| |rightEqMat| *3)))
       (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *3 (|Mapping| (|Matrix| (|Integer|)) (|Matrix| (|Integer|))))
   (|isDomain| *2 (|Matrix| (|Integer|)))
   (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |Hermite| *3) (|:| |eqMat| *3)))
       (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixManipulation| *3 *4 *5 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|AbelianMonoid|))
       (|isDomain| *1 (|Matrix| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *3 *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|isDomain| *1 (|IntegralBasisTools| *2 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|DivisionRing|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialExtension| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|DifferentialExtension| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofType| *5 (|Union| *2 *3))
       (|ofType| *6 (|Union| *2 *3)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleSymAna| *4 *5 *6))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundle| *4 *5)) (|ofType| *4 *3) (|ofType| *5 *3)))
 ((*1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|PartialDifferentialOperator| *3 *2))
       (|ofCategory| *3 (|PartialDifferentialRing| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|SparseMultivariateSkewPolynomial| *3 *2 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|ofType| *4 (|Mapping| (|Automorphism| *3) *2))
       (|ofType| *5 (|Mapping| (|Mapping| *3 *3) *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|SparseMultivariateSkewPolynomial| *3 *4 *5 *6))
       (|has| *4 (SIGNATURE |variable| (*4 *2))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofType| *5 (|Mapping| (|Automorphism| *3) *4))
       (|ofType| *6 (|Mapping| (|Mapping| *3 *3) *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|Lambda| *5))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Lambda| *5)) (|ofCategory| *5 (|VarCat|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|SKICombinators| *5))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|SKICombinators| *5)) (|ofCategory| *5 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Lambda| *3))) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SKICombinators| *3)))
       (|isDomain| *1 (|SKICombinators| *3)) (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DirectedGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1 *1) (|ofCategory| *1 (|Logic|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|MultifunctionGraph| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|JoinSemilattice|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|MeetSemilattice|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|DeltaComplex| *4))
       (|isDomain| *1 (|DeltaComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *4))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *4 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *5 (|AbelianGroup|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|DeltaComplex| *3))
   (|ofCategory| *3 (|AbelianGroup|))
   (|isDomain| *1 (|FiniteSimplicialComplex| *3))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *2 (|DeltaComplex| *4))
   (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|AbelianGroup|))
   (|isDomain| *1 (|FiniteSimplicialComplex| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|CubicalFacet|))))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|OrientedFacet|))))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2
                   (|Record| (|:| |under| *1) (|:| |floor| *1)
                             (|:| |upper| *1)))
       (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|CubicalFacet|))))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|OrientedFacet|))))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteCubicalComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|SBoundary| *4))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|NonNegativeInteger|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|DeltaComplex| *4)) (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|)) (|isDomain| *1 (|DeltaComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|CoChainComplex| *3))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|CoChainComplex| *3))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|))) (|isDomain| *1 (|ChainComplex|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *1 (|Homology|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *2 (|Vector| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *5 (|Boolean|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9))))
   (|isDomain| *1
               (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5)
  (|partial| AND (|isDomain| *3 (|List| *9)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4)
                         (|:| |ineq| (|List| *9))))
   (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *4))
   (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5)
  (|partial| AND (|isDomain| *3 (|List| *9)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4)
                         (|:| |ineq| (|List| *9))))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *4))
   (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10)
                              (|:| |ineq| (|List| *9)))))
       (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10)
                              (|:| |ineq| (|List| *9)))))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *10))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7))))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
   (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7))))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
   (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *5 *6 *7 *8 *3))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *5 *6 *7 *8 *3))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|GcdDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
   (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|GcdDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
   (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|FortranScalarType|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|SimpleFortranProgram| *5 *4))
       (|ofCategory| *4 (|FunctionSpace| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4))))
   (|isDomain| *1 (|PatternMatchResult| *3 *4))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|PositiveInteger|))
   (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2)
   (|ofType| *4 *2)))) 
(((*1 *1 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|PositiveInteger|))
   (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2)
   (|ofType| *4 *2)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|Finite|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Vector| (|SetOfMIntegersInOneToN| *3 *4)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3)
       (|ofType| *5 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|SubsetLattice| *3 *4)) (|ofType| *4 *2)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Finite|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|SubsetLattice| *3 *4)) (|ofType| *4 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SubsetLattice| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofType| *3 (|List| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|SetAggregate| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PolynomialIdeal| *3 *4 *5 *6)))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| *4)))
       (|ofCategory| *4 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SBoundary| *3)))
       (|isDomain| *1 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *2 (|LeftModule| *5))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|ApplyUnivariateSkewPolynomial| *5 *2 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *2 (|Distribution| *6))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *6 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|IncidenceAlgebra| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|IncidenceAlgebra| *2 *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2 *2)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *3 *2 *2 *4 *5)
  (AND (|isDomain| *4 (|Automorphism| *2)) (|isDomain| *5 (|Mapping| *2 *2))
       (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *2 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Partition|)) (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|SequenceCategory| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *2 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|IndexedAggregate| *3 *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *2 *7))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *4 *6))
       (|ofCategory| *2 (|DirectProductCategory| *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |Indices| (|List| *4))
                             (|:| |Entries| (|List| *5))))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|IndexedAggregate| *2 *4))
       (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *4 *5)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|Ring|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *6 *7))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|Record| (|:| |Indices| (|List| *5))
                             (|:| |Entries| (|List| *6))))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *5 *6))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |Indices| (|List| *4))
                         (|:| |Entries| (|List| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |Indices| (|List| *4))
                         (|:| |Entries| (|List| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|DivisionRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *2))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|UnivariateSkewPolynomialCategory| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|OrePolynomialMatrixOperations| *3 *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *5 (|List| (|Vector| *4)))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *6 (|UnivariateSkewPolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *4)))))
       (|isDomain| *1 (|OrePolynomialMatrixOperations| *4 *6))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *2 *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *2 *4))
       (|ofCategory| *4 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Lt| (|Matrix| *4)) (|:| |Pivots| (|List| *4))
                         (|:| |Rank| (|NonNegativeInteger|))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Lt| (|Matrix| (|Fraction| *4)))
                         (|:| |Pivots| (|List| *4))
                         (|:| |Rank| (|NonNegativeInteger|))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Record| (|:| |Index| *4) (|:| |Entry| *5)))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Indices| (|List| *3))
                         (|:| |Entries| (|List| *4))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|Dcpo| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Left| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Right| (|SparseEchelonMatrix| *3 *4))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SegmentCategory| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedRing|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|QueryEquation|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Segment| *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|SegmentBinding| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *3)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Matrix| (|Polynomial| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *5))))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|StructuralConstantsPackage| *4))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SConformal| *2)) (|ofType| *2 (|PositiveInteger|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Scene| *4)))
       (|isDomain| *3 (|List| (|String|))) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|String|)))
       (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|SceneNamedPoints| *4)))
       (|isDomain| *3 (|List| (|String|)))
       (|isDomain| *1 (|SceneNamedPoints| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *2))
       (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Scene| *4))
       (|isDomain| *1 (|SceneNamedPoints| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SPointCategory|))
       (|isDomain| *2 (|List| (|List| *6))) (|isDomain| *1 (|SceneIFS| *6))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |source| (|Mapping| *5 (|DoubleFloat|)))
                          (|:| |ranges| (|List| (|Segment| (|DoubleFloat|))))
                          (|:| |knots| (|List| (|DoubleFloat|)))
                          (|:| |points| (|List| *5)))))
   (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|))
   (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|SceneIFS| *5))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SceneIFS| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|SceneIFS| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| *4))) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|SceneIFS| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SubSpace| 3 (|DoubleFloat|)))
       (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Export3D|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Reference| (|List| *8)))
       (|isDomain| *4 (|Reference| (|List| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *5 (|Reference| (|NonNegativeInteger|)))
       (|isDomain| *6 (|STransform| *8)) (|isDomain| *7 (|SBoundary| *8))
       (|ofCategory| *8 (|SPointCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *8))))) 
(((*1 *2 *1 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *6)) (|isDomain| *5 (|SBoundary| *6))
   (|ofCategory| *6 (|SPointCategory|)) (|isDomain| *2 (|XmlElement|))
   (|isDomain| *1 (|Scene| *6))))) 
(((*1 *2 *1 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *9)) (|isDomain| *5 (|SBoundary| *9))
   (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Boolean|))
   (|isDomain| *8 (|SceneNamedPoints| *9)) (|ofCategory| *9 (|SPointCategory|))
   (|isDomain| *2 (|XmlElement|)) (|isDomain| *1 (|Scene| *9))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|STransform| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
       (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
       (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *1 (|Scene| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *1 (|Scene| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|DirectedGraph| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *1 (|Scene| *5)) (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|DirectedGraph| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *1 (|Scene| *5)) (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *4 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *4 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SBoundary| *5)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SBoundary| *5)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|SBoundary| *4))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|SBoundary| *4))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |txt| (|String|))
                         (|:| |siz| (|NonNegativeInteger|)) (|:| |pos| *3)
                         (|:| |np| (|List| (|String|)))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |txt| (|String|))
                         (|:| |siz| (|NonNegativeInteger|)) (|:| |pos| *3)
                         (|:| |np| (|List| (|String|)))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|DoubleFloat|)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|DoubleFloat|)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |shptype| (|Symbol|)) (|:| |centre| *3)
                         (|:| |size| *3) (|:| |fill| (|Boolean|))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |shptype| (|Symbol|)) (|:| |centre| *3)
                         (|:| |size| *3) (|:| |fill| (|Boolean|))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SimpleCell| *5 *6)))
       (|isDomain| *1 (|SimpleCell| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SimpleCell| *5 *3)))
       (|isDomain| *1 (|SimpleCell| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Cell| *4)) (|ofCategory| *4 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SimpleCell| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|RealClosedField|))
       (|isDomain| *1 (|SimpleCell| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|SimpleCell| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ScanningUtilities|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Integer|) *2 *2))
   (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
       (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Integer|) *2 *2))
       (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
   (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SortedCache| *3))
       (|ofCategory| *3 (|CachableSet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SBoundary| *3)))
       (|isDomain| *1 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1) (|isDomain| *1 (|SingletonAsOrderedSet|)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1
                   (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7
                                                                      *8 *3))
       (|ofCategory| *3
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *4 *5))
       (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5)))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|Ruleset| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5)))
       (|isDomain| *1 (|Ruleset| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *4 *5))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Pattern| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Mapping| (|Boolean|) (|List| *6)))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Mapping| (|Boolean|) *5))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|AttachPredicates| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|AttachPredicates| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|Mapping| (|Boolean|) (|List| *6)))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| *2)))
       (|isDomain| *2 (|Pattern| *3)) (|isDomain| *1 (|RewriteRule| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| *2)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|RewriteRule| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|RootSimplification|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|isDomain| *1 (|RootSimplification|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *5 (|Boolean|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9))))
   (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Union| (|Boolean|) (|List| *1)))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Union| *3 (|List| *1)))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *3 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|Ring|)) (|ofCategory| *1 (|ExpressionSpace2| *2))
       (|ofCategory| *2 (|KernelCategory| *1))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2))
       (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1)) (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2))
       (|ofCategory| *2 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5))
       (|isDomain| *1 (|AlgebraicFunction| *5 *2))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|OutputForm|))
   (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
   (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RealClosure| *3))
       (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |coef| *3) (|:| |gap| (|NonNegativeInteger|))
                         (|:| |quotient| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |remainder|
                              (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |polnum| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |polden| *3)
                         (|:| |power| (|NonNegativeInteger|))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |polnum| *1) (|:| |polden| *1)
                             (|:| |power| (|NonNegativeInteger|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Float|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2))
   (|ofType| *4 (|List| *2)) (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| *5))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Float|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Float|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
   (|has| *4 (SIGNATURE |retractIfCan| ((|Union| *4 "failed") *2)))
   (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleXExpression| *3))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|FiniteFieldCategory|))
   (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))
   (|ofType| *7 (|PositiveInteger|))))
 ((*1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|RetractableFrom| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RetractableTo| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Algebra| (|Integer|)))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Float|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2))
       (|ofType| *4 (|List| *2))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *5))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|)))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Float|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|)))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|)))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Expression| (|Float|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
       (|has| *4 (SIGNATURE |retractIfCan| ((|Union| *4 "failed") *2)))
       (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleXExpression| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|RetractableFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Integer|)))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |gcd| *1) (|:| |coef1| *1) (|:| |coef2| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef1| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef2| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *2 *4 *5))
       (|isDomain| *1 (|PolynomialSetCategory&| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|PolynomialSetCategory| *2 *4 *5 *6))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|RecursivePolynomialCategory&| *3 *2 *4 *5))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *2 *4 *5))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| *7)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|PositiveInteger|)))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|RootUtilities| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *3)
                         (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|RootUtilities| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *3)
                         (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |reals| (|List| *4))
                         (|:| |complexes|
                              (|List|
                               (|Record| (|:| |real| *4) (|:| |imag| *4))))))
   (|isDomain| *1 (|RootUtilities| *5 *4))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |reals| (|List| *5))
                         (|:| |complexes|
                              (|List|
                               (|Record| (|:| |real| *5) (|:| |imag| *5))))))
   (|isDomain| *1 (|RootUtilities| *4 *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RomanNumeral|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FramedModule&| *3 *4))
       (|ofCategory| *3 (|FramedModule| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSetAggregate&| *3 *4))
       (|ofCategory| *3 (|FiniteSetAggregate| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))
 ((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))
 ((*1 *2)
  (AND (|ofType| *4 *2) (|ofType| *5 *2)
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *5 *6))
       (|ofCategory| *8 (|DirectProductCategory| *4 *6))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RectangularMatrixCategory&| *3 *4 *5 *6 *7 *8))
       (|ofCategory| *3 (|RectangularMatrixCategory| *4 *5 *6 *7 *8))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Factored| *4) *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *4))
       (|isDomain| *1 (|FactoredFunctionUtilities| *4))))
 ((*1 *1 *1) (|isDomain| *1 (|Plot|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1) (|isDomain| *1 (|Plot3D|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| (|AlgebraicNumber|))))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Kernel| (|AlgebraicNumber|)))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
       (|isDomain| *3 (|List| (|Kernel| (|AlgebraicNumber|))))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
       (|isDomain| *3 (|Kernel| (|AlgebraicNumber|)))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdeal| *3 *2 *4 *5))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *2 *4) (|RetractableTo| *2)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4)) (|ofType| *6 (|Vector| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|MonogenicAlgebra| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|NormInMonogenicAlgebra| *4 *2 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RealNumberSystem|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Comparable|)) (|ofCategory| *5 (|KernelCategory| %))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionSpace2&| *3 *4 *5))
       (|ofCategory| *3 (|FunctionSpace2| *4 *5))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerNumberSystem&| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|NonAssociativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OctonionCategory&| *3 *4))
       (|ofCategory| *3 (|OctonionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|QuotientFieldCategory&| *3 *4))
       (|ofCategory| *3 (|QuotientFieldCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|QuaternionCategory&| *3 *4))
       (|ofCategory| *3 (|QuaternionCategory| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealClosedField&| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealNumberSystem&| *3))
       (|ofCategory| *3 (|RealNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|RealNormalizationUtilities| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|Rng|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *5 (|Field|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3)) (|isDomain| *1 (|IncidenceAlgebra| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3 (|Mapping| *4 (|Integer|) (|Integer|)))
       (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|OutputForm|))))
       (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4))
       (|isDomain| *1 (|QuadraticForm| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *5)))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|XDistributedPolynomial| *4 *5))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *2))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|IndexedAggregate| *3 *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *7 *2))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *5 *6))
       (|ofCategory| *2 (|DirectProductCategory| *4 *6))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|DivisionRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| *5)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *5))
       (|isDomain| *3 (|List| *5)) (|ofType| *4 (|Symbol|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|PolynomialInterpolation| *4 *5))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *5))
       (|isDomain| *1 (|PolynomialInterpolation| *4 *5))
       (|ofType| *4 (|Symbol|))))
 ((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *6)))
       (|isDomain| *1 (|RationalInterpolation| *5 *6))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputBox|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *4))
       (|isDomain| *1 (|RandomDistributions| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|RetractableTo| *5)
                             (|Comparable|)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RootFSSplit| *6 *3))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |funs| (|List| *6)) (|:| |nroot| *6)
                              (|:| |npow1| (|Integer|))
                              (|:| |npow2| (|Integer|)))))
       (|isDomain| *1 (|RootFSSplit| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|Fraction| (|SparseUnivariatePolynomial| *2))))
   (|isDomain| *4 (|Kernel| *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *5 *2 *6))
   (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *2)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                              (SIGNATURE |numer| (*7 %))
                              (SIGNATURE |denom| (*7 %)))))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *2))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Fraction|
                (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *1 (|RationalFunction| *5))
   (|ofCategory| *5 (|IntegralDomain|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *1 (|FunctionSpace2| *4 *3))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *3 (|KernelCategory| *1))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *1)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|Fraction| (|SparseUnivariatePolynomial| *3))))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *6)) (|isDomain| *4 (|Variable| *5))
       (|ofType| *5 (|Symbol|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 (|Polynomial| *6)))
       (|isDomain| *1 (|PolynomialToUnivariatePolynomial| *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                              (SIGNATURE |numer| (*7 %))
                              (SIGNATURE |denom| (*7 %)))))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                              (SIGNATURE |numer| (*7 %))
                              (SIGNATURE |denom| (*7 %)))))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Fraction|
                    (|SparseUnivariatePolynomial|
                     (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|RationalFunction| *5))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *2))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|PolynomialCategory| *5 *4 *2))
   (|ofCategory| *2 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *2 *5 *6 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *6))
                          (SIGNATURE |numer| (*6 %))
                          (SIGNATURE |denom| (*6 %)))))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeMonoid| *3)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace2| *4 *5))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *5 (|KernelCategory| *1))
       (|isDomain| *2 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|KernelCategory| *1))
       (|isDomain| *2 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                              (SIGNATURE |numer| (*7 %))
                              (SIGNATURE |denom| (*7 %)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|RetractableTo| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *6))))))
       (|isDomain| *1 (|RetractSolvePackage| *5 *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|Fraction| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|GenusZeroIntegration| *5 *6 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3 *4 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|isDomain| *4 (|SparseUnivariatePolynomial| *9))
   (|isDomain| *6 (|List| *11)) (|isDomain| *7 (|List| (|NonNegativeInteger|)))
   (|isDomain| *8 (|List| *9)) (|ofCategory| *11 (|OrderedSet|))
   (|ofCategory| *9 (|EuclideanDomain|))
   (|ofCategory| *5 (|PolynomialCategory| *9 *10 *11))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *1 (|MultivariateSquareFree| *10 *11 *9 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofType| *6 (|List| *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|RepeatedSquaring| *2))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE * (% % %)))))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|RepeatedDoubling| *2))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE + (% % %)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Vector| *5))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|Field|))
       (|ofCategory| *6 (|Finite|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *6))))
       (|isDomain| *1 (|RepresentationPackage2| *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *4))))
       (|isDomain| *1 (|RepresentationPackage2| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Finite|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Matrix| *6))
       (|isDomain| *1 (|RepresentationPackage2| *6))
       (|ofCategory| *6 (|Field|)) (|ofCategory| *6 (|Ring|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|RepresentationPackage2| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Vector| (|Vector| *5)))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Vector| *4))) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Permutation| (|Integer|)))
       (|isDomain| *1 (|FiniteGroupPackage| *3))
       (|ofCategory| *3 (|Join| (|Group|) (|Finite|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Permutation| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|RepresentationPackage1| *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Permutation| (|Integer|))))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|RepresentationPackage1| *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|Polynomial| *4)))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
   (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |radval| (|Expression| (|Integer|)))
                              (|:| |radmult| (|Integer|))
                              (|:| |radvect|
                                   (|List|
                                    (|Matrix| (|Expression| (|Integer|))))))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|ReductionOfOrder| *3 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |eq| *3) (|:| |op| (|List| *5))))
       (|isDomain| *1 (|ReductionOfOrder| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RecurrenceOperator| *4 *3))
   (|ofCategory| *3
                 (|Join| (|FunctionSpace| *4) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))) 
(((*1 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|RecurrenceOperator| *3 *4))
   (|ofCategory| *4
                 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *3 *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Symbol|))
                             (|PartialDifferentialRing| (|Symbol|))
                             (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *1 (|RecurrenceOperator| *3 *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *3 *4 *4 *2 *5 *6)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
       (|isDomain| *6 (|Stream| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *7) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|)) (|RetractableTo| *4)
                             (|PartialDifferentialRing| *4)
                             (|CombinatorialOpsCategory|)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *7 *2))))) 
(((*1 *2 *3 *4 *2 *5 *6)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
       (|isDomain| *6 (|Stream| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *7) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|)) (|RetractableTo| *4)
                             (|PartialDifferentialRing| *4)
                             (|CombinatorialOpsCategory|)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *7 *2))))) 
(((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|RightOpenIntervalRootCharacterization| (|RealClosure| *4)
                                                        (|SparseUnivariatePolynomial|
                                                         (|RealClosure| *4))))
   (|isDomain| *3 (|OutputForm|)) (|isDomain| *1 (|RealClosure| *4))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|RightOpenIntervalRootCharacterization| (|RealClosure| *3)
                                                        (|SparseUnivariatePolynomial|
                                                         (|RealClosure| *3))))
   (|isDomain| *1 (|RealClosure| *3))
   (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |left| (|Fraction| (|Integer|)))
                              (|:| |right| (|Fraction| (|Integer|))))))
       (|isDomain| *1 (|RealZeroPackage| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *5 (|Fraction| (|Integer|)))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |left| (|Fraction| (|Integer|)))
                              (|:| |right| (|Fraction| (|Integer|))))))
       (|isDomain| *1 (|RealZeroPackageQ| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *5 (|Fraction| (|Integer|)))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|RealZeroPackage| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackage| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6))
       (|isDomain| *1 (|RandomDistributions| *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|Record| (|:| |value| *4) (|:| |weight| (|Integer|)))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Mapping| *4))
   (|isDomain| *1 (|RandomDistributions| *4))))) 
(((*1 *2 *3 *4 *2 *2 *5 *6 *7)
  (AND
   (|isDomain| *4 (|LaurentPolynomial| *6 (|SparseUnivariatePolynomial| *6)))
   (|isDomain| *7
               (|Mapping|
                (|Record| (|:| |logands| (|List| *6))
                          (|:| |basis|
                               (|List| (|Vector| (|Fraction| (|Integer|))))))
                (|List| (|Kernel| *6)) (|List| *6)))
   (|ofCategory| *6
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *8)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
   (|isDomain| *5 (|List| (|Kernel| *6)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| *2) (|LinearlyExplicitOver| *2)))
   (|isDomain| *1 (|ParametricRischDE| *8 *6))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *5 (|Symbol|))
       (|isDomain| *7
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *3)
                               (|:| |coeffs| (|Vector| *3))))
                    (|List| (|Kernel| *3)) (|List| *3)))
       (|isDomain| *8
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *3))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *3)) (|List| *3)))
       (|isDomain| *4 (|List| *3)) (|isDomain| *6 (|List| (|Kernel| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *9)))
       (|ofCategory| *9
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *3)
                              (|:| |coeffs| (|Vector| *3)))))
       (|isDomain| *1 (|ParametricRischDE| *9 *3))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *6 (|Symbol|))
       (|isDomain| *8
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *4)
                               (|:| |coeffs| (|Vector| *4))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *9
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *4))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|List| *4))
       (|isDomain| *7 (|List| (|Kernel| *4)))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *10)))
       (|ofCategory| *10
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *4)
                              (|:| |coeffs| (|Vector| *4)))))
       (|isDomain| *1 (|ParametricRischDE| *10 *4))))
 ((*1 *2 *3 *4 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *6 (|Symbol|))
       (|isDomain| *8
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *4)
                               (|:| |coeffs| (|Vector| *4))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *9
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *4))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *10)))
       (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|List| *4))
       (|isDomain| *7 (|List| (|Kernel| *4)))
       (|ofCategory| *10
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *4)
                                    (|:| |coeffs| (|Vector| *4)))
                          "failed"))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *4)
                                    (|:| |coeffs| (|Vector| *4)))))))
       (|isDomain| *1 (|ParametricRischDE| *10 *4))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|List| (|Kernel| *3)))
   (|ofCategory| *3
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *7)))
   (|ofCategory| *7
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeffs| (|Vector| *3))))
   (|isDomain| *1 (|ElementaryRischDEX2| *7 *3))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Kernel| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |ans| *3) (|:| |right| *3)
                             (|:| |primpart| *3) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX2| *6 *3))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| *3) (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record| (|:| |ans| *4) (|:| |right| *4)
                             (|:| |primpart| *4) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX2| *6 *4))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryRischDEX| *3 *2))
   (|ofCategory| *2
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|)
                         (|LiouvillianFunctionCategory|)
                         (|SpecialFunctionCategory|) (|FunctionSpace| *3)))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record| (|:| |ans| *4) (|:| |right| *4)
                             (|:| |primpart| *4) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX| *6 *4))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|)
                             (|FunctionSpace| *6)))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping| (|SparseUnivariatePolynomial| *5)
                          (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |ans| (|SparseUnivariatePolynomial| *5))
                         (|:| |remainder| (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|RDEaux| *5))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *5 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|SparseUnivariatePolynomial| *7)
                              (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|Field|))
       (|isDomain| *2
                   (|Union|
                    (|List|
                     (|Record| (|:| |ans| (|SparseUnivariatePolynomial| *7))
                               (|:| |remainder|
                                    (|SparseUnivariatePolynomial| *7))))
                    (|Record|
                     (|:| |ans| (|List| (|SparseUnivariatePolynomial| *7)))
                     (|:| |acoeff| (|SparseUnivariatePolynomial| *7))
                     (|:| |eegen| (|SparseUnivariatePolynomial| *7))
                     (|:| |bpar| (|SparseUnivariatePolynomial| *7))
                     (|:| |lcpar| (|List| (|SparseUnivariatePolynomial| *7)))
                     (|:| |dpar| (|Integer|)))))
       (|isDomain| *1 (|RDEaux| *7))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerPrimeField| *2))
       (|ofType| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PrimeField| *2)) (|ofType| *2 (|PositiveInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RadicalCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealClosedField|)))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RealClosedField|))
   (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursiveAggregate| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|ComplexCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|OctonionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OnePointCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OrderedCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|QuaternionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RationalRetractions| *3))
   (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RationalRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RationalRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|RadixUtilities|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Factored| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *5) (|:| |radicand| (|List| *5))))
       (|isDomain| *1 (|FactoredFunctions| *5))))
 ((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RadicalCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Queue| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|QuadraticForm| *3 *4))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|KernelCategory| *1))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Algebra| *3)) (|isDomain| *1 (|LocalAlgebra| *2 *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Module| *3)) (|isDomain| *1 (|Localize| *2 *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|QuotientFieldCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|KernelCategory| *1))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *3 *2))
       (|ofCategory| *3 (|Algebra| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *2))
       (|ofCategory| *3 (|Module| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *1 (|FunctionSpace2| *2 *3))
       (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *1 (|FunctionSpace2| *2 *3))
       (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|QuasiAlgebraicSet| (|Fraction| (|Integer|))
                                    (|OrderedVariableList| *3)
                                    (|DirectProduct| (|#| *3)
                                                     (|NonNegativeInteger|))
                                    (|DistributedMultivariatePolynomial| *3
                                                                         (|Fraction|
                                                                          (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|QuasiAlgebraicSet2| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *4 *5 *6 *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|Boolean|) "failed"))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *2))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *2 *3 *5))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|MonogenicAlgebra| *2 *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4
                                           *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %))
                              (SIGNATURE |variable|
                               ((|Union| % "failed") (|Symbol|))))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4
                                           *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %))
                              (SIGNATURE |variable|
                               ((|Union| % "failed") (|Symbol|))))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| C (|Matrix| *5))
                              (|:| |lg| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|Automorphism| *5))
       (|isDomain| *4 (|Mapping| *5 *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *2))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Automorphism| *6))
       (|isDomain| *5 (|Mapping| *6 *6)) (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| R (|Matrix| *6)) (|:| A (|Matrix| *6))
                             (|:| |Ainv| (|Matrix| *6))))
       (|isDomain| *1 (|PseudoLinearNormalForm| *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *8))
       (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
       (|isDomain| *4 (|Mapping| *8 *8 *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|Mapping| (|Boolean|) *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *6 *7 *8 *9))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |bas| (|GeneralTriangularSet| *4 *5 *6 *7))
                         (|:| |top| (|List| *7))))
   (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *2))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *7) (|List| *7)))
       (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |rnum| *4) (|:| |polnum| *3)
                             (|:| |den| *4)))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|CartanKuranishi| *4 *5))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *2 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|EuclideanDomain|))))
 ((*1 *2 *1 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |lm| (|FreeMonoid| *3))
                         (|:| |rm| (|FreeMonoid| *3))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |quotient| (|NonNegativeInteger|))
                         (|:| |remainder| (|NonNegativeInteger|))))
   (|isDomain| *1 (|NonNegativeInteger|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultantReduit| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |resultantReduit| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|GcdDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |discriminant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |discriminant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|RetractableTo| (|Fraction| *2))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BoundIntegerRoots| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|LinearlyExplicitOver| *2)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|PolynomialRationalRoots| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceRationalRoots| *5 *3))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|PolynomialRationalRoots| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|PrintPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|IntegerPrimesPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerPrimesPackage| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerPrimesPackage| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |primelt| *5)
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *5)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *5))))
 ((*1 *2 *3 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |primelt| *3)
                         (|:| |pol1| (|SparseUnivariatePolynomial| *3))
                         (|:| |pol2| (|SparseUnivariatePolynomial| *3))
                         (|:| |prim| (|SparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *3))
   (|ofCategory| *3 (|AlgebraicallyClosedField|))
   (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *3 *4 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef1| (|Integer|))
                             (|:| |coef2| (|Integer|))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|PrimitiveElement| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| (|Integer|)))
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *5)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|PrimitiveElement| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| (|Integer|)))
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *6)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|PrimitiveElement| *6))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|IntegrationResult| *2))
       (|ofCategory| *2 (|RetractableTo| *3)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PrimitiveFunctionCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|PrimitiveFunctionCategory|))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *4 (|List| (|Symbol|)))
   (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |lczlc|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))
                    (|:| |k| (|Integer|))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |lcx0lc|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))
                    (|:| |lcx0m|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Preorder| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|PositiveInteger|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *5))
   (|isDomain| *1 (|PrecomputedAssociatedEquations| *5 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| (|List| *4)))
       (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                         (|:| |posY| (|NonNegativeInteger|))))
   (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|Poset| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|Poset| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|List| (|Boolean|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *1 (|Poset| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FiniteGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *3 (|NonNegativeInteger|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |name| (|String|))
                         (|:| |arrType| (|NonNegativeInteger|))
                         (|:| |fromOb| (|NonNegativeInteger|))
                         (|:| |toOb| (|NonNegativeInteger|))
                         (|:| |xOffset| (|Integer|))
                         (|:| |yOffset| (|Integer|))
                         (|:| |map| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PermutationCategory| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|U32Vector|)))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|)))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PrimitiveArray| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|VectorPolynomialOperationsF| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PrimitiveArray| (|PrimeField| *4)))
       (|ofType| *4 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|VectorPolynomialOperationsP| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|U32Vector|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| *4))
       (|isDomain| *1 (|VectorPolynomialOperationsF| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|PrimitiveArray| (|PrimeField| *4)))
       (|isDomain| *1 (|VectorPolynomialOperationsP| *4))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))))
 ((*1 *2 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PrimitiveArray| (|ModMonic| *3 *4)))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|PrimitiveArray| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ModularFactorizationTools3| *5))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *3 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *3) (|:| |radicand| (|List| *3))))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *3 *8))
       (|ofCategory| *8
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*3 %))
                              (SIGNATURE |denom| (*3 %))
                              (SIGNATURE |coerce| (% *3)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *3) (|:| |radicand| *3)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*8 %))
                              (SIGNATURE |denom| (*8 %))
                              (SIGNATURE |coerce| (% *8)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *9) (|:| |radicand| *9)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *9))
       (|ofCategory| *9
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*8 %))
                              (SIGNATURE |denom| (*8 %))
                              (SIGNATURE |coerce| (% *8)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *7 (|PolynomialCategory| *3 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *8) (|:| |radicand| *8)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *3 *7 *8))
       (|ofCategory| *8
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*7 %))
                              (SIGNATURE |denom| (*7 %))
                              (SIGNATURE |coerce| (% *7)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|FunctionSpace2| *3 *4)) (|ofCategory| *3 (|Comparable|))
   (|ofCategory| *4 (|KernelCategory| *1))
   (|isDomain| *2 (|Record| (|:| |val| *1) (|:| |exponent| (|Integer|))))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |val| (|Pattern| *3))
                         (|:| |exponent| (|Pattern| *3))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                          (SIGNATURE |numer| (*7 %))
                          (SIGNATURE |denom| (*7 %)))))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *1 (|FunctionSpace2| *4 *5)) (|ofCategory| *4 (|Comparable|))
   (|ofCategory| *5 (|KernelCategory| *1))
   (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|Integer|))))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *1 (|FunctionSpace2| *4 *5)) (|ofCategory| *4 (|Comparable|))
   (|ofCategory| *5 (|KernelCategory| *1))
   (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|Integer|))))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *1 (|FunctionSpace2| *3 *4)) (|ofCategory| *3 (|Comparable|))
   (|ofCategory| *4 (|KernelCategory| *1))
   (|isDomain| *2 (|Record| (|:| |var| *4) (|:| |exponent| (|Integer|))))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |val| (|Pattern| *3))
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|SemiRing|))
   (|isDomain| *2
               (|Record| (|:| |var| *5)
                         (|:| |exponent| (|NonNegativeInteger|))))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                          (SIGNATURE |numer| (*7 %))
                          (SIGNATURE |denom| (*7 %)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *1 (|FunctionSpace2| *3 *4)) (|ofCategory| *3 (|Comparable|))
   (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiRing|))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                          (SIGNATURE |numer| (*7 %))
                          (SIGNATURE |denom| (*7 %)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *1 (|FunctionSpace2| *3 *4)) (|ofCategory| *3 (|Comparable|))
   (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                          (SIGNATURE |numer| (*7 %))
                          (SIGNATURE |denom| (*7 %)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|HeuGcd| *4))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|OrderedRing|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|CyclotomicUtilities|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *4 *2 *5)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|Pattern| *6)))
       (|isDomain| *5
                   (|Mapping| (|PatternMatchResult| *6 *8) *8 (|Pattern| *6)
                              (|PatternMatchResult| *6 *8)))
       (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *6))
                             (|RetractableTo| *7)))
       (|isDomain| *2 (|PatternMatchResult| *6 *8))
       (|ofCategory| *7 (|Join| (|Comparable|) (|Ring|)))
       (|isDomain| *1 (|PatternMatchTools| *6 *7 *8))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|ComplexCategory| *6))
       (|ofCategory| (|Polynomial| *6) (|PatternMatchable| *5))
       (|ofCategory| *6 (|Join| (|PatternMatchable| *5) (|CommutativeRing|)))
       (|isDomain| *1 (|ComplexPatternMatch| *5 *6 *3))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *4 *1))
       (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *1 (|PatternMatchable| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *6))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *3)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|isDomain| *1 (|PatternMatchPushDown| *5 *3 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|ConvertibleTo| *4)
                             (|PatternMatchable| *5)
                             (|RetractableTo| (|Kernel| %))))
       (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchFunctionSpace| *5 *6 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| (|Integer|) *3))
       (|isDomain| *4 (|Pattern| (|Integer|)))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *1 (|PatternMatchIntegerNumberSystem| *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *6))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|RetractableTo| *3)
                             (|ConvertibleTo| *4) (|PatternMatchable| *5)))
       (|isDomain| *3 (|Kernel| *6)) (|isDomain| *4 (|Pattern| *5))
       (|isDomain| *1 (|PatternMatchKernel| *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchListResult| *5 *6 *3))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *3 (|ListAggregate| *6))
       (|isDomain| *1 (|PatternMatchListAggregate| *5 *6 *3))))
 ((*1 *2 *3 *4 *2 *5)
  (AND
   (|isDomain| *5
               (|Mapping| (|PatternMatchResult| *6 *3) *8 (|Pattern| *6)
                          (|PatternMatchResult| *6 *3)))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|PatternMatchResult| *6 *3)) (|isDomain| *4 (|Pattern| *6))
   (|ofCategory| *6 (|SetCategory|))
   (|ofCategory| *3
                 (|Join| (|PolynomialCategory| *9 *7 *8) (|ConvertibleTo| *4)))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *6)))
   (|isDomain| *1 (|PatternMatchPolynomialCategory| *6 *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|PolynomialCategory| *8 *6 *7)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *7 (|PatternMatchable| *5))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchPolynomialCategory| *5 *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|QuotientFieldCategory| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|PatternMatchable| *5)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5))
       (|isDomain| *1 (|PatternMatchQuotientFieldCategory| *5 *6 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 (|Symbol|)))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchSymbol| *5))))
 ((*1 *2 *3 *4 *5 *2 *6)
  (AND (|isDomain| *4 (|List| (|Pattern| *7)))
       (|isDomain| *5 (|Mapping| *9 (|List| *9)))
       (|isDomain| *6
                   (|Mapping| (|PatternMatchResult| *7 *9) *9 (|Pattern| *7)
                              (|PatternMatchResult| *7 *9)))
       (|ofCategory| *7 (|SetCategory|))
       (|ofCategory| *9
                     (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *7))
                             (|RetractableTo| *8)))
       (|isDomain| *2 (|PatternMatchResult| *7 *9)) (|isDomain| *3 (|List| *9))
       (|ofCategory| *8 (|Join| (|Comparable|) (|Ring|)))
       (|isDomain| *1 (|PatternMatchTools| *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *5)))
       (|ofCategory| *5 (|PatternMatchable| *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| (|Boolean|) *5))
       (|isDomain| *1 (|PatternMatchPushDown| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2 (|List| (|Segment| (|DoubleFloat|))))
       (|isDomain| *1 (|PlotTools|))))) 
(((*1 *1 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *2 *2 *2 *3 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Plot|))
       (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))
 ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *2))
   (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |det| *12) (|:| |rows| (|List| (|Integer|)))
                         (|:| |cols| (|List| (|Integer|)))))
   (|isDomain| *4 (|Matrix| *12))
   (|isDomain| *5 (|List| (|Fraction| (|Polynomial| *9))))
   (|isDomain| *6 (|List| (|List| *12))) (|isDomain| *7 (|NonNegativeInteger|))
   (|isDomain| *8 (|Integer|))
   (|ofCategory| *9
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *12 (|PolynomialCategory| *9 *11 *10))
   (|ofCategory| *10 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *11 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |eqzro| (|List| *12)) (|:| |neqzro| (|List| *12))
                         (|:| |wcond| (|List| (|Polynomial| *9)))
                         (|:| |bsoln|
                              (|Record|
                               (|:| |partsol|
                                    (|Vector| (|Fraction| (|Polynomial| *9))))
                               (|:| |basis|
                                    (|List|
                                     (|Vector|
                                      (|Fraction| (|Polynomial| *9)))))))))
   (|isDomain| *1 (|ParametricLinearEquations| *9 *10 *11 *12))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *7)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |det| *8) (|:| |rows| (|List| (|Integer|)))
                              (|:| |cols| (|List| (|Integer|))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *6)))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |rank| (|NonNegativeInteger|))
                          (|:| |eqns|
                               (|List|
                                (|Record| (|:| |det| *7)
                                          (|:| |rows| (|List| (|Integer|)))
                                          (|:| |cols| (|List| (|Integer|))))))
                          (|:| |fgb| (|List| *7)))))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |rank| (|NonNegativeInteger|))
                          (|:| |eqns|
                               (|List|
                                (|Record| (|:| |det| *7)
                                          (|:| |rows| (|List| (|Integer|)))
                                          (|:| |cols| (|List| (|Integer|))))))
                          (|:| |fgb| (|List| *7)))))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3))
   (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |mat| (|Matrix| (|Fraction| (|Polynomial| *4))))
                         (|:| |vec| (|List| (|Fraction| (|Polynomial| *4))))
                         (|:| |rank| (|NonNegativeInteger|))
                         (|:| |rows| (|List| (|Integer|)))
                         (|:| |cols| (|List| (|Integer|)))))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record|
                (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4))))
                (|:| |basis|
                     (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record|
                (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4))))
                (|:| |basis|
                     (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |rank| (|NonNegativeInteger|))
                              (|:| |eqns|
                                   (|List|
                                    (|Record| (|:| |det| *8)
                                              (|:| |rows| (|List| (|Integer|)))
                                              (|:| |cols|
                                                   (|List| (|Integer|))))))
                              (|:| |fgb| (|List| *8)))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |sysok| (|Boolean|)) (|:| |z0| (|List| *7))
                             (|:| |n0| (|List| *7))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *2 (|PolynomialCategory| *4 *6 *5))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *2))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3))
   (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Matrix| *11))
       (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *8))))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|String|))
       (|isDomain| *7 (|Integer|))
       (|ofCategory| *8
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *11 (|PolynomialCategory| *8 *10 *9))
       (|ofCategory| *9 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record|
                    (|:| |rgl|
                         (|List|
                          (|Record| (|:| |eqzro| (|List| *11))
                                    (|:| |neqzro| (|List| *11))
                                    (|:| |wcond| (|List| (|Polynomial| *8)))
                                    (|:| |bsoln|
                                         (|Record|
                                          (|:| |partsol|
                                               (|Vector|
                                                (|Fraction|
                                                 (|Polynomial| *8))))
                                          (|:| |basis|
                                               (|List|
                                                (|Vector|
                                                 (|Fraction|
                                                  (|Polynomial| *8))))))))))
                    (|:| |rgsz| (|Integer|))))
       (|isDomain| *1 (|ParametricLinearEquations| *8 *9 *10 *11))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *7))
                              (|:| |neqzro| (|List| *7))
                              (|:| |wcond| (|List| (|Polynomial| *4)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *4))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *4))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |eqzro| (|List| *8)) (|:| |neqzro| (|List| *8))
                          (|:| |wcond| (|List| (|Polynomial| *5)))
                          (|:| |bsoln|
                               (|Record|
                                (|:| |partsol|
                                     (|Vector| (|Fraction| (|Polynomial| *5))))
                                (|:| |basis|
                                     (|List|
                                      (|Vector|
                                       (|Fraction| (|Polynomial| *5))))))))))
   (|isDomain| *4 (|String|))
   (|ofCategory| *5
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
   (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *7))
                              (|:| |neqzro| (|List| *7))
                              (|:| |wcond| (|List| (|Polynomial| *4)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *4))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *4))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9))
       (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *9))
                              (|:| |neqzro| (|List| *9))
                              (|:| |wcond| (|List| (|Polynomial| *6)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *6))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *6))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *9))
                              (|:| |neqzro| (|List| *9))
                              (|:| |wcond| (|List| (|Polynomial| *6)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *6))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *6))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|String|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|))
       (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8))
       (|ofCategory| *7
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|))
       (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8))
       (|ofCategory| *7
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PolynomialInterpolationAlgorithms| *4 *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|PrincipalIdealDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| *1)) (|:| |generator| *1)))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PrincipalIdealDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PositiveInteger|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Partition|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Factored| (|Polynomial| *6)))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Polynomial| *6))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *6))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |num| *3) (|:| |d_fact| *3)
                          (|:| |d_exp| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|PartialFraction| *3))
   (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |num| *3) (|:| |d_fact| *3)
                          (|:| |d_exp| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|EuclideanDomain|))
   (|isDomain| *1 (|PartialFraction| *3))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|))))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |order| (|NonNegativeInteger|))
                         (|:| |function| *8)))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
   (|isDomain| *2
               (|Record| (|:| |order| (|NonNegativeInteger|))
                         (|:| |function| *6)))
   (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
       (|ofCategory| *4
                     (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6
                     (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record| (|:| |ncurve| *8) (|:| |n_div_numer| (|Vector| *8))
                         (|:| |n_div_denom| *8)
                         (|:| |need_change| (|Boolean|))))
   (|isDomain| *4 (|List| (|Kernel| *6)))
   (|ofCategory| *6 (|AlgebraicallyClosedField|))
   (|ofCategory| *6 (|FunctionSpace| *5))
   (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
   (|ofCategory| *5 (|CharacteristicZero|))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrder| *5 *6 *7 *8 *9))
   (|ofCategory| *9 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |ncurve| *7)
                             (|:| |n_div_numer| (|Vector| *7))
                             (|:| |n_div_denom| *7)
                             (|:| |need_change| (|Boolean|))))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseMultivariatePolynomial| *4 (|Kernel| *5))))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|isDomain| *2 (|SparseMultivariatePolynomial| *4 (|Kernel| *5)))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|GcdDomain|) (|Comparable|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|ExpressionFactorPolynomial| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5 (|ComplexCategory| *4))
   (|ofCategory| *4 (|IntegerNumberSystem|))
   (|isDomain| *1 (|ComplexIntegerSolveLinearPolynomialEquation| *4 *5))))
 ((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldSolveLinearPolynomialEquation| *4 *5 *3))))
 ((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
   (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
   (|isDomain| *1 (|IntegerSolveLinearPolynomialEquation|))))
 ((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *1)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Matrix| *1))
   (|ofCategory| *1 (|CharacteristicNonZero|))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
   (|isDomain| *2 (|Vector| *1))))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|CharacteristicNonZero|)))
 ((*1 *1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|CharacteristicNonZero|))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
   (|ofCategory| *7 (|PolynomialCategory| *5 *6 *4))
   (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialFactorizationByRecursion| *5 *6 *4 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *2 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *2 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
   (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ProductFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |left| (|NonNegativeInteger|))
                              (|:| |right| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|NonNegativeInteger|))
                          (|:| |right| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|NonNegativeInteger|))
                         (|:| |right| (|NonNegativeInteger|))))
   (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Integer|))
   (|ofCategory| *1 (|ModularEvaluationCategory| *4 *2))
   (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|isDomain| *5
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |eval1coeffbuf| (|U32Vector|))
                         (|:| |eval1expbuf| (|SortedExponentVector|))))
   (|ofCategory| *1 (|ModularEvaluationCategory| *6 *2))
   (|ofCategory| *6 (|Type|)) (|ofCategory| *2 (|Type|))
   (|isDomain| *4 (|Integer|))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *5
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *5
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |eval1coeffbuf| (|U32Vector|))
                         (|:| |eval1expbuf| (|SortedExponentVector|))))
   (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *4
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|FinitelyGenerated|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1) (|ofCategory| *1 (|Finite|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1) (|isDomain| *1 (|Integer|)))
 ((*1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Permutation| *3))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Permutation| *4))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PermutationGroup| *3))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|PermutationCategory| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Set| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Set| (|List| *4)))
       (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Set| (|Set| *4)))
       (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| (|Set| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Permutation| *6))
       (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Vector| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SquareMatrix| *4 *2)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *2 (|Join| (|Ring|) (|CommutativeStar|)))
       (|isDomain| *1 (|Permanent| *4 *2))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |preimage| (|List| *3))
                         (|:| |image| (|List| *3))))
   (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Partition|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Finite|))
        (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))
   (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))
        (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Mapping| *4 *4))
       (|isDomain| *1 (|PartialDifferentialOperatorHelper| *4 *3))
       (|ofCategory| *4 (|PartialDifferentialRing| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Automorphism| *4))
       (|isDomain| *1 (|PartialDifferentialOperatorHelper| *4 *3))
       (|ofCategory| *4 (|PartialDifferentialRing| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |adjMat| *3) (|:| |detMat| *4)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|PartialDifferentialOperator| *2 *3))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1) (|ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| (|PoincareBirkhoffWittLyndonBasis| *3))
                          (|:| |c| *4))))
   (|isDomain| *1 (|LieExponentials| *3 *4 *5))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Module| (|Fraction| (|Integer|)))))
   (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LyndonWord| *3)))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Any|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|AnyFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|PatternFunctions1| *4 *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternFunctions1| *4 *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|PatternMatchResult| *4 *5))
   (|ofCategory| *5 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternFunctions1| *5 *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternFunctions1| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| (|Boolean|) *5))
       (|isDomain| *1 (|PatternFunctions1| *4 *5)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |op| (|BasicOperator|))
                         (|:| |arg| (|List| (|Pattern| *3)))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |num| (|Pattern| *3))
                         (|:| |den| (|Pattern| *3))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Any|))
       (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |var| (|List| (|Symbol|))) (|:| |pred| (|Any|))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternMatchResult| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|ListAggregate| *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|isDomain| *3 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
   (|isDomain| *1 (|PatternMatchResult| *4 *2))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *1 *3)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchListResult| *5 *6 (|List| *6)))
       (|isDomain| *1 (|PatternMatch| *5 *6 *4))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|List| (|Equation| *3)))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|ofCategory| *3 (|RetractableTo| (|Symbol|)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *3))))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4)) (|ofCategory| *3 (|Ring|))
       (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|))))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|))))
       (|not| (|ofCategory| *3 (|Ring|)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|KernelCategory| *4))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *1 (|KernelCategory| *4)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatch| *5 *6 *4))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PatternMatchResult| *4 *5))
       (|isDomain| *3 (|PatternMatchResult| *4 *6))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|ListAggregate| *5))
       (|isDomain| *1 (|PatternMatchListResult| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *3 *4))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *3 *5))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|List| *4))) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| *4)) (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| (|List| *4)))
       (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| (|List| *4)))
       (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|ParametricComplexCurve| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|ParametricComplexCurve| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|BalancedPAdicRational| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Integer|)))
       (|isDomain| *1 (|NumericContinuedFraction| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PAdicRational| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|Integer|))
       (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PAdicRationalConstructor| *3 *4))
       (|ofCategory| *4 (|PAdicIntegerCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FloatingPointSystem&| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FloatingPointSystem&| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Stream| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|EuclideanModularRing| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofType| *5 (|Mapping| *4 *4 *2))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *7 (|Mapping| (|Union| *4 "failed") *4 *4 *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularField| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularRing| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|PAdicIntegerCategory| *4))))) 
(((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6))
   (|isDomain| *1 (|PadeApproximants| *5 *4 *6))
   (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7))
   (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5)
   (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5)))
   (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))
 ((*1 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7))
   (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5)
   (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5)))
   (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))) 
(((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|ContinuedFraction| *6))
   (|isDomain| *1 (|PadeApproximants| *5 *4 *6))
   (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputBox|))) (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|OutputBox|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|OutputBox|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3 *4 *2 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *4 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *2))
       (|ofCategory| *2 (|KernelCategory| *1))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputBox|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *1 (|FormatterCategory&| *4))
   (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *2))
       (|ofCategory| *2 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|KernelCategory| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|OutputBox|) (|OutputBox|)))
       (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|OutputBox|) (|OutputBox|)))
       (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Any|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Automorphism| *5)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *2))
       (|ofCategory| *2 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                             (|:| |generator| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                             (|:| |generator| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |generator| *1) (|:| |coef1| *1)
                             (|:| |coef2| *1) (|:| |coefu| *1)
                             (|:| |coefv| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Database| (|IndexCard|)))
       (|isDomain| *1 (|OperationsQuery|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OperatorHandlers| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1 *3 *4 *2)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *1 (|OperatorHandlers| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *1 (|OperatorHandlers| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OperatorHandlers| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *2 *2)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|List| *2))
   (|isDomain| *1 (|BasicOperatorFunctions1| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|Mapping| *4 (|List| *4)))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|Mapping| *4 (|List| *4)))
   (|isDomain| *1 (|BasicOperatorFunctions1| *4))
   (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Operator| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Operator| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *4 *2))
       (|ofCategory| *2 (|LeftModule| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *1 (|Operator| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|)))
       (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *2 *4))
       (|ofCategory| *4 (|LeftModule| *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|)))
       (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OnePointCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *4 (|Any|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *2 (|String|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|))
       (|isDomain| *2 (|Void|))))
 ((*1 *2 *3 *1 *4)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4))
       (|ofCategory| *4 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *5))
       (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *6))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *6 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *6))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathErrorKind|))
       (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OpenMathErrorKind|))
       (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |cd| (|String|)) (|:| |name| (|String|))))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|OpenMathEncoding|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|SingleInteger|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathDevice|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathDevice|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|CommonOperators|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *4))
       (|ofCategory| *4 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *4 (|KernelCategory| %))
       (|isDomain| *1 (|ExpressionSpace2&| *3 *4))
       (|ofCategory| *3 (|ExpressionSpace2| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *5 (|KernelCategory| %))
       (|isDomain| *1 (|FunctionSpace2&| *3 *4 *5))
       (|ofCategory| *3 (|FunctionSpace2| *4 *5))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|KernelCategory| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|OrientedFacet|)))
   (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Boolean|))))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Boolean|))))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|List| *4)) (|ofCategory| *4 (|Field|))
   (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|ODETools| *4 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|ODETools| *4 *5))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|ODETools| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *6))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |particular| (|Union| *6 "failed"))
                              (|:| |basis| (|List| *6)))
                    *7 *6))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *6) "failed"))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|List| (|Vector| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record|
                     (|:| |particular|
                          (|List|
                           (|Record| (|:| |ratpart| *6)
                                     (|:| |coeffs| (|Vector| *6)))))
                     (|:| |basis| (|List| *6)))
                    *7 (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| (|Vector| *6))
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| A (|Matrix| *5))
                             (|:| |eqs|
                                  (|List|
                                   (|Record| (|:| C (|Matrix| *5))
                                             (|:| |g| (|Vector| *5))
                                             (|:| |eq| *6) (|:| |rh| *5))))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| A (|Matrix| *5))
                             (|:| |eqs|
                                  (|List|
                                   (|Record| (|:| C (|Matrix| *5))
                                             (|:| |lg| (|List| (|Vector| *5)))
                                             (|:| |eq| *6)
                                             (|:| |lrh| (|List| *5)))))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vec| (|Vector| *5))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Fraction| *6)))
       (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *7)))
       (|isDomain| *4 (|Mapping| (|List| *6) *7))
       (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
       (|ofCategory| *6
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *2 (|List| (|Fraction| *7)))
       (|isDomain| *1 (|RationalRicDE| *6 *7))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|List| *5) *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Fraction| *6)))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *7 (|Fraction| *7)))
   (|isDomain| *4 (|Mapping| (|List| *6) *7))
   (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
   (|ofCategory| *6
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2 (|List| (|Fraction| *7)))
   (|isDomain| *1 (|RationalRicDE| *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Fraction| *5)))
       (|isDomain| *1 (|RationalRicDE| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|AlgebraicallyClosedField|))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Fraction| *6)))
       (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *5 (|Fraction| *5)))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|AlgebraicallyClosedField|))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|List| (|Fraction| *5)))
   (|isDomain| *1 (|RationalRicDE| *4 *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|AlgebraicallyClosedField|))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|List| (|Fraction| *6)))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Record| (|:| |poly| *6) (|:| |eq| *3))))
       (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *7
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|List| *5) *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |poly| *6)
                          (|:| |eq|
                               (|LinearOrdinaryDifferentialOperator2| *6
                                                                      (|Fraction|
                                                                       *6))))))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4 (|Mapping| (|List| *7) *7 (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|ofCategory| *6
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List| (|Record| (|:| |frac| (|Fraction| *7)) (|:| |eq| *3))))
   (|isDomain| *1 (|PrimitiveRatRicDE| *6 *7 *3 *8))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *7))
   (|ofCategory| *8
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *7)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |frac| (|Fraction| *6))
                          (|:| |eq|
                               (|LinearOrdinaryDifferentialOperator2| *6
                                                                      (|Fraction|
                                                                       *6))))))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *4 (|MonogenicAlgebra| *5 *7))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vec| (|Vector| *5))))
       (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *4 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *8)) (|ofCategory| *8 (|MonogenicAlgebra| *5 *7))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *8 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *8))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping|
                (|Record| (|:| |particular| (|Union| *5 "failed"))
                          (|:| |basis| (|List| *5)))
                *3 *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3
                 (|Join| (|UnivariateSkewPolynomialCategory| *5)
                         (CATEGORY |domain| (SIGNATURE |adjoint| (% %)))))
   (|isDomain| *2 (|Record| (|:| |ltilde| *3) (|:| |r| (|Union| *3 "failed"))))
   (|isDomain| *1 (|IntegrateSolutions| *5 *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |ltilde|
                         (|LinearOrdinaryDifferentialOperator1|
                          (|Fraction| *5)))
                    (|:| |r|
                         (|Union|
                          (|LinearOrdinaryDifferentialOperator1|
                           (|Fraction| *5))
                          "failed"))))
       (|isDomain| *1 (|RationalLODE| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|RationalLODE| *4 *2))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *2 (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|RationalLODE| *4 *2))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Fraction| *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Fraction| *6) #1="failed"))
                    (|:| |basis| (|List| (|Fraction| *6)))))
       (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|List| (|Fraction| *6)))
                             (|:| |mat| (|Matrix| *5))))
       (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Fraction| *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Union| (|Fraction| *6) #1#))
                         (|:| |basis| (|List| (|Fraction| *6)))))
   (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|List| (|Fraction| *6)))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|Record| (|:| |basis| (|List| (|Fraction| *6)))
                         (|:| |mat| (|Matrix| *5))))
   (|isDomain| *1 (|RationalLODE| *5 *6))))) 
(((*1 *2 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|PrimitiveRatRicDE| *4 *3 *2 *5))
   (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3))
   (|ofCategory| *5
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *2 *6))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Record| (|:| |constant| *5) (|:| |eq| *3))))
       (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *7
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |eq| *5))))
   (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatRicDE| *4 *2 *3 *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *5
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *3 *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *5
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *5 *3))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *3
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5))))
   (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4))))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5))))
   (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *6 *3))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *3
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4))))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *6 *3))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4))
   (|ofCategory| *3
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *4)))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Fraction| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *6
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *4))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *8))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *8)
                                    (|:| |coeffs| (|Vector| *5)))))
                    (|:| |basis| (|List| *8))))
       (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *8))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *1 (|ODEIntegration| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *1 (|ODEIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|ConstantLODE| *6 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Quaternion| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Octonion| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|DivisionRing|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedAbelianMonoidSup|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedAbelianMonoidSup|)))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *6 *5 *3 *7)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Record| (|:| |to_try| (|Float|)) (|:| |did| (|Float|))
                             (|:| |next| (|Float|))))
       (|isDomain| *7
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))
 ((*1 *2 *3 *4 *5 *6 *5 *3 *7 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Record| (|:| |to_try| (|Float|)) (|:| |did| (|Float|))
                             (|:| |next| (|Float|))))
       (|isDomain| *7
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *5 *5 *5 *4 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))
 ((*1 *2 *3 *4 *5 *5 *6 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
   (|ofCategory| *4 (|CommutativeRing|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|CommutativeRing|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Complex| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *3)) (|ofCategory| *3 (|ConvertibleTo| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|NewSparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| *4) (|:| |outmult| (|Integer|))
                              (|:| |outvect| (|List| (|Matrix| *4))))))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Matrix| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CharacteristicPolynomialPackage| *2))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1
                   (|CharacteristicPolynomialInMonogenicalAlgebra| *4 *2 *3))
       (|ofCategory| *3 (|MonogenicAlgebra| *4 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Polynomial| *5))
       (|isDomain| *1 (|EigenPackage| *5)) (|ofCategory| *5 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *2 (|Polynomial| *4)) (|isDomain| *1 (|EigenPackage| *4))
       (|ofCategory| *4 (|GcdDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerEigenPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *5))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|NumericRealEigenPackage| *5))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *10))
       (|isDomain| *4 (|List| *6)) (|isDomain| *5 (|List| *10))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *9 (|IntegralDomain|))
       (|ofCategory| *10 (|PolynomialCategory| *9 *7 *8))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|Record|
                    (|:| |deter| (|List| (|SparseUnivariatePolynomial| *10)))
                    (|:| |dterm|
                         (|List|
                          (|List|
                           (|Record| (|:| |expt| (|NonNegativeInteger|))
                                     (|:| |pcoef| *10)))))
                    (|:| |nfacts| (|List| *6)) (|:| |nlead| (|List| *10))))
       (|isDomain| *1 (|NPCoef| *6 *7 *8 *9 *10))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))
       (|ofType| *7 (|PositiveInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *4 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NormalizationPackage| *6 *7 *8 *4 *5))
       (|ofCategory| *5 (|RegularTriangularSetCategory| *6 *7 *8 *4))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofCategory| *3
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|)))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *1 (|NormalizationPackage| *4 *5 *6 *2 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *2))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2)
                         (|:| |polj| *2)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *2))
   (|ofCategory| *4 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2)
                         (|:| |polj| *2)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *4 *5))
   (|isDomain| *1 (|NGroebnerPackage| *4 *5 *2))
   (|ofCategory| *4 (|LeftOreRing|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|LeftOreRing|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|NGroebnerPackage| *4 *5 *3))
       (|ofCategory| *3 (|SolvableSkewPolynomialCategory| *4 *5))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                             (|VariablesCommuteWithCoefficients|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|LeftOreRing|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|NGroebnerPackage| *3 *4 *2))
       (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *3 *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *4 *5))
       (|ofCategory| *4 (|LeftOreRing|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|NGroebnerPackage| *4 *5 *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|DistributedJetBundlePolynomial| *3 *4 *5 *6)))
       (|ofType| *5 (|List| *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Polynomial| *3)))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|FGLMIfCanPackage| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|String|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|String|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|JetBundlePolynomial| *3 *4)))
       (|isDomain| *1 (|JetBundlePolynomial| *3 *4))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|JetBundleFunctionCategory| *4)
                             (|PolynomialCategory| *3 (|IndexedExponents| *4)
                                                   *4)))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|ofType| *5 (|List| *4)) (|isDomain| *1 (|JetGroebner| *3 *4 *5 *6 *7))
       (|ofCategory| *7
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *3
                                                   (|OrderedVariableList|
                                                    *4))))
   (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|LexTriangularPackage| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *5))
       (|ofCategory| *5 (|SolvableSkewPolynomialCategory| *3 *4))
       (|ofCategory| *3 (|LeftOreRing|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|NGroebnerPackage| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|NewtonInterpolation| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| (|Complex| *4))
                              (|:| |outmult| (|Integer|))
                              (|:| |outvect|
                                   (|List| (|Matrix| (|Complex| *4)))))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|TwoDimensionalArray| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeSemiRng|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|NonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *3 (|Integer|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|EuclideanDomain|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |factor| *2)
                              (|:| |exponent| (|NonNegativeInteger|)))))
       (|ofCategory| *2 (|PolynomialCategory| *7 *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|EuclideanDomain|))
       (|isDomain| *1 (|MultivariateSquareFree| *5 *6 *7 *2))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8)))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |upol| (|SparseUnivariatePolynomial| *8))
                             (|:| |Lval| (|List| *8))
                             (|:| |Lfact|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *8))
                                    (|:| |exponent| (|NonNegativeInteger|)))))
                             (|:| |ctpol| *8)))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8)))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |unitPart| *9)
                             (|:| |suPart|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *9))
                                    (|:| |exponent|
                                         (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *9))
                             (|:| |polval| (|SparseUnivariatePolynomial| *8))))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *5 *4 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6))
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|ofCategory| *6 (|EuclideanDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|MultiplicativeDependence|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|MergeThing| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|MoreSystemCommands|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Multiset| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|List| (|Kernel| (|Expression| (|Integer|)))))
       (|isDomain| *4 (|List| (|Expression| (|Integer|))))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (|partial| AND (|isDomain| *5 (|List| (|Expression| (|Integer|))))
   (|isDomain| *7
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| *3)))
                         (|:| |atan_kers| (|List| (|Kernel| *3)))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|List| (|Kernel| *3))) (|isDomain| *6 (|Symbol|))
   (|isDomain| *2
               (|Record| (|:| |degree| (|OrderedExpression|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| *3)))
                         (|:| |atan_kers| (|List| (|Kernel| *3)))))
   (|isDomain| *4 (|Kernel| (|Expression| (|Integer|))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|Record| (|:| |degree| (|OrderedExpression|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2
               (|Record|
                (|:| |lk| (|List| (|Kernel| (|Expression| (|Integer|)))))
                (|:| |lc| (|List| (|Expression| (|Integer|))))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Kernel| (|Expression| (|Integer|))))
   (|isDomain| *4 (|Symbol|))
   (|isDomain| *2
               (|Record| (|:| |sign| (|Integer|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| (|Expression| *2))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| *2))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Equation| (|OrderedCompletion| (|Expression| (|Integer|)))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|Union| (|OrderedCompletion| (|Expression| (|Integer|)))
                        (|Record|
                         (|:| |leftHandLimit|
                              (|Union|
                               (|OrderedCompletion| (|Expression| (|Integer|)))
                               #1="failed"))
                         (|:| |rightHandLimit|
                              (|Union|
                               (|OrderedCompletion| (|Expression| (|Integer|)))
                               #1#)))
                        #2="failed"))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|OrderedCompletion| (|Expression| (|Integer|))))
       (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2
                   (|Union| (|OrderedCompletion| (|Expression| (|Integer|)))
                            (|Record|
                             (|:| |leftHandLimit|
                                  (|Union|
                                   (|OrderedCompletion|
                                    (|Expression| (|Integer|)))
                                   #1#))
                             (|:| |rightHandLimit|
                                  (|Union|
                                   (|OrderedCompletion|
                                    (|Expression| (|Integer|)))
                                   #1#)))
                            #2#))
       (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| (|Expression| (|Integer|))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *6)))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5
                                           *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5
                                           *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *6 (|IntegralDomain|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *6 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |sup| (|Polynomial| *6))
                             (|:| |inf| (|Polynomial| *6))))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4
                                           *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *2)) (|isDomain| *4 (|Mapping| *2 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *2))
       (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |normal| (|Factored| *3))
                             (|:| |special| (|Factored| *3))))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|CyclicGroup| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofType| *3 (|Symbol|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *4)
  (|partial| AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|List| *6))
   (|ofCategory| *1 (|FiniteDivisorCategory| *5 *6 *7 *2))
   (|ofCategory| *5 (|Field|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *2 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|Field|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|InfiniteCyclicGroup| *2)) (|ofType| *2 (|Symbol|))))
 ((*1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *1)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *1 (|MonogenicAlgebra| *5 *6))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|Matrix| *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2
                   (|Record| (|:| |puiseux| (|Fraction| (|Integer|)))
                             (|:| |laurent| (|Fraction| (|Integer|)))
                             (|:| |coef| (|Sequence| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Stream| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Sequence| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|MomentPackage| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Sequence| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Stream| (|Record| (|:| |an| *4) (|:| |bn| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| *4))
                             (|:| |bn| (|Stream| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Record| (|:| |an| (|List| *4)) (|:| |bn| (|List| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|CommutativeRing|))
   (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
   (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
   (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CyclicGroup| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InfiniteCyclicGroup| *3))
       (|ofType| *3 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerLocalizedAtPrime| *3))
       (|ofType| *3 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|ModuleMonomial| *3 *2 *4))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *2))
                   (|Record| (|:| |index| *3) (|:| |exponent| *2))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|Finite|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|ModuleMonomial| *2 *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3))
                   (|Record| (|:| |index| *2) (|:| |exponent| *3))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|FiniteFieldCategory|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModMonic| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
       (|ofCategory| *7 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| *7)))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
   (|ofCategory| *8 (|CommutativeRing|))))) 
(((*1 *2 *2 *3 *4 *4 *5 *6)
  (AND
   (|isDomain| *2
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List| (|SparseUnivariatePolynomial| *8))))
   (|isDomain| *3 (|List| (|List| *7))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *6
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|ofCategory| *8 (|CommutativeRing|))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| *9)))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List| (|SparseUnivariatePolynomial| *10))))
       (|ofCategory| *9 (|CommutativeRing|))
       (|ofCategory| *10 (|CommutativeRing|))
       (|isDomain| *2
                   (|Union| (|Matrix| (|SparseUnivariatePolynomial| *10))
                            (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *9 *10))))) 
(((*1 *2 *3 *4 *5 *6 *6)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|SortedExponentVector|))
       (|isDomain| *5 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *6 (|Integer|))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Symbol|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Vector|
                (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|)))))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
   (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Vector| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *6 *6)
  (AND
   (|isDomain| *5
               (|Mapping| (|Vector| *2) (|List| *2) (|Integer|) (|Integer|)))
   (|isDomain| *6 (|Integer|)) (|isDomain| *3 (|Vector| (|U32Vector|)))
   (|isDomain| *4 (|List| (|U32Vector|))) (|isDomain| *2 (|U32Vector|))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *8
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *9
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial| (|Integer|)))))
       (|isDomain| *6 (|Integer|))
       (|isDomain| *2
                   (|Union|
                    (|Matrix| (|SparseUnivariatePolynomial| (|Integer|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND
   (|isDomain| *3
               (|List|
                (|List| (|Fraction| (|Polynomial| (|AlgebraicNumber|))))))
   (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|isDomain| *8
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List|
                           (|SparseUnivariatePolynomial|
                            (|Polynomial| (|AlgebraicNumber|))))))
   (|isDomain| *2
               (|Union|
                (|Matrix|
                 (|SparseUnivariatePolynomial|
                  (|Polynomial| (|AlgebraicNumber|))))
                (|Boolean|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|isDomain| *8
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List|
                           (|SparseUnivariatePolynomial|
                            (|Polynomial| (|Integer|))))))
   (|isDomain| *2
               (|Union|
                (|Matrix|
                 (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
                (|Boolean|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial|
                                (|AlgebraicNumber|)))))
       (|isDomain| *2
                   (|Union|
                    (|Matrix|
                     (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial| (|Integer|)))))
       (|isDomain| *2
                   (|Union|
                    (|Matrix| (|SparseUnivariatePolynomial| (|Integer|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| *5))
       (|isDomain| *4
                   (|Record| (|:| |i_mod| (|Integer|))
                             (|:| |deg| (|Integer|))))
       (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |poly| (|PrimitiveArray| *5))
                              (|:| |degree| (|NonNegativeInteger|))
                              (|:| |separate_factors|
                                   (|Mapping|
                                    (|List| (|PrimitiveArray| *5)))))))
       (|isDomain| *1 (|ModularFactorizationK| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |poly| (|U32Vector|))
                              (|:| |degree| (|NonNegativeInteger|))
                              (|:| |separate_factors|
                                   (|Mapping| (|List| (|U32Vector|)))))))
       (|isDomain| *1 (|ModularFactorization|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |poly| *3)
                              (|:| |degree| (|NonNegativeInteger|))
                              (|:| |separate_factors|
                                   (|Mapping| (|List| *3))))))
       (|isDomain| *1 (|ModularFactorizationGeneral| *3 *5 *4 *6 *7))
       (|ofCategory| *7 (|ModularFactorizationOperations| *3 *5 *4 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| *5))
       (|isDomain| *4
                   (|Record| (|:| |i_mod| (|Integer|))
                             (|:| |deg| (|Integer|))))
       (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *2 (|List| (|PrimitiveArray| *5)))
       (|isDomain| *1 (|ModularFactorizationK| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|U32Vector|)))
       (|isDomain| *1 (|ModularFactorization|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|ModularFactorizationGeneral| *3 *5 *4 *6 *7))
       (|ofCategory| *7 (|ModularFactorizationOperations| *3 *5 *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *13))
   (|isDomain| *4 (|List| *11)) (|isDomain| *6 (|List| *12))
   (|isDomain| *7 (|List| *13)) (|isDomain| *8 (|List| (|NonNegativeInteger|)))
   (|isDomain| *9
               (|Mapping|
                (|Union|
                 (|Mapping|
                  (|Union| (|List| (|SparseUnivariatePolynomial| *12))
                           "failed")
                  (|SparseUnivariatePolynomial| *12))
                 "failed")
                (|List| (|SparseUnivariatePolynomial| *12))))
   (|ofCategory| *11 (|OrderedSet|)) (|ofCategory| *12 (|IntegralDomain|))
   (|ofCategory| *13 (|PolynomialCategory| *12 *10 *11))
   (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *12)))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *13)))
   (|isDomain| *1 (|MultivariateLifting| *10 *11 *12 *13))))
 ((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *12))
   (|isDomain| *4 (|List| *11))
   (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *9)))
   (|isDomain| *6 (|List| *9)) (|isDomain| *7 (|List| *12))
   (|isDomain| *8 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *9 (|EuclideanDomain|)) (|ofCategory| *11 (|OrderedSet|))
   (|ofCategory| *9 (|IntegralDomain|))
   (|ofCategory| *12 (|PolynomialCategory| *9 *10 *11))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *12)))
   (|isDomain| *1 (|MultivariateLifting| *10 *11 *9 *12))))) 
(((*1 *2 *3 *4 *5 *6 *2 *7)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *11)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *11))
   (|isDomain| *4 (|List| *9)) (|isDomain| *5 (|List| *10))
   (|isDomain| *6 (|List| (|NonNegativeInteger|)))
   (|isDomain| *7
               (|Mapping|
                (|Union| (|List| (|SparseUnivariatePolynomial| *10)) "failed")
                (|SparseUnivariatePolynomial| *10)))
   (|ofCategory| *9 (|OrderedSet|)) (|ofCategory| *10 (|IntegralDomain|))
   (|ofCategory| *11 (|PolynomialCategory| *10 *8 *9))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|MultivariateLifting| *8 *9 *10 *11))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6))
       (|isDomain| *1 (|MakeBinaryCompiledFunction| *3 *5 *6 *7))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MakeUnaryCompiledFunction| *3 *5 *6))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MakeUnaryCompiledFunction| *4 *5 *6))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|Record| (|:| |part1| *3) (|:| |part2| *4)))
       (|isDomain| *1 (|MakeRecord| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleExpression| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|JetBundleXExpression| *4)))
       (|isDomain| *1 (|JetBundleXExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6))
       (|isDomain| *1 (|MakeBinaryCompiledFunction| *4 *5 *6 *7))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *6))
       (|ofCategory| *6 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2 *3 *2 *4 *5)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *2 *3 *6 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *3 *6 *7 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Record| (|:| |matr| *6) (|:| |poly| *3)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *4 *2 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *5 *3 *6 *7))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4 *4 *4 *5 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *6 *3 *7 *5))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *6 *3 *7 *5))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *4 *3 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *3 *2 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *2 *5 *4 *6))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *2 *5 *4 *6))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *2 *5 *6 *4))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *5 *3))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *4 *5 *3 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *4 *5 *3 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *4 *5 *2 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *3 *5 *4 *2))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |next| (|List| (|NonNegativeInteger|)))
                          (|:| |map|
                               (|List| (|List| (|NonNegativeInteger|)))))))
   (|ofCategory| *3 (|SetCategory|))
   (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))) 
(((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|MultifunctionGraph| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|MultifunctionGraph| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Loop|))
       (|isDomain| *1 (|FunctionGraph| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|OrderedCompletion| *3)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|OrderedCompletion| *3)
                            (|Record|
                             (|:| |leftHandLimit|
                                  (|Union| (|OrderedCompletion| *3)
                                           #1="failed"))
                             (|:| |rightHandLimit|
                                  (|Union| (|OrderedCompletion| *3) #1#)))
                            "failed"))
       (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|String|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|OrderedCompletion| *3))
   (|isDomain| *1 (|PowerSeriesLimitPackage| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Equation| (|OrderedCompletion| (|Polynomial| *5))))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Union|
                    (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                    (|Record|
                     (|:| |leftHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2="failed"))
                     (|:| |rightHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#)))
                    #3="failed"))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Union|
                    (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                    (|Record|
                     (|:| |leftHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#))
                     (|:| |rightHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#)))
                    #3#))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *1 (|RationalFunctionLimitPackage| *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Loop|))
       (|isDomain| *1 (|MultifunctionGraph| *4))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|MultifunctionGraph| (|String|)))
       (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Permutation| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|MultifunctionGraph| (|String|)))
       (|isDomain| *1 (|MultifunctionGraph| *5))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|PermutationGroup| (|NonNegativeInteger|)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Polynomial| (|Integer|))) (|isDomain| *5 (|List| *3))
       (|isDomain| *7 (|List| (|Symbol|)))
       (|ofCategory| *1 (|ModularEvaluationCategory| *8 *3))
       (|ofCategory| *8 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *6 (|Symbol|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *1 (|ModularEvaluationCategory| *3 *2))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *3 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *3 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Union|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                           (|DoubleFloat|))
                "undefined"))
   (|isDomain| *5 (|Segment| (|DoubleFloat|)))
   (|isDomain| *6 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *5 *6)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Union|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                           (|DoubleFloat|))
                "undefined"))
   (|isDomain| *5 (|Segment| (|DoubleFloat|)))
   (|isDomain| *6 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|DoubleFloat|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))
 ((*1 *2 *2 *3 *4 *4 *5)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3
                   (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                              (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|DoubleFloat|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MultiDictionary| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |entry| *3)
                              (|:| |count| (|NonNegativeInteger|)))))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|PartialDifferentialRing| *6))
       (|isDomain| *2 (|Matrix| *7))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *7 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *7))
       (|ofCategory| *4 (|FiniteLinearAggregate| *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Matrix| *6))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *6 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *6))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *6))
       (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *3 *7 *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|PartialDifferentialRing| *4))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *4 *2 *5 *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *3 (|FiniteLinearAggregate| *4))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|PartialDifferentialRing| *5))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Matrix| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|AbelianMonoid|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *2) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|DirichletRing| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|SemiRng|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))) 
(((*1 *2 *1 *3 *4 *5 *6 *6 *7)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *5 (|List| *1)) (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7 (|Union| *8 "one"))
       (|ofCategory| *1 (|MatrixCategory| *8 *9 *10))
       (|ofCategory| *8 (|AbelianMonoid|))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5 *4))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))
       (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5 *4)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MappingPackage3| *5 *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *4 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5))
       (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofType| *4 (|List| *3)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *2 *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *4)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *3))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|NonNegativeInteger|) *2))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Mapping| *3 (|NonNegativeInteger|) *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MappingPackage1| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|MappingPackage1| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Mapping| *6 *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks3| *5 *6 *2))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| (|List| *1)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| (|List| *1)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|PositiveInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|FiniteLinearAggregate| *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *6))
       (|isDomain| *2 (|List| (|List| *3)))
       (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3))
       (|ofCategory| *3 (|TwoDimensionalArrayCategory| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|FiniteLinearAggregate| *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *6))
       (|isDomain| *2 (|List| (|List| *3)))
       (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3))
       (|ofCategory| *3 (|TwoDimensionalArrayCategory| *6 *7 *8))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MagmaWithUnit|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))) 
(((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))) 
(((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|))
   (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|isDomain| *1 (|ModularAlgebraicGcdTools3|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|SortedExponentVector|))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ModularAlgebraicGcdTools3|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|U32Vector|)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *7 *3 *6))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *5 *6 *4))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|SortedExponentVector|))))) 
(((*1 *2 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *5 (|List| (|Symbol|)))
   (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *3 *2 *6))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
   (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *6))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|))
   (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *6 *7 *2))
   (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *2 *3))
   (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
   (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *2 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *2 *3 *4 *5 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))
       (|isDomain| *1 (|ModularAlgebraicGcd| *6 *7 *8))
       (|ofCategory| *8 (|ModularAlgebraicGcdOperations| *2 *6 *7))))
 ((*1 *2 *3 *3 *4 *5 *6 *5)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|List| (|Symbol|)))
       (|isDomain| *6 (|Symbol|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|ofCategory| *9 (|Type|)) (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|ModularAlgebraicGcd2| *3 *7 *8 *9 *10 *11))
       (|ofCategory| *10 (|ModularEvaluationCategory| *3 *7))
       (|ofCategory| *11 (|ModularAlgebraicGcdOperations| *7 *8 *9))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|ThreeDimensionalMatrix| *2)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Vector| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|FreeMonoid| *3))
   (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|OneDimensionalArray| (|List| (|LyndonWord| *5))))
       (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LyndonWord| *5)))
       (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |Inv| (|Matrix| *4))
                             (|:| |Pivots| (|List| *4))))
       (|isDomain| *1 (|LUDecomposition| *4))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4 (|Vector| (|Integer|))) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|LUDecomposition| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| LU (|Matrix| *4))
                             (|:| |Perm| (|Vector| (|Integer|)))
                             (|:| |Pivots| (|List| *4))))
       (|isDomain| *1 (|LUDecomposition| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| (|Fraction| *8)))
                             (|:| |vec| (|Vector| (|Fraction| *8)))))
       (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| *8)) "failed"))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *8))))))
       (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Matrix| *4))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|LinearSystemMatrixPackage2| *4))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|ListAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *4)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
   (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
   (|isDomain| *1 (|LinearPolynomialEquationByFractions| *4))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |llcm_res| *1) (|:| |coeff1| *1)
                         (|:| |coeff2| *1)))
   (|ofCategory| *1 (|LeftOreRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|Loop|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|Loop|))))) 
(((*1 *1) (|ofCategory| *1 (|Logic|)))) 
(((*1 *1) (|ofCategory| *1 (|Logic|)))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *3))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *5 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |singularity|
                      (|Record|
                       (|:| |point|
                            (|Union| (|Expression| (|Integer|)) "infinity"))
                       (|:| |lpf|
                            (|LinearOrdinaryDifferentialOperator3|
                             (|Expression| (|Integer|))
                             (|UnivariateTaylorSeries|
                              (|Expression| (|Integer|)) *6 *7)
                             (|UnivariateLaurentSeries|
                              (|Expression| (|Integer|)) *6 *7)))
                       (|:| |dxt| (|PositiveInteger|))))
                 (|:| |fos|
                      (|List|
                       (|Record|
                        (|:| |op|
                             (|LinearOrdinaryDifferentialOperator3|
                              (|Expression| (|Integer|))
                              (|UnivariateTaylorSeries|
                               (|Expression| (|Integer|)) *6 *7)
                              (|UnivariateLaurentSeries|
                               (|Expression| (|Integer|)) *6 *7)))
                        (|:| |ram|
                             (|UnivariatePolynomial| *6
                                                     (|Expression|
                                                      (|Integer|))))
                        (|:| |expart|
                             (|UnivariateLaurentSeries|
                              (|Expression| (|Integer|)) *6 *7)))))
                 (|:| |mge|
                      (|List|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Union| (|Expression| (|Integer|)) "infinity"))
   (|isDomain| *5
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))
                (|List| (|Expression| (|Integer|)))))
   (|isDomain| *6 (|List| (|Expression| (|Integer|)))) (|ofType| *7 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |ecs|
                      (|List|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *7
                                                  *8)))
                 (|:| |ecr|
                      (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
                 (|:| |ect|
                      (|Fraction|
                       (|UnivariatePolynomial| *7
                                               (|Expression| (|Integer|))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
   (|ofType| *8 (|Expression| (|Integer|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| (|Expression| (|Integer|)))) (|ofType| *5 *2)
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
       (|ofType| *4 (|Symbol|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))))
   (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
   (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Union| (|Expression| (|Integer|)) "infinity"))
   (|ofType| *5 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *5 *6)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *5 *6)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|ofType| *5 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator1|
                 (|Fraction|
                  (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Union|
                (|List|
                 (|Record|
                  (|:| |op|
                       (|LinearOrdinaryDifferentialOperator3|
                        (|Expression| (|Integer|))
                        (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                  *7)
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *6 *7)))
                  (|:| |ram|
                       (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
                  (|:| |expart|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))
                (|List|
                 (|Union|
                  (|LinearOrdinaryDifferentialOperator3|
                   (|Expression| (|Integer|))
                   (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                   (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                              *7))
                  (|Record|
                   (|:| |ope|
                        (|LinearOrdinaryDifferentialOperator3|
                         (|Expression| (|Integer|))
                         (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                   *6 *7)
                         (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                    *6 *7)))
                   (|:| |dext| (|PositiveInteger|))
                   (|:| |alpha| (|Expression| (|Integer|)))
                   (|:| |rami|
                        (|UnivariatePolynomial| *6
                                                (|Expression|
                                                 (|Integer|)))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Expression| (|Integer|)))
   (|isDomain| *5 (|PositiveInteger|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6 *7)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 *4)))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Union| (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *5 *6)))
   (|isDomain| *4
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *5 *6)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *5 *6)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Union|
                (|List|
                 (|Record|
                  (|:| |op|
                       (|LinearOrdinaryDifferentialOperator3|
                        (|Expression| (|Integer|))
                        (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                  *7)
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *6 *7)))
                  (|:| |ram|
                       (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
                  (|:| |expart|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))
                (|List|
                 (|Union|
                  (|LinearOrdinaryDifferentialOperator3|
                   (|Expression| (|Integer|))
                   (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                   (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                              *7))
                  (|Record|
                   (|:| |ope|
                        (|LinearOrdinaryDifferentialOperator3|
                         (|Expression| (|Integer|))
                         (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                   *6 *7)
                         (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                    *6 *7)))
                   (|:| |dext| (|PositiveInteger|))
                   (|:| |alpha| (|Expression| (|Integer|)))
                   (|:| |rami|
                        (|UnivariatePolynomial| *6
                                                (|Expression|
                                                 (|Integer|)))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))
       (|ofType| *4 (|Symbol|))
       (|isDomain| *2
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *4 *5)
                    (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *4
                                               *5)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
       (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *2 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *5 (|Integer|))
   (|ofType| *6 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *5 (|Integer|))
   (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6 *7)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| *5))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Stream|
                    (|Record|
                     (|:| |Qt|
                          (|LinearOrdinaryDifferentialOperator3|
                           (|Expression| (|Integer|))
                           (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                     *7 *8)
                           (|UnivariateLaurentSeries|
                            (|Expression| (|Integer|)) *7 *8)))
                     (|:| |Rt|
                          (|LinearOrdinaryDifferentialOperator3|
                           (|Expression| (|Integer|))
                           (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                     *7 *8)
                           (|UnivariateLaurentSeries|
                            (|Expression| (|Integer|)) *7 *8))))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |main|
                         (|Record|
                          (|:| |Qt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))
                          (|:| |Rt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))))
                    (|:| |nf|
                         (|Record|
                          (|:| |Qt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))
                          (|:| |Rt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))))
                    (|:| |error|
                         (|LinearOrdinaryDifferentialOperator3|
                          (|Expression| (|Integer|))
                          (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                    *7 *8)
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |llc|
                         (|List|
                          (|Stream|
                           (|Record| (|:| |k| (|Integer|))
                                     (|:| |c| (|Expression| (|Integer|)))))))
                    (|:| |rlc|
                         (|List|
                          (|Stream|
                           (|Record| (|:| |k| (|Integer|))
                                     (|:| |c| (|Expression| (|Integer|)))))))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |laurl|
                         (|List|
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))
                    (|:| |laurr|
                         (|List|
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
   (|isDomain| *5 (|Fraction| (|Integer|))) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Record|
                (|:| |Qt|
                     (|LinearOrdinaryDifferentialOperator3|
                      (|Expression| (|Integer|))
                      (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                *7)
                      (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                 *7)))
                (|:| |Rt|
                     (|LinearOrdinaryDifferentialOperator3|
                      (|Expression| (|Integer|))
                      (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                *7)
                      (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                 *7)))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator3|
                 (|Expression| (|Integer|))
                 (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                 (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                            *7))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *4 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))))
   (|ofType| *4 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |point|
                      (|Record| (|:| |x| (|Integer|)) (|:| |y| (|Integer|))))
                 (|:| |slope| (|Fraction| (|Integer|)))
                 (|:| |npoly|
                      (|UnivariatePolynomial| *4
                                              (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
   (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|AbelianMonoidRing| *3 (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperator3Aux| *3 *4 *2))
       (|ofCategory| *2 (|Join| (|DifferentialRing|) (|LeftModule| *4)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeMonoid| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ListMonoidOps| *4 *2 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofType| *5 *2)))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeMonoid| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|ListMonoidOps| *2 *4 *5))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND
   (|isDomain| *2 (|Mapping| (|NonNegativeInteger|) (|NonNegativeInteger|)))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeGroup| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeMonoid| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ListMultiDictionary| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *2 *1)
  (AND (|isDomain| *1 (|ListMultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Float|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Integer|)))
       (|isDomain| *2
                   (|Record| (|:| |lll| (|Matrix| (|Integer|)))
                             (|:| |trf| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *5)))
       (|isDomain| *4 (|Matrix| (|Fraction| *7))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|LiftLinearDependence| *5 *6 *7))
       (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *5)))
       (|isDomain| *4 (|List| (|Fraction| *7))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|LiftLinearDependence| *5 *6 *7))
       (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *5)))
       (|isDomain| *4 (|List| *7)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|LiftLinearDependence| *5 *6 *7))
       (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *1 (|ListPackage| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|BasicType|)) (|isDomain| *2 (|List| (|List| *5)))
       (|isDomain| *1 (|ListPackage| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2
                   (|Record| (|:| |yes| (|List| *5)) (|:| |no| (|List| *5))))
       (|isDomain| *1 (|ListPackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|ListToMap| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Mapping| *5 *6)) (|isDomain| *1 (|ListToMap| *6 *5))))
 ((*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|isDomain| *6 (|Mapping| *2 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|List| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| (|Equation| (|Polynomial| *6))))
       (|ofCategory| *6 (|Field|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *3 (|Polynomial| *6))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *6)))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))) 
(((*1 *2 *1 *3 *3 *3 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *4 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *5))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Equation| (|Polynomial| *5))))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Matrix| *5)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))) 
(((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3 *4 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|List| (|Matrix| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))) 
(((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))) 
(((*1 *1 *1 *2 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|FreeMonoid| *5))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *6 (|Field|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3 *1 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ComplexDoubleFloatVector|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DoubleFloatVector|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3 (|List| (|FreeMonoid| *4)))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *5 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
       (|isDomain| *5 (|List| (|Mapping| *7 *7)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *7))
                             (|:| |vec| (|Vector| *7))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *7))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|List| (|Mapping| *5 *5)))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|ConstantLinearDependence| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *1)) (|isDomain| *4 (|Vector| *1))
       (|ofCategory| *1 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *5))
                             (|:| |vec| (|Vector| *5))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *1))
       (|ofCategory| *1 (|LinearlyExplicitOver| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *5) #1="failed"))
                    (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|LinearlyExplicitOver| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *5) #1#))
                             (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| *5))
       (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| *5)) #2="failed"))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *5))))))
       (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|LinearlyExplicitOver| *5))
       (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| (|Fraction| *5)) #2#))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *5))))))
       (|isDomain| *1 (|LinearDependence| *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Vector| *5))
   (|ofCategory| *5 (|LinearlyExplicitOver| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *4))
   (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *5))
       (|ofCategory| *5 (|LinearlyExplicitOver| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *2)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *2 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| *2)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *2 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5)) (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|Fraction| *6))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5))
       (|isDomain| *4 (|List| (|LaurentPolynomial| *5 *6)))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|LaurentPolynomial| *5 *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *2))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |ratpart| *4) (|:| |coeffs| (|Vector| *4)))))
   (|ofCategory| *4 (|Field|))
   (|isDomain| *2
               (|Record|
                (|:| |particular|
                     (|Union|
                      (|Record| (|:| |ratpart| *4)
                                (|:| |coeffs| (|Vector| *4)))
                      "failed"))
                (|:| |basis|
                     (|List|
                      (|Record| (|:| |ratpart| *4)
                                (|:| |coeffs| (|Vector| *4)))))))
   (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Equation| (|OnePointCompletion| *3)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|OnePointCompletion| *3))
   (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Equation| (|OnePointCompletion| (|Polynomial| *5))))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|Library|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|KeyedAccessFile| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *2 *2)
  (AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *3 (|OrderedVariableList| *4)) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *5 *6))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *3 *4)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|LinGroebnerPackage| *3 *4))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|isDomain| *1 (|LinGroebnerPackage| *5 *6))
   (|ofCategory| *6 (|GcdDomain|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|isDomain| *1 (|LinGroebnerPackage| *5 *6))
   (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |glbase|
                         (|List| (|DistributedMultivariatePolynomial| *4 *5)))
                    (|:| |glval| (|List| (|Integer|)))))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2
               (|Record|
                (|:| |gblist|
                     (|List| (|DistributedMultivariatePolynomial| *4 *5)))
                (|:| |gvlist| (|List| (|Integer|)))))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgebraicFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|CombinatorialFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *5))
       (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *5 (|KernelCategory| %))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ExpressionSpace2&| *4 *5))
       (|ofCategory| *4 (|ExpressionSpace2| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *6 (|KernelCategory| %)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionSpace2&| *4 *5 *6))
       (|ofCategory| *4 (|FunctionSpace2| *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LiouvillianFunction| *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|SquareFreeRegularTriangularSet| *5
                                                  (|IndexedExponents|
                                                   (|OrderedVariableList| *6))
                                                  (|OrderedVariableList| *6)
                                                  (|NewSparseMultivariatePolynomial|
                                                   *5
                                                   (|OrderedVariableList|
                                                    *6)))))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|List| (|Polynomial| *3)))
   (|ofCategory| *3 (|GcdDomain|)) (|isDomain| *1 (|FGLMIfCanPackage| *3 *4))
   (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *3
                                                   (|OrderedVariableList|
                                                    *4))))
   (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|LexTriangularPackage| *3 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FGLMIfCanPackage| *4 *5))
       (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *4
                                                   (|OrderedVariableList|
                                                    *5))))
   (|ofCategory| *4 (|GcdDomain|)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LexTriangularPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LiePolynomial| *4 *5)))
       (|isDomain| *1 (|LieExponentials| *4 *5 *6))
       (|ofCategory| *5
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *6 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |k| (|LyndonWord| *3)) (|:| |c| *4))))
   (|isDomain| *1 (|LieExponentials| *3 *4 *5))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Module| (|Fraction| (|Integer|)))))
   (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *4)))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *6)
  (|partial| AND (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *3)))
   (|isDomain| *5
               (|Record| (|:| |contp| *3)
                         (|:| |factors|
                              (|List|
                               (|Record| (|:| |irr| *10)
                                         (|:| |pow|
                                              (|NonNegativeInteger|)))))))
   (|isDomain| *6 (|List| *3)) (|isDomain| *7 (|List| *8))
   (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *10 (|PolynomialCategory| *3 *9 *8))
   (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |polfac| (|List| *10)) (|:| |correct| *3)
                         (|:| |corrfact|
                              (|List| (|SparseUnivariatePolynomial| *3)))))
   (|isDomain| *1 (|LeadingCoefDetermination| *8 *9 *3 *10))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|List| *3))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LeadingCoefDetermination| *6 *7 *3 *8))
       (|ofCategory| *8 (|PolynomialCategory| *3 *7 *6))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|LazardSetSolvingPackage| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *2
                     (|SquareFreeRegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| |const| (|Record| (|:| |val| (|Symbol|))))
                        (|:| |var| (|Record| (|:| |str| (|String|))))))
   (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|CoDcpo| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| |const| (|Record| (|:| |val| (|Symbol|))))
                        (|:| |var| (|Record| (|:| |str| (|String|))))))
   (|isDomain| *1 (|LatticeJoinOfMeets|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|LaplaceTransform| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *1)))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Equation| *1))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1 *1 *1)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|Lambda| *4)) (|ofCategory| *4 (|VarCat|))))) 
(((*1 *2 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4
                 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *5)))
   (|isDomain| *1 (|Kovacic| *4 *5))))
 ((*1 *2 *3 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| *6))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *6)))
   (|isDomain| *1 (|Kovacic| *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))
   (|ofCategory| *2 (|Comparable|))
   (|isDomain| *1 (|KernelFunctions2| *2 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Kernel| *4)) (|isDomain| *1 (|KernelFunctions2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|Comparable|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|TranscendentalFunctionCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|KernelCategory| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|KernelCategory| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *1 (|KernelCategory| *5))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|KernelCategory| *3))
   (|ofCategory| *3 (|Comparable|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|JetVectorField| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *4 *5))
                             (|:| IC (|List| *5))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|KernelCategory| *1))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputFormatterCategory|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FormattedOutput|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Type|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JFriCASSupport|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Type|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JFriCASSupport|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|isDomain| *3 (|List| (|OrderedVariableList| *4)))
   (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Rank| (|NonNegativeInteger|))
                         (|:| |NumMultVar| (|NonNegativeInteger|))
                         (|:| |Betas| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
   (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |Rank| (|NonNegativeInteger|))
                             (|:| |NumMultVar| (|NonNegativeInteger|))
                             (|:| |Betas| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|List| (|List| *5)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *5 *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *1))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|SparseEchelonMatrix| *3 *4)))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace2| *2 *3))
       (|ofCategory| *3 (|KernelCategory| *1))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleBaseFunctionCategory| *2))))) 
(((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *4 *5))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|SparseEchelonMatrix| *6 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *6))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |DSys| (|List| *1))
                             (|:| |JVars| (|List| (|List| *6)))))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|Record| (|:| |DPhi| *1) (|:| |JVars| (|List| *5))))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
   (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *2 *3 *4 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |Sys| (|List| *1))
                             (|:| JM (|SparseEchelonMatrix| *5 *1))
                             (|:| |Depend|
                                  (|Union| "failed"
                                           (|List|
                                            (|List|
                                             (|NonNegativeInteger|)))))))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Expression| (|Integer|)) *3))
   (|isDomain| *1 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|PositiveInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|PositiveInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|List| (|PositiveInteger|))))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|List| (|PositiveInteger|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|JetBundleCategory|))
   (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OneDimensionalArray| *4))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|IndexedAggregate| *4 *3)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *4 (|List| (|Complex| *6)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Complex| *6))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *5 *6 *7))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Complex| *5))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Complex| *5))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *3))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *3 *2))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *2 *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
   (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *6))))
       (|isDomain| *4 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *6))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Algebra| *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1
                   (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7
                                                                      *8 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *4 (|Permutation| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *4 (|List| (|Permutation| (|Integer|))))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Expression| *5))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|IntegrationResultToFunction| *4 *2))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Expression| *4))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerRoots| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerRoots| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRoots| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerRoots| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *1 (|IntegerRoots| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |base| *3)
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|isDomain| *1 (|IntegerRoots| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerRoots| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |scalar| (|Fraction| (|Integer|)))
                          (|:| |coeff| (|SparseUnivariatePolynomial| *2))
                          (|:| |logand| (|SparseUnivariatePolynomial| *2)))))
   (|isDomain| *4 (|List| (|Record| (|:| |integrand| *2) (|:| |intvar| *2))))
   (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|IntegrationResult| *2))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |scalar| (|Fraction| (|Integer|)))
                          (|:| |coeff| (|SparseUnivariatePolynomial| *3))
                          (|:| |logand| (|SparseUnivariatePolynomial| *3)))))
   (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |integrand| *3) (|:| |intvar| *3))))
   (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegrationResult| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InternalPrintPackage|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|InnerPrimeField| *2))
       (|ofType| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|Comparable|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *1 (|IndexedProductCategory| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Record| (|:| |k| *4) (|:| |c| *3)))))) 
(((*1 *2 *2 *3 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|InverseLaplaceTransform| *4 *2))
   (|ofCategory| *2
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)
                         (|SpecialFunctionCategory|)
                         (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |polypart| *3)))
       (|isDomain| *1 (|TranscendentalIntegration| *5 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |ir| (|IntegrationResult| (|Fraction| *6)))
                             (|:| |specpart| (|Fraction| *6))
                             (|:| |polypart| *6)))
       (|isDomain| *1 (|TranscendentalIntegration| *5 *6))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Fraction| *9)) (|isDomain| *5 (|Mapping| *4 *4))
       (|isDomain| *6 (|Mapping| *9 *9))
       (|isDomain| *7
                   (|Mapping|
                    (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4))
                             "failed")
                    *4))
       (|isDomain| *8 (|Mapping| (|IntegrationResult| *4) *4))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *9)))
                    (|:| |a0| (|IntegrationResult| *4))))
       (|isDomain| *1 (|TranscendentalIntegration| *4 *9))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |answer| (|Fraction| *8))
                              (|:| |logpart| (|Fraction| *8))
                              (|:| |ir| (|IntegrationResult| (|Fraction| *8))))
                    (|Fraction| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Record| (|:| |ans| *7) (|:| |right| *7)
                              (|:| |primpart| *7) (|:| |sol?| (|Boolean|)))
                    (|Integer|) *7))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *3 (|Fraction| *8))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *8)))
                    (|:| |a0| *7)))
       (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |answer| (|Fraction| *8))
                              (|:| |logpart| (|Fraction| *8))
                              (|:| |ir| (|IntegrationResult| (|Fraction| *8))))
                    (|Fraction| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Union|
                     (|Record| (|:| |ratpart| *7) (|:| |coeff| *7)
                               (|:| |prim| *7))
                     "failed")
                    *7 (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *3 (|Fraction| *8))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *8)))
                    (|:| |a0| *7)))
       (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *2))
       (|ofCategory| *2 (|ElementaryFunctionCategory|))
       (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *2 (|List| (|Kernel| *6)))
       (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Kernel| *6))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Kernel| *6)) (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *5))) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Kernel| *5)) (|isDomain| *1 (|IntegrationTools| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Kernel| *5))) (|isDomain| *3 (|Symbol|))
       (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *5))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
   (|isDomain| *3 (|Symbol|))
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|RationalFunctionIntegration| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegrationAux| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionIntegration| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|IntegerRetractions| *3))
   (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|RationalIntegration| *3 *4))))) 
(((*1 *2 *2 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|isDomain| *4 (|OrderedCompletion| *2))
   (|ofCategory| *2 (|SpecialFunctionCategory|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                             (|GcdDomain|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Record| (|:| |const| *3) (|:| |nconst| *3)))
       (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *9 *9))
       (|isDomain| *4 (|Mapping| (|Factored| *9) *9))
       (|isDomain| *5
                   (|Mapping| (|List| (|Vector| (|Fraction| (|Integer|))))
                              (|Matrix| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| (|Fraction| *9)))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| *9)))
       (|isDomain| *7 (|List| (|Fraction| *9))) (|ofCategory| *8 (|Field|))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *8))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| (|Fraction| *9)))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Kernel| *7)))
       (|isDomain| *5 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| *7))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Kernel| *7)))
       (|isDomain| *5 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *7)
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricIntegration| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Kernel| *3)))
       (|isDomain| *6 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))
                          #1="failed"))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))))
       (|isDomain| *1 (|ParametricIntegration| *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))
                          #1#))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))))
       (|isDomain| *1 (|ParametricIntegration| *6 *3))))) 
(((*1 *2 *3 *4 *5 *6 *7 *3)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7 (|List| (|Kernel| *3))) (|isDomain| *5 (|Kernel| *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *8)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |ratpart| *3) (|:| |coeff| *3) (|:| |prim| *3)))
   (|isDomain| *1 (|ParametricIntegration| *8 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| (|List| (|Vector| (|Fraction| (|Integer|))))
                              (|Matrix| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *6))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| (|Fraction| *7)))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping|
                (|List|
                 (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6))))
                (|List| *6)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *6)))
   (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6)))))
   (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping|
                (|List|
                 (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6))))
                (|List| *7)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *6)))
   (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6)))))
   (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *7)
                               (|:| |coeffs| (|Vector| *7))))
                    (|Integer|) (|List| *7)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| (|Fraction| *8))
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *7)
                               (|:| |coeffs| (|Vector| *7))))
                    (|List| *7)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| (|Fraction| *8))
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *5 (|Kernel| *4)) (|isDomain| *6 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *6)
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| *6))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *5 *6 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|Kernel| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))
                    (|:| |basis| (|List| *3))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2 *2 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 "failed") *2 *2 (|Symbol|)))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|PureAlgebraicIntegration| *5 *2 *6))
   (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|PureAlgebraicIntegration| *5 *3 *6))
       (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerLocalizedAtPrime| *3))
       (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3)))
       (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3 *4 *3)
  (AND (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3)))
       (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |answer| (|Fraction| *6))
                             (|:| |logpart| (|Fraction| *6))
                             (|:| |specpart| (|Fraction| *6))
                             (|:| |polypart| *6)))
       (|isDomain| *1 (|TranscendentalHermiteIntegration| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| *5)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |answer| (|Fraction| *5))
                             (|:| |logpart| (|Fraction| *5))
                             (|:| |specpart| (|Fraction| *5))
                             (|:| |polypart| *5)))
       (|isDomain| *1 (|TranscendentalHermiteIntegration| *6 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|CRApackage| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7)
                              (|:| |basisInv| (|Matrix| *7)))))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7)
                             (|:| |basisInv| (|Matrix| *7))))
       (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *6 *7 *8))))
 ((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *1 (|GenerateEllipticIntegrals| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|Field|)
                             (|MonogenicAlgebra| (|Fraction| *3) *4)))))) 
(((*1 *2 *3 *4 *5 *5)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|isDomain| *2
               (|Record| (|:| |result1| (|Fraction| *4)) (|:| |result2| *3)))
   (|isDomain| *1 (|GenerateEllipticIntegrals| *3 *4 *6 *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|MonogenicAlgebra| (|Fraction| *4) *6)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |f_form| *7) (|:| |e_form| *7)
                              (|:| |f_var| *4) (|:| |f_pol| *5))))
       (|isDomain| *1 (|GenerateEllipticIntegrals| *4 *5 *6 *7))
       (|ofCategory| *7
                     (|Join| (|Field|)
                             (|MonogenicAlgebra| (|Fraction| *5) *6)))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6)
  (AND (|isDomain| *5 (|Kernel| *4))
       (|isDomain| *6 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1="failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4 *5 *5 *5 *4 *6 *4)
  (AND (|isDomain| *5 (|Kernel| *4))
       (|isDomain| *6 (|Fraction| (|SparseUnivariatePolynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1#))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|IntegrationResult| *5)) (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|GenusZeroIntegration| *4 *5 *6))
       (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *2 *2 *3 *3 *4 *2 *5)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 #1="failed") *2 *2 (|Symbol|)))
   (|isDomain| *5 (|SparseUnivariatePolynomial| *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7))
   (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *2 *2 *3 *3 *4 *3 *2 *5 *2)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 #1#) *2 *2 (|Symbol|)))
   (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7))
   (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4 *3 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *3 *4 *4 *4 *3 *5 *3)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerFactorizationPackage| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|ElementaryIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *3)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeff| *3)))
   (|isDomain| *1 (|ElementaryIntegration| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| (|List| *3)))
   (|isDomain| *1 (|DenominatorIntegration| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|LiouvillianFunctionCategory|)
                         (|SpecialFunctionCategory|) (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *4 (|Kernel| *7)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|) (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |logpart|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |ir|
                         (|IntegrationResult|
                          (|Fraction| (|SparseUnivariatePolynomial| *7))))))
       (|isDomain| *1 (|DenominatorIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *4 (|Kernel| *7)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|) (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |logpart|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |ir|
                         (|IntegrationResult|
                          (|Fraction| (|SparseUnivariatePolynomial| *7))))))
       (|isDomain| *1 (|DenominatorIntegration| *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Kernel| *8))
       (|isDomain| *4
                   (|Mapping| (|SparseUnivariatePolynomial| *8)
                              (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *8)) (|Matrix| *8)))
       (|isDomain| *6 (|List| *8))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *8)
                              (|:| |coeffs| (|Vector| *8)))))
       (|isDomain| *1 (|AlgebraicIntegration| *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *5 (|List| *10))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *10 (|FunctionFieldCategory| *7 *8 *9))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *10)
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|AlgebraicIntegrate2| *6 *7 *8 *9 *10))))) 
(((*1 *2 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Kernel| *10))
       (|isDomain| *4
                   (|Mapping| (|SparseUnivariatePolynomial| *10)
                              (|SparseUnivariatePolynomial| *10)))
       (|isDomain| *5
                   (|Mapping|
                    (|List|
                     (|Record|
                      (|:| |ratpart|
                           (|Fraction| (|SparseUnivariatePolynomial| *10)))
                      (|:| |coeffs| (|Vector| *10))))
                    (|List| (|Fraction| (|SparseUnivariatePolynomial| *10)))))
       (|isDomain| *6
                   (|Mapping|
                    (|List|
                     (|Record|
                      (|:| |ratpart|
                           (|Fraction| (|SparseUnivariatePolynomial| *10)))
                      (|:| |coeffs| (|Vector| *10))))
                    (|Fraction| (|SparseUnivariatePolynomial| *10))
                    (|List| (|Fraction| (|SparseUnivariatePolynomial| *10)))))
       (|isDomain| *7 (|Mapping| (|List| (|Vector| *10)) (|Matrix| *10)))
       (|isDomain| *8 (|List| *10))
       (|ofCategory| *10
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *9)))
       (|ofCategory| *9 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *10)
                              (|:| |coeffs| (|Vector| *10)))))
       (|isDomain| *1 (|AlgebraicIntegration| *9 *10))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *10 *10))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| (|Fraction| *10))
                               (|:| |coeffs| (|Vector| *9))))
                    (|List| (|Fraction| *10))))
       (|isDomain| *5
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| (|Fraction| *10))
                               (|:| |coeffs| (|Vector| *9))))
                    (|Fraction| *10) (|List| (|Fraction| *10))))
       (|isDomain| *6 (|Mapping| (|List| (|Vector| *9)) (|Matrix| *9)))
       (|isDomain| *7 (|List| *12))
       (|ofCategory| *9
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *8)))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *12 (|FunctionFieldCategory| *9 *10 *11))
       (|ofCategory| *8
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| (|Fraction| *10)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *12)
                              (|:| |coeffs| (|Vector| *9)))))
       (|isDomain| *1 (|AlgebraicIntegrate2| *8 *9 *10 *11 *12))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Mapping| *7 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|isDomain| *2
                   (|Record| (|:| |result1| (|IntegrationResult| *3))
                             (|:| |result2| *4)))
       (|isDomain| *1 (|AlgebraicIntegrate| *6 *4 *7 *8 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *7 *8))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5 (|Mapping| (|IntegrationResult| *7) *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegrate| *6 *7 *8 *9 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *7 *8 *9))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5
                   (|Mapping| (|SparseUnivariatePolynomial| *3)
                              (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *6 (|Mapping| (|IntegrationResult| *3) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegration| *7 *3))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Integer|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *3 *2 *4)
  (|partial| AND
   (|isDomain| *4 (|Mapping| (|Union| (|Integer|) #1="failed") *5))
   (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *5 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4 *2 *5)
  (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) #1#) *4))
   (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) #1#) *4))
   (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|GenExEuclid| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|GeneralHenselPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofType| *4 *3)
       (|ofType| *5 (|Mapping| *3 *3 (|NonNegativeInteger|)))
       (|isDomain| *1 (|InnerModularGcd| *3 *2 *4 *5))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|InnerModularGcd| *4 *2 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|)) (|ofType| *5 *4)
       (|ofType| *6 (|Mapping| *4 *4 (|NonNegativeInteger|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *6))))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *7 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *6 *7 *5))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *4 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|InputForm|))
       (|isDomain| *1 (|InputFormFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|InputForm|)))
       (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|FormatterCategory&| *3))
   (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|InputForm|))) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|DirectedGraph| *1))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|InputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|InputForm|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|InputForm|)))
       (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6))
       (|isDomain| *5
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *6))
                              (|SparseUnivariatePolynomial| *6)))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| *7) (|:| |outmult| (|Integer|))
                              (|:| |outvect| (|List| (|Matrix| *7))))))
       (|isDomain| *1 (|InnerNumericEigenPackage| *6 *7 *4))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericEigenPackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNumericEigenPackage| *4 *5 *6))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|isDomain| *1 (|IncrementingMaps| *3))
       (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|isDomain| *1 (|IncrementingMaps| *3))
       (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|OneDimensionalArray| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|SingleInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SingleInteger|))
       (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4 *4 *5 *6 *5 *6)
  (AND (|isDomain| *4 (|List| (|Integer|)))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|isDomain| *6 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *4 *5)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *8 *9)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4
                   (|List|
                    (|PrimitiveArray|
                     (|Fraction| (|Polynomial| (|Integer|))))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|isDomain| *6 (|NonNegativeInteger|)) (|isDomain| *8 (|Symbol|))
       (|isDomain| *9
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *7 (|U32Vector|))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |defects| (|Vector| (|Integer|)))
                              (|:| |cinds| (|Vector| (|Integer|)))
                              (|:| |rowlen| (|Integer|))
                              (|:| |offsetdata| (|Vector| (|Integer|)))
                              (|:| |expdata| (|SortedExponentVector|))
                              (|:| |coeffdata| (|PrimitiveArray| (|Integer|))))
                    "no_solution"))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|U32Vector|))
       (|isDomain| *7 (|Integer|)) (|isDomain| *8 (|Symbol|))
       (|isDomain| *2
                   (|Union|
                    (|Record|
                     (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                     (|:| |defects| (|Vector| (|Integer|)))
                     (|:| |cinds| (|Vector| (|Integer|))))
                    "no_solution"))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|DivisionRing|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|DivisionRing|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|DivisionRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|ILogic|))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ILogic|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|ILogic|))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ILogic|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|FlexibleArray| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofType| *4 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FlexibleArray| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FlexibleArray| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FlexibleArray| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FlexibleArray| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|IndexedFlexibleArray| *2 *3))
       (|ofCategory| *2 (|Type|)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| (|Fraction| (|Polynomial| *4))
                                   (|SuchThat| (|Symbol|) (|Polynomial| *4))))
                     (|:| |geneigvec|
                          (|List|
                           (|Matrix| (|Fraction| (|Polynomial| *4))))))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                     (|:| |geneigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *5)))))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *4 (|SparseUnivariatePolynomial| *4)))
                     (|:| |geneigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *4)))))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| (|Fraction| (|Polynomial| *4))
                                   (|SuchThat| (|Symbol|) (|Polynomial| *4))))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Matrix| (|Fraction| (|Polynomial| *4))))))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *5)))))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *4 (|SparseUnivariatePolynomial| *4)))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *4)))))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Union| (|Fraction| (|Polynomial| *4))
                             (|SuchThat| (|Symbol|) (|Polynomial| *4)))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Union| *5 (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|List| (|Union| *4 (|SparseUnivariatePolynomial| *4))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND
   (|isDomain| *3
               (|Union| (|Fraction| (|Polynomial| *6))
                        (|SuchThat| (|Symbol|) (|Polynomial| *6))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *6)))))
   (|isDomain| *1 (|EigenPackage| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record|
                (|:| |eigval|
                     (|Union| (|Fraction| (|Polynomial| *5))
                              (|SuchThat| (|Symbol|) (|Polynomial| *5))))
                (|:| |eigmult| (|NonNegativeInteger|))
                (|:| |eigvec|
                     (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *1 (|EigenPackage| *5))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|Union| *6 (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *4 (|Matrix| *6)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|InnerEigenPackage| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record|
                (|:| |eigval| (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                (|:| |eigmult| (|NonNegativeInteger|))
                (|:| |eigvec|
                     (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))))
   (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|InnerEigenPackage| *5))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Union| (|Fraction| (|Polynomial| *5))
                        (|SuchThat| (|Symbol|) (|Polynomial| *5))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *1 (|EigenPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Union| *5 (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|PolynomialIdeal| (|Fraction| (|Integer|))
                                   (|DirectProduct| (|#| *4)
                                                    (|NonNegativeInteger|))
                                   (|OrderedVariableList| *4)
                                   (|DistributedMultivariatePolynomial| *4
                                                                        (|Fraction|
                                                                         (|Integer|))))))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *3)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *3)
                                  (|DistributedMultivariatePolynomial| *3
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|IdealDecompositionPackage| *3))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |mval| (|Matrix| *4))
                             (|:| |invmval| (|Matrix| *4))
                             (|:| |genIdeal| (|PolynomialIdeal| *4 *5 *6 *7))))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mval| (|Matrix| *3))
                         (|:| |invmval| (|Matrix| *3))
                         (|:| |genIdeal| (|PolynomialIdeal| *3 *4 *5 *6))))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
   (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6))
       (|ofCategory| *6 (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *6 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Polynomial| *4))
                               (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Database| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| (*2 %))
                              (SIGNATURE |fullDisplay| (*2 %)))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| (*2 %))
                              (SIGNATURE |fullDisplay| (*2 %)))))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *7 (|Ring|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *4 *7))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *8))
   (|isDomain| *4 (|Matrix| (|SparseUnivariatePolynomial| *8)))
   (|ofCategory| *5 (|Ring|)) (|ofCategory| *8 (|Ring|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|Matrix| *6))
   (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *7 *8))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *7))
   (|isDomain| *4 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *7 (|Ring|))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *7))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *7 (|Ring|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *7 (|Ring|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *4 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| %) %)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *3 *3 *2 *4)
  (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6)
                         (|:| |basisInv| (|Matrix| *6))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6)
                          (|:| |basisInv| (|Matrix| *6)))))
   (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *5 *6 *7))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |flag| (|Union| "nil" "sqfr" "irred" "prime"))
                          (|:| |factor| *3)
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *3 *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|HopfAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|Module| *2))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|))) (|isDomain| *1 (|Homology|))))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Homology|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|HeuGcd| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|Heap| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|DistributedMultivariatePolynomial| *3 *4))
       (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|ofType| *3 (|List| (|Symbol|)))
       (|isDomain| *1 (|GeneralDistributedMultivariatePolynomial| *3 *4 *5))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|HomogeneousDistributedMultivariatePolynomial| *3 *4))
       (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|HallBasis|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|HallBasis|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|HashState|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Hashable|)) (|isDomain| *2 (|SingleInteger|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|Hashable|)) (|isDomain| *2 (|HashState|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|HankelPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *5 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *5)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                     (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|AlgebraicNumber|)))
                           (|UnivariateFormalPowerSeries|
                            (|AlgebraicNumber|))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|AlgebraicNumber|) (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|AlgebraicNumber|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|AlgebraicNumber|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *4 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *4)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Integer|))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Integer|))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Integer|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Integer|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Polynomial| *4))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Polynomial| *4))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Polynomial| *4))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Polynomial| *4))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping|
                (|Record|
                 (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                 (|:| |guessStream|
                      (|Mapping|
                       (|Stream|
                        (|UnivariateFormalPowerSeries|
                         (|Fraction| (|Polynomial| (|Integer|)))))
                       (|UnivariateFormalPowerSeries|
                        (|Fraction| (|Polynomial| (|Integer|))))))
                 (|:| |guessModGen|
                      (|Mapping|
                       (|Mapping| (|Vector| (|U32Vector|))
                                  (|List| (|U32Vector|)) (|Integer|)
                                  (|Integer|))
                       (|NonNegativeInteger|)))
                 (|:| |testGen|
                      (|Mapping|
                       (|Mapping|
                        (|Vector|
                         (|UnivariateFormalPowerSeries|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))))
                        (|UnivariateFormalPowerSeries|
                         (|SparseMultivariatePolynomial|
                          (|Fraction| (|Polynomial| (|Integer|)))
                          (|NonNegativeInteger|))))
                       (|List| (|PositiveInteger|))))
                 (|:| |exprStream|
                      (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                 (|Expression| (|Integer|)) (|Symbol|)))
                 (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                 (|:| A
                      (|Mapping| (|Polynomial| (|Integer|))
                                 (|NonNegativeInteger|) (|NonNegativeInteger|)
                                 (|SparseUnivariatePolynomial|
                                  (|Polynomial| (|Integer|)))))
                 (|:| AF
                      (|Mapping|
                       (|SparseMultivariatePolynomial|
                        (|Fraction| (|Polynomial| (|Integer|)))
                        (|NonNegativeInteger|))
                       (|NonNegativeInteger|) (|NonNegativeInteger|)
                       (|UnivariateFormalPowerSeries|
                        (|SparseMultivariatePolynomial|
                         (|Fraction| (|Polynomial| (|Integer|)))
                         (|NonNegativeInteger|)))))
                 (|:| AX
                      (|Mapping| (|Expression| (|Integer|))
                                 (|NonNegativeInteger|) (|Symbol|)
                                 (|Expression| (|Integer|))))
                 (|:| C
                      (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|))))
                (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *5 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *5)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                     (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|AlgebraicNumber|)))
                           (|UnivariateFormalPowerSeries|
                            (|AlgebraicNumber|))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|AlgebraicNumber|) (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|AlgebraicNumber|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|AlgebraicNumber|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *4 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *4)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Integer|))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Integer|))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Integer|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Integer|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Polynomial| *4))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Polynomial| *4))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Polynomial| *4))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Polynomial| *4))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping|
                (|Record|
                 (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                 (|:| |guessStream|
                      (|Mapping|
                       (|Stream|
                        (|UnivariateFormalPowerSeries|
                         (|Fraction| (|Polynomial| (|Integer|)))))
                       (|UnivariateFormalPowerSeries|
                        (|Fraction| (|Polynomial| (|Integer|))))))
                 (|:| |guessModGen|
                      (|Mapping|
                       (|Mapping| (|Vector| (|U32Vector|))
                                  (|List| (|U32Vector|)) (|Integer|)
                                  (|Integer|))
                       (|NonNegativeInteger|)))
                 (|:| |testGen|
                      (|Mapping|
                       (|Mapping|
                        (|Vector|
                         (|UnivariateFormalPowerSeries|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))))
                        (|UnivariateFormalPowerSeries|
                         (|SparseMultivariatePolynomial|
                          (|Fraction| (|Polynomial| (|Integer|)))
                          (|NonNegativeInteger|))))
                       (|List| (|PositiveInteger|))))
                 (|:| |exprStream|
                      (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                 (|Expression| (|Integer|)) (|Symbol|)))
                 (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                 (|:| A
                      (|Mapping| (|Polynomial| (|Integer|))
                                 (|NonNegativeInteger|) (|NonNegativeInteger|)
                                 (|SparseUnivariatePolynomial|
                                  (|Polynomial| (|Integer|)))))
                 (|:| AF
                      (|Mapping|
                       (|SparseMultivariatePolynomial|
                        (|Fraction| (|Polynomial| (|Integer|)))
                        (|NonNegativeInteger|))
                       (|NonNegativeInteger|) (|NonNegativeInteger|)
                       (|UnivariateFormalPowerSeries|
                        (|SparseMultivariatePolynomial|
                         (|Fraction| (|Polynomial| (|Integer|)))
                         (|NonNegativeInteger|)))))
                 (|:| AX
                      (|Mapping| (|Expression| (|Integer|))
                                 (|NonNegativeInteger|) (|Symbol|)
                                 (|Expression| (|Integer|))))
                 (|:| C
                      (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|))))
                (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *5))
                          (|UnivariateFormalPowerSeries| *5)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *5
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *5
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *7) *7 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *6 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *6)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *5
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *5
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *7 (|NonNegativeInteger|) (|Symbol|) *7))
                    (|:| C (|Mapping| (|List| *6) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *5))
                          (|UnivariateFormalPowerSeries| *5)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *5
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *5
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *5
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *5
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *5))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *5)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *5))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *5))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *5) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *5))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *5))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *5))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *5))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|GuessOption|)))
   (|isDomain| *2
               (|Record| (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                         (|:| |guessStream|
                              (|Mapping|
                               (|Stream|
                                (|UnivariateFormalPowerSeries|
                                 (|Fraction| (|Polynomial| (|Integer|)))))
                               (|UnivariateFormalPowerSeries|
                                (|Fraction| (|Polynomial| (|Integer|))))))
                         (|:| |guessModGen|
                              (|Mapping|
                               (|Mapping| (|Vector| (|U32Vector|))
                                          (|List| (|U32Vector|)) (|Integer|)
                                          (|Integer|))
                               (|NonNegativeInteger|)))
                         (|:| |testGen|
                              (|Mapping|
                               (|Mapping|
                                (|Vector|
                                 (|UnivariateFormalPowerSeries|
                                  (|SparseMultivariatePolynomial|
                                   (|Fraction| (|Polynomial| (|Integer|)))
                                   (|NonNegativeInteger|))))
                                (|UnivariateFormalPowerSeries|
                                 (|SparseMultivariatePolynomial|
                                  (|Fraction| (|Polynomial| (|Integer|)))
                                  (|NonNegativeInteger|))))
                               (|List| (|PositiveInteger|))))
                         (|:| |exprStream|
                              (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                         (|Expression| (|Integer|))
                                         (|Symbol|)))
                         (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                         (|:| A
                              (|Mapping| (|Polynomial| (|Integer|))
                                         (|NonNegativeInteger|)
                                         (|NonNegativeInteger|)
                                         (|SparseUnivariatePolynomial|
                                          (|Polynomial| (|Integer|)))))
                         (|:| AF
                              (|Mapping|
                               (|SparseMultivariatePolynomial|
                                (|Fraction| (|Polynomial| (|Integer|)))
                                (|NonNegativeInteger|))
                               (|NonNegativeInteger|) (|NonNegativeInteger|)
                               (|UnivariateFormalPowerSeries|
                                (|SparseMultivariatePolynomial|
                                 (|Fraction| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|)))))
                         (|:| AX
                              (|Mapping| (|Expression| (|Integer|))
                                         (|NonNegativeInteger|) (|Symbol|)
                                         (|Expression| (|Integer|))))
                         (|:| C
                              (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                         (|NonNegativeInteger|)))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4)))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4)))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|GuessOption|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| *8) (|List| *6) (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6))
   (|ofCategory| *6 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
   (|ofType| *9 (|Mapping| *6 *8)) (|ofType| *10 (|Mapping| *8 *6))
   (|isDomain| *2 (|List| *8)) (|isDomain| *1 (|Guess| *6 *7 *8 *9 *10))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8
                 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                         (|RetractableTo| (|Symbol|))
                         (|RetractableTo| (|Integer|))
                         (|CombinatorialOpsCategory|)
                         (|PartialDifferentialRing| (|Symbol|))
                         (CATEGORY |domain| (SIGNATURE * (% % %))
                          (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                          (SIGNATURE |numerator| (% %))
                          (SIGNATURE |denominator| (% %))
                          (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| *9) (|List| *7) (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *7 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
   (|ofType| *10 (|Mapping| *7 *9)) (|ofType| *11 (|Mapping| *9 *7))
   (|isDomain| *2 (|List| *9)) (|isDomain| *1 (|Guess| *7 *8 *9 *10 *11))
   (|ofCategory| *8 (|GcdDomain|))
   (|ofCategory| *9
                 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                         (|RetractableTo| (|Symbol|))
                         (|RetractableTo| (|Integer|))
                         (|CombinatorialOpsCategory|)
                         (|PartialDifferentialRing| (|Symbol|))
                         (CATEGORY |domain| (SIGNATURE * (% % %))
                          (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                          (SIGNATURE |numerator| (% %))
                          (SIGNATURE |denominator| (% %))
                          (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|AlgebraicNumber|))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|AlgebraicNumber|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|AlgebraicNumber|))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|AlgebraicNumber|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *6)
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6))
   (|ofCategory| *6
                 (|Join| (|FiniteFieldCategory|)
                         (|ConvertibleTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessFinite| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *7)
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *7
                 (|Join| (|FiniteFieldCategory|)
                         (|ConvertibleTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessFinite| *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Integer|)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Integer|)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| *6)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *6))))
   (|ofCategory| *6 (|Ring|))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomial| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| *7)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *7))))
   (|ofCategory| *7 (|Ring|))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomial| *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| (|Integer|))))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| (|Integer|))))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| (|Expression| (|Integer|))))
       (|isDomain| *2 (|Polynomial| *4))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessFiniteFunctions| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessFiniteFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))))) 
(((*1 *1) (|isDomain| *1 (|GroupPresentation|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|GroupPresentation|))))) 
(((*1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *4)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *1 (|DirectProductCategory| *3 *4))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))) 
(((*1 *2 *1 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| (|Integer|))))
   (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Boolean|))
   (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|isDomain| *4 (|List| (|OrderedVariableList| *5)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |dpolys|
                         (|List| (|DistributedMultivariatePolynomial| *5 *6)))
                    (|:| |coords| (|List| (|Integer|)))))
       (|isDomain| *1 (|GroebnerSolve| *5 *6 *7))
       (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *3 (|List| (|OrderedVariableList| *4)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerSolve| *4 *5 *6)) (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|isDomain| *4 (|List| (|OrderedVariableList| *5)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|DistributedMultivariatePolynomial| *5 *6))))
       (|isDomain| *1 (|GroebnerSolve| *5 *6 *7))
       (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *1) (|isDomain| *1 (|GraphImage|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|))) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|Vector| (|Vector| (|Integer|))))
       (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Vector| (|Integer|))))
       (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|FreeModuleCategory| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SemiRing|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Mapping| *3))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *5 *3))
   (|isDomain| *1 (|GosperSummationMethod| *5 *3 *6 *7 *2))
   (|ofCategory| *2
                 (|Join| (|RetractableTo| (|Fraction| (|Integer|))) (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                          (SIGNATURE |numer| (*7 %))
                          (SIGNATURE |denom| (*7 %)))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|DrawOptionFunctions1| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|GuessOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *2))
                   (|Record| (|:| |index| *5) (|:| |exponent| *2))))
       (|ofCategory| *2
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *2 (|OrderedVariableList| *3)))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5))
                   (|Record| (|:| |index| *2) (|:| |exponent| *5))))
       (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))) 
(((*1 *1 *2 *3 *4)
  (AND (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *4
                     (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *4))
                   (|Record| (|:| |index| *3) (|:| |exponent| *4))))
       (|isDomain| *1 (|GeneralModulePolynomial| *5 *2 *3 *4 *6 *7))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *4 (|OrderedVariableList| *5)))))) 
(((*1 *1 *2 *3 *1)
  (AND (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3
                     (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *3))
                   (|Record| (|:| |index| *5) (|:| |exponent| *3))))
       (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *3 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *3 (|OrderedVariableList| *4)))))) 
(((*1 *2 *3 *2 *4 *5)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *1 (|GeneralHenselPackage| *4 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *6 (|PositiveInteger|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *2 (|Record| (|:| |plist| (|List| *3)) (|:| |modulo| *5)))
       (|isDomain| *1 (|GeneralHenselPackage| *5 *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2 (|Stream| (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6)))
   (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *3)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *2 *4 *5))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Mapping| *5 *4 *4))
       (|ofCategory| *4 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GenExEuclid| *3 *5))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Vector| (|List| *3)))
   (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|GenExEuclid| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *5 (|List| *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|Vector| (|List| *6)))
   (|isDomain| *1 (|GenExEuclid| *4 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GenExEuclid| *5 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|String|))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1))))
   (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))
 ((*1 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record|
                (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
                (|:| |basis|
                     (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1))))
   (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))
 ((*1 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record|
                (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
                (|:| |basis|
                     (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Symbol|)))
       (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| (|Symbol|)))
       (|ofType| *7 (|Vector| (|Matrix| *4)))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| *2)) (|ofType| *7 (|Vector| (|Matrix| *4)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Symbol|)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| *2)) (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|GenericNonAssociativeAlgebra| *2 *3 *4 *5))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofType| *3 (|PositiveInteger|))
       (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|Vector| (|Matrix| *2)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *3)))))
 ((*1 *2)
  (AND (|isDomain| *2 (|List| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| (|Symbol|)))
       (|ofType| *7 (|Vector| (|Matrix| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Vector| *4))
                             (|:| |transform| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|GcdBasis| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Fraction| *4)))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Vector| *4))
                             (|:| |transform| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|GcdBasis| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|GcdBasis| *3))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |totdeg| (|NonNegativeInteger|)) (|:| |pol| *4)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *4
                 (|Join| (|FiniteAbelianMonoidRing| *6 *7)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |lcmfij| *7)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *4)
                         (|:| |polj| *4)))
   (|isDomain| *1 (|GroebnerInternalPackage| *6 *7 *4))))) 
(((*1 *2 *3 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                         (|:| |polj| *6)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|Record| (|:| |lcmfij| *6)
                             (|:| |totdeg| (|NonNegativeInteger|))
                             (|:| |poli| *4) (|:| |polj| *4)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *4))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|Record| (|:| |lcmfij| *6)
                             (|:| |totdeg| (|NonNegativeInteger|))
                             (|:| |poli| *4) (|:| |polj| *4)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5))))) 
(((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *4)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *5)
                          (|:| |polj| *5))))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5
                 (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *3 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |totdeg| (|NonNegativeInteger|))
                          (|:| |pol| *3))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *3
                 (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Record| (|:| |poly| *3) (|:| |mult| *5)))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *3))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *3)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *5)
                          (|:| |polj| *5))))
   (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5
                 (|Join| (|FiniteAbelianMonoidRing| *4 *3)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *4)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *5)
                          (|:| |polj| *5))))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5
                 (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *3 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *5)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *3)
                          (|:| |polj| *3))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *3
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *4 *3)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *4 *3)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                         (|:| |polj| *6)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *2))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|GaloisGroupUtilities| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *6))))) 
(((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4 *5)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4 *5 *6)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *2))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|Multiset| (|NonNegativeInteger|)))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Multiset| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *6
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Set| (|NonNegativeInteger|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |contp| (|Integer|))
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow|
                                                  (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *2
                   (|Record| (|:| |contp| (|Integer|))
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow|
                                                  (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Set| (|NonNegativeInteger|)))
       (|isDomain| *2
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |factors| (|List| *3))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |flag| (|Union| "nil" "sqfr" "irred" "prime"))
                          (|:| |factor| *2)
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|Factored| *2))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |contp| (|Integer|))
                         (|:| |factors|
                              (|List|
                               (|Record| (|:| |irr| *4)
                                         (|:| |pow|
                                              (|NonNegativeInteger|)))))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|Factored| *4))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Mapping| (|List| (|PrimitiveArray| (|PrimeField| *5))))))
   (|ofType| *5 (|PositiveInteger|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2 (|List| *6))
   (|isDomain| *1 (|GaloisGroupFactorizerSeparate| *5 *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranType|))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| *3)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FunctionSpaceReduce| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|FunctionSpaceReduce| *4 *3))
   (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceReduce| *5 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|FunctionalSpecialFunction| *4 *3))
   (|ofCategory| *3 (|FunctionSpace| *4))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|DoubleFloat|)))
       (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FunctionSpace2| *4 *5))
       (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *5 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *1 (|FunctionSpace2| *3 *4)) (|ofCategory| *3 (|Comparable|))
   (|ofCategory| *4 (|KernelCategory| *1))
   (|isDomain| *2 (|Record| (|:| |coef| (|Integer|)) (|:| |var| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace2| *4 *5))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *5 (|KernelCategory| *1))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|KernelCategory| *1))
       (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2)) (|ofCategory| *2 (|Finite|))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *5
                 (|Join| (|UnivariatePowerSeriesCategory| *2 *4) (|Field|)
                         (|PowerSeriesCategory| *2 *4
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *2))
   (|ofType| *9 (|Mapping| *2 *4))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *2 *4 *5 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *2 *4 (|SingletonAsOrderedSet|) *5
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Record| (|:| |pos_Check?| (|Boolean|))
                             (|:| |atan_Flag|
                                  (|Union| "complex" "real: two sides"
                                           "real: left side" "real: right side"
                                           "just do it"))
                             (|:| |coeff_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6)
                                           #1="none"))
                             (|:| |inv_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6) #1#))
                             (|:| |zero_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6) #1#))
                             (|:| |log_x_replace| (|Boolean|))
                             (|:| |log_x_val| *6)
                             (|:| |cache|
                                  (|List|
                                   (|Record| (|:| |ker| (|Kernel| *6))
                                             (|:| |ser|
                                                  (|Union| (|:| |%series| *8)
                                                           (|:| |%problem|
                                                                (|Record|
                                                                 (|:| |func|
                                                                      (|String|))
                                                                 (|:| |prob|
                                                                      (|String|)))))))))))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *6 *7) (|Field|)
                             (|PowerSeriesCategory| *6 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *6))
       (|ofType| *12 (|Mapping| *6 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *5 *6 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *6 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *6
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *6 *7 *2 *8 *9
                                                        *10))
   (|ofCategory| *7 (|PartialTranscendentalFunctions| *6))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *6
                                          *2))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *3 *2 *4 *5))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *4 (|Symbol|)) (|ofType| *5 *2)))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *5
                 (|Join| (|UnivariatePowerSeriesCategory| *2 *4) (|Field|)
                         (|PowerSeriesCategory| *2 *4
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *2))
   (|ofType| *9 (|Mapping| *2 *4))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *2 *4 *5 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *2 *4 (|SingletonAsOrderedSet|) *5
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *3 *4 *5 *4 *3)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| #1="complex" #2="real: two sides"
                            #3="real: left side" #4="real: right side"
                            #5="just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3 *6 *6 *6)
  (AND (|isDomain| *5 (|Union| #1# #2# #3# #4# #5#))
       (|isDomain| *6 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *7)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *8)))))
       (|ofCategory| *8 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *9
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *8) (|Field|)
                             (|PowerSeriesCategory| *3 *8
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *11 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *9)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *7 *3 *8 *9 *10 *11
                                                           *12 *13))
       (|ofCategory| *10 (|PartialTranscendentalFunctions| *9))
       (|ofCategory| *12
                     (|TaylorSeriesExpansion| *3 *8 (|SingletonAsOrderedSet|)
                                              *9 *11))
       (|ofType| *13 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| #6="complex" #7="real: two sides"
                            #8="real: left side" #9="real: right side"
                            #10="just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3 *6 *6 *6)
  (AND (|isDomain| *5 (|Union| #6# #7# #8# #9# #10#))
       (|isDomain| *6 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *8 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *9
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *8) (|Field|)
                             (|PowerSeriesCategory| *3 *8
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *11 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *13 (|Mapping| *3 *8))
       (|isDomain| *2
                   (|Union| (|:| |%series| *9)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *7 *3 *8 *9 *10 *11
                                                            *12 *13 *14))
       (|ofCategory| *10 (|PartialTranscendentalFunctions| *9))
       (|ofCategory| *12
                     (|TaylorSeriesExpansion| *3 *8 (|SingletonAsOrderedSet|)
                                              *9 *11))
       (|ofType| *14 (|Symbol|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union|
                    (|:| |%expansion| (|ExponentialExpansion| *5 *3 *6 *7))
                    (|:| |%problem|
                         (|Record| (|:| |func| (|String|))
                                   (|:| |prob| (|String|))))))
       (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *5 *3 *6 *7))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofType| *6 (|Symbol|)) (|ofType| *7 *3)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|FramedModule| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|RetractableTo| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6)) (|ofCategory| *6 (|FramedAlgebra| *4 *5))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofType| *7 *2)))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|EuclideanDomain|))
       (|ofCategory| *3 (|QuotientFieldCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Vector| *2))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|QuotientFieldCategory| *5))
       (|ofCategory| *2 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6)))
       (|isDomain| *1 (|FractionalIdeal| *5 *6 *7 *2))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedAlgebra&| *3 *4 *5))
       (|ofCategory| *3 (|FramedAlgebra| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|FiniteGroupPackage| *3))
       (|ofCategory| *3 (|Join| (|Group|) (|Finite|)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Factored| *3)))
       (|isDomain| *1 (|Fraction| *3))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Factored| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *6))
       (|isDomain| *1 (|FactoredFunctions2| *5 *6))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| (|Integer|)))))
   (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |gen| *3) (|:| |exp| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |factor| *3)
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Union| "nil" "sqfr" "irred" "prime"))
       (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))
 ((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Bits|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|FieldOfPrimeCharacteristic|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |exponent| (|NonNegativeInteger|))
                              (|:| |center| *4) (|:| |num| *4))))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Mapping| (|OutputBox|) (|String|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |prolog| (|Mapping| (|OutputBox|) (|String|)))
                    (|:| |epilog| (|Mapping| (|OutputBox|) (|String|)))))
       (|isDomain| *1 (|Formatter| *4))
       (|ofCategory| *4 (|FormatterCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|OperatorHandlers|
                    (|Mapping| (|OutputBox|) (|Integer|)
                               (|List| (|OutputForm|)))))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|OperatorHandlers|
                (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Formatter| *3)) (|ofCategory| *3 (|FormatterCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|Formatter| *4))
       (|ofCategory| *4 (|FormatterCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FileName|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Stack| (|String|)))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Stack| (|String|)))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |next| (|NonNegativeInteger|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FunctionGraph| *3))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *1 (|FormatLaTeX|))))
 ((*1 *2 *3 *3 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *1 (|FormatMathJax|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FormatterCategory&| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FormatterCategory&| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|FormatterCategory&| *5))
       (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|OutputForm|))
       (|isDomain| *2 (|OutputBox|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|OutputForm|))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *3 (|String|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *3 (|Boolean|))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|FormatterCategory&| *3))
   (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FormatterCategory&| *4))
   (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))) 
(((*1 *2 *3 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *3 *4 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|OutputForm|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lm| (|FreeMonoid| *3))
                         (|:| |mm| (|FreeMonoid| *3))
                         (|:| |rm| (|FreeMonoid| *3))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|isDomain| *1 (|FiniteMoebiusFunction| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|List| *5)))
       (|isDomain| *1 (|FloatingRealPackage| *5))
       (|ofCategory| *5 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|FloatingComplexPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *4 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|List| (|Complex| *5))))
   (|isDomain| *1 (|FloatingComplexPackage| *5))
   (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4))))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Equation|
                 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4))))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4)))))
       (|isDomain| *1 (|FloatingComplexPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Equation|
                (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4)))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2)
  (AND
   (|isDomain| *2 (|Record| (|:| |mode| (|String|)) (|:| |prec| (|Integer|))))
   (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|FiniteLattice| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofType| *3 (|FiniteBiCPO| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteLattice| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 (|FiniteBiCPO| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Vector| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *1 (|FileCategory| *2 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |value| *3)
                              (|:| |posX| (|NonNegativeInteger|))
                              (|:| |posY| (|NonNegativeInteger|)))))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |name| (|String|))
                              (|:| |arrType| (|NonNegativeInteger|))
                              (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|))
                              (|:| |xOffset| (|Integer|))
                              (|:| |yOffset| (|Integer|))
                              (|:| |map| (|List| (|NonNegativeInteger|))))))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Tree| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Tree| (|Integer|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Tree| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Tree| (|Integer|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1 *4 *4)
  (AND (|isDomain| *3 (|Scene| (|SCartesian| 2))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| *1))
       (|isDomain| *5 (|Boolean|)) (|ofCategory| *1 (|FiniteGraph| *6))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2
                     (|Join| (|FieldOfPrimeCharacteristic|)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *4))
                              (SIGNATURE |lookup| ((|PositiveInteger|) %))
                              (SIGNATURE |basis|
                               ((|Vector| %) (|PositiveInteger|)))
                              (SIGNATURE |Frobenius| (% %)))))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage2| *2 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| (|PrimeField| *3))
                           (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
   (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|ofType| *4 (|Union| (|SparseUnivariatePolynomial| *3) *2))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Matrix| (|PrimeField| *3)))
       (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4
        (|Union| (|SparseUnivariatePolynomial| *3)
                 (|Vector|
                  (|List|
                   (|Record| (|:| |value| *3)
                             (|:| |index| (|SingleInteger|)))))))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4
        (|Union| (|SparseUnivariatePolynomial| *3)
                 (|Vector|
                  (|List|
                   (|Record| (|:| |value| *3)
                             (|:| |index| (|SingleInteger|)))))))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factor| (|Integer|))
                              (|:| |exponent| (|NonNegativeInteger|)))))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Table| (|PositiveInteger|) (|NonNegativeInteger|)))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Union| "prime" "polynomial" "normal" "cyclic"))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *8))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|Mapping| *8 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *9))
       (|isDomain| *5 (|Vector| *9)) (|isDomain| *6 (|Vector| (|Integer|)))
       (|ofCategory| *8 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *9 (|AbelianMonoidRing| *8 *7))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *8 *9))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *9))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|FiniteAbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|ofCategory| *9
                     (|FiniteAbelianMonoidRing| (|Fraction| *7)
                                                (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussianFractions| *7 *8 *9))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|FractionFreeFastGaussian| *3 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *3 *4))))) 
(((*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Mapping| *2 (|NonNegativeInteger|) (|NonNegativeInteger|) *7))
   (|isDomain| *4 (|Vector| *7))
   (|isDomain| *6 (|Vector| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *7 (|AbelianMonoidRing| *2 *5))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
   (|isDomain| *1 (|FractionFreeFastGaussian| *2 *7))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *7))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Mapping| *6 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *6 *7))
       (|ofCategory| *7 (|AbelianMonoidRing| *6 (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2
                   (|Union| (|SparseUnivariatePolynomial| *4)
                            (|Vector|
                             (|List|
                              (|Record| (|:| |value| *4)
                                        (|:| |index| (|SingleInteger|)))))))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Matrix| *4))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Vector|
                    (|List|
                     (|Record| (|:| |value| *4)
                               (|:| |index| (|SingleInteger|))))))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroup| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroupExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroupExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionFieldCategory&| *4 *3 *5 *6))
       (|ofCategory| *4 (|FunctionFieldCategory| *3 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *5)) (|:| |den| *5)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5))
   (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4))
   (|ofCategory| *3 (|UniqueFactorizationDomain|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5))
   (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4))
   (|ofCategory| *3 (|UniqueFactorizationDomain|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2
                   (|Record| (|:| |num| *1) (|:| |den| *5) (|:| |derivden| *5)
                             (|:| |gd| *5)))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FunctionFieldCategory&| *4 *5 *6 *7))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| (|Polynomial| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *3 (|Finite|)) (|isDomain| *2 (|List| (|List| *3)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Complex| (|Float|))))
       (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Complex| (|Float|))))
       (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *2 *3)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *4 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *1 *2 *3 *3 *3 *4)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *4 *3 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *4 *3 *5))))
 ((*1 *1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *4 *3 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *4 *3 *5))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *2 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *2 *4 *5))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5))
       (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FreeMonoid| *3)))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|LinearMultivariateMatrixPencil| *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Matrix| (|XDistributedPolynomial| *3 *4))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Matrix| (|XDistributedPolynomial| *3 *4))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Matrix| (|XDistributedPolynomial| *3 *4))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *4 *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|Equation| (|Polynomial| *6))))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|List| (|Matrix| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|Equation| (|Polynomial| *6))))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|List| (|Matrix| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *1 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|Polynomial| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *1 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|Polynomial| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *1 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *6)))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Symbol|))) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FourierComponent| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |Null| "null") (|:| |Assignment| "assignment")
                        (|:| |Conditional| "conditional")
                        (|:| |Return| "return") (|:| |Block| "block")
                        (|:| |Comment| "comment") (|:| |Call| "call")
                        (|:| |For| "for") (|:| |While| "while")
                        (|:| |Repeat| "repeat") (|:| |Goto| "goto")
                        (|:| |Continue| "continue")
                        (|:| |ArrayAssignment| "arrayAssignment")
                        (|:| |Save| "save") (|:| |Stop| "stop")
                        (|:| |Common| "common") (|:| |Print| "print")))
   (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |nullBranch| "null")
                        (|:| |assignmentBranch|
                             (|Record| (|:| |var| (|Symbol|))
                                       (|:| |arrayIndex|
                                            (|List|
                                             (|Polynomial| (|Integer|))))
                                       (|:| |rand|
                                            (|Record|
                                             (|:| |ints2Floats?| (|Boolean|))
                                             (|:| |expr| (|OutputForm|))))))
                        (|:| |arrayAssignmentBranch|
                             (|Record| (|:| |var| (|Symbol|))
                                       (|:| |rand| (|OutputForm|))
                                       (|:| |ints2Floats?| (|Boolean|))))
                        (|:| |conditionalBranch|
                             (|Record| (|:| |switch| (|Switch|))
                                       (|:| |thenClause| (|FortranCode|))
                                       (|:| |elseClause| (|FortranCode|))))
                        (|:| |returnBranch|
                             (|Record| (|:| |empty?| (|Boolean|))
                                       (|:| |value|
                                            (|Record|
                                             (|:| |ints2Floats?| (|Boolean|))
                                             (|:| |expr| (|OutputForm|))))))
                        (|:| |blockBranch| (|List| (|FortranCode|)))
                        (|:| |commentBranch| (|List| (|String|)))
                        (|:| |callBranch| (|String|))
                        (|:| |forBranch|
                             (|Record|
                              (|:| |range|
                                   (|SegmentBinding|
                                    (|Polynomial| (|Integer|))))
                              (|:| |span| (|Polynomial| (|Integer|)))
                              (|:| |body| (|FortranCode|))))
                        (|:| |labelBranch| (|SingleInteger|))
                        (|:| |loopBranch|
                             (|Record| (|:| |switch| (|Switch|))
                                       (|:| |body| (|FortranCode|))))
                        (|:| |commonBranch|
                             (|Record| (|:| |name| (|Symbol|))
                                       (|:| |contents| (|List| (|Symbol|)))))
                        (|:| |printBranch| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Finite|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
   (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|FakePolynomial|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial|
                (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|FakePolynomial|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *2 *6))
       (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|Ring|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *1 (|FactoringUtilities| *6 *7 *8 *9))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *3 *3 *4 *5 *4 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *4 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *7 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *8 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|ofCategory| *2 (|FunctionSpace| *5))
       (|isDomain| *1 (|ExpressionSolve| *5 *2 *6 *7))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *7
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *2)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|EuclideanDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1 *1)
  (|partial| AND (|isDomain| *2 (|Record| (|:| |coef1| *1) (|:| |coef2| *1)))
   (|ofCategory| *1 (|EuclideanDomain|))))
 ((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                         (|:| |generator| *1)))
   (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *2))
       (|ofCategory| *2 (|KernelCategory| *1))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *2))
       (|ofCategory| *2 (|KernelCategory| *1))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *2 (|KernelCategory| *1))
   (|ofCategory| *1 (|ExpressionSpace2| *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|List| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|List| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))
       (|isDomain| *2 (|List| (|BasicOperator|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|RetractableTo| (|Integer|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *5))
       (|isDomain| *1 (|AlgebraicFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|Ring|)) (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Exit|)) (|isDomain| *1 (|ErrorFunctions|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|CommuteUnivariatePolynomialCategory| *3 *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *3))) (|isDomain| *1 (|Equation| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |unit| *1) (|:| |canonical| *1)
                         (|:| |associate| *1)))
   (|ofCategory| *1 (|EntireRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|EntireRing|)))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| *5))
   (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ExpressionLinearSolve| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|List| (|Stream| *4)))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *4 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |vec| (|Vector| (|Fraction| (|Integer|))))
                            (|:| |func| *5) (|:| |fail| (|Boolean|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Kernel| *2)))
   (|isDomain| *4 (|Symbol|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *2))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |funcs| (|List| *6))
                             (|:| |kers| (|List| (|Kernel| *6)))
                             (|:| |vals| (|List| *6))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *6))))) 
(((*1 *2 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *4 (|OrderedAbelianMonoid|))
   (|isDomain| *1
               (|ElementaryFunctionsGeneralizedUnivariatePowerSeries| *3 *4
                                                                      *2))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *3 *4)
                         (CATEGORY |domain| (SIGNATURE |removeZeros| (% % *4))
                          (SIGNATURE |apply_taylor| (% (|Stream| *3) %)))))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseMultivariatePolynomial| *4 (|Kernel| *5))))
   (|ofCategory| *4 (|Join| (|GcdDomain|) (|Comparable|)))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseMultivariatePolynomial| *4 (|Kernel| *5)))))
   (|isDomain| *1 (|ExpressionFactorPolynomial| *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *3))
       (|ofCategory| *3 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))) 
(((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|List| (|Record| (|:| |func| *2) (|:| |pole| (|Boolean|)))))
   (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))
   (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|ElementaryFunction| *4 *2))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|DifferentialRing|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|isDomain| *4 (|UnivariatePolynomial| *6 *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofType| *6 (|Symbol|))
       (|isDomain| *2 (|ContinuedFraction| (|UnivariatePolynomial| *6 *5)))
       (|isDomain| *1 (|DistributionContinuedFractionPackage| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|isDomain| *4 (|UnivariatePolynomial| *6 (|Fraction| *5)))
       (|ofCategory| *5 (|IntegralDomain|)) (|not| (|ofCategory| *5 (|Field|)))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofType| *6 (|Symbol|))
       (|isDomain| *2
                   (|ContinuedFraction|
                    (|UnivariatePolynomial| *6 (|Fraction| *5))))
       (|isDomain| *1 (|DistributionContinuedFractionPackage| *5 *6))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Plot|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricComplexCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricComplexCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|ParametricSurface| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|ParametricSurface| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|TwoDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|TwoDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|DoubleFloat|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|DoubleFloat|))) (|isDomain| *5 (|Boolean|))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricComplexCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|ParametricSurface| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|ParametricSurface| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *3
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|DifferentialVariableCategory| *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3 *3 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|DiscreteLogarithmPackage| *3))
   (|ofCategory| *3
                 (|Join| (|Monoid|) (|Finite|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Integer|))))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|DistributionFunctions2| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|isDomain| *2 (|Distribution| *6))
       (|isDomain| *1 (|DistributionFunctions2| *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Sequence| *2))
       (|isDomain| *1 (|Distribution| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Distribution| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|)) (|not| (|ofCategory| *3 (|Field|)))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| (|Fraction| *3)))
                             (|:| |bn| (|Stream| (|Fraction| *3)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| *3))
                             (|:| |bn| (|Stream| *3))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|)) (|not| (|ofCategory| *3 (|Field|)))
       (|isDomain| *2
                   (|Stream| (|SparseUnivariatePolynomial| (|Fraction| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Stream| (|SparseUnivariatePolynomial| *3)))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Polynomial| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |varOrder| (|List| (|Symbol|)))
                             (|:| |inhom|
                                  (|Union|
                                   (|List| (|Vector| (|NonNegativeInteger|)))
                                   "failed"))
                             (|:| |hom|
                                  (|List| (|Vector| (|NonNegativeInteger|))))))
       (|isDomain| *1 (|DiophantineSolutionPackage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|DictionaryOperations| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|DictionaryOperations| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|IntegerMod| *3))
       (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|IntegerMod| 2))
       (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DoubleFloat|))))) 
(((*1 *2 *3 *4 *5 *5 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|Polynomial| *6))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *7))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *7
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|isDomain| *1 (|DefiniteIntegrationTools| *6 *7))))
 ((*1 *2 *3 *4 *4 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
   (|isDomain| *4 (|OrderedCompletion| *6))
   (|ofCategory| *6
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|DefiniteIntegrationTools| *5 *6))))) 
(((*1 *2 *3 *4 *2 *2 *5)
  (|partial| AND (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *3 (|Kernel| *4)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *4
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|DefiniteIntegrationTools| *6 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DefiniteIntegrationTools| *4 *5))
       (|ofCategory| *5
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatElementaryFunctions|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *3))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Dequeue| *3))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|DeltaComplex| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|List| (|List| (|Integer|)))))
       (|ofCategory| *5 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *5))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|DeltaComplex| *4)) (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|DegreeReductionPackage| *4 *5))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *3))
       (|isDomain| *6 (|Boolean|))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| "failed")
                            (|:| |pole| "potentialPole")))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *7 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|DoubleResultantPackage| *5 *2 *6 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *2 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *1 (|CyclotomicUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *1 (|CyclotomicUtilities|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CyclotomicUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|CyclotomicUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *1 (|CyclotomicUtilities|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Matrix| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|List| (|Integer|)))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Segment| (|Integer|)))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|CubicalFacet|)))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|CubicalFacet|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|CyclicStreamTools| *3 *2))
       (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CyclicStreamTools| *4 *3))
       (|ofCategory| *3 (|LazyStreamAggregate| *4))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Type|))
   (|isDomain| *1 (|CyclicStreamTools| *3 *2))
   (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|Record| (|:| |start| *3) (|:| |factors| (|Factored| *3))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| *4))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *2)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factors| (|List| *3)) (|:| |error| *5))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *5)))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factors| (|List| *3)) (|:| |error| *4))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootPackage| *3 *4))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory| (|Complex| (|Integer|))))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *2))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Fraction| *3)))
       (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Fraction| *3)))
       (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Lambda| (|Typed|)))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|ILogic|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|RealNumberSystem|))
       (|ofCategory| *3 (|TranscendentalFunctionCategory|))
       (|isDomain| *2 (|Record| (|:| |r| *3) (|:| |phi| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|Comparable|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Commutator|)))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Commutator|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1) (|ofCategory| *1 (|CombinatorialOpsCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|CombinatorialOpsCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))
       (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))))) 
(((*1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|ChainComplex|)) (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ChainComplex|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|CoChainComplex| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Coalgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Coalgebra| *2 *3)) (|ofCategory| *3 (|Module| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Plot|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Vector| *6)))
       (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |transform| (|Matrix| *6))
                             (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Vector| *4)) (|isDomain| *5 (|List| (|Mapping| *4 *4)))
       (|ofCategory| *4 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *4) #1="failed"))
                    (|:| |basis| (|List| (|Vector| *4)))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
       (|isDomain| *5 (|List| (|Mapping| *7 *7)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *7) #1#))
                             (|:| |basis| (|List| (|Vector| *7)))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *7))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|Vector| *3))
   (|isDomain| *4 (|List| (|Mapping| *3 *3)))
   (|ofCategory| *3 (|FunctionSpace| *5))
   (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *5 *3))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *2 (|Vector| *6)) (|isDomain| *3 (|Matrix| *6))
   (|isDomain| *4 (|List| (|Mapping| *6 *6)))
   (|ofCategory| *6 (|FunctionSpace| *5))
   (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Vector| *5))
   (|isDomain| *3 (|List| (|Mapping| *5 *5)))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5)) (|ofType| *3 *2)
       (|ofCategory| *4 (|Field|)) (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Mapping| (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *2 (|Matrix| (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
   (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
   (|ofType| *6 (|SquareMatrix| *4 *5))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Mapping| (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *2 (|Matrix| (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
   (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
   (|ofType| *6 (|SquareMatrix| *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofType| *6 (|SquareMatrix| *4 *5))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
   (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |IDe| (|JetDifferentialEquation| *4 *5))
                             (|:| |ISys| (|List| *5))
                             (|:| |Order| (|NonNegativeInteger|))
                             (|:| |NumProj| (|NonNegativeInteger|))
                             (|:| |Dim| (|NonNegativeInteger|))
                             (|:| |CarChar| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CartanKuranishi| *5 *6))
       (|ofCategory| *6 (|JetBundleFunctionCategory| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartanKuranishi| *6 *7))
       (|ofCategory| *7 (|JetBundleFunctionCategory| *6))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartanKuranishi| *6 *7))
       (|ofCategory| *7 (|JetBundleFunctionCategory| *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |func| *3) (|:| |poly| *3)
                             (|:| |c1| (|Fraction| *5))
                             (|:| |c2| (|Fraction| *5))
                             (|:| |deg| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|isDomain| *2
                   (|Record| (|:| |func| (|List| *4)) (|:| |poly| *4)
                             (|:| |c1| (|Fraction| *6))
                             (|:| |c2| (|Fraction| *6))
                             (|:| |deg| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ChangeOfVariable| *5 *6 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|isDomain| *1 (|ChangeOfVariable| *2 *5 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *3 (|Fraction| *6))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| (|Fraction| *6)) (|:| |radicand| *6)))
       (|isDomain| *1 (|ChangeOfVariable| *5 *6 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2
               (|Record| (|:| |radicand| (|Fraction| *5))
                         (|:| |deg| (|NonNegativeInteger|))))
   (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Record| (|:| |coef| (|Fraction| *5)) (|:| |poly| *3)))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| *4)))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *4)))
       (|isDomain| *1 (|CharacteristicPolynomial3| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| *4)))
       (|isDomain| *2 (|Fraction| *4))
       (|isDomain| *1 (|CharacteristicPolynomial3| *4))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|CharacteristicPolynomial3| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|CharacteristicPolynomial2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |matrix| (|Matrix| *4))
                             (|:| |block_list| (|List| (|Integer|)))))
       (|isDomain| *1 (|CharacteristicPolynomial2| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Character|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|ChainComplex|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|ChainComplex|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))))
   (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Cell| *2))
   (|ofCategory| *2 (|RealClosedField|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|Cell| *3)) (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Character|)))
       (|isDomain| *1 (|CharacterClass|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|CharacterClass|))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|CartesianTensor| *5 *6 *7))
       (|ofType| *5 (|Integer|)) (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *7 (|CommutativeRing|))
       (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|CartesianTensor| *5 *6 *8))
       (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Cell| *5))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Cell| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Cell| *5)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|CachableSet|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|CancellationAbelianMonoid|)))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|BinaryTournament| *3))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|BinaryTreeCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|BinarySearchTree| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinarySearchTree| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *1 (|BasicOperatorFunctions1| *2))
   (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|List| (|Mapping| *4 (|List| *4))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|List| (|Mapping| *4 (|List| *4))))
   (|isDomain| *1 (|BasicOperatorFunctions1| *4))
   (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|None|))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *1) (|ofCategory| *1 (|BoundedMeetSemilattice|)))) 
(((*1 *1) (|ofCategory| *1 (|BoundedJoinSemilattice|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|BitStreamFrame|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Boolean|)))
       (|isDomain| *1 (|BitStreamFrame|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *6 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *6 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|IndexedVector| *3 0))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *5 *6 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|IndexedVector| *3 0))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|BezoutMatrixWrapper| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|BezoutMatrixWrapper| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3 *3 *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|isDomain| *1 (|BalancedBinaryTree| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *2) *2 *2 *2))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|BalancedFactorisation| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Join| (|GcdDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|BalancedFactorisation| *5 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ArrayStack| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |minor| (|List| (|PositiveInteger|)))
                             (|:| |eq| *3)
                             (|:| |minors|
                                  (|List| (|List| (|PositiveInteger|))))
                             (|:| |ops| (|List| *3))))
       (|isDomain| *1 (|AssociatedEquations| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|AssociatedEquations| *4 *5))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *5))
                             (|:| |vec|
                                  (|Vector| (|List| (|PositiveInteger|))))))
       (|isDomain| *1 (|AssociatedEquations| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OneDimensionalArray| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|OneDimensionalArray| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|Segment| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|Segment| (|Integer|)))))) 
(((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *3 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *1))) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|RewriteRule| *4 *5 *2)))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|ApplyRules| *4 *5 *2))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| (|RewriteRule| *5 *6 *2)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6
                     (|Join| (|Ring|) (|PatternMatchable| *5) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *5))))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *6) (|PatternMatchable| *5)
                             (|ConvertibleTo| (|Pattern| *5))))
       (|isDomain| *1 (|ApplyRules| *5 *6 *2))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgebraicNumber|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *5 *2))
       (|ofCategory| *2 (|FunctionSpace| *5))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *5
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *5
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *5
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 %)))))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 %)))))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|AlgebraicFunctionField| *4 *5 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofType| *7 *6)))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|AssociationListAggregate| *3 *4))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Type|))
   (|isDomain| *2 (|Record| (|:| |key| *3) (|:| |entry| *4)))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *2 (|FunctionSpace| *3))
       (|isDomain| *1 (|AlgebraicFunction| *3 *2))
       (|ofCategory| *3 (|RetractableTo| *4))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|AlgebraicFunction| *4 *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *4 *2))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *5 *2))))) 
(((*1 *1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|Segment| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2))
       (|ofCategory| *2 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))) 
((|opposite?| . 2086931) (|zerosOf| . 2086022) (|zeroOf| . 2085288)
 (|rootsOf| . 2084379) (|makeSketch| . 2084162) (|rootSum| . 2083645)
 (|inrootof| . 2083403) (|droot| . 2083155) (|iroot| . 2082896)
 (|size?| . 2082763) (|eq?| . 2082676) (|assoc| . 2082460)
 (|doublyTransitive?| . 2082297) (|knownInfBasis| . 2081953)
 (|rootSplit| . 2080946) (|ratDenom| . 2076834) (|ratPoly| . 2075770)
 (|rootFactor| . 2074535) (|rootPower| . 2073355) (|rootProduct| . 2072175)
 (|rootSimp| . 2070995) (|rootKerSimp| . 2069729) (|leftRank| . 2069514)
 (|rightRank| . 2069299) (|doubleRank| . 2069084) (|weakBiRank| . 2068869)
 (|biRank| . 2068654) (|basisOfCommutingElements| . 2068460)
 (|basisOfLeftAnnihilator| . 2068263) (|basisOfRightAnnihilator| . 2068066)
 (|basisOfLeftNucleus| . 2067872) (|basisOfRightNucleus| . 2067678)
 (|basisOfMiddleNucleus| . 2067484) (|basisOfNucleus| . 2067290)
 (|basisOfCenter| . 2067096) (|basisOfLeftNucloid| . 2066884)
 (|basisOfRightNucloid| . 2066672) (|basisOfCentroid| . 2066460)
 (|radicalOfLeftTraceForm| . 2066266) (|trueEqual| . 2066175)
 (|showTypeInOutput| . 2066065) (|obj| . 2065994) (|dom| . 2065916)
 (|objectOf| . 2065839) (|domainOf| . 2065762) (|any| . 2065647)
 (|applyRules| . 2064626) (|vertSplit| . 2063983) (|blockConcat| . 2063707)
 (|vertConcat| . 2063200) (|horizConcat| . 2062693) (|squareTop| . 2062454)
 (|setColumn!| . 2062199) (|colSlice| . 2061913) (|rowSlice| . 2061627)
 (|array2| . 2061351) (|oneDimensionalArray| . 2061081)
 (|associatedSystem| . 2060659) (|uncouplingMatrices| . 2060392)
 (|associatedEquations| . 2059821) (|arrayStack| . 2059694)
 (|morphism| . 2059299) (|balancedFactorisation| . 2058774)
 (|mapDown!| . 2058457) (|mapUp!| . 2058142) (|setleaves!| . 2058004)
 (|balancedBinaryTree| . 2057848) (|sylvesterMatrix| . 2057328)
 (|subSylvesterMatrix| . 2056114) (|bezoutMatrix| . 2055594)
 (|subresultants| . 2054929) (|bezoutResultant| . 2054356)
 (|bezoutDiscriminant| . 2053789) (|inspect| . 2053700) (|extract!| . 2053611)
 (|starts| . 2053424) (|_\|_| . 2053366) (T$ . 2053308) (|test| . 2053264)
 (|setProperties| . 2053140) (|setProperty| . 2053017) (|property| . 2052891)
 (|deleteProperty!| . 2052803) (|assert| . 2052715) (|has?| . 2052592)
 (|input| . 2052322) (|comparison| . 2052179) (|equality| . 2052036)
 (|nary?| . 2051950) (|unary?| . 2051864) (|nullary?| . 2051778)
 (|arity| . 2051668) (|properties| . 2051547) (|derivative| . 2050936)
 (|constantOperator| . 2050783) (|constantOpIfCan| . 2050628)
 (|setright!| . 2050471) (|setleft!| . 2050314)
 (|brillhartIrreducible?| . 2049993) (|brillhartTrials| . 2049642)
 (|noLinearFactor?| . 2049482) (|insertRoot!| . 2049375)
 (|binarySearchTree| . 2049243) (|nor| . 2049144) (|nand| . 2049045)
 (|node| . 2048930) (|binaryTournament| . 2048798) (|binaryTree| . 2048610)
 (|subtractIfCan| . 2048533) (|setPosition| . 2048401)
 (|cylindricalDecomposition| . 2047903) (|projectionSet| . 2047648)
 (|coefficientSet| . 2047393) (|discriminantSet| . 2047138)
 (|resultantSet| . 2046883) (|principalSubResultantSet| . 2046625)
 (|specialise| . 2046345) (|squareFreeBasis| . 2046117)
 (|generalizedContinuumHypothesisAssumed| . 2046030)
 (|generalizedContinuumHypothesisAssumed?| . 2045948) (|countable?| . 2045861)
 (|Aleph| . 2045756) (|unravel| . 2045544) (|ravel| . 2045332)
 (|leviCivitaSymbol| . 2045151) (|kroneckerDelta| . 2044970)
 (|reshape| . 2044593) (|alphanumeric| . 2044545) (|alphabetic| . 2044497)
 (|hexDigit| . 2044449) (|digit| . 2044401) (|charClass| . 2044212)
 (|simpleCells| . 2044039) (|projection| . 2043936) (|variablesOf| . 2043803)
 (|mainVariableOf| . 2043679) (|makeCell| . 2043340) (|setMult| . 2043252)
 (|getIntervals| . 2043139) (|cubicalFacet| . 2042770)
 (|transition_matrices| . 2042658) (|chainComplex| . 2042546)
 (|alphanumeric?| . 2042466) (|lowerCase?| . 2042386) (|upperCase?| . 2042306)
 (|alphabetic?| . 2042226) (|hexDigit?| . 2042146) (|digit?| . 2042066)
 (|newline| . 2042023) (|underscore| . 2041980) (|char| . 2041823)
 (|ord| . 2041743) (|danilewski| . 2041454) (|char_pol| . 2041259)
 (|char_pol_via_interpolation| . 2041055)
 (|det_via_common_denominator| . 2040817)
 (|char_pol_via_den_interpolation| . 2040548) (|mkIntegral| . 2040209)
 (|radPoly| . 2039813) (|rootPoly| . 2039314) (|goodPoint| . 2039016)
 (|chvar| . 2037926) (|setOutMode| . 2037709) (|setRedMode| . 2037492)
 (|stirling| . 2037269) (|hilbert| . 2036964) (|alphaHilbert| . 2036659)
 (|arbFunctions| . 2036302) (|gauge| . 2035945) (|gaugeHilbert| . 2035591)
 (|bound| . 2035368) (|complete2| . 2034712) (|removeDuplicates| . 2034541)
 (|find| . 2034395) (|setMode| . 2034148) (|conj| . 2033966)
 (|gradeInvolution| . 2033784) (|rc| . 2033599) (|lc| . 2033414)
 (|toTable| . 2032629) (|ePseudoscalar| . 2032450) (|eFromBinaryMap| . 2032222)
 (|multivector| . 2032005) (|ee| . 2031771) (|e| . 2031570)
 (|linearlyDependentOverConstants?| . 2031263)
 (|linearDependenceOverConstants| . 2030990)
 (|particularSolutionOverConstants| . 2030410)
 (|solveLinearOverConstants| . 2029474) (|nullSpaceOverConstants| . 2029156)
 (|constant_subspace| . 2028717) (|clipParametric| . 2027948)
 (|clipWithRanges| . 2027500) (|counit| . 2027361) (|coproduct| . 2027222)
 (|coboundary| . 2027038) (|validate| . 2026823) (|coChainComplex| . 2026529)
 (|numberOfHues| . 2026448) (|blue| . 2026409) (|green| . 2026370)
 (|yellow| . 2026331) (|red| . 2026292) (|iifact| . 2026106)
 (|iibinom| . 2025892) (|iiperm| . 2025678) (|iipow| . 2025464)
 (|iidsum| . 2025250) (|iidprod| . 2025036) (|ipow| . 2024822)
 (|factorial| . 2024447) (|multinomial| . 2024291)
 (|distinct_partition| . 2024166) (|permutation| . 2023782)
 (|stirling1| . 2023654) (|stirling2| . 2023526) (|catalan| . 2023401)
 (|summation| . 2022723) (|factorials| . 2022149) (|mkcomm| . 2022020)
 (|smaller?| . 2021932) (|polarCoordinates| . 2021654) (|complex| . 2021541)
 (|imaginary| . 2021434) (|writeCategory| . 2021277) (|writePackage| . 2021107)
 (|solid| . 2020999) (|solid?| . 2020894) (|denominators| . 2020754)
 (|numerators| . 2020614) (|convergents| . 2020454) (|approximants| . 2020294)
 (|reducedForm| . 2020184) (|partialQuotients| . 2020044)
 (|partialDenominators| . 2019904) (|partialNumerators| . 2019764)
 (|reducedContinuedFraction| . 2019621) (|polar| . 2019371)
 (|cylindrical| . 2019121) (|spherical| . 2018871) (|parabolic| . 2018621)
 (|parabolicCylindrical| . 2018371) (|paraboloidal| . 2018121)
 (|ellipticCylindrical| . 2017846) (|prolateSpheroidal| . 2017571)
 (|oblateSpheroidal| . 2017296) (|bipolar| . 2017021)
 (|bipolarCylindrical| . 2016746) (|toroidal| . 2016471) (|conical| . 2016193)
 (|modTree| . 2016059) (|multiEuclideanTree| . 2015925)
 (|complexZeros| . 2015132) (|divisorCascade| . 2014418) (|graeffe| . 2014209)
 (|pleskenSplit| . 2013671) (|reciprocalPolynomial| . 2013462)
 (|rootRadius| . 2013043) (|schwerpunkt| . 2012808) (|setErrorBound| . 2012599)
 (|startPolynomial| . 2012288) (|cycleElt| . 2012132)
 (|computeCycleLength| . 2011939) (|computeCycleEntry| . 2011789)
 (|addCube| . 2011636) (|cubicalComplex| . 2010891) (|coerceP| . 2010662)
 (|powerSum| . 2010495) (|elementary| . 2010328) (|alternating| . 2010161)
 (|cyclic| . 2009994) (|dihedral| . 2009827) (|cap| . 2009644)
 (|cup| . 2009509) (|wreath| . 2009374) (|SFunction| . 2009198)
 (|skewSFunction| . 2009019) (|cyclotomic_array| . 2008866)
 (|inverse_cyclotomic| . 2008701) (|cyclotomic?| . 2008537)
 (|cyclotomic_decomposition| . 2008363)
 (|cocyclotomic_decomposition| . 2008189) (|doubleResultant| . 2007843)
 (|decimal| . 2007734) (|innerint| . 2006755) (|cyclotomic_roots| . 2006487)
 (|faceMap| . 2006290) (|triangle| . 2006143) (|deltaComplex| . 2005430)
 (|circle| . 2005281) (|dequeue| . 2005157) (|exteriorDifferential| . 2004994)
 (|totalDifferential| . 2004790) (|homogeneous?| . 2004446)
 (|leadingBasisTerm| . 2004158) (|log_plus_1| . 2004044) (|ignore?| . 2003493)
 (|computeInt| . 2002941) (|checkForZero| . 2001788)
 (|doubleFloatFormat| . 2001707) (|qsqrt| . 2001659) (|qlog| . 2001611)
 (|hypergeometric0F1| . 2001371) (|directedGraph| . 1999422)
 (|rotatez| . 1999251) (|rotatey| . 1999080) (|rotatex| . 1998909)
 (|exponentb| . 1998716) (|exponenta| . 1998523) (|expb| . 1998318)
 (|expa| . 1998112) (|dictionary| . 1997881) (|dioSolve| . 1997330)
 (|additive?| . 1997168) (|multiplicative?| . 1997006) (|newLine| . 1996925)
 (|copies| . 1996801) (|say| . 1996558) (|sayLength| . 1996309)
 (|subordinationConvolution| . 1996191) (|orthogonalConvolution| . 1996073)
 (|monotoneConvolution| . 1995955) (|booleanConvolution| . 1995837)
 (|freeConvolution| . 1995719) (|classicalConvolution| . 1995601)
 (|orthogonalPolynomials| . 1995097) (|jacobiParameters| . 1994471)
 (|monotoneCumulants| . 1994255) (|hankelDeterminants| . 1994110)
 (|booleanCumulants| . 1993963) (|freeCumulants| . 1993816)
 (|classicalCumulants| . 1993669) (|moments| . 1993522)
 (|booleanCumulant| . 1993361) (|freeCumulant| . 1993200)
 (|classicalCumulant| . 1993039) (|moment| . 1992875)
 (|gaussianDistribution| . 1992720) (|poissonDistribution| . 1992565)
 (|wignerDistribution| . 1992410) (|freePoissonDistribution| . 1992255)
 (|bernoulliDistribution01| . 1992100) (|arcsineDistribution| . 1991883)
 (|freeMultiplicativeConvolution| . 1991713)
 (|distributionByMonotoneCumulants| . 1991305)
 (|booleanCumulantFromJacobi| . 1991127)
 (|distributionByJacobiParameters| . 1990851)
 (|distributionByBooleanCumulants| . 1990581)
 (|distributionByFreeCumulants| . 1990311)
 (|distributionByClassicalCumulants| . 1990041)
 (|distributionByEvenMoments| . 1989771) (|distributionByMoments| . 1989501)
 (|mapall| . 1989215) (|R1_to_R2_coercion| . 1989052) (|setnext!| . 1988898)
 (|setprevious!| . 1988744) (|next| . 1988639) (|previous| . 1988534)
 (|datalist| . 1988410) (|shanksDiscLogAlgorithm| . 1988108)
 (|separant| . 1987838) (|leader| . 1987568) (|isobaric?| . 1987263)
 (|weights| . 1986612) (|differentialVariables| . 1986307)
 (|extractBottom!| . 1986214) (|extractTop!| . 1986121)
 (|insertBottom!| . 1986025) (|insertTop!| . 1985929) (|recolor| . 1985571)
 (|makeObject| . 1978217) (|drawComplex| . 1977898)
 (|drawComplexVectorField| . 1977610) (|setRealSteps| . 1977528)
 (|setImagSteps| . 1977446) (|setClipValue| . 1977358) (|draw| . 1967226)
 (|option?| . 1967066) (|range| . 1966835) (|colorFunction| . 1966386)
 (|curveColor| . 1966228) (|pointColor| . 1966070) (|clip| . 1964334)
 (|clipBoolean| . 1964191) (|style| . 1963971) (|toScale| . 1963749)
 (|pointColorPalette| . 1963606) (|curveColorPalette| . 1963463)
 (|var1Steps| . 1963216) (|var2Steps| . 1962969) (|space| . 1962655)
 (|tubePoints| . 1962408) (|tubeRadius| . 1962190)
 (|JContinuedFraction| . 1961346) (|makeVariable| . 1960475) (|Nul| . 1960380)
 (|exponents| . 1960287) (|iisqrt2| . 1960078) (|iisqrt3| . 1959869)
 (|iiexp| . 1959657) (|iilog| . 1959445) (|iisin| . 1959233)
 (|iicos| . 1959021) (|iitan| . 1958809) (|iicot| . 1958597)
 (|iisec| . 1958385) (|iicsc| . 1958173) (|iiasin| . 1957961)
 (|iiacos| . 1957749) (|iiatan| . 1957537) (|iiacot| . 1957325)
 (|iiasec| . 1957113) (|iiacsc| . 1956901) (|iisinh| . 1956689)
 (|iicosh| . 1956477) (|iitanh| . 1956265) (|iicoth| . 1956053)
 (|iisech| . 1955841) (|iicsch| . 1955629) (|iiasinh| . 1955417)
 (|iiacosh| . 1955205) (|iiatanh| . 1954993) (|iiacoth| . 1954781)
 (|iiasech| . 1954569) (|iiacsch| . 1954357) (|specialTrigs| . 1954057)
 (|localReal?| . 1953817) (|poly_factor| . 1953344) (|do_quo| . 1952797)
 (|rischNormalize| . 1950579) (|realLiouvillian| . 1949579)
 (|realElementary| . 1948579) (|validExponential| . 1948026)
 (|rootNormalize| . 1947489) (|rmap| . 1946937) (|tanQ| . 1946389)
 (|irootDep| . 1945686) (|select!| . 1945324) (|delete!| . 1945011)
 (|sncndn| . 1944744) (|lin_sol| . 1944486) (|ellipticRC| . 1944246)
 (|ellipticRD| . 1944000) (|ellipticRF| . 1943754) (|ellipticRJ| . 1943502)
 (|unit?| . 1943417) (|associates?| . 1943329) (|unitCanonical| . 1943280)
 (|unitNormal| . 1943092) (|factorAndSplit| . 1942924) (|rightOne| . 1942799)
 (|leftOne| . 1942674) (|rightZero| . 1942549) (|leftZero| . 1942424)
 (|swap| . 1942100) (|error| . 1941583) (|minPoly| . 1941064)
 (|operators| . 1940901) (|tower| . 1940593) (|kernels| . 1940285)
 (|mainKernel| . 1940166) (|distribute| . 1939939) (|multiEuclidean| . 1939833)
 (|extendedEuclidean| . 1939500) (|euclideanSize| . 1939392)
 (|sizeLess?| . 1939299) (|getSimplifyDenomsFlag| . 1939139)
 (|setSimplifyDenomsFlag| . 1938976) (|number?| . 1938813)
 (|replaceDiffs| . 1938258) (|constantToUnaryFunction| . 1938089)
 (|tubePlot| . 1936661) (|exponentialOrder| . 1936415) (|getMult| . 1936327)
 (|completeEval| . 1935892) (|lowerPolynomial| . 1935526)
 (|raisePolynomial| . 1935160) (|normalDeriv| . 1934813) (|ran| . 1934526)
 (|to_UP| . 1934343) (|subst_var| . 1934242) (|binomThmExpt| . 1933955)
 (|fmecg| . 1933729) (|pomopo!| . 1933530) (|mapExponents| . 1933296)
 (|linearAssociatedLog| . 1932893) (|linearAssociatedOrder| . 1932693)
 (|linearAssociatedExp| . 1932483) (|createNormalElement| . 1932343)
 (|setLabelValue| . 1932253) (|getCode| . 1932161) (|printCode| . 1932082)
 (|code| . 1929456) (|operation| . 1928719) (|common| . 1928590)
 (|printStatement| . 1928487) (|save| . 1928442) (|stop| . 1928397)
 (|block| . 1928293) (|cond| . 1928120) (|returns| . 1927424)
 (|call| . 1927343) (|comment| . 1927172) (|continue| . 1927082)
 (|gotoJump| . 1926992) (|repeatUntilLoop| . 1926906) (|whileLoop| . 1926820)
 (|forLoop| . 1926513) (|sin?| . 1926381) (|zeroVector| . 1926198)
 (|zeroSquareMatrix| . 1926015) (|identitySquareMatrix| . 1925832)
 (|fort_clean_lines| . 1925728) (|do_with_error_env3| . 1925531)
 (|do_with_error_env2| . 1925334) (|do_with_error_env1| . 1925175)
 (|expression2Fortran1| . 1924960) (|statement2Fortran| . 1924825)
 (|expression2Fortran| . 1924690) (|getStatement| . 1924517)
 (|changeExprLength| . 1924396) (|displayLines| . 1924267)
 (|dispStatement| . 1924143) (|fortFormatHead| . 1923884)
 (|fortFormatTypeLines| . 1923725) (|fort_format_types| . 1923562)
 (|indentFortLevel| . 1923441) (|checkType| . 1923353)
 (|newFortranTempVar| . 1923268) (|clear_used_intrinsics| . 1923187)
 (|get_used_intrinsics| . 1923086) (|get_fort_indent| . 1923000)
 (|refinementSolve| . 1922701) (|refinementGroebner| . 1922424)
 (|refinementEquations| . 1922147) (|refinementTransformations| . 1921845)
 (|refine!| . 1921533) (|setRefined!| . 1921346) (|invertMIN| . 1921208)
 (|multiplyMIN| . 1921067) (|addMIN| . 1920926) (|rightMinimization| . 1920736)
 (|leftMinimization| . 1920546) (|normalALS| . 1920408)
 (|extendedALS| . 1920270) (|refineUR!| . 1919947)
 (|factorizationSolve| . 1919685) (|factorizationGroebner| . 1919445)
 (|factorizationEquations| . 1919205)
 (|factorizationTransformations| . 1918903) (|factorize| . 1918654)
 (|rightFactor| . 1918467) (|leftFactor| . 1918280) (|ratexpr| . 1918104)
 (|ratexprInverse| . 1917897) (|rightFamily| . 1917712)
 (|leftFamily| . 1917527) (|summands| . 1917327) (|invertSTD| . 1917189)
 (|invertALS| . 1917051) (|multiplyALS| . 1916910) (|addALS| . 1916769)
 (|scaleALS| . 1916628) (|rowSpan| . 1916412) (|columnSpan| . 1916196)
 (|solutionVector| . 1915739) (|normalize!| . 1915601)
 (|normalizeDIAG!| . 1915463) (|normalizePLS!| . 1915325)
 (|normalizeRHS!| . 1915187) (|transformationMatrix| . 1915012)
 (|representation| . 1914798) (|linearization| . 1914393)
 (|admissibleLinearSystem| . 1914217) (|refined?| . 1914044)
 (|blockStructure| . 1913849) (|addColumnsRows!| . 1913656)
 (|addRowsColumns!| . 1913463) (|swapRowsColumns!| . 1913273)
 (|pencil| . 1913074) (|appendSupport!| . 1912876) (|polynomial?| . 1912703)
 (|regular?| . 1912530) (|scalar?| . 1912141) (|qregular?| . 1911923)
 (|mutable?| . 1911750) (|minimal?| . 1911577)
 (|toggleAlternativeOutput| . 1911439) (|disableAlternativeOutput| . 1911301)
 (|enableAlternativeOutput| . 1911163) (|toggleDebugOutput| . 1911025)
 (|disableDebugOutput| . 1910887) (|enableDebugOutput| . 1910749)
 (|lSpaceBasis| . 1910412) (|finiteBasis| . 1910075) (|principal?| . 1909730)
 (|divisor| . 1907757) (|weierstrassHalfPeriods| . 1907588)
 (|weierstrassInvariants| . 1907419) (|modularInvariantJ| . 1907307)
 (|landen1| . 1907002) (|landen2| . 1906665) (|landen| . 1906334)
 (|kprod| . 1906035) (|sn2| . 1905730) (|rationalPoints| . 1905025)
 (|nonSingularModel| . 1904235) (|algSplitSimple| . 1903778)
 (|hyperelliptic| . 1903198) (|elliptic| . 1902345)
 (|integralDerivationMatrix| . 1901962) (|integralRepresents| . 1901655)
 (|integralCoordinates| . 1901313) (|yCoordinates| . 1900971)
 (|inverseIntegralMatrixAtInfinity| . 1900657)
 (|integralMatrixAtInfinity| . 1900343) (|inverseIntegralMatrix| . 1900029)
 (|integralMatrix| . 1899715) (|reduceBasisAtInfinity| . 1899411)
 (|normalizeAtInfinity| . 1899107) (|complementaryBasis| . 1898803)
 (|integral?| . 1897895) (|special_order| . 1897555)
 (|integralAtInfinity?| . 1897253) (|integralBasisAtInfinity| . 1896952)
 (|ramified?| . 1896350) (|ramifiedAtInfinity?| . 1896051)
 (|singular?| . 1895449) (|singularAtInfinity?| . 1895150)
 (|branchPoint?| . 1894548) (|branchPointAtInfinity?| . 1894249)
 (|rationalPoint?| . 1893579) (|absolutelyIrreducible?| . 1892921)
 (|genus| . 1892241) (|getZechTable| . 1891556) (|createZechTable| . 1891322)
 (|createMultiplicationTable| . 1890954)
 (|createMultiplicationMatrix| . 1890661)
 (|createLowComplexityTable| . 1890352)
 (|createLowComplexityNormalBasis| . 1889899) (|fffg| . 1888813)
 (|generalCoefficient| . 1888377) (|ShiftAction| . 1888130)
 (|ShiftC| . 1887854) (|DiffAction| . 1887607) (|DiffC| . 1887331)
 (|qShiftAction| . 1887081) (|qShiftC| . 1886802) (|genVectorStream| . 1886489)
 (|genVectorStream2| . 1886176) (|generalInterpolation| . 1884323)
 (|representationType| . 1884188) (|createPrimitiveElement| . 1884133)
 (|tableForDiscreteLogarithm| . 1883963) (|factorsOfCyclicGroupSize| . 1883721)
 (|sizeMultiplication| . 1882594) (|getMultiplicationMatrix| . 1881782)
 (|getMultiplicationTable| . 1880792) (|primitive?| . 1880490)
 (|numberOfIrreduciblePoly| . 1880322) (|numberOfPrimitivePoly| . 1880154)
 (|numberOfNormalPoly| . 1879986) (|createIrreduciblePoly| . 1879761)
 (|createPrimitivePoly| . 1879536) (|createNormalPoly| . 1879311)
 (|createNormalPrimitivePoly| . 1879086)
 (|createPrimitiveNormalPoly| . 1878861) (|lexSmaller?| . 1878648)
 (|clexSmaller?| . 1878435) (|nlexSmaller?| . 1878222)
 (|cnlexSmaller?| . 1878009) (|nextIrreduciblePoly| . 1877825)
 (|nextPrimitivePoly| . 1877641) (|nextNormalPoly| . 1877457)
 (|nextNormalPrimitivePoly| . 1877273) (|nextPrimitiveNormalPoly| . 1877089)
 (|leastAffineMultiple| . 1876907) (|reducedQPowers| . 1876649)
 (|rootOfIrreduciblePoly| . 1876049) (|mapContra| . 1875824)
 (|looseEquals| . 1875691) (|diagramHeight| . 1875550)
 (|diagramWidth| . 1875409) (|deepDiagramSvg| . 1875214)
 (|diagramsSvg| . 1874991) (|diagramSvg| . 1874796) (|subdiagramSvg| . 1874582)
 (|isFunctional?| . 1874452) (|distanceMatrix| . 1874311)
 (|laplacianMatrix| . 1874170) (|adjacencyMatrix| . 1874018)
 (|incidenceMatrix| . 1873877) (|isAcyclic?| . 1873747)
 (|loopsArrows| . 1873611) (|loopsAtNode| . 1873426) (|loopsNodes| . 1873290)
 (|spanningForestNode| . 1873142) (|spanningTreeNode| . 1872954)
 (|spanningForestArrow| . 1872806) (|spanningTreeArrow| . 1872618)
 (|routeArrows| . 1872416) (|routeNodes| . 1872214) (|arrowsToArrow| . 1872015)
 (|arrowsFromArrow| . 1871816) (|nodeToArrow| . 1871617)
 (|nodeFromArrow| . 1871418) (|arrowsToNode| . 1871219)
 (|arrowsFromNode| . 1871020) (|nodeToNode| . 1870821)
 (|nodeFromNode| . 1870622) (|outDegree| . 1870478) (|inDegree| . 1870334)
 (|getArrowIndex| . 1870187) (|arrowName| . 1870006) (|isFixPoint?| . 1869827)
 (|isGreaterThan?| . 1869645) (|isDirectSuccessor?| . 1869463)
 (|kgraph| . 1869303) (|cycleClosed| . 1869143) (|cycleOpen| . 1868983)
 (|terminal| . 1868888) (|initial| . 1868528) (|getArrows| . 1867934)
 (|getVertexIndex| . 1867790) (|getVertices| . 1867464) (|flush| . 1867292)
 (|write!| . 1867149) (|read!| . 1867009) (|iomode| . 1866835)
 (|reopen!| . 1866665) (|open| . 1866357) (|rightUnit| . 1866191)
 (|leftUnit| . 1866025) (|rightMinimalPolynomial| . 1865798)
 (|leftMinimalPolynomial| . 1865571) (|associatorDependence| . 1865125)
 (|lieAlgebra?| . 1864759) (|jordanAlgebra?| . 1864393)
 (|noncommutativeJordanAlgebra?| . 1864027) (|jordanAdmissible?| . 1863661)
 (|lieAdmissible?| . 1863295) (|jacobiIdentity?| . 1862929)
 (|powerAssociative?| . 1862778) (|alternative?| . 1862412)
 (|flexible?| . 1862046) (|rightAlternative?| . 1861680)
 (|leftAlternative?| . 1861314) (|antiAssociative?| . 1860948)
 (|associative?| . 1860582) (|antiCommutative?| . 1860216)
 (|commutative?| . 1859850) (|rightCharacteristicPolynomial| . 1859667)
 (|leftCharacteristicPolynomial| . 1859484) (|rightNorm| . 1859358)
 (|leftNorm| . 1859232) (|rightTrace| . 1859106) (|leftTrace| . 1858980)
 (|someBasis| . 1858827) (|finiteLattice| . 1858507) (|LiePoly| . 1858321)
 (|quickSort| . 1858028) (|heapSort| . 1857735) (|shellSort| . 1857442)
 (|set_output_mode| . 1857302) (|get_output_mode| . 1857173)
 (|outputSpacing| . 1857084) (|outputGeneral| . 1856895)
 (|outputFixed| . 1856706) (|outputFloating| . 1856517) (|exp1| . 1856436)
 (|log10| . 1856112) (|log2| . 1855988) (|rationalApproximation| . 1855402)
 (|relerror| . 1855357) (|complexSolve| . 1854117) (|complexRoots| . 1853558)
 (|realRoots| . 1853054) (|support| . 1852850) (|moebiusFunction| . 1852679)
 (|overlap| . 1852399) (|hcrf| . 1852304) (|hclf| . 1852209)
 (|fraction| . 1851970) (|numberOfPrimes| . 1851663) (|altsupersub| . 1851437)
 (|theMap| . 1851265) (|naryPlus| . 1850723) (|nary| . 1850187)
 (|precedence| . 1849714) (|formatConstant| . 1849210) (|nothing| . 1848812)
 (|parenthesizeIf| . 1848501) (|parenthesize| . 1848367)
 (|formatFunctionSymbol| . 1848064) (|formatSymbol| . 1847761)
 (|formatString| . 1847458) (|formatFloat| . 1847155)
 (|formatInteger| . 1846850) (|formatExpression| . 1845664)
 (|maxPrecedence| . 1845439) (|minPrecedence| . 1845214)
 (|defaultEpilogue| . 1845086) (|defaultPrologue| . 1844958)
 (|environment| . 1844576) (|writable?| . 1844485) (|readable?| . 1844394)
 (|exists?| . 1844303) (|extension| . 1844213) (|directory| . 1844123)
 (|filename| . 1844027) (|functionGraph| . 1842593) (|shallowExpand| . 1842352)
 (|deepExpand| . 1842111) (|clearFortranOutputStack| . 1842000)
 (|showFortranOutputStack| . 1841889) (|popFortranOutputStack| . 1841797)
 (|pushFortranOutputStack| . 1841539) (|topFortranOutputStack| . 1841438)
 (|formatStep| . 1841265) (|operatorHandlers| . 1840800)
 (|setDefault!| . 1840436) (|format| . 1840169) (|fracPart| . 1839777)
 (|polyPart| . 1839570) (|fullPartialFraction| . 1839324)
 (|primeFrobenius| . 1839139) (|discreteLog| . 1838901)
 (|decreasePrecision| . 1838716) (|increasePrecision| . 1838531)
 (|bits| . 1838146) (|mergeFactors| . 1838050) (|unitNormalize| . 1837957)
 (|unit| . 1837454) (|flagFactor| . 1837247) (|sqfrFactor| . 1837105)
 (|primeFactor| . 1836963) (|irreducibleFactor| . 1836821)
 (|factors| . 1835990) (|nilFactor| . 1835848) (|map_preserving| . 1835583)
 (|factorFraction| . 1835376) (|regularRepresentation| . 1834751)
 (|traceMatrix| . 1834042) (|randomLC| . 1833652) (|minimize| . 1833184)
 (|module| . 1832419) (|represents| . 1831513)
 (|rightRegularRepresentation| . 1831167)
 (|leftRegularRepresentation| . 1830821) (|rightTraceMatrix| . 1830272)
 (|leftTraceMatrix| . 1829723) (|rightDiscriminant| . 1829264)
 (|leftDiscriminant| . 1828805) (|exprToXXP| . 1827935) (|exprToUPS| . 1824198)
 (|exprToGenUPS| . 1820461) (|exprToPS| . 1812965) (|localAbs| . 1811148)
 (|atan1| . 1809844) (|integ| . 1808540) (|integt| . 1807236)
 (|integ_df| . 1805929) (|powToUPS| . 1802600) (|my_digamma| . 1801296)
 (|universe| . 1801161) (|cardinality| . 1801006) (|algtower| . 1800535)
 (|isMult| . 1800270) (|applyQuote| . 1799305) (|internalIntegrate0| . 1798653)
 (|makeCos| . 1798379) (|makeSin| . 1798105) (|logGamma| . 1797672)
 (|li2| . 1797561) (|rabs| . 1796850) (|lambert_via_newton1| . 1796342)
 (|lambert_via_newton2| . 1795834) (|lambert_inverse_series| . 1795403)
 (|iiGamma| . 1795213) (|iiabs| . 1795023) (|iiconjugate| . 1794833)
 (|iiBeta| . 1794615) (|iidigamma| . 1794425) (|iipolygamma| . 1794207)
 (|iiBesselJ| . 1793989) (|iiBesselY| . 1793771) (|iiBesselI| . 1793553)
 (|iiBesselK| . 1793335) (|iiAiryAi| . 1793145) (|iiAiryAiPrime| . 1792955)
 (|iiAiryBi| . 1792765) (|iiAiryBiPrime| . 1792575) (|iAiryAi| . 1792385)
 (|iAiryAiPrime| . 1792195) (|iAiryBi| . 1792005) (|iAiryBiPrime| . 1791815)
 (|iiHypergeometricF| . 1791597) (|iiPolylog| . 1791404)
 (|iLambertW| . 1791214) (|retract_Q| . 1790978) (|coerce_Q| . 1790740)
 (|bringDown| . 1790071) (|newReduc| . 1789756) (|logical?| . 1789666)
 (|character?| . 1789576) (|doubleComplex?| . 1789486) (|complex?| . 1789396)
 (|double?| . 1789306) (|fortranCharacter| . 1789261)
 (|fortranDoubleComplex| . 1789216) (|fortranComplex| . 1789171)
 (|fortranLogical| . 1789126) (|fortranInteger| . 1789081)
 (|fortranDouble| . 1789036) (|fortranReal| . 1788991) (|external?| . 1788909)
 (|dimensionsOf| . 1788794) (|scalarTypeOf| . 1788637)
 (|fortranCarriageReturn| . 1788557) (|fortranLiteral| . 1788438)
 (|fortranLiteralLine| . 1788319) (|processTemplate| . 1788140)
 (|separate_factors| . 1787784) (|makeFR| . 1786952) (|musserTrials| . 1786593)
 (|stopMusserTrials| . 1786234) (|numberOfFactors| . 1785802)
 (|modularFactor| . 1785470) (|useSingleFactorBound?| . 1785306)
 (|useSingleFactorBound| . 1785139) (|useEisensteinCriterion?| . 1784975)
 (|useEisensteinCriterion| . 1784808) (|eisensteinIrreducible?| . 1784641)
 (|tryFunctionalDecomposition?| . 1784477)
 (|tryFunctionalDecomposition| . 1784310) (|henselFact| . 1783775)
 (|btwFact| . 1783134) (|beauzamyBound| . 1782690) (|bombieriNorm| . 1781821)
 (|rootBound| . 1781377) (|singleFactorBound| . 1780442)
 (|quadraticNorm| . 1780026) (|infinityNorm| . 1779610)
 (|scaleRoots| . 1779431) (|shiftRoots| . 1779252)
 (|degreePartition| . 1778672) (|factorOfDegree| . 1777165)
 (|factorsOfDegree| . 1776883) (|pascalTriangle| . 1776711)
 (|rangePascalTriangle| . 1776434) (|sizePascalTriangle| . 1776296)
 (|fillPascalTriangle| . 1776172) (|safeCeiling| . 1776000)
 (|safeFloor| . 1775828) (|safetyMargin| . 1775453) (|sumSquares| . 1775308)
 (|euclideanNormalForm| . 1774989) (|euclideanGroebner| . 1773982)
 (|factorGroebnerBasis| . 1773053) (|groebnerFactorize| . 1771191)
 (|credPol| . 1770829) (|gbasis| . 1770436) (|gbasisExtend| . 1770040)
 (|critT| . 1769522) (|critM| . 1769160) (|critB| . 1768792)
 (|critBonD| . 1768272) (|critMTonD1| . 1767755) (|critMonD1| . 1767235)
 (|redPo| . 1766807) (|updatF| . 1766303) (|updatD| . 1765783)
 (|minGbasis| . 1765424) (|lepol| . 1765065) (|prinshINFO| . 1764716)
 (|prindINFO| . 1764143) (|fprindINFO| . 1763567) (|prinpolINFO| . 1763183)
 (|prinb| . 1762806) (|critpOrder| . 1762285) (|makeCrit| . 1761649)
 (|gcdBasis| . 1761298) (|gcdDecomposition| . 1760728)
 (|conditionsForIdempotents| . 1759357) (|genericRightDiscriminant| . 1759011)
 (|genericRightTraceForm| . 1758659) (|genericLeftDiscriminant| . 1758313)
 (|genericLeftTraceForm| . 1757961) (|genericRightNorm| . 1757612)
 (|genericRightTrace| . 1757263) (|genericRightMinimalPolynomial| . 1756888)
 (|rightRankPolynomial| . 1756048) (|genericLeftNorm| . 1755699)
 (|genericLeftTrace| . 1755350) (|genericLeftMinimalPolynomial| . 1754975)
 (|leftRankPolynomial| . 1754135) (|generic| . 1752271)
 (|rightUnits| . 1751550) (|leftUnits| . 1750829) (|gnuDraw| . 1749527)
 (|compBound| . 1749275) (|tablePow| . 1748987) (|solveid| . 1748741)
 (|testModulus| . 1748507) (|generalizedMoebiusFunction| . 1748247)
 (|canonicalMoebiusFunction| . 1748027) (|moebiusMatrix| . 1747625)
 (|removeZeros| . 1747378) (|infsum| . 1747064) (|HenselLift| . 1746729)
 (|completeHensel| . 1746472) (|multMonom| . 1745887) (|build| . 1745302)
 (|leadingIndex| . 1744723) (|leadingExponent| . 1744144) (|option| . 1743635)
 (|checkOptions| . 1743496) (|displayKind| . 1743276) (|indexName| . 1743056)
 (|variableName| . 1742836) (|functionNames| . 1742589)
 (|functionName| . 1742369) (|one| . 1742147) (|checkExtraValues| . 1741925)
 (|safety| . 1741672) (|allDegrees| . 1741450) (|maxMixedDegree| . 1741197)
 (|maxDegree| . 1740893) (|maxLevel| . 1740589) (|Somos| . 1740291)
 (|homogeneous| . 1739993) (|maxPower| . 1739695) (|maxSubst| . 1739397)
 (|maxShift| . 1739093) (|maxDerivative| . 1738789) (|GospersMethod| . 1738201)
 (|primitiveMonomials| . 1737895) (|totalDegreeSorted| . 1737571)
 (|totalDegree| . 1736963) (|monomials| . 1736493) (|nextSubsetGray| . 1736344)
 (|firstSubsetGray| . 1736191) (|clipPointsDefault| . 1736018)
 (|drawToScale| . 1735845) (|adaptive| . 1735452) (|putColorInfo| . 1735290)
 (|appendPoint| . 1735158) (|component| . 1734597) (|ranges| . 1734104)
 (|pointLists| . 1733982) (|makeGraphImage| . 1733367)
 (|sendGraphImage| . 1733289) (|graphImage| . 1733245) (|groebSolve| . 1732804)
 (|testDim| . 1732467) (|genericPosition| . 1731928)
 (|toPermutationIfCan| . 1731443) (|directProduct| . 1731250)
 (|refactor| . 1731196) (|groupPresentation| . 1730859) (F2EXPRR . 1730402)
 (EXPRR2F . 1729938) (|iim2| . 1729782) (|iiretractVar| . 1729574)
 (|guess| . 1718125) (|guessExpRat| . 1708242) (|guessBinRat| . 1698359)
 (|guessAlgDep| . 1693874) (|guessFE| . 1689497) (|guessAlg| . 1685120)
 (|guessPade| . 1680743) (|algDepHP| . 1662086) (|substHP| . 1644081)
 (|shiftHP| . 1607024) (|diffHP| . 1569967) (|guessRec| . 1562294)
 (|guessPRec| . 1554621) (|guessRat| . 1546948) (|guessADE| . 1539275)
 (|guessHolo| . 1531602) (|HankelMatrix| . 1531449) (|hashUpdate!| . 1531361)
 (|hash| . 1531272) (|update!| . 1531181) (|lfunc| . 1531096)
 (|inHallBasis?| . 1530970) (|reorder| . 1530206) (|heap| . 1530086)
 (|gcdprim| . 1529934) (|gcdcofact| . 1529775) (|gcdcofactprim| . 1529616)
 (|lintgcd| . 1529429) (|hex| . 1529316) (|members| . 1528759)
 (|parts| . 1528310) (|count| . 1527848) (|every?| . 1527618)
 (|any?| . 1527388) (|map!| . 1526920) (|dispGenerators| . 1526838)
 (|homologyzc2| . 1526796) (|homologyc2| . 1526754) (|homologyzz| . 1526712)
 (|homologyz| . 1526670) (|homology0| . 1526628) (|homologyGroup| . 1526533)
 (|antipode| . 1526392) (|exprex| . 1526272) (|factorList| . 1525563)
 (|listConjugateBases| . 1524938) (|matrixGcd| . 1524476)
 (|divideIfCan!| . 1524022) (|leastPower| . 1523593) (|idealiser| . 1522752)
 (|idealiserMatrix| . 1522332) (|moduleSum| . 1521821)
 (|mapUnivariate| . 1521085) (|mapUnivariateIfCan| . 1520707)
 (|mapMatrixIfCan| . 1520285) (|mapBivariate| . 1519846)
 (|fullDisplay| . 1518932) (|relationsIdeal| . 1518433) (|saturate| . 1517884)
 (|groebner?| . 1517599) (|groebnerIdeal| . 1517307) (|ideal| . 1516293)
 (|leadingIdeal| . 1516036) (|backOldPos| . 1515594)
 (|generalPosition| . 1515089) (|quotient| . 1514337) (|zeroDim?| . 1513731)
 (|inRadical?| . 1513443) (|in?| . 1513155) (|element?| . 1512867)
 (|zeroDimPrime?| . 1512208) (|zeroDimPrimary?| . 1511549)
 (|radical| . 1510918) (|primaryDecomp| . 1509738)
 (|numberOfMonomials| . 1509536) (|eigenvector| . 1508885)
 (|generalizedEigenvector| . 1507052) (|eigenvalues| . 1505987)
 (|eigenvectors| . 1504013) (|generalizedEigenvectors| . 1502210)
 (|removeRepeats!| . 1501993) (|shrinkable| . 1501706)
 (|physicalLength!| . 1501422) (|physicalLength| . 1501113)
 (|flexibleArray| . 1500826) (|parseILTerm| . 1500558) (|parseIL2| . 1500290)
 (|parseIL| . 1500214) (|proposition| . 1500138)
 (|generalizedInverse| . 1499817) (|row_operation_base| . 1499456)
 (|row_operation_modular| . 1499092) (|do_modular_solve| . 1498469)
 (|do_poly_integer| . 1497372) (|merge_exponents| . 1497117)
 (|merge2| . 1496700) (|setFieldInfo| . 1496399) (|pol| . 1496185)
 (|xn| . 1495955) (|dAndcExp| . 1495705) (|repSq| . 1495499)
 (|expPot| . 1495295) (|qPot| . 1495100) (|lookup| . 1494813)
 (|normal?| . 1494237) (|normalElement| . 1493899)
 (|minimalPolynomial| . 1493239) (|incidenceAlgebra| . 1492820)
 (|increment| . 1492652) (|incrementBy| . 1492481) (|charpol| . 1492186)
 (|solve1| . 1491890) (|innerEigenvectors| . 1491277) (|compile| . 1491147)
 (|declare| . 1491020) (|parse| . 1490941) (|unparse| . 1490862)
 (|flatten| . 1490679) (|binary| . 1490069) (|interpret_in_new_env| . 1489993)
 (|packageCall| . 1489630) (|coerceToType| . 1489499) (|atType| . 1489368)
 (|pretendOfType| . 1489237) (|interpret| . 1489032)
 (|infiniteProduct| . 1488862) (|evenInfiniteProduct| . 1488692)
 (|oddInfiniteProduct| . 1488522) (|generalInfiniteProduct| . 1488318)
 (|innerSolve1| . 1487726) (|innerSolve| . 1487370) (|makeEq| . 1487016)
 (|modularGcdPrimitive| . 1486724) (|reduction| . 1486117)
 (|signAround| . 1485342) (|invmod| . 1485281) (|powmod| . 1485217)
 (|mulmod| . 1485153) (|submod| . 1485089) (|addmod| . 1485025)
 (|mask| . 1484967) (|dec| . 1484909) (|inc| . 1484851)
 (|symmetricRemainder| . 1484790) (|positiveRemainder| . 1484729)
 (|bit?| . 1484632) (|seedRandom| . 1484560) (|algint| . 1483975)
 (|algintegrate| . 1483267) (|palgintegrate| . 1482528) (|algextint| . 1479577)
 (|algextint_base| . 1477964) (|bitCoef| . 1477831) (|bitTruth| . 1477670)
 (|contains?| . 1477423) (|qinterval| . 1477211) (|interval| . 1476297)
 (|li_int| . 1475117) (|poly_int| . 1473937) (|solve_u| . 1473295)
 (|lfextendedint| . 1472652) (|lfintegrate| . 1471971)
 (|BasicMethod| . 1471808) (|PollardSmallFactor| . 1471678)
 (|palgint0| . 1470321) (|palgRDE0| . 1468970) (|rationalize_ir| . 1468373)
 (|palgLODE0| . 1466660) (|get_elliptics| . 1466048) (|gen_ef| . 1465596)
 (|fsqrt| . 1465210) (|carmichaelLambda| . 1465102)
 (|chineseRemainder| . 1463978) (|divisors| . 1463833) (|eulerPhi| . 1463725)
 (|fibonacci| . 1463617) (|harmonic| . 1463468) (|jacobi| . 1463357)
 (|moebiusMu| . 1463081) (|numberOfDivisors| . 1462973)
 (|sumOfDivisors| . 1462865) (|sumOfKthPowerDivisors| . 1462715)
 (|HermiteIntegrate| . 1460835) (|unitPart| . 1460675) (|palgint| . 1460064)
 (|palgRDE| . 1459448) (|param_RDE| . 1458561) (|param_LODE| . 1457674)
 (|palgLODE| . 1456854) (|primextint| . 1456110) (|expextint| . 1455354)
 (|diffextint| . 1454769) (|unkextint| . 1454184) (|monologextint| . 1453262)
 (|polylog_int| . 1452526) (|extendedint| . 1449536) (|logextint| . 1447613)
 (|splitConstant| . 1447026) (|pmintegrate| . 1446343) (|infieldint| . 1446036)
 (|integerIfCan| . 1445887) (|internalIntegrate| . 1444186)
 (|infieldIntegrate| . 1443874) (|varselect| . 1443652) (|kmax| . 1443430)
 (|ksec| . 1443168) (|vark| . 1442911) (|removeConstantTerm| . 1442684)
 (|mkPrim| . 1442406) (|primintegrate| . 1441417) (|expintegrate| . 1440476)
 (|lambintegrate| . 1439738) (|monomialIntegrate| . 1439277)
 (|monomialIntPoly| . 1438989) (|inverseLaplace| . 1438392)
 (|leadingTerm| . 1438142) (|constructOrdered| . 1437883)
 (|leadingSupport| . 1437693) (|quadraticNonResidue| . 1437592)
 (|iprint| . 1437468) (|elem?| . 1437340) (|notelem| . 1437166)
 (|logpart| . 1436811) (|ratpart| . 1436718) (|mkAnswer| . 1436279)
 (|perfectNthPower?| . 1436093) (|perfectNthRoot| . 1435701)
 (|approxNthRoot| . 1435543) (|perfectSquare?| . 1435406)
 (|perfectSqrt| . 1435291) (|approxSqrt| . 1435182) (|complexExpand| . 1434287)
 (|complexIntegrate| . 1433226)
 (|dimensionOfIrreducibleRepresentation| . 1433072)
 (|irreducibleRepresentation| . 1432479) (|checkRur| . 1431828)
 (|cAcsch| . 1431652) (|cAsech| . 1431476) (|cAcoth| . 1431300)
 (|cAtanh| . 1431124) (|cAcosh| . 1430948) (|cAsinh| . 1430772)
 (|cCsch| . 1430596) (|cSech| . 1430420) (|cCoth| . 1430244)
 (|cTanh| . 1430068) (|cCosh| . 1429892) (|cSinh| . 1429716)
 (|cAcsc| . 1429540) (|cAsec| . 1429364) (|cAcot| . 1429188)
 (|cAtan| . 1429012) (|cAcos| . 1428836) (|cAsin| . 1428660) (|cCsc| . 1428484)
 (|cSec| . 1428308) (|cCot| . 1428132) (|cTan| . 1427956) (|cCos| . 1427780)
 (|cSin| . 1427604) (|cLog| . 1427428) (|cExp| . 1427252)
 (|cRationalPower| . 1427054) (|cPower| . 1426875)
 (|seriesToOutputForm| . 1426492) (|iCompose| . 1426375)
 (|taylorQuoByVar| . 1426261) (|iExquo| . 1426104) (|getStream| . 1425910)
 (|getRef| . 1425725) (|makeSeries| . 1425457) (GF2FG . 1424905)
 (FG2F . 1424391) (F2FG . 1423877) (|explogs2trigs| . 1423325)
 (|do_liou| . 1422682) (|swap!| . 1422475) (|fill!| . 1422056)
 (|entry?| . 1421811) (|indices| . 1421470) (|index?| . 1421309)
 (|dimS| . 1421042) (|dimJ| . 1420775) (|Pr| . 1420613) (|Pm| . 1420448)
 (|integrateIfCan| . 1420332) (|derivativeOf?| . 1420210) (|weight| . 1419100)
 (|type| . 1419009) (|allRepeated| . 1418602) (|m2r| . 1418213)
 (|r2m| . 1417824) (|repeatedIndex| . 1417708) (|multiIndex| . 1417589)
 (|numerJP| . 1417379) (|autoReduce| . 1417222) (|reduceMod| . 1417062)
 (|simpMod| . 1416273) (|simpOne| . 1416151) (|dSubst| . 1416023)
 (|solveFor| . 1415892) (|sortLD| . 1415735) (|leadingDer| . 1415613)
 (|freeOf?| . 1415149) (|orderDim| . 1414894) (|formalDiff2| . 1414202)
 (|formalDiff| . 1413662) (|class| . 1413011) (|const?| . 1412861)
 (|jetVariables| . 1412711) (|numDepVar| . 1412227) (|numIndVar| . 1411743)
 (|getNotation| . 1411307) (|setNotation| . 1410798) (P . 1409480)
 (U . 1409042) (X . 1408604) (|ground| . 1407869) (|printSys| . 1407624)
 (|jacobiMatrix| . 1406927) (|makeSystem| . 1406713) (|setSimpMode| . 1406273)
 (|extractSymbol| . 1405837) (|analyseSymbol| . 1405370)
 (|prolongSymbol| . 1405138) (|prolongMV| . 1404745) (|project| . 1404517)
 (|contract| . 1403191) (|differentials| . 1402992) (|dP| . 1402720)
 (|dU| . 1402506) (|dX| . 1402292) (|d| . 1401952) (|setFormat!| . 1401701)
 (|setFormats!| . 1401433) (|eqRep?| . 1401231) (|ground?| . 1400427)
 (|prolong| . 1399507) (|lie| . 1399114) (|directions| . 1398916)
 (|diffP| . 1398645) (|diffU| . 1398432) (|diffX| . 1398219)
 (|search| . 1398081) (|keys| . 1397924) (|key?| . 1397764)
 (|symbolIfCan| . 1397627) (|kernel| . 1396942) (|argument| . 1396540)
 (|constantKernel| . 1396370) (|constantIfCan| . 1396191) (|kovacic| . 1395232)
 (|toStringConven| . 1395076) (|unbind| . 1394995) (|bind| . 1394914)
 (|subst| . 1394075) (|free?| . 1393957) (|getBoundValue| . 1393828)
 (|isFreeNode?| . 1393710) (|isBoundNode?| . 1393592) (|isLambda?| . 1393474)
 (|isCompound?| . 1393356) (|parseLambda| . 1393239) (|laplace| . 1392631)
 (|latticeJoinOfMeets| . 1392403) (|toStringUnwrapped| . 1392151)
 (|opType| . 1391899) (|deductions| . 1391580) (|meet| . 1391206)
 (|emptyLattice| . 1391104) (|latticeMeetOfJoins| . 1390876)
 (|logicF| . 1390736) (|logicT| . 1390596) (|trailingCoefficient| . 1390423)
 (|normalizeIfCan| . 1389968) (|polCase| . 1389590) (|distFact| . 1388662)
 (|identification| . 1388321) (|LyndonCoordinates| . 1387968)
 (|LyndonBasis| . 1387594) (|zeroDimensional?| . 1386972)
 (|fglmIfCan| . 1386401) (|lexTriangular| . 1385945)
 (|squareFreeLexTriangular| . 1384947) (|belong?| . 1382853)
 (|fresnelC| . 1382176) (|fresnelS| . 1381499) (|erfi| . 1380822)
 (|erf| . 1380145) (|dilog| . 1379674) (|li| . 1378997) (|Shi| . 1378320)
 (|Ci| . 1377643) (|Si| . 1376966) (|Ei| . 1376289) (|linGenPos| . 1375848)
 (|groebgen| . 1375409) (|totolex| . 1375098) (|minPol| . 1374373)
 (|computeBasis| . 1374134) (|coord| . 1373424) (|anticoord| . 1373091)
 (|intcompBasis| . 1372800) (|choosemon| . 1372512) (|close!| . 1372330)
 (|pack!| . 1372184) (|library| . 1372105) (|complexLimit| . 1370902)
 (|dehomogenize| . 1370188) (|lin_comb!| . 1369933) (|lin_comb| . 1368030)
 (|linearlyDependent?| . 1367801) (|linearDependence| . 1367572)
 (|solveLinear| . 1365784) (|reducedSystem| . 1364600) (|qnew| . 1363543)
 (|append!| . 1363382) (|equal?| . 1363171) (|qequal?| . 1362918)
 (|nelem| . 1362760) (|qzero?| . 1361460) (|qsemizero?| . 1361259)
 (|qdiagonal?| . 1361064) (|qdiagonal| . 1360869)
 (|uppertriangular?| . 1360680) (|quppertriangular?| . 1360485)
 (|qnilpotent?| . 1360290) (|qcolumnIndices| . 1359619)
 (|qrowIndices| . 1358948) (|subPencil| . 1358607)
 (|removeRowsColumns| . 1358237) (|insertRowsColumns| . 1357867)
 (|swapRows!| . 1357262) (|qswapRows!| . 1356910) (|addRows!| . 1356552)
 (|qaddRows!| . 1356194) (|qmultiplyRow!| . 1356030) (|multiplyRow!| . 1355678)
 (|qswapColumns!| . 1355326) (|swapColumns!| . 1354721)
 (|addColumns!| . 1354363) (|qaddColumns!| . 1354005)
 (|multiplyColumn!| . 1353653) (|qmultiplyColumn!| . 1353489)
 (|qscaleBlock!| . 1353313) (|transformRows!| . 1352992)
 (|transformColumns!| . 1352671) (|leftIdentity| . 1352522)
 (|rightIdentity| . 1352373) (|qsetelt!| . 1351574) (|setsubMatrix!| . 1351118)
 (|setsubPencil!| . 1350951) (|blockElimination| . 1350160)
 (|eliminationTransformations| . 1349269) (|eliminationEquations| . 1348438)
 (|eliminationGroebner| . 1348163) (|eliminationSolve| . 1346685)
 (|setDifference| . 1346564) (|setIntersection| . 1346443)
 (|setUnion| . 1346322) (|tails| . 1346199) (|append| . 1345960)
 (|match| . 1344649) (|splitList| . 1344370) (|topologicalSort!| . 1344188)
 (|topologicalSort| . 1343826) (|cartesianPower| . 1343614)
 (|minShift| . 1343455) (|csolve_pol| . 1343101) (|csolve_rf| . 1342734)
 (|csolve_rmat| . 1342365) (LLL . 1342262) (|extendedLLL!| . 1342110)
 (|extendedLLL| . 1341855) (|find_relation| . 1341670) (|substitute| . 1341556)
 (|duplicates?| . 1341420) (|mapGen| . 1340948) (|mapExpon| . 1340419)
 (|leftMult| . 1340248) (|rightMult| . 1340077) (|makeUnit| . 1339912)
 (|nthFactor| . 1339458) (|nthExpon| . 1338965) (|makeMulti| . 1338731)
 (|makeTerm| . 1338560) (|listOfMonoms| . 1338319) (|sort!| . 1337859)
 (|reverse!| . 1337419) (|copyInto!| . 1337202) (|sorted?| . 1336771)
 (|insert| . 1336292) (|delete| . 1336013) (|delta_deriv| . 1335741)
 (|symmetricSquare| . 1335587) (|factor1| . 1334952) (|testnp| . 1334104)
 (|testfn| . 1333045) (|testf2| . 1331621) (|testll| . 1330503)
 (|testlc| . 1329327) (|testln| . 1326387) (|testlw| . 1324838)
 (|testcp| . 1324039) (|testco| . 1323482) (|testcx| . 1322904)
 (|testpd| . 1322313) (|testfr| . 1319680) (|testsb| . 1318715)
 (|testro| . 1317921) (|testfo| . 1315288) (|testsc| . 1314570)
 (|testfg| . 1313795) (|testlp| . 1313109) (|testis| . 1312735)
 (|testgt| . 1312476) (|gen_exp| . 1311167) (|ge_minimal| . 1308780)
 (|symmetricProduct| . 1308386) (|symmetricPower| . 1307900)
 (|directSum| . 1307506) (|false| . 1307465) (|true| . 1307424)
 (|entries| . 1307164) (|loop| . 1307060) (|lcmCoef| . 1306870)
 (|solveLinearPolynomialEquationByFractions| . 1306602) (|list| . 1306512)
 (|hasSolution?| . 1305831) (|solveUniquely| . 1305641) (|linSolve| . 1305062)
 (|intoMatrix| . 1304556) (|LUDecomp| . 1304231) (|LUSolve| . 1304021)
 (|LUInverse| . 1303758) (|LyndonWordsList| . 1303536)
 (|LyndonWordsList1| . 1303290) (|lyndonIfCan| . 1303152) (|lyndon| . 1303020)
 (|lyndon?| . 1302860) (|lexico| . 1302444)
 (|numberOfComputedEntries| . 1302302) (|rst| . 1302199) (|frst| . 1302096)
 (|lazyEvaluate| . 1301993) (|lazy?| . 1301862) (|explicitlyEmpty?| . 1301731)
 (|explicitEntries?| . 1301600) (|matrixDimensions| . 1301432)
 (|matrixConcat3D| . 1301288) (|plus| . 1301147) (|identityMatrix| . 1300963)
 (|zeroMatrix| . 1300379) (|algebraicGcd| . 1299484) (|pseudoRem| . 1299298)
 (|canonicalIfCan| . 1299113) (|pack_modulus| . 1298827) (|MPtoMPT| . 1298570)
 (|pack_exps| . 1298308) (|repack1| . 1298029) (|pack_exps0| . 1297805)
 (|m_inverse| . 1297548) (|rightRecip| . 1297319) (|leftRecip| . 1297090)
 (|leftPower| . 1296892) (|rightPower| . 1296694) (|one?| . 1296233)
 (|element| . 1295916) (|rowMatrix| . 1295602) (|rows| . 1294955)
 (|columnMatrix| . 1294641) (|columns| . 1293994) (|subMatrix| . 1292881)
 (|bandMatrix| . 1292148) (|blockSplit| . 1290630) (|iter| . 1290427)
 (|arg1| . 1290270) (|arg2| . 1290113) (|comp| . 1289834) (|nullary| . 1289699)
 (|id| . 1289595) (|recur| . 1289203) (|const| . 1288679) (|curry| . 1288463)
 (|diag| . 1288244) (|curryRight| . 1287978) (|curryLeft| . 1287712)
 (|constantRight| . 1287449) (|constantLeft| . 1287186) (|twist| . 1286920)
 (|kronecker_prod1| . 1286432) (|positivePower| . 1286136)
 (|kroneckerSum| . 1285665) (|kroneckerProduct| . 1285120)
 (|newGreek| . 1285032) (|resetNewGreek| . 1284946) (|partial| . 1284858)
 (|alpha| . 1284497) (|beta| . 1284409) (|gamma| . 1284212)
 (|epsilon| . 1284124) (|zeta| . 1283953) (|eta| . 1283865) (|theta| . 1283777)
 (|iota| . 1283689) (|kappa| . 1283601) (|lambda| . 1283048) (|mu| . 1282960)
 (|nu| . 1282872) (|xi| . 1282784) (|omicron| . 1282696) (|rho| . 1282608)
 (|sigma| . 1282520) (|tau| . 1282432) (|upsilon| . 1282344) (|phi| . 1282256)
 (|chi| . 1282168) (|psi| . 1282080) (|Alpha| . 1281992) (|Epsilon| . 1281904)
 (|Zeta| . 1281816) (|Eta| . 1281728) (|Theta| . 1281640) (|Iota| . 1281552)
 (|Kappa| . 1281464) (|Lambda| . 1281376) (|Mu| . 1281288) (|Nu| . 1281200)
 (|Xi| . 1281112) (|Omicron| . 1281024) (|Pi| . 1280936) (|Rho| . 1280848)
 (|Sigma| . 1280760) (|Tau| . 1280672) (|Upsilon| . 1280584) (|Phi| . 1280496)
 (|Chi| . 1279733) (|Psi| . 1279645) (|Omega| . 1279557) (|elRow1!| . 1279232)
 (|elRow2!| . 1278904) (|elColumn2!| . 1278576)
 (|fractionFreeGauss!| . 1278241) (|invertIfCan| . 1277778) (|copy!| . 1277631)
 (|plus!| . 1277481) (|minus!| . 1277186) (|leftScalarTimes!| . 1277036)
 (|rightScalarTimes!| . 1276886) (|times!| . 1276736) (|power!| . 1276534)
 (|gradient| . 1276202) (|divergence| . 1275907) (|laplacian| . 1275612)
 (|hessian| . 1275280) (|bandedHessian| . 1274906) (|jacobian| . 1274574)
 (|bandedJacobian| . 1274197) (|duplicates| . 1273925)
 (|removeDuplicates!| . 1273680) (|meshPar2Var| . 1272416)
 (|meshFun2Var| . 1271908) (|meshPar1Var| . 1271541) (|ptFunc| . 1271101)
 (|ldegree| . 1270879) (|subst_vars| . 1270691) (|trial_division| . 1270357)
 (|toPermutation| . 1270183) (|toCayleyGraph| . 1269728) (|limit| . 1265854)
 (|contraAdjoint| . 1265530) (|coAdjoint| . 1265206)
 (|multifunctionGraph| . 1263483) (|minimumExponent| . 1263320)
 (|maximumExponent| . 1263157) (|precision| . 1262717) (|mantissa| . 1262540)
 (|ini_rdata| . 1262326) (|get_mod| . 1262115) (|get_char| . 1261869)
 (|get_extension_degree| . 1261623) (|red_pol!| . 1261409)
 (|mod_exp| . 1261157) (|monomial1| . 1260946) (|copy_poly| . 1260694)
 (|sub1!| . 1260480) (|add_poly| . 1260263) (|sub_poly| . 1260046)
 (|random_poly| . 1259797) (|empty_poly| . 1259589) (|empty_mat| . 1259381)
 (|empty_mat?| . 1259135) (|trim_mat!| . 1258848) (|split_mat!| . 1258555)
 (|shift_mat!| . 1258271) (|copy_mat_part| . 1258022)
 (|power_matrix| . 1257693) (|modular_compose| . 1257424) (|rowEch| . 1257273)
 (|rowEchLocal| . 1257119) (|rowEchelonLocal| . 1256962)
 (|normalizedDivide| . 1256351) (|maxint| . 1256166)
 (|binaryFunction| . 1255860) (|makeFloatFunction| . 1255356)
 (|make_real_part_function| . 1255122)
 (|make_imaginary_part_function| . 1254888) (|function| . 1253656)
 (|makeRecord| . 1253463) (|unaryFunction| . 1253198)
 (|compiledFunction| . 1252620) (|corrPoly| . 1251935) (|lifting| . 1250328)
 (|coerceS| . 1250088) (|mfactor| . 1249242) (|ddfact| . 1247595)
 (|HP_solve_I| . 1246813) (|HP_solve_A| . 1245967) (|HP_solve_P| . 1245145)
 (|HP_solve_PA| . 1244250) (|HP_solve_M| . 1243443) (|check_sol1a| . 1243122)
 (|VSUPI_to_VPA| . 1242903) (|VSUPPI_to_VPA| . 1242561)
 (|LLFI_to_LPA| . 1242350) (|LLFPI_to_LPA| . 1242039)
 (|get_variables| . 1241824) (|unpack_poly| . 1241469) (|HP_solve| . 1240661)
 (|gen_Monte_Carlo_check| . 1240081) (|LLF_to_LPA| . 1239716)
 (|VSUPS_to_VPA| . 1239318) (|frobenius| . 1239122) (|UnVectorise| . 1238938)
 (|Vectorise| . 1238754) (|setPoly| . 1238607) (|index| . 1237897)
 (|exponent| . 1236714) (|exQuo| . 1235700) (|cumulant2moment| . 1235562)
 (|moment2cumulant| . 1235424) (|moment2nthJacobi| . 1235175)
 (|moment2jacobi| . 1234870) (|moment2jacobi2| . 1234624)
 (|freeCumulant2moment| . 1234486) (|moment2freeCumulant| . 1234348)
 (|booleanCumulant2moment| . 1234210) (|moment2booleanCumulant| . 1234072)
 (|monotoneCumulant2moment| . 1233934)
 (|monotoneCumulant2momentPoly| . 1233726) (|hankelDeterminant| . 1233539)
 (|jacobi2poly| . 1233332) (|moment2Stransform| . 1232903)
 (|moment2monotoneCumulant| . 1232560) (|derivationCoordinates| . 1232246)
 (|generator| . 1230486) (|splitSquarefree| . 1230128)
 (|normalDenom| . 1229883) (|totalfract| . 1229218) (|pushdterm| . 1228635)
 (|pushucoef| . 1228037) (|pushuconst| . 1227549) (|mrv_normalize| . 1227023)
 (|mrv_limit| . 1224213) (|mrv_limit1| . 1223996) (|mrv_sign| . 1223480)
 (|mrv_cmp| . 1222791) (|mrv_set| . 1222073) (|expr_to_series| . 1221467)
 (|mrv_rewrite| . 1220791) (|mrv_rewrite0| . 1220543) (|multiset| . 1220245)
 (|systemCommand| . 1220123) (|mergeDifference| . 1219994)
 (|logDependenceQ| . 1219760) (|compdegd| . 1219286) (|univcase| . 1218977)
 (|consnewpol| . 1218378) (|nsqfree| . 1217527) (|intChoose| . 1216591)
 (|coefChoose| . 1216113) (|myDegree| . 1215647) (|normDeriv2| . 1215285)
 (|plenaryPower| . 1215123) (|commutator| . 1214848) (|associator| . 1214786)
 (|antiCommutator| . 1214723) (|naiveBeckermannLabahn| . 1214116)
 (|naiveBeckermannLabahnMultipoint| . 1213541)
 (|naiveBeckermannLabahn1| . 1212596) (|naiveBeckermannLabahn0| . 1212142)
 (|reduceBasis0| . 1211684) (|reduceBasis| . 1211239)
 (|complexEigenvalues| . 1210984) (|complexEigenvectors| . 1210490)
 (|newton| . 1210294) (|groebner| . 1206817) (|redPol| . 1206189)
 (|hMonic| . 1205637) (|virtualDegree| . 1204993) (|sPol| . 1204101)
 (|shift| . 1203688) (|normalizedAssociate| . 1203337) (|normalize| . 1200774)
 (|outputArgs| . 1200358) (|normInvertible?| . 1199884)
 (|normFactors| . 1199497) (|npcoef| . 1198609)
 (|characteristicPolynomial| . 1196266) (|realEigenvalues| . 1196038)
 (|realEigenvectors| . 1195648) (|halfExtendedResultant2| . 1195356)
 (|halfExtendedResultant1| . 1195064) (|extendedResultant| . 1194696)
 (|subResultantsChain| . 1194476) (|lazyPseudoQuotient| . 1194362)
 (|lazyPseudoRemainder| . 1194248) (|bernoulliB| . 1194010)
 (|eulerE| . 1193772) (|numeric| . 1192053) (|complexNumeric| . 1188011)
 (|numericIfCan| . 1186578) (|complexNumericIfCan| . 1183377)
 (|FormatArabic| . 1183249) (|ScanArabic| . 1183121) (|FormatRoman| . 1182993)
 (|ScanRoman| . 1182865) (|ScanFloatIgnoreSpaces| . 1182747)
 (|ScanFloatIgnoreSpacesIfCan| . 1182623) (|FormatRadix| . 1182500)
 (|rk4| . 1181750) (|rk4a| . 1181371) (|rk4qc| . 1180296) (|rk4f| . 1179923)
 (|aromberg| . 1179515) (|asimpson| . 1179107) (|atrapezoidal| . 1178699)
 (|romberg| . 1178294) (|simpson| . 1177889) (|trapezoidal| . 1177484)
 (|rombergo| . 1177079) (|simpsono| . 1176674) (|trapezoidalo| . 1176269)
 (|inf| . 1175997) (|sup| . 1175725) (|inv| . 1174404) (|imagE| . 1174293)
 (|imagk| . 1174182) (|imagj| . 1174071) (|imagi| . 1173960)
 (|octon| . 1173692) (|constDsolve| . 1172909) (|expint| . 1172306)
 (|diff| . 1171497) (|algDsolve| . 1169908) (|denomLODE| . 1168895)
 (|indicialEquations| . 1166711) (|indicialEquation| . 1165711)
 (|denomRicDE| . 1165210) (|leadingCoefficientRicDE| . 1164619)
 (|constantCoefficientRicDE| . 1163988) (|changeVar| . 1163028)
 (|ratDsolve| . 1160575) (|indicialEquationAtInfinity| . 1159751)
 (|integrate_sols| . 1158221) (|reduceLODE| . 1157175) (|singRicDE| . 1155647)
 (|polyRicDE| . 1154214) (|ricDsolve| . 1149916) (|triangulate| . 1147839)
 (|solveInField| . 1145655) (|wronskianMatrix| . 1145154)
 (|variationOfParameters| . 1144919) (|addVertex| . 1144812)
 (|boolWordPermute| . 1144491) (|reindex| . 1144212) (|subtract| . 1144159)
 (|sameFace?| . 1143984) (|isSubsetOf?| . 1143895) (|allSubsets| . 1143271)
 (|getIndexesSigned| . 1143176) (|getIndexes| . 1143063)
 (|orientedFacetIfCan| . 1142949) (|orientedFacetSigned| . 1142854)
 (|orientedFacetUnsigned| . 1142759) (|orientedFacet| . 1142521)
 (|atom_to_string| . 1142396) (|operator| . 1139981) (|arguments| . 1139843)
 (|has_op?| . 1139687) (|is_symbol?| . 1139531) (|precondition| . 1139440)
 (|OMmakeConn| . 1139336) (|OMcloseConn| . 1139248)
 (|OMconnInDevice| . 1139143) (|OMconnOutDevice| . 1139038)
 (|OMconnectTCP| . 1138873) (|OMbindTCP| . 1138738) (|OMopenFile| . 1138602)
 (|OMopenString| . 1138469) (|OMclose| . 1138387) (|OMsetEncoding| . 1138256)
 (|OMputApp| . 1138174) (|OMputAtp| . 1138092) (|OMputAttr| . 1138010)
 (|OMputBind| . 1137928) (|OMputBVar| . 1137846) (|OMputError| . 1137764)
 (|OMputObject| . 1137682) (|OMputEndApp| . 1137600) (|OMputEndAtp| . 1137518)
 (|OMputEndAttr| . 1137436) (|OMputEndBind| . 1137354)
 (|OMputEndBVar| . 1137272) (|OMputEndError| . 1137190)
 (|OMputEndObject| . 1137108) (|OMputInteger| . 1136986)
 (|OMputFloat| . 1136860) (|OMputVariable| . 1136739) (|OMputString| . 1136618)
 (|OMputSymbol| . 1136494) (|OMgetApp| . 1136412) (|OMgetAtp| . 1136330)
 (|OMgetAttr| . 1136248) (|OMgetBind| . 1136166) (|OMgetBVar| . 1136084)
 (|OMgetError| . 1136002) (|OMgetObject| . 1135920) (|OMgetEndApp| . 1135838)
 (|OMgetEndAtp| . 1135756) (|OMgetEndAttr| . 1135674)
 (|OMgetEndBind| . 1135592) (|OMgetEndBVar| . 1135510)
 (|OMgetEndError| . 1135428) (|OMgetEndObject| . 1135346)
 (|OMgetInteger| . 1135259) (|OMgetFloat| . 1135168)
 (|OMgetVariable| . 1135082) (|OMgetString| . 1134996)
 (|OMgetSymbol| . 1134857) (|OMgetType| . 1134771)
 (|OMencodingBinary| . 1134721) (|OMencodingSGML| . 1134671)
 (|OMencodingXML| . 1134621) (|OMencodingUnknown| . 1134571)
 (|omError| . 1134429) (|errorInfo| . 1134335) (|errorKind| . 1134232)
 (|OMReadError?| . 1134142) (|OMUnknownSymbol?| . 1134052)
 (|OMUnknownCD?| . 1133962) (|OMParseError?| . 1133872) (|OMwrite| . 1132436)
 (|OMread| . 1132310) (|OMreadFile| . 1132192) (|OMreadStr| . 1132074)
 (|OMlistCDs| . 1131974) (|OMlistSymbols| . 1131844)
 (|OMsupportsCD?| . 1131722) (|OMsupportsSymbol?| . 1131597)
 (|OMunhandledSymbol| . 1131475) (|OMreceive| . 1131339) (|OMsend| . 1131175)
 (|OMserve| . 1131040) (|infinity| . 1130830) (|makeop| . 1130498)
 (|opeval| . 1130194) (|evaluateInverse| . 1129897) (|evaluate| . 1128825)
 (|conjug| . 1128519) (|knownHandler?| . 1128325) (|handler| . 1128166)
 (|setHandler!| . 1128004) (|removeHandler!| . 1127813)
 (|getDatabase| . 1127676) (|whatInfinity| . 1127529) (|infinite?| . 1127262)
 (|finite?| . 1126910) (|minusInfinity| . 1126702) (|plusInfinity| . 1126494)
 (|pureLex| . 1126271) (|totalLex| . 1126048) (|reverseLex| . 1125825)
 (|leftLcm| . 1125678) (|right_ext_ext_GCD| . 1125331)
 (|rightExtendedGcd| . 1125047) (|rightGcd| . 1124900)
 (|rightExactQuotient| . 1124747) (|rightRemainder| . 1124600)
 (|rightQuotient| . 1124453) (|rightLcm| . 1124306)
 (|leftExtendedGcd| . 1124022) (|leftGcd| . 1123875)
 (|leftExactQuotient| . 1123722) (|leftRemainder| . 1123575)
 (|leftQuotient| . 1123428) (|times| . 1123157) (|monicLeftDivide| . 1122582)
 (|monicRightDivide| . 1122007) (|leftDivide| . 1121450)
 (|rightDivide| . 1120893) (|output| . 1120508) (|outputList| . 1120385)
 (|hcenter| . 1120222) (|pad| . 1120050) (|lines| . 1119960)
 (|width| . 1119660) (|height| . 1118855) (|or| . 1118708) (|and| . 1118561)
 (|quo| . 1118400) (|rem| . 1118239) (~= . 1118104) (|blankSeparate| . 1118009)
 (|semicolonSeparate| . 1117914) (|commaSeparate| . 1117819) (|pile| . 1117528)
 (|paren| . 1117277) (|bracket| . 1116662) (|brace| . 1116522)
 (|prod| . 1116376) (|overlabel| . 1116326) (|overbar| . 1116045)
 (|prime| . 1115679) (|quote| . 1115591) (|supersub| . 1115493)
 (|presuper| . 1115443) (|presub| . 1115393) (|super| . 1115343)
 (|sub| . 1115293) (|rarrow| . 1115243) (|assign| . 1110275)
 (|slash| . 1109988) (|over| . 1109938) (|zag| . 1109718) (|box| . 1109287)
 (|label| . 1109237) (|infix?| . 1109156) (|postfix| . 1109106)
 (|infix| . 1108417) (|prefix| . 1107785) (|vconcat| . 1107128)
 (|hconcat| . 1106894) (|rspace| . 1106808) (|vspace| . 1106727)
 (|hspace| . 1106646) (|messagePrint| . 1106532) (|message| . 1106452)
 (|padecf| . 1106133) (|pade| . 1105174) (|root| . 1104907)
 (|quotientByP| . 1104845) (|moduloP| . 1104740) (|modulus| . 1103464)
 (|digits| . 1102776) (|continuedFraction| . 1101767) (|light| . 1101691)
 (|pastel| . 1101615) (|bright| . 1101319) (|dim| . 1101243) (|dark| . 1101167)
 (|complex_curve| . 1101063) (|get_value| . 1100959)
 (|motzkinPathArray| . 1100779) (|jacobiPathArray| . 1100602)
 (|bottom| . 1100344) (|surface| . 1100246) (|coordinate| . 1099821)
 (|partitions| . 1099336) (|odd_partitions| . 1099012)
 (|distinct_partitions| . 1098688) (|conjugates| . 1098563)
 (|shuffle| . 1098391) (|shufflein| . 1098219) (|sequences| . 1097880)
 (|permutations| . 1097720) (|lists| . 1097464) (|atoms| . 1097208)
 (|makeResult| . 1096904) (|is?| . 1095581) (|Is| . 1094213)
 (|addMatchRestricted| . 1094022) (|insertMatch| . 1093834)
 (|addMatch| . 1093646) (|getMatch| . 1093459) (|failed| . 1093119)
 (|failed?| . 1092717) (|optpair| . 1092575) (|getBadValues| . 1092446)
 (|resetBadValues| . 1092357) (|hasTopPredicate?| . 1092233)
 (|topPredicate| . 1092043) (|setTopPredicate| . 1091881)
 (|patternVariable| . 1091721) (|withPredicates| . 1091589)
 (|setPredicates| . 1091457) (|predicates| . 1091328)
 (|hasPredicate?| . 1091204) (|optional?| . 1091080) (|multiple?| . 1090956)
 (|generic?| . 1090832) (|quoted?| . 1090708) (|inR?| . 1090584)
 (|depth| . 1090358) (|isList| . 1090216) (|isQuotient| . 1089990)
 (|isOp| . 1089573) (|predicate| . 1089356) (|satisfy?| . 1088697)
 (|addBadValue| . 1088406) (|badValues| . 1088204) (|retractable?| . 1087316)
 (|listOfTerms| . 1086495) (|One| . 1086007) (|adjoint| . 1084692)
 (|id_map| . 1084476) (|diff_map| . 1084262) (|ptree| . 1084075)
 (|coerceImages| . 1083753) (|fixedPoints| . 1083597) (|odd?| . 1083183)
 (|even?| . 1082769) (|numberOfCycles| . 1082630) (|cyclePartition| . 1082500)
 (|coerceListOfPairs| . 1082363) (|coercePreimagesImages| . 1082226)
 (|listRepresentation| . 1082005) (|permanent| . 1081802) (|cycles| . 1081655)
 (|cycle| . 1081517) (|perm_to_vec| . 1081240)
 (|relationsInGenerators| . 1081082) (|relationsInStrongGenerators| . 1080924)
 (|initializeGroupForWordProblem| . 1080625) (|movedPoints| . 1080368)
 (|wordInGenerators| . 1080170) (|wordInStrongGenerators| . 1079972)
 (|orbits| . 1079825) (|orbit| . 1079200) (|permutationGroup| . 1079044)
 (|wordsForStrongGenerators| . 1078875) (|strongGenerators| . 1078719)
 (|base| . 1078250) (|random| . 1077089) (|generators| . 1076563)
 (|eval1a| . 1076180) (|eval1| . 1074674) (|modpreduction| . 1074015)
 (|modpeval| . 1073767) (|addVertex2| . 1073561) (|setMult!| . 1073386)
 (|getMaxRight| . 1073283) (|getMaxLeft| . 1073180) (|getIndexs| . 1072951)
 (|productFacet| . 1072585)
 (|solveLinearPolynomialEquationByRecursion| . 1072171)
 (|factorByRecursion| . 1071742) (|factorSquareFreeByRecursion| . 1071313)
 (|randomR| . 1070686) (|bivariateSLPEBR| . 1070269) (|charthRoot| . 1070010)
 (|conditionP| . 1069809) (|solveLinearPolynomialEquation| . 1068771)
 (|factorSquareFreePolynomial| . 1068566) (|factorPolynomial| . 1068050)
 (|squareFreePolynomial| . 1067845) (|gcdPolynomial| . 1067240)
 (|cmult| . 1066650) (|possibleOrder| . 1066083) (|handle_imaginary| . 1065315)
 (|simplifyCoeffs| . 1064489) (|torsion?| . 1063463) (|torsionIfCan| . 1062320)
 (|getGoodPrime| . 1062019) (|badNum| . 1061440) (|mix| . 1061070)
 (|doubleDisc| . 1060812) (|polyred| . 1060585) (|group_terms| . 1060312)
 (|padicFraction| . 1060204) (|padicallyExpand| . 1060036)
 (|fractionalTerms| . 1059763) (|numberOfFractionalTerms| . 1059627)
 (|compactFraction| . 1059519) (|partialFraction| . 1058389)
 (|gcdPrimitive| . 1057500) (|symmetricGroup| . 1057062)
 (|alternatingGroup| . 1056727) (|abelianGroup| . 1056550)
 (|cyclicGroup| . 1056112) (|dihedralGroup| . 1055674) (|mathieu11| . 1055385)
 (|mathieu12| . 1055096) (|mathieu22| . 1054807) (|mathieu23| . 1054518)
 (|mathieu24| . 1054229) (|janko2| . 1053940) (|rubiksGroup| . 1053818)
 (|youngGroup| . 1053489) (|lexGroebner| . 1053301) (|totalGroebner| . 1053113)
 (|qcoerce| . 1052936) (|expressIdealMember| . 1052825)
 (|principalIdeal| . 1052631) (|LagrangeInterpolation| . 1052420)
 (|psolve| . 1040850) (|wrregime| . 1039742) (|rdregime| . 1038472)
 (|bsolve| . 1036768) (|dmp2rfi| . 1035161) (|se2rfi| . 1034593)
 (|pr2dmp| . 1034090) (|hasoln| . 1033436) (|ParCondList| . 1032363)
 (|redpps| . 1031671) (|B1solve| . 1030658) (|factorset| . 1030193)
 (|maxrank| . 1029269) (|minrank| . 1028345) (|minset| . 1027839)
 (|nextSublist| . 1027286) (|overset?| . 1026714) (|ParCond| . 1025978)
 (|redmat| . 1025448) (|regime| . 1024049) (|sqfree| . 1023612)
 (|inconsistent?| . 1022535) (|debug| . 1022240) (|numFunEvals| . 1022168)
 (|setAdaptive| . 1022093) (|adaptive?| . 1022021)
 (|setScreenResolution| . 1021946) (|screenResolution| . 1021703)
 (|setMaxPoints| . 1021628) (|maxPoints| . 1021385) (|setMinPoints| . 1021310)
 (|minPoints| . 1021067) (|parametric?| . 1020992) (|plotPolar| . 1020310)
 (|debug3D| . 1020233) (|numFunEvals3D| . 1020159) (|setAdaptive3D| . 1020082)
 (|adaptive3D?| . 1020008) (|setScreenResolution3D| . 1019931)
 (|screenResolution3D| . 1019857) (|setMaxPoints3D| . 1019780)
 (|maxPoints3D| . 1019706) (|setMinPoints3D| . 1019629)
 (|minPoints3D| . 1019555) (|tValues| . 1019447) (|tRange| . 1019261)
 (|plot| . 1017259) (|pointPlot| . 1016554) (|calcRanges| . 1016373)
 (|optional| . 1016071) (|multiple| . 1015769) (|fixPredicate| . 1015434)
 (|patternMatch| . 1010460) (|patternMatchTimes| . 1009847)
 (|bernoulli| . 1009510) (|chebyshevT| . 1009164) (|chebyshevU| . 1008818)
 (|cyclotomic| . 1008304) (|euler| . 1008008) (|fixedDivisor| . 1007831)
 (|laguerre| . 1007654) (|legendre| . 1007355) (|dmpToHdmp| . 1007083)
 (|hdmpToDmp| . 1006811) (|pToHdmp| . 1006572) (|hdmpToP| . 1006333)
 (|dmpToP| . 1006105) (|pToDmp| . 1005877) (|sylvesterSequence| . 1005669)
 (|sturmSequence| . 1005464) (|boundOfCauchy| . 1005253)
 (|sturmVariationsOf| . 1004968) (|lazyVariations| . 1004642)
 (|content| . 1003955) (|minimumDegree| . 1003165) (|isPlus| . 1002012)
 (|isTimes| . 1000832) (|isExpt| . 998795) (|isPower| . 997731)
 (|rroot| . 997006) (|qroot| . 996233) (|froot| . 995476) (|nthr| . 994742)
 (|copy_first| . 994565) (|copy_slice| . 994385) (|eval_at| . 994237)
 (|vector_add_mul| . 994051) (|mul_by_binomial| . 993696)
 (|mul_by_scalar| . 993291) (|mul| . 993146)
 (|truncated_multiplication| . 992998) (|truncated_mul_add| . 992815)
 (|truncated_mul_add2| . 992629) (|pow| . 992189) (|divide!| . 991794)
 (|remainder!| . 991617) (|vector_combination| . 991428) (|to_mod_pa| . 990756)
 (|pa_to_sup| . 990115) (|lcm| . 989782) (|extended_gcd| . 989591) (< . 989180)
 (> . 988949) (>= . 988811) (<= . 988539) (|createY| . 988038)
 (|createX| . 987537) (|createWidth| . 987045) (|isDirected?| . 986595)
 (|coverMatrix| . 986447) (|zetaMatrix| . 986299) (|moebius| . 986052)
 (|isAntiChain?| . 985928) (|isChain?| . 985804) (|isAntisymmetric?| . 985680)
 (|completeTransitivity| . 985591) (|completeReflexivity| . 985502)
 (|objectToIndex| . 985364) (|indexToObject| . 985226) (|lowerSet| . 985137)
 (|upperSet| . 985048) (|lub| . 984853) (|glb| . 984658) (|joinIfCan| . 984318)
 (|meetIfCan| . 983978) (|implies| . 983720) (|powerSetStructure| . 983631)
 (|opposite| . 983542) (|addArrow!| . 982319) (|setArr| . 982142)
 (|setVert| . 981990) (|getArr| . 981848) (|getVert| . 981724)
 (|finitePoset| . 981366) (|addObject!| . 980920) (|powerset| . 980740)
 (|completelyOrderedSet| . 980576) (|posetN5| . 980412) (|posetM5| . 980248)
 (|posetO6| . 980084) (|posetP6| . 979920) (|posetL7| . 979756)
 (|firstUncouplingMatrix| . 979482) (|le| . 979310) (|lcx0| . 978735)
 (|lcz| . 978300) (|coeffs0| . 978013) (|coeffs1| . 977709)
 (|alg_reduce0| . 977499) (|alg_reduce| . 977206)
 (|alg_trial_division| . 976882) (|integral| . 975493)
 (|primitiveElement| . 972833) (|nextPrime| . 972716) (|prevPrime| . 972599)
 (|primes| . 972451) (|print| . 972255) (|merge!| . 971831)
 (|get_rational_roots| . 971039) (|integerBound| . 970564)
 (|resultantEuclidean| . 970245) (|semiResultantEuclidean2| . 969991)
 (|semiResultantEuclidean1| . 969737) (|indiceSubResultant| . 969506)
 (|indiceSubResultantEuclidean| . 969135)
 (|semiIndiceSubResultantEuclidean| . 968829) (|degreeSubResultant| . 968598)
 (|degreeSubResultantEuclidean| . 968227)
 (|semiDegreeSubResultantEuclidean| . 967921)
 (|lastSubResultantEuclidean| . 967599)
 (|semiLastSubResultantEuclidean| . 967342)
 (|subResultantGcdEuclidean| . 967058)
 (|semiSubResultantGcdEuclidean2| . 966810)
 (|semiSubResultantGcdEuclidean1| . 966562) (|discriminantEuclidean| . 966243)
 (|semiDiscriminantEuclidean| . 965989) (|chainSubResultants| . 965779)
 (|schema| . 965542) (|resultantReduit| . 965328)
 (|resultantReduitEuclidean| . 964971)
 (|semiResultantReduitEuclidean| . 964679) (|divide| . 963832)
 (|next_sousResultant2| . 963644) (|pdct| . 963564) (|powers| . 963413)
 (|partition| . 963199) (|complete| . 962322) (|pole?| . 961977)
 (|zRange| . 961852) (|yRange| . 961604) (|xRange| . 961356)
 (|listBranches| . 961076) (|triangular?| . 960738)
 (|rewriteIdealWithRemainder| . 960390)
 (|rewriteIdealWithHeadRemainder| . 960042) (|remainder| . 959598)
 (|headRemainder| . 959221) (|roughUnitIdeal?| . 958883)
 (|roughEqualIdeals?| . 958542) (|roughSubIdeal?| . 958201)
 (|roughBase?| . 957863) (|trivialIdeal?| . 957562) (|collectUpper| . 957293)
 (|collect| . 956855) (|collectUnder| . 956586) (|mainVariable?| . 956282)
 (|mainVariables| . 955981) (|removeSquaresIfCan| . 955657)
 (|unprotectedRemoveRedundantFactors| . 955337)
 (|removeRedundantFactors| . 953658) (|certainlySubVariety?| . 953303)
 (|possiblyNewVariety?| . 952911) (|probablyZeroDim?| . 952559)
 (|selectPolynomials| . 952050) (|selectOrPolynomials| . 951525)
 (|selectAndPolynomials| . 951000) (|quasiMonicPolynomials| . 950537)
 (|univariate?| . 950220) (|univariatePolynomials| . 949757)
 (|linear?| . 949440) (|linearPolynomials| . 948977) (|bivariate?| . 948660)
 (|bivariatePolynomials| . 948197)
 (|removeRoughlyRedundantFactorsInPols| . 947514)
 (|removeRoughlyRedundantFactorsInPol| . 947187) (|interReduce| . 946863)
 (|roughBasicSet| . 946406) (|crushedSet| . 946082)
 (|rewriteSetByReducingWithParticularGenerators| . 945609)
 (|rewriteIdealWithQuasiMonicGenerators| . 945182)
 (|squareFreeFactors| . 944833) (|univariatePolynomialsGcds| . 944092)
 (|removeRoughlyRedundantFactorsInContents| . 943733)
 (|removeRedundantFactorsInContents| . 943374)
 (|removeRedundantFactorsInPols| . 943015) (|irreducibleFactors| . 942582)
 (|lazyIrreducibleFactors| . 942149)
 (|removeIrreducibleRedundantFactors| . 941713) (|normalForm| . 940962)
 (|changeBase| . 940609) (|companionBlocks| . 940257) (|xCoord| . 940134)
 (|yCoord| . 940011) (|zCoord| . 939888) (|rCoord| . 939765)
 (|thetaCoord| . 939642) (|phiCoord| . 939519) (|color| . 939322)
 (|hue| . 939051) (|shade| . 938852) (|nthRootIfCan| . 938687)
 (|expIfCan| . 938567) (|logIfCan| . 938447) (|sinIfCan| . 938327)
 (|cosIfCan| . 938207) (|tanIfCan| . 938087) (|cotIfCan| . 937967)
 (|secIfCan| . 937847) (|cscIfCan| . 937727) (|asinIfCan| . 937607)
 (|acosIfCan| . 937487) (|atanIfCan| . 937367) (|acotIfCan| . 937247)
 (|asecIfCan| . 937127) (|acscIfCan| . 937007) (|sinhIfCan| . 936887)
 (|coshIfCan| . 936767) (|tanhIfCan| . 936647) (|cothIfCan| . 936527)
 (|sechIfCan| . 936407) (|cschIfCan| . 936287) (|asinhIfCan| . 936167)
 (|acoshIfCan| . 936047) (|atanhIfCan| . 935927) (|acothIfCan| . 935807)
 (|asechIfCan| . 935687) (|acschIfCan| . 935567) (|pushdown| . 934479)
 (|pushup| . 933391) (|reducedDiscriminant| . 933076)
 (|idealSimplify| . 932820) (|definingInequation| . 932564)
 (|definingEquations| . 932273) (|setStatus| . 931960)
 (|quasiAlgebraicSet| . 931666) (|radicalSimplify| . 931028)
 (|denominator| . 930597) (|numerator| . 930183) (|denom| . 928989)
 (|numer| . 927782) (|quadraticForm| . 927610) (|back| . 927519)
 (|front| . 927428) (|rotate!| . 927337) (|dequeue!| . 927246)
 (|enqueue!| . 927152) (|quatern| . 927030) (|imagK| . 926808)
 (|imagJ| . 926586) (|imagI| . 926364) (|queue| . 926242) (|nthRoot| . 925557)
 (|fractRadix| . 925422) (|wholeRadix| . 925290) (|cycleRagits| . 925158)
 (|prefixRagits| . 925026) (|fractRagits| . 924892) (|wholeRagits| . 924760)
 (|radix| . 924598) (|randnum| . 924421) (|reseed| . 924298) (|seed| . 924210)
 (|rational| . 922727) (|rational?| . 921375) (|rationalIfCan| . 919892)
 (|setvalue!| . 919748) (|setchildren!| . 919576) (|node?| . 919411)
 (|child?| . 919246) (|leaves| . 919116) (|cyclic?| . 918986)
 (|nodes| . 918856) (|rename| . 918760) (|rename!| . 918664)
 (|mainValue| . 918539) (|mainDefiningPolynomial| . 918414)
 (|mainForm| . 918308) (|sqrt| . 917402) (|multi_SPDE| . 916275)
 (SPDE1 . 915820) (|ei_int| . 914969) (|mk_erf| . 914389)
 (|risch_de_ext| . 913612) (|do_risch_DE| . 912777) (|do_param_RDE| . 912073)
 (|param_rde| . 908998) (|param_rde2| . 907611) (|exp_lower_bound| . 906720)
 (|weighted| . 906484) (|rdHack1| . 906228) (|midpoint| . 905905)
 (|midpoints| . 905547) (|realZeros| . 902245)
 (|mainCharacterization| . 901842) (|algebraicOf| . 901415)
 (|makeRec| . 900752) (|makeFEq| . 900086) (|getEq| . 899563)
 (|values| . 898401) (|eltable?| . 897850) (|ReduceOrder| . 897400)
 (|setref| . 897313) (|deref| . 897231) (|ref| . 897149)
 (|radicalEigenvectors| . 896665) (|radicalEigenvector| . 896404)
 (|radicalEigenvalues| . 896207) (|eigenMatrix| . 896003)
 (|normalise| . 895878) (|gramschmidt| . 895744) (|orthonormalBasis| . 895536)
 (|antisymmetricTensors| . 895086) (|createGenericMatrix| . 894884)
 (|symmetricTensors| . 894517) (|tensorProduct| . 893963)
 (|permutationRepresentation| . 892904) (|completeEchelonBasis| . 892722)
 (|createRandomElement| . 892539) (|cyclicSubmodule| . 892270)
 (|standardBasisOfCyclicSubmodule| . 892012) (|areEquivalent?| . 891276)
 (|isAbsolutelyIrreducible?| . 890828) (|meatAxe| . 889630)
 (|scanOneDimSubspaces| . 889348) (|double| . 889096) (|expt| . 888844)
 (|lift| . 886924) (|showArrayValues| . 886847) (|showScalarValues| . 886770)
 (|solveRetract| . 886362) (|variables| . 883452) (|mainVariable| . 882521)
 (|univariate| . 879104) (|multivariate| . 876963) (|uniform01| . 876871)
 (|normal01| . 876779) (|exponential1| . 876687) (|chiSquare1| . 876546)
 (|normal| . 876403) (|exponential| . 876007) (|chiSquare| . 875847)
 (F . 875684) (|t| . 875524) (|alg_split_roots| . 874961)
 (|alg_split_root0| . 874615) (|uniform| . 874138) (|binomial| . 873341)
 (|poisson| . 873175) (|geometric| . 873009) (|ridHack1| . 872894)
 (|interpolate| . 871451) (|nullity| . 870071) (|column| . 869518)
 (|qelt| . 868229) (|maxColIndex| . 867682) (|minColIndex| . 867135)
 (|maxRowIndex| . 866588) (|minRowIndex| . 866041) (|antisymmetric?| . 865452)
 (|symmetric?| . 864898) (|diagonal?| . 864157) (|square?| . 863603)
 (|matrix| . 861421) (|rectangularMatrix| . 861161) (|annihilate?| . 861082)
 (|try_real| . 860424) (|characteristic| . 858346) (|round| . 858291)
 (|wholePart| . 857828) (|norm| . 854659) (|mightHaveRoots| . 854412)
 (|refine| . 852358) (|middle| . 852149) (|size| . 850018) (|right| . 849397)
 (|left| . 848776) (|roman| . 848611) (|complex_roots| . 847942)
 (|quartic2| . 847270) (|my_sqrt| . 846888) (|my_root3| . 846506)
 (|mainSquareFreePart| . 846271) (|mainPrimitivePart| . 846036)
 (|mainContent| . 845801) (|primitivePart!| . 845566) (|gcd| . 842895)
 (|iexactQuo| . 841737) (|next_subResultant2| . 841488)
 (|LazardQuotient2| . 840961) (|LazardQuotient| . 840440)
 (|subResultantChain| . 840162) (|halfExtendedSubResultantGcd2| . 839528)
 (|halfExtendedSubResultantGcd1| . 838894) (|extendedSubResultantGcd| . 838148)
 (|exactQuotient!| . 837664) (|exactQuotient| . 837180)
 (|primPartElseUnitCanonical!| . 836940) (|primPartElseUnitCanonical| . 836700)
 (|retract| . 830011) (|retractIfCan| . 822993) (|lazyResidueClass| . 822319)
 (|monicModulo| . 822001) (|lazyPseudoDivide| . 820844)
 (|lazyPremWithDefault| . 820123) (|lazyPquo| . 819710) (|lazyPrem| . 819297)
 (|pquo| . 818884) (|prem| . 818471) (|supRittWu?| . 818237)
 (|RittWuCompare| . 818001) (|mainMonomials| . 817770)
 (|mainCoefficients| . 817539) (|leastMonomial| . 817336)
 (|mainMonomial| . 817133) (|quasiMonic?| . 816902) (|monic?| . 816469)
 (|deepestInitial| . 816266) (|iteratedInitials| . 816035)
 (|deepestTail| . 815832) (|head| . 815526) (|mdeg| . 815277) (|mvar| . 814810)
 (|relativeApprox| . 814200) (|rootOf| . 812590) (|allRootsOf| . 811465)
 (|definingPolynomial| . 810338) (|positive?| . 809768) (|negative?| . 809198)
 (|augment| . 807856) (|lastSubResultant| . 806920)
 (|lastSubResultantElseSplit| . 806581) (|invertibleSet| . 806258)
 (|invertible?| . 805526) (|invertibleElseSplit?| . 805181)
 (|purelyAlgebraicLeadingMonomial?| . 804858)
 (|algebraicCoefficients?| . 804535) (|purelyTranscendental?| . 804212)
 (|purelyAlgebraic?| . 803571) (|prepareSubResAlgo| . 803084)
 (|internalLastSubResultant| . 802084) (|integralLastSubResultant| . 801645)
 (|toseLastSubResultant| . 801206) (|toseInvertible?| . 800328)
 (|toseInvertibleSet| . 799932) (|toseSquareFreePart| . 799496)
 (|rsimp| . 799377) (|rsimp1| . 799227) (|quotedOperators| . 798751)
 (|pattern| . 798311) (|suchThat| . 796081) (|rule| . 795172)
 (|rules| . 794686) (|ruleset| . 794200) (|rur| . 791819) (|create| . 791764)
 (|nullBoundary| . 791673) (|boxBoundary| . 791576)
 (|ellipseBoundary| . 791479) (|intersection| . 791336) (|sunion| . 791239)
 (|extendToPoint| . 791142) (|containsPoint?| . 791010)
 (|lineIntersect| . 790913) (|isNull?| . 790784) (|isEllipse?| . 790655)
 (|isBox?| . 790526) (|getMin| . 790432) (|getMax| . 790338)
 (|getCentre| . 790244) (|clearCache| . 790122) (|linearSearch| . 789970)
 (|enterInCache| . 789677) (|binarySearch| . 789522) (|parse_integer| . 789398)
 (|variableOf| . 789204) (|samplePoint| . 788914) (|hasDimension?| . 788566)
 (|allSimpleCells| . 788033) (|createSceneRoot| . 787686)
 (|createSceneGroup| . 787599) (|addSceneGroup| . 787509)
 (|createSceneLine| . 787087) (|addSceneLine| . 786656)
 (|createSceneLines| . 786522) (|addSceneLines| . 786385)
 (|createSceneShape| . 786008) (|addSceneShape| . 785625)
 (|createSceneDef| . 785498) (|addSceneDef| . 785368)
 (|createSceneUse| . 785244) (|addSceneUse| . 785117)
 (|createSceneArrows| . 784911) (|addSceneArrows| . 784702)
 (|createSceneArrow| . 784331) (|addSceneArrow| . 783954)
 (|createSceneNamedPoints| . 783817) (|addSceneNamedPoints| . 783677)
 (|createSceneIFS| . 783358) (|addSceneIFS| . 783033)
 (|createSceneBox| . 782904) (|addSceneBox| . 782772)
 (|createSceneText| . 782130) (|addSceneText| . 781479)
 (|createSceneClip| . 781349) (|addSceneClip| . 781216)
 (|createSceneGrid| . 780923) (|addSceneGrid| . 780624)
 (|createScenePattern| . 780415) (|addScenePattern| . 780203)
 (|createSceneRuler| . 780040) (|addSceneRuler| . 779874)
 (|createSceneGraph| . 779649) (|addSceneGraph| . 779421)
 (|createSceneMaterial| . 778950) (|addSceneMaterial| . 778473)
 (|createSceneTransform| . 778342) (|addSceneTransform| . 778208)
 (|createPlot1Din2D| . 777703) (|addPlot1Din2D| . 777192)
 (|createPlot1Din2Dparametric| . 776885) (|addPlot1Din2Dparametric| . 776575)
 (|createPlot1Din3Dparametric| . 776023) (|addPlot1Din3Dparametric| . 775465)
 (|createPlot2Din3D| . 774931) (|addPlot2Din3D| . 774658)
 (|createPlot2Din3Dparametric| . 774071) (|addPlot2Din3Dparametric| . 773478)
 (|createArrows2Din2D| . 773241) (|addArrows2Din2D| . 773001)
 (|addChild!| . 772876) (|removeChild!| . 772751) (|setTransform!| . 772592)
 (|toSVG| . 772053) (|toX3D| . 771629) (|toObj| . 771231) (|writeSvg| . 771079)
 (|writeSvgQuantised| . 770927) (|writeX3d| . 770775) (|writeObj| . 770456)
 (|smesh| . 770288) (|singleFace| . 770160) (|subdivide| . 770067)
 (|sierpinskiDivide| . 769925) (|stube| . 769448) (|curveLoops| . 769210)
 (|indexes| . 769053) (|pointList| . 768794) (|findNode| . 768620)
 (|addNode!| . 768443) (|addPoints!| . 768302) (|findPoint| . 768164)
 (|getNames| . 768013) (|isNodeBranch?| . 767877) (|isNodeLeaf?| . 767741)
 (|isPointLeaf?| . 767605) (|namedBranch| . 767395) (|namedPoints| . 767023)
 (|normalisePoint| . 766931) (|structuralConstants| . 765538)
 (|equation| . 765177) (|reverse| . 764389) (|incr| . 764262) (|high| . 764170)
 (|low| . 764078) (BY . 763948) (|horizSplit| . 763011) (|horizJoin| . 762871)
 (|join| . 762130) (|pivots| . 761868) (|pivot| . 761625)
 (|primitiveRowEchelon| . 761191) (|setGcdMode| . 760988)
 (|rowEchelon| . 758064) (|extract| . 757886) (|appendRow!| . 757596)
 (|consRow!| . 757306) (|deleteRow!| . 757106) (|setRow!| . 756245)
 (|row| . 755381) (|sortedPurge!| . 755159) (|purge!| . 754937)
 (|elimZeroCols!| . 754775) (|allIndices| . 754603) (|nrows| . 753672)
 (|ncols| . 752741) (|dilate| . 752627) (|firstn| . 752439)
 (|sequence| . 752152) (|apply| . 749880) (|union| . 749087)
 (|subset?| . 748953) (|symmetricDifference| . 748847) (|difference| . 748637)
 (|intersect| . 746614) (|set| . 746385) (|latex| . 746300)
 (|complement| . 745882) (|subsetLattice| . 745732) (|delta| . 745437)
 (|enumerate| . 745151) (|setOfMinN| . 744951) (|elements| . 744751)
 (|replaceKthElement| . 744586) (|incrementKthElement| . 744424)
 (|cdr| . 744196) (|car| . 743968) (|float| . 743504) (|integer| . 743014)
 (|symbol| . 742455) (|destruct| . 741972) (|float?| . 741709)
 (|integer?| . 741087) (|symbol?| . 740578) (|string?| . 740191)
 (|list?| . 739928) (|pair?| . 739665) (|null?| . 739402) (|eq| . 739136)
 (|fortran| . 738901) (|startTable!| . 738065) (|stopTable!| . 737301)
 (|supDimElseRittWu?| . 736519) (|algebraicSort| . 735743)
 (|moreAlgebraic?| . 734961) (|subTriSet?| . 734179) (|subPolSet?| . 733341)
 (|internalSubPolSet?| . 732503) (|internalInfRittWu?| . 731665)
 (|internalSubQuasiComponent?| . 730911) (|subQuasiComponent?| . 729279)
 (|removeSuperfluousQuasiComponents| . 728503) (|subCase?| . 727585)
 (|removeSuperfluousCases| . 726753) (|prepareDecompose| . 725471)
 (|branchIfCan| . 724355) (|startTableGcd!| . 723482)
 (|stopTableGcd!| . 722681) (|startTableInvSet!| . 721808)
 (|stopTableInvSet!| . 721007) (|stosePrepareSubResAlgo| . 720491)
 (|stoseInternalLastSubResultant| . 719437)
 (|stoseIntegralLastSubResultant| . 718969) (|stoseLastSubResultant| . 718501)
 (|stoseInvertible?_sqfreg| . 717988) (|stoseInvertibleSet_sqfreg| . 717563)
 (|stoseInvertible?_reg| . 717050) (|stoseInvertibleSet_reg| . 716625)
 (|stoseInvertible?| . 715689) (|stoseInvertibleSet| . 715264)
 (|stoseSquareFreePart| . 714799) (|coleman| . 714623)
 (|inverseColeman| . 714447) (|listYoungTableaus| . 714268)
 (|makeYoungTableau| . 714095) (|nextColeman| . 713919)
 (|nextLatticePermutation| . 713761) (|nextPartition| . 713399)
 (|numberOfImproperPartitions| . 713281) (|subSet| . 713123)
 (|unrankImproperPartitions0| . 712965) (|unrankImproperPartitions1| . 712807)
 (|SturmHabichtSequence| . 712594) (|SturmHabichtCoefficients| . 712381)
 (|SturmHabicht| . 712168) (|countRealRoots| . 711958)
 (|SturmHabichtMultiple| . 711706) (|countRealRootsMultiple| . 711457)
 (|coHomology| . 711014) (|homology| . 710325) (|coChain| . 710029)
 (|chain| . 709595) (|fundamentalGroup| . 708597) (|oneSkeleton| . 708261)
 (|simplicialJoin| . 708107) (|makeDisjoint| . 707991)
 (|refactorIndexes| . 707724) (|cone| . 707562) (|link| . 707133)
 (|star| . 706976) (|boundary| . 706382) (|addImpliedFaces| . 706044)
 (|sort| . 705023) (|grade| . 704459) (|minIndex| . 704037)
 (|maxIndex| . 703461) (|addSimplex| . 703304)
 (|simplicialComplexIfCan| . 702959) (|simplicialComplex| . 702343)
 (|sphereSolid| . 701959) (|sphereSurface| . 701575) (|line| . 701410)
 (|torusSurface| . 700977) (|band| . 700691) (|moebiusBand| . 700405)
 (|projectiveSpace| . 699854) (|kleinBottle| . 699421) (|dunceHat| . 699109)
 (|Or| . 698970) (|And| . 698831) (|Not| . 698698) (|xor| . 698548)
 (|not| . 698362) (|/\\| . 698071) (|\\/| . 697780) (~ . 697269)
 (|top| . 697178) (|pop!| . 697087) (|push!| . 696993) (|redux| . 696676)
 (|freeVariable?| . 696547) (|getVariable| . 696377) (|isS?| . 696251)
 (|isK?| . 696125) (|isI?| . 695999) (|variable?| . 695873) (|atom?| . 694993)
 (|getChildren| . 694404) (|parseTerm| . 693784) (|parseSki| . 693659)
 (S . 693571) (K . 693483) (I . 693395) (|ski| . 693212) (|Delta| . 692777)
 (D . 690204) (|Pfaffian| . 689638) (|minordet| . 688783)
 (|determinant| . 687609) (|diagonalProduct| . 686937) (|trace| . 686118)
 (|diagonal| . 685674) (|diagonalMatrix| . 684091) (|scalarMatrix| . 683566)
 (|hermite| . 683113) (|completeHermite| . 682765) (|smith| . 682186)
 (|completeSmith| . 681154) (|diophantineSystem| . 680724)
 (|remap_variables| . 680339) (|csubst| . 679981)
 (|particularSolution| . 677631) (|linear| . 676652) (|quadratic| . 675670)
 (|cubic| . 674685) (|quartic| . 673697) (|aLinear| . 673236)
 (|aQuadratic| . 672772) (|aCubic| . 672305) (|aQuartic| . 671835)
 (|radicalSolve| . 668823) (|radicalRoots| . 668066) (|contractSolve| . 667117)
 (|cyclotomic_case?| . 666795) (|radical_solve| . 665987)
 (|decomposeFunc| . 665746) (|limitPart| . 665697) (|integerPart| . 665594)
 (|ordinalPower| . 665542) (|ordinalMul| . 665490) (|ordinalAdd| . 665438)
 (|omegapower| . 665389) (|omega| . 665257) (|bubbleSort!| . 664663)
 (|insertionSort!| . 664069) (|check| . 663195) (|objects| . 662802)
 (|lprop| . 662645) (|llprop| . 662479) (|lllp| . 662321) (|lllip| . 662153)
 (|lp| . 662013) (|mesh?| . 661883) (|mesh| . 660477) (|polygon?| . 660347)
 (|polygon| . 659788) (|closedCurve?| . 659658) (|closedCurve| . 659099)
 (|curve?| . 658969) (|curve| . 658215) (|point?| . 658085)
 (|enterPointData| . 657896) (|composites| . 657766) (|components| . 657636)
 (|numberOfComposites| . 657495) (|numberOfComponents| . 656676)
 (|create3Space| . 656450) (|outputAsFortran| . 655939)
 (|outputAsMathML| . 655676) (|outputAsTex| . 655413) (|abs| . 654449)
 (|unitStep| . 654199) (|ceiling| . 653734) (|floor| . 653269)
 (|fractionPart| . 652350) (|diracDelta| . 652100) (|conjugate| . 651321)
 (|Beta| . 650115) (|digamma| . 649545) (|polygamma| . 648967)
 (|Gamma| . 647946) (|besselJ| . 647454) (|besselY| . 646962)
 (|besselI| . 646470) (|besselK| . 645978) (|airyAi| . 645496)
 (|airyAiPrime| . 645014) (|airyBi| . 644532) (|airyBiPrime| . 644050)
 (|lambertW| . 643383) (|polylog| . 643127) (|weierstrassP| . 642652)
 (|weierstrassPPrime| . 642177) (|weierstrassSigma| . 641915)
 (|weierstrassZeta| . 641653) (|weierstrassPInverse| . 641391)
 (|whittakerM| . 641129) (|whittakerW| . 640867) (|angerJ| . 640611)
 (|weberE| . 640355) (|struveH| . 640099) (|struveL| . 639843)
 (|hankelH1| . 639587) (|hankelH2| . 639331) (|lommelS1| . 639069)
 (|lommelS2| . 638807) (|kummerM| . 638545) (|kummerU| . 638283)
 (|legendreP| . 637790) (|legendreQ| . 637528) (|kelvinBei| . 637272)
 (|kelvinBer| . 637016) (|kelvinKei| . 636760) (|kelvinKer| . 636504)
 (|ellipticK| . 635821) (|ellipticE| . 634188) (|ellipticF| . 633236)
 (|ellipticPi| . 632263) (|jacobiSn| . 631611) (|jacobiCn| . 630959)
 (|jacobiDn| . 630307) (|jacobiZeta| . 629957) (|jacobiTheta| . 629701)
 (|lerchPhi| . 629439) (|riemannZeta| . 629189) (|charlierC| . 628927)
 (|hermiteH| . 628502) (|jacobiP| . 628234) (|laguerreL| . 627631)
 (|meixnerM| . 627363) (|hypergeometricF| . 626913) (|meijerG| . 626451)
 (|lambertW0| . 626265) (|weierstrassP0| . 626073)
 (|weierstrassPPrime0| . 625881) (|weierstrassZeta0| . 625689)
 (|weierstrassSigma0| . 625497) (|subNode?| . 625218) (|infLex?| . 624883)
 (|setEmpty!| . 624691) (|setStatus!| . 624468) (|setCondition!| . 624273)
 (|setValue!| . 624078) (|copy| . 622462) (|status| . 621959)
 (|condition| . 621767) (|value| . 620984) (|splitNodeOf!| . 620422)
 (|remove!| . 619059) (|remove| . 618007) (|subNodeOf?| . 617681)
 (|nodeOf?| . 617411) (|result| . 617144) (|conditions| . 616924)
 (|updateStatus!| . 616732) (|extractSplittingLeaf| . 616538)
 (|extendedCoords| . 616429) (|screenCoords| . 616320)
 (|screenCoordZ| . 616227) (|screenCoordY| . 616134) (|screenCoordX| . 616041)
 (|inBounds?| . 615946) (|isVector?| . 615857) (|isPoint?| . 615768)
 (|toVector| . 615715) (|toPoint| . 615662) (|perpendicular| . 615606)
 (|colinearity| . 615510) (|parallel| . 615414) (|distance| . 615007)
 (|distanceSquared| . 614911) (|Pnan?| . 614822) (|dimension| . 612998)
 (|max| . 611846) (|min| . 610895) (|sivec| . 610710) (|svec| . 610517)
 (|sipnt| . 610332) (|spnt| . 610139) (|squareMatrix| . 609931)
 (|transpose| . 608915) (|rightTrim| . 608631) (|leftTrim| . 608347)
 (|trim| . 608063) (|split| . 605370) (|position| . 604128)
 (|replace| . 604004) (|match?| . 603871) (|substring?| . 603740)
 (|suffix?| . 603647) (|prefix?| . 603554) (|upperCase!| . 603500)
 (|upperCase| . 603356) (|lowerCase!| . 603302) (|lowerCase| . 603158)
 (|KrullNumber| . 602132) (|numberOfVariables| . 601106)
 (|algebraicDecompose| . 599705) (|transcendentalDecompose| . 596883)
 (|internalDecompose| . 592533) (|decompose| . 589364)
 (|upDateBranches| . 587667) (|printInfo| . 586652) (|pre_process| . 585405)
 (|internalZeroSetSplit| . 584555) (|internalAugment| . 583150)
 (|leadingMonomial| . 581974) (|leadingCoefficient| . 580140)
 (|stack| . 580018) (|possiblyInfinite?| . 579891)
 (|explicitlyFinite?| . 579764) (|nextItem| . 579704) (|init| . 579456)
 (|exp0| . 579300) (|log1| . 579144) (|tensorMap| . 578974)
 (|stransform| . 578323) (|stranslate| . 578174) (|identity| . 577916)
 (|xform| . 577818) (|compound| . 577720) (|STransform1| . 577243)
 (|STransform2| . 576766) (|STransform| . 576289)
 (|distributionBySTransform| . 575245) (|filterUntil| . 574972)
 (|filterWhile| . 574699) (|stream| . 574188) (|showAll?| . 574041)
 (|showAllElements| . 573888) (|showElements| . 573686) (|cons| . 573414)
 (|delay| . 573284) (|findCycle| . 572940) (|repeating?| . 572752)
 (|repeating| . 572636) (|uentries| . 572542) (|ucodeToString| . 572465)
 (|exquo| . 571039) (|recip| . 568994) (|monom| . 568816) (|integers| . 568632)
 (|oddintegers| . 568448) (|int| . 567556) (|mapmult| . 567413)
 (|deriv| . 567119) (|gderiv| . 566926) (|compose| . 566783)
 (|addiag| . 566595) (|prodiag| . 566407) (|general_Lambert_product| . 566226)
 (|lazyIntegrate| . 565766) (|nlde| . 565516) (|powern| . 565292)
 (|mapdiv| . 565114) (|lazyGintegrate| . 564841) (|power| . 564426)
 (|sincos| . 564116) (|sinhcosh| . 563804) (|asin| . 562281) (|acos| . 560758)
 (|atan| . 559143) (|acot| . 557820) (|asec| . 556497) (|acsc| . 555174)
 (|sinh| . 553657) (|cosh| . 552140) (|tanh| . 550623) (|coth| . 549306)
 (|sech| . 547989) (|csch| . 546672) (|asinh| . 545352) (|acosh| . 544032)
 (|atanh| . 542588) (|acoth| . 541268) (|asech| . 539948) (|acsch| . 538628)
 (|subresultantVector| . 538405) (|primitivePart| . 537165)
 (|pointData| . 537000) (|parent| . 536873) (|level| . 536700)
 (|extractProperty| . 536520) (|extractClosed| . 536365)
 (|extractIndex| . 536192) (|extractPoint| . 536036) (|traverse| . 535851)
 (|defineProperty| . 535610) (|closeComponent| . 535394)
 (|modifyPoint| . 534739) (|addPointLast| . 534528) (|addPoint2| . 534369)
 (|addPoint| . 533717) (|merge| . 532492) (|deepCopy| . 532365)
 (|shallowCopy| . 532238) (|numberOfChildren| . 532065) (|children| . 531759)
 (|child| . 531583) (|birth| . 531456) (|internal?| . 531301)
 (|root?| . 531146) (|leaf?| . 530863) (|rhs| . 530219) (|lhs| . 529575)
 (|construct| . 524104) (|sum| . 520378) (|outputForm| . 519413) (NOT . 519062)
 (AND . 518749) (EQ . 518436) (OR . 518123) (GE . 517810) (LE . 517497)
 (GT . 517184) (LT . 516871) (|ansatz| . 516561) (|transform| . 515281)
 (|linearize| . 514696) (|detSys| . 513488) (|ncDetSys| . 512280)
 (|detSysNS| . 511483) (|sample| . 511127) (|string| . 510615)
 (|argscript| . 510521) (|superscript| . 510427) (|subscript| . 510109)
 (|script| . 509612) (|scripts| . 508906) (|scripted?| . 508829)
 (|name| . 508041) (|resetNew| . 507970) (|symFunc| . 507638)
 (|symbolTableOf| . 507510) (|argumentListOf| . 507378)
 (|returnTypeOf| . 507148) (|printHeader| . 506834) (|returnType!| . 506119)
 (|argumentList!| . 505679) (|endSubProgram| . 505598)
 (|currentSubProgram| . 505517) (|newSubProgram| . 505399)
 (|clearTheSymbolTable| . 505204) (|showTheSymbolTable| . 505156)
 (|symbolTable| . 504948) (|printTypes| . 504753) (|newTypeLists| . 504665)
 (|typeLists| . 504176) (|externalList| . 504084) (|typeList| . 503546)
 (|parametersOf| . 503454) (|fortranTypeOf| . 503329) (|declare!| . 502511)
 (|solve| . 480918) (|triangularSystems| . 480647) (|bumprow| . 480253)
 (|bumptab| . 480010) (|bumptab1| . 479823) (|untab| . 479627)
 (|bat1| . 479427) (|bat| . 479240) (|tab1| . 479047) (|tab| . 478869)
 (|lex| . 478729) (|slex| . 478554) (|inverse| . 476646) (|maxrow| . 476126)
 (|mr| . 475693) (|listOfLists| . 474972) (|tableau| . 474266)
 (|tanSum| . 474138) (|tanAn| . 473942) (|tanNa| . 473811)
 (|initTable!| . 473629) (|printInfo!| . 473414) (|startStats!| . 473202)
 (|printStats!| . 473020) (|clearTable!| . 472838) (|usingTable?| . 472653)
 (|printingInfo?| . 472468) (|makingStats?| . 472283) (|extractIfCan| . 472121)
 (|insert!| . 471181) (|interpretString| . 471061)
 (|stripCommentsAndBlanks| . 470972) (|linearExtend| . 470026)
 (|tensor| . 469320) (|testEqualsAux| . 469164) (|xftestEqualsAux| . 469008)
 (|testNotEqualsAux| . 468852) (|xftestNotEqualsAux| . 468696)
 (|testTrueAux| . 468543) (|xftestTrueAux| . 468390)
 (|testLibraryErrorAux| . 468237) (|xftestLibraryErrorAux| . 468084)
 (|testEqualsAuxCmp| . 467955) (|testRealEqualsAux| . 467753)
 (|xftestRealEqualsAux| . 467551) (|testComplexEqualsAux| . 467318)
 (|xftestComplexEqualsAux| . 467085) (|testAbsolutePrecision| . 466948)
 (|testRelativePrecision| . 466811) (|testsuite| . 466694)
 (|testsuiteNoClear| . 466577) (|testcase| . 466460)
 (|testcaseNoClear| . 466343) (|statistics| . 466074) (|incTest| . 465996)
 (|incPass| . 465918) (|incFail| . 465758) (|incXfPass| . 465598)
 (|incXfFail| . 465520) (|incLibraryError| . 465360)
 (|incXfLibraryError| . 465200) (|incFatal| . 465083) (|incXfFatal| . 464966)
 (|addWarning| . 464845) (|testEquals| . 464730) (|xftestEquals| . 464615)
 (|testRealEquals| . 464500) (|xftestRealEquals| . 464385)
 (|testComplexEquals| . 464270) (|xftestComplexEquals| . 464155)
 (|testNotEquals| . 464040) (|xftestNotEquals| . 463925) (|testTrue| . 463813)
 (|xftestTrue| . 463701) (|testLibraryError| . 463589)
 (|xftestLibraryError| . 463477) (|setPrologue!| . 463249) (|setTex!| . 463156)
 (|setEpilogue!| . 462928) (|setDialect| . 462849) (|getDialect| . 462773)
 (|prologue| . 462551) (|new| . 460398) (|tex| . 460308) (|epilogue| . 460086)
 (|endOfFile?| . 460007) (|readIfCan!| . 459820) (|readLineIfCan!| . 459730)
 (|readLine!| . 459652) (|writeLine!| . 459495) (|eval_with_timeout| . 459331)
 (|coerceL| . 458970) (|sign| . 455869) (|nonQsign| . 455741)
 (|direction| . 455592) (|createThreeSpace| . 455478) (|pi| . 454882)
 (|tree| . 454546) (|cos| . 452924) (|cot| . 451604) (|csc| . 450284)
 (|sec| . 448964) (|sin| . 447342) (|tan| . 445822)
 (|complexNormalize| . 443956) (|complexElementary| . 442090)
 (|trigs| . 441220) (|real| . 439985) (|imag| . 438970) (|real?| . 437950)
 (|complexForm| . 436997) (|trigs2explogs| . 436079)
 (|UpTriBddDenomInv| . 435788) (|LowTriBddDenomInv| . 435497)
 (|simplify| . 433585) (|htrigs| . 433304) (|simplifyExp| . 433023)
 (|simplifyLog| . 432742) (|expandPower| . 432461) (|expandLog| . 432180)
 (|cos2sec| . 431899) (|cosh2sech| . 431618) (|cot2trig| . 431337)
 (|coth2trigh| . 431056) (|csc2sin| . 430775) (|csch2sinh| . 430494)
 (|sec2cos| . 430213) (|sech2cosh| . 429932) (|sin2csc| . 429651)
 (|sinh2csch| . 429370) (|tan2trig| . 429089) (|tanh2trigh| . 428808)
 (|tan2cot| . 428527) (|tanh2coth| . 428246) (|cot2tan| . 427965)
 (|coth2tanh| . 427684) (|removeCosSq| . 427403) (|removeSinSq| . 427122)
 (|removeCoshSq| . 426841) (|removeSinhSq| . 426560)
 (|expandTrigProducts| . 426065) (|fintegrate| . 425447)
 (|coefficient| . 422461) (|taylor_via_deriv| . 420571)
 (|taylor_via_lode| . 420146) (|applyTaylor| . 419746)
 (|apply_taylor| . 419105) (|coHeight| . 418747) (|extendIfCan| . 418467)
 (|algebraicVariables| . 418149) (|zeroSetSplitIntoTriangularSystems| . 417707)
 (|zeroSetSplit| . 412839) (|reduceByQuasiMonic| . 412553)
 (|collectQuasiMonic| . 412270) (|removeZero| . 411984)
 (|initiallyReduce| . 411494) (|headReduce| . 411004)
 (|stronglyReduce| . 410718) (|rewriteSetWithReduction| . 410301)
 (|autoReduced?| . 409918) (|initiallyReduced?| . 408782)
 (|headReduced?| . 407646) (|stronglyReduced?| . 407009) (|reduced?| . 406133)
 (|normalized?| . 404997) (|quasiComponent| . 404581) (|initials| . 404263)
 (|basicSet| . 403358) (|infRittWu?| . 401969) (|getCurve| . 401856)
 (|listLoops| . 401676) (|closed?| . 401432) (|open?| . 401291)
 (|setClosed| . 401147) (|tube| . 400710) (|point| . 399608)
 (|unitVector| . 398652) (|cosSinInfo| . 398502) (|loopPoints| . 398229)
 (|select| . 397346) (|generalTwoFactor| . 396978) (|tryTwoFactor| . 396610)
 (|doFactor| . 396177) (|qconvert| . 396016) (|diagramSvg2| . 395819)
 (|undirectedGraph| . 393988) (|setOrder| . 393637) (|getOrder| . 393447)
 (|less?| . 392961) (|userOrdered?| . 392814) (|largest| . 392427)
 (|more?| . 392110) (|setVariableOrder| . 391829) (|getVariableOrder| . 391622)
 (|resetVariableOrder| . 391521) (|prime?| . 390468)
 (|factorSquareFree| . 388892) (|sufactor| . 388198)
 (|sufactor_square_free| . 387884) (|su_irreducible?| . 387608)
 (|irreducible?| . 386589) (|hadamard| . 386410) (|pre_gauss| . 386296)
 (|pre_smith| . 386182) (|pre_lr| . 386016) (|rationalFunction| . 385527)
 (|taylorIfCan| . 385330) (|taylor| . 377770) (|removeZeroes| . 376596)
 (|taylorRep| . 376404) (|hasHi| . 376278) (|segment| . 375969)
 (SEGMENT . 375692) (|commonDenominator| . 374359)
 (|clearDenominator| . 372989) (|splitDenominator| . 370639)
 (|monicRightFactorIfCan| . 370396) (|rightFactorIfCan| . 370150)
 (|leftFactorIfCan| . 369949) (|monicDecomposeIfCan| . 369688)
 (|monicCompleteDecompose| . 369464) (|decomposeIfCan| . 369172)
 (|completeDecompose| . 368913) (|divideIfCan| . 368646)
 (|noKaratsuba| . 368456) (|karatsubaOnce| . 368266) (|karatsuba| . 368031)
 (|separate| . 367196) (|pseudoDivide| . 366589) (|pseudoQuotient| . 366400)
 (|composite| . 365857) (|subResultantGcd| . 365247) (|resultant| . 364220)
 (|discriminant| . 362620) (|pseudoRemainder| . 362441) (|shiftRight| . 362216)
 (|karatsubaDivide| . 361923) (|monicDivide| . 361325) (|shiftLeft| . 361010)
 (|divideExponents| . 360817) (|unmakeSUP| . 360618) (|makeSUP| . 360419)
 (|unvectorise| . 359925) (|vectorise| . 359697) (|eval| . 351227)
 (|extend| . 348739) (|approximate| . 347498) (|truncate| . 347120)
 (|order| . 341593) (|center| . 341019) (|terms| . 340588)
 (|squareFreePart| . 339565) (|BumInSepFFE| . 339063)
 (|multiplyExponents| . 338505) (|laurentIfCan| . 338307) (|laurent| . 332629)
 (|laurentRep| . 332436) (|rationalPower| . 332195) (|puiseux| . 326428)
 (|dominantTerm| . 325295) (|limitPlus| . 324127) (|split!| . 323925)
 (|setlast!| . 323769) (|qsetrest!| . 323613) (|setrest!| . 323337)
 (|setelt!| . 316649) (|qsetfirst!| . 316493) (|setfirst!| . 316337)
 (|cycleSplit!| . 316184) (|concat!| . 315323) (|cycleTail| . 315216)
 (|cycleLength| . 315070) (|cycleEntry| . 314963) (|third| . 314856)
 (|second| . 314618) (|tail| . 314207) (|last| . 313568) (|rest| . 312737)
 (|elt| . 297535) (|first| . 296074) (|concat| . 295285) (|integrate| . 283946)
 (|invmultisect| . 283426) (|multisect| . 282906) (|revert| . 282509)
 (|generalLambert| . 281989) (|evenlambert| . 281592) (|oddlambert| . 281195)
 (|lambert| . 280798) (|lagrange| . 280401) (|differentiate| . 275470)
 (|univariatePolynomial| . 274744) (^ . 268798) (|polynomial| . 267728)
 (|multiplyCoefficients| . 267237) (|quoByVar| . 267123)
 (|coefficients| . 265993) (|series| . 255254) (|stFunc1| . 254943)
 (|stFunc2| . 254615) (|stFuncN| . 254286) (|fixedPointExquo| . 254076)
 (|ode1| . 253825) (|ode2| . 253568) (|ode| . 253280) (|mpsode| . 252941)
 (UP2UTS . 252640) (UTS2UP . 252297) (LODO2FUN . 251946) (RF2UTS . 251569)
 (|seriesSolve| . 246453) (= . 245287) (|parseVarTerm| . 245025)
 (|parseVar| . 244947) (|toString| . 244017) (|getType| . 243813)
 (|getName| . 243735) (|var| . 243542) (|variable| . 242620)
 (|add_slots| . 242477) (|repack_polys| . 241931) (|empty| . 241065)
 (|chinese_update| . 240719) (|hensel_update| . 240545)
 (|rational_reconstruction| . 239579) (|remove_denoms| . 239194)
 (|reconstruct| . 237999) (|length| . 236804) (|cross| . 236477)
 (|outerProduct| . 236319) (|dot| . 235690) (- . 232708) (|zero?| . 231069)
 (|zero| . 230621) (|vector| . 230002) (|scan| . 227757) (|reduce| . 219868)
 (|hp_solve| . 219434) (|graphCurves| . 218784) (|drawCurves| . 218252)
 (|update| . 218080) (|show| . 217912) (|scale| . 217384) (|connect| . 217216)
 (|region| . 217048) (|points| . 216880) (|units| . 216211)
 (|getGraph| . 216067) (|putGraph| . 215895) (|graphs| . 215592)
 (|graphStates| . 214844) (|graphState| . 214575) (|makeViewport2D| . 214370)
 (|viewport2D| . 214314) (|getPickedPoints| . 214189) (|key| . 213913)
 (|close| . 213623) (|write| . 212933) (|colorDef| . 212800) (|reset| . 212616)
 (|intensity| . 212486) (|lighting| . 212350) (|clipSurface| . 212219)
 (|showClipRegion| . 212088) (|showRegion| . 211957) (|hitherPlane| . 211827)
 (|eyeDistance| . 211697) (|perspective| . 211566) (|translate| . 211090)
 (|zoom| . 210533) (|rotate| . 210267) (|drawStyle| . 210136)
 (|outlineRender| . 210005) (|diagonals| . 209874) (|axes| . 209410)
 (|controlPanel| . 209152) (|viewpoint| . 206389) (|dimensions| . 206003)
 (|title| . 205527) (|resize| . 205245) (|move| . 204957) (|options| . 204497)
 (|modifyPointData| . 204128) (|subspace| . 203625) (|makeViewport3D| . 203235)
 (|viewport3D| . 203177) (|viewDeltaYDefault| . 202992)
 (|viewDeltaXDefault| . 202807) (|viewZoomDefault| . 202622)
 (|viewPhiDefault| . 202437) (|viewThetaDefault| . 202252)
 (|pointColorDefault| . 202073) (|lineColorDefault| . 201894)
 (|axesColorDefault| . 201715) (|unitsColorDefault| . 201536)
 (|pointSizeDefault| . 201327) (|viewPosDefault| . 201094)
 (|viewSizeDefault| . 200867) (|viewDefaults| . 200781)
 (|viewWriteDefault| . 200572) (|viewWriteAvailable| . 200468)
 (|var1StepsDefault| . 200259) (|var2StepsDefault| . 200050)
 (|tubePointsDefault| . 199841) (|tubeRadiusDefault| . 199614)
 (|void| . 199576) (|coordinates| . 197823) (|coordinatesIfCan| . 197685)
 (|member?| . 196960) (|complementSpace| . 196408) (|canonicalBasis| . 196270)
 (|Zero| . 195751) (|subspace?| . 195621) (|isBasis?| . 195455)
 (|rank| . 191733) (|intBasis| . 191208) (+ . 187971) (|sumBasis| . 187446)
 (|columnSpace| . 186689) (|nullSpace| . 184516) (|basis| . 182681)
 (|weierstrass| . 182458) (|integralBasis| . 180297)
 (|localIntegralBasis| . 178406) (|weightedDistanceMatrix| . 178180)
 (|closedCartesian| . 177546) (|closedTensor| . 176769) (|cartesian| . 175675)
 (|routeArrowWeight| . 175462) (|routeNodeWeight| . 175249)
 (|distanceWeighted| . 174995) (|addWArrow!| . 174755)
 (|weightedGraph| . 171789) (|changeWeightLevel| . 171100)
 (|characteristicSerie| . 170223) (|characteristicSet| . 169516)
 (|medialSet| . 168809) (|hankelIndices| . 168553) (|hankelMatrix| . 168066)
 (|hankelSystem| . 167647) (|display| . 165186) (|minimalMatrix| . 164950)
 (|findNonZeroEntry| . 164656) (|transformationMatrices| . 164423)
 (|minimalRepresentation| . 163964) (|Hausdorff| . 163669)
 (|Frobenius| . 163016) (|transcendenceDegree| . 162669)
 (|extensionDegree| . 161921) (|inGroundField?| . 161794)
 (|transcendent?| . 161667) (|algebraic?| . 161221) (|varList| . 160004)
 (|sh| . 159600) (|mirror| . 158859) (|monomial?| . 158163)
 (|monomial| . 155532) (|rquo| . 154678) (|lquo| . 153824)
 (|mindegTerm| . 153617) (|table| . 152814) (|writeXml| . 152667)
 (|writeVRML| . 152370) (|xmlAttribute| . 152155) (|xmlElement| . 151836)
 (|empty?| . 150702) (|outputVRML| . 150464) (|log| . 147432) (|exp| . 144550)
 (|product| . 142732) (|LiePolyIfCan| . 142342) (|homo_fact| . 142085)
 (|top_split| . 141828) (|left_ext_GCD| . 141267) (|ldivide| . 140855)
 (|factor| . 128063) (|trunc| . 127687) (|degree| . 121910) (/ . 117799)
 (|quasiRegular| . 117533) (|quasiRegular?| . 117204) (|constant| . 116420)
 (|constant?| . 115969) (|coef| . 115323) (|reductum| . 113593)
 (|mindeg| . 113286) (|maxdeg| . 112976) (|coerce| . 71430) (|#| . 70725)
 (|map| . 40358) (* . 29111) (|RemainderList| . 28617) (|unexpand| . 28275)
 (|expand| . 25893) (Y . 25418) (|triangSolve| . 23959)
 (|univariateSolve| . 20677) (|realSolve| . 17916) (|positiveSolve| . 15918)
 (|squareFree| . 12829) (|convert| . 1895) (|linearlyDependentOverZ?| . 1690)
 (|linearDependenceOverZ| . 1476) (|particularSolutionOverQ| . 988)
 (|solveLinearlyOverQ| . 30)) 