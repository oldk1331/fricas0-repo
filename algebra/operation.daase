
(1993844 . 1)                
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| (|Integer|)))
                                  #1="failed"))
                    (|:| |basis|
                         (|List| (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|IntegerLinearDependence| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| (|Integer|))) #1#))
                    (|:| |basis|
                         (|List| (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|IntegerLinearDependence| *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|IntegerLinearDependence| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
   (|ofCategory| *5 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|IntegerLinearDependence| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Integer|)))
   (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *5 (|Join| (|ConvertibleTo| *2) (|CommutativeRing|)))
       (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *1 (|ComplexPattern| *4 *5 *3))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *3 (|ComplexCategory| *5))))
 ((*1 *2 *1)
  (AND (|ofType| *5 (|List| *4)) (|isDomain| *2 (|JetBundlePolynomial| *3 *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundlePolynomial| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|)) (|ofType| *5 (|List| *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|OutputFormatterCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|FramedModule| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Factored| *1)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GeneralPolynomialSet| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|ConvertibleFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ConvertibleTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *6))
       (|ofCategory| *6 (|Join| (|DifferentialRing|) (|LeftModule| *5)))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|LinearOrdinaryDifferentialOperator3| *4 *5 *6))
       (|isDomain| *1 (|LODOConvertions| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator3| *4 *5 *6))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|DifferentialRing|) (|LeftModule| *5)))
       (|isDomain| *2 (|LinearOrdinaryDifferentialOperator1| *6))
       (|isDomain| *1 (|LODOConvertions| *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|LieSquareMatrix| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Integer|)))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *4 *5 *6 *7 *8))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SingletonAsOrderedSet|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|SquareFreeRegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *4 *5 *6 *7
                                                               *8))))
 ((*1 *1 *2 *3 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *5)))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|EuclideanDomain|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *6)))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *6)))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|EuclideanDomain|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4))))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|RealClosure| (|Fraction| *4))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SquareFreeRegularTriangularSet| *4
                                                 (|IndexedExponents|
                                                  (|OrderedVariableList| *6))
                                                 (|OrderedVariableList| *6)
                                                 (|NewSparseMultivariatePolynomial|
                                                  *4
                                                  (|OrderedVariableList| *6))))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|EuclideanDomain|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *4
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *5 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|PolynomialSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|UniqueFactorizationDomain|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|UnivariatePolynomialSquareFree| *4 *3))
       (|ofCategory| *3
                     (|Join| (|UnivariatePolynomialCategory| *4)
                             (|IntegralDomain|)
                             (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|SquareFreeRegularTriangularSet| *4
                                                      (|IndexedExponents|
                                                       (|OrderedVariableList|
                                                        *6))
                                                      (|OrderedVariableList|
                                                       *6)
                                                      (|NewSparseMultivariatePolynomial|
                                                       *4
                                                       (|OrderedVariableList|
                                                        *6)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Float|))
       (|isDomain| *2 (|List| (|List| (|Float|))))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|) (|EuclideanDomain|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *4 *5)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Stream| *4) (|Stream| *4)))
       (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *4))
       (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|List| (|Stream| *5)) (|List| (|Stream| *5))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|Stream| *5)))
   (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *5))
   (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *6)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *6 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| (|Expression| *6)))
       (|isDomain| *1 (|DegreeReductionPackage| *5 *6))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|IntegrationResultToFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| *4)))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentExpansionCategory| *3 *2))
       (|ofCategory| *3 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2))
       (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3))
       (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|XPolynomial| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|XRecursivePolynomial| *3 *4))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| (|Symbol|)) (|:| |c| (|XPolynomial| *3)))))
   (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| *3)
                          (|:| |c| (|XRecursivePolynomial| *3 *4)))))
   (|isDomain| *1 (|XRecursivePolynomial| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianGroup|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianSemiGroup|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Color|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|DirectedGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|DenavitHartenbergMatrix| *3))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2 (|CancellationAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|FunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2
                     (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3)))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Permutation| (|Integer|)))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|LeftModule| *2)) (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Magma|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6)) (|isDomain| *4 (|Mapping| *6 *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Mapping| *7 *5))
       (|isDomain| *1 (|MappingPackage3| *5 *6 *7))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *2 *4))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *2))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|MultifunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RightModule| *2)) (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|UndirectedGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|VectorCategory| *3))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|WeightedGraph| (|Product| *3 *3) *4))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|AbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2 *1 *1 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *6))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *8 (|Type|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *8 *9 *10))
       (|isDomain| *1
                   (|TwoDimensionalArrayFunctions| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|TwoDimensionalArrayCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *7))
       (|isDomain| *4 (|CartesianTensor| *5 *6 *7)) (|ofType| *5 (|Integer|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *7 (|CommutativeRing|))
       (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|CartesianTensor| *5 *6 *8))
       (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Complex| *6))
       (|isDomain| *1 (|ComplexFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Expression| *3) (|Expression| *3)))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6))
       (|isDomain| *4 (|DirectProduct| *5 *6))
       (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|isDomain| *2 (|DirectProduct| *5 *7))
       (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Equation| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Equation| *6))
       (|isDomain| *1 (|EquationFunctions2| *5 *6))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *1 *1)) (|isDomain| *3 (|Kernel| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|Kernel| *6)) (|ofCategory| *6 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ExpressionSpaceFunctions1| *6 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *5)) (|isDomain| *4 (|Kernel| *5))
       (|ofCategory| *5 (|ExpressionSpace|))
       (|ofCategory| *2 (|ExpressionSpace|))
       (|isDomain| *1 (|ExpressionSpaceFunctions2| *5 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Expression| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *2 (|Expression| *6))
       (|isDomain| *1 (|ExpressionFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND
   (|isDomain| *2
               (|Mapping| (|Polynomial| (|Integer|))
                          (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|Mapping| (|Polynomial| (|Integer|))
                          (|Polynomial| (|Integer|))))
   (|isDomain| *3
               (|Record| (|:| |var| (|Symbol|))
                         (|:| |coef|
                              (|SparseUnivariatePolynomial|
                               (|Fraction| (|Polynomial| (|Integer|)))))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *3 *1)
  (|partial| AND
   (|isDomain| *3
               (|Mapping| (|Union| (|Polynomial| (|Integer|)) "failed")
                          (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                                    (|:| |denom| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|FiniteAbelianMonoidRing| *7 *5))
       (|isDomain| *1 (|FiniteAbelianMonoidRingFunctions2| *5 *6 *4 *7 *2))
       (|ofCategory| *4 (|FiniteAbelianMonoidRing| *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *5))
       (|isDomain| *4 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *9 (|Field|))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| (|Fraction| *10)))
       (|isDomain| *2 (|FiniteDivisor| *9 *10 *11 *12))
       (|isDomain| *1 (|FiniteDivisorFunctions2| *5 *6 *7 *8 *9 *10 *11 *12))
       (|ofCategory| *12 (|FunctionFieldCategory| *9 *10 *11))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|FullyEvalableOver| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *8 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *8))
       (|ofCategory| *2 (|FunctionFieldCategory| *8 *9 *10))
       (|isDomain| *1
                   (|FunctionFieldCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10
                                                      *2))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| (|Fraction| *9)))))
 ((*1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *6) (|finiteAggregate|)))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|Comparable|))
       (|ofCategory| *2 (|FreeModuleCategory| *6 *7))
       (|isDomain| *1 (|FreeModuleCoefficientFunctions2| *5 *6 *7 *4 *2))
       (|ofCategory| *4 (|FreeModuleCategory| *5 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|Factored| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Factored| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *6))
       (|isDomain| *1 (|FactoredFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Fraction| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|FractionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *5))
       (|isDomain| *4 (|FractionalIdeal| *5 *6 *7 *8))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|QuotientFieldCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *8 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6)))
       (|ofCategory| *9 (|EuclideanDomain|))
       (|ofCategory| *10 (|QuotientFieldCategory| *9))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| *10))
       (|isDomain| *2 (|FractionalIdeal| *9 *10 *11 *12))
       (|isDomain| *1 (|FractionalIdealFunctions2| *5 *6 *7 *8 *9 *10 *11 *12))
       (|ofCategory| *12
                     (|Join| (|FramedAlgebra| *10 *11)
                             (|RetractableTo| *10)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|FramedNonAssociativeAlgebra| *6))
       (|isDomain| *1 (|FramedNonAssociativeAlgebraFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *2 (|FunctionSpace| *6))
       (|isDomain| *1 (|FunctionSpaceFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|FunctionSpace| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *2 (|FiniteSetAggregate| *6))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|FiniteSetAggregate| *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|HomogeneousAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|IntegrationResult| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|IntegrationResult| *6))
       (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *6 *5))
   (|isDomain| *4
               (|Union| (|Record| (|:| |ratpart| *5) (|:| |coeff| *5))
                        "failed"))
   (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|))
   (|isDomain| *2 (|Record| (|:| |ratpart| *6) (|:| |coeff| *6)))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *2 *5))
   (|isDomain| *4 (|Union| *5 "failed")) (|ofCategory| *5 (|Field|))
   (|ofCategory| *2 (|Field|))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *2))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *6 *5))
   (|isDomain| *4
               (|Union|
                (|Record| (|:| |mainpart| *5)
                          (|:| |limitedlogs|
                               (|List|
                                (|Record| (|:| |coeff| *5)
                                          (|:| |logand| *5)))))
                "failed"))
   (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |mainpart| *6)
                         (|:| |limitedlogs|
                              (|List|
                               (|Record| (|:| |coeff| *6)
                                         (|:| |logand| *6))))))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|InfiniteTuple| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|InfiniteTuple| *6))
       (|isDomain| *1 (|InfiniteTupleFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7))
       (|isDomain| *4 (|InfiniteTuple| *6))
       (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|InfiniteTuple| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6))
       (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7))
       (|isDomain| *4 (|InfiniteTuple| *6)) (|isDomain| *5 (|Stream| *7))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
       (|ofCategory| *8 (|Type|)) (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|ListFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|List| *8))
       (|isDomain| *1 (|ListFunctions3| *6 *7 *8))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *8 "failed") *5))
   (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *6 (|FiniteLinearAggregate| *5))
   (|ofCategory| *7 (|FiniteLinearAggregate| *5))
   (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
   (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
   (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *8))
   (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *1 (|MultipleMap| *5 *6 *4 *7 *8 *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *8)) (|ofCategory| *8 (|Ring|))
       (|ofCategory| *9 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|PolynomialCategory| *9 *7 *5))
       (|isDomain| *1 (|MPolyCatFunctions2| *5 *6 *7 *8 *9 *4 *2))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *8 *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|Ring|))
       (|ofCategory| *2 (|PolynomialCategory| *9 *8 *6))
       (|isDomain| *1 (|MPolyCatFunctions3| *5 *6 *7 *8 *9 *4 *2))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *9 *7 *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|MonoidRing| *5 *7))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|Monoid|)) (|isDomain| *2 (|MonoidRing| *6 *7))
       (|isDomain| *1 (|MonoidRingFunctions2| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|NewSparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|NewSparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|NewSparseUnivariatePolynomialFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|OctonionCategory| *6))
       (|isDomain| *1 (|OctonionCategoryFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|OctonionCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OnePointCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|OnePointCompletion| *6))
       (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| *6))
       (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OnePointCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OrderedCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|OrderedCompletion| *6))
       (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *2 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| *6))
       (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OrderedCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricPlaneCurve| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricPlaneCurve| *6))
       (|isDomain| *1 (|ParametricPlaneCurveFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricSpaceCurve| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSpaceCurve| *6))
       (|isDomain| *1 (|ParametricSpaceCurveFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricSurface| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSurface| *6))
       (|isDomain| *1 (|ParametricSurfaceFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6))
       (|isDomain| *4 (|PatternMatchResult| *5 *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *5 *7))
       (|isDomain| *1 (|PatternMatchResultFunctions2| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Pattern| *6))
       (|isDomain| *1 (|PatternFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Polynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Polynomial| *6))
       (|isDomain| *1 (|PolynomialFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *7)) (|isDomain| *4 (|Mapping| *2 *8))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE + ($ $ $))
                              (SIGNATURE * ($ $ $))
                              (SIGNATURE ^ ($ $ (|NonNegativeInteger|))))))
       (|isDomain| *1 (|PolynomialCategoryLifting| *6 *7 *8 *5 *2))
       (|ofCategory| *5 (|PolynomialCategory| *8 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|PrimitiveArray| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|PrimitiveArray| *6))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Point| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Point| *6)) (|isDomain| *1 (|PointFunctions2| *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Polynomial| *4)))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ "failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2 (|QuotientFieldCategory| *6))
       (|isDomain| *1 (|QuotientFieldCategoryFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|QuotientFieldCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|QuaternionCategory| *6))
       (|isDomain| *1 (|QuaternionCategoryFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|QuaternionCategory| *5))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *5 *5 *5))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *10 *7))
       (|ofCategory| *7 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *10 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *8 (|DirectProductCategory| *6 *7))
       (|ofCategory| *9 (|DirectProductCategory| *5 *7))
       (|ofCategory| *2 (|RectangularMatrixCategory| *5 *6 *10 *11 *12))
       (|isDomain| *1
                   (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *10
                                                          *11 *12 *2))
       (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9))
       (|ofCategory| *11 (|DirectProductCategory| *6 *10))
       (|ofCategory| *12 (|DirectProductCategory| *5 *10))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Segment| *6))
       (|isDomain| *1 (|SegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|SegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|SegmentBinding| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|SegmentBinding| *6))
       (|isDomain| *1 (|SegmentBindingFunctions2| *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2))
       (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Sequence| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *6))
       (|isDomain| *1 (|SequenceFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Stream| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Stream| *6))
       (|isDomain| *1 (|StreamFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6))
       (|isDomain| *5 (|Stream| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|StreamFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|SparseUnivariatePolynomialFunctions2| *5 *6))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4 *4))
       (|ofCategory| *1 (|TableAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UnivariateLaurentSeries| *5 *7 *9))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6)
       (|isDomain| *2 (|UnivariateLaurentSeries| *6 *8 *10))
       (|isDomain| *1 (|UnivariateLaurentSeriesFunctions2| *5 *6 *7 *8 *9 *10))
       (|ofType| *8 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UniversalSegment| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|UniversalSegment| *6))
       (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UniversalSegment| *5))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Stream| *6))
       (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *6))
       (|isDomain| *4 (|UnivariatePolynomial| *5 *6)) (|ofType| *5 (|Symbol|))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *8 (|Ring|))
       (|isDomain| *2 (|UnivariatePolynomial| *7 *8))
       (|isDomain| *1 (|UnivariatePolynomialFunctions2| *5 *6 *7 *8))
       (|ofType| *7 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *1 (|UnivariatePolynomialCategoryFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UnivariatePuiseuxSeries| *5 *7 *9))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6)
       (|isDomain| *2 (|UnivariatePuiseuxSeries| *6 *8 *10))
       (|isDomain| *1 (|UnivariatePuiseuxSeriesFunctions2| *5 *6 *7 *8 *9 *10))
       (|ofType| *8 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *6 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *6))
       (|isDomain| *1 (|UnivariateTaylorSeriesFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|VectorFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *6 "failed") *5))
   (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Type|))
   (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Vector| *6))
   (|isDomain| *1 (|VectorFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|ofType| *2 (|List| (|Symbol|))) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *2) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5))
                   (|Record| (|:| |index| *4) (|:| |exponent| *5))))
       (|isDomain| *1 (|GeneralModulePolynomial| *2 *3 *4 *5 *6 *7))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *3 *5 (|OrderedVariableList| *2)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|)) (|ofCategory| *1 (|Aggregate|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPolynomialRing| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|Algebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|ofType| *6 (|Vector| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 2))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|CartesianTensor| *3 *4 *5)))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|DirectProduct| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SKICombinators| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|Lambda| *4)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Lambda| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|SKICombinators| *4)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SKICombinators| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|ILogic|)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Matrix| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))
       (|isDomain| *1 (|Database| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 10))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|DirichletRing| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|DirichletRing| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|)))
       (|isDomain| *1 (|DirichletRing| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|)))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|DirichletRing| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Distribution| *5))
       (|isDomain| *1 (|DistributionFunctions2| *4 *5))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| (|Expression| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|) (|IntegralDomain|)
                             (|ConvertibleTo| (|Float|))))
       (|isDomain| *2 (|SegmentBinding| (|Float|)))
       (|isDomain| *1 (|DrawNumericHack| *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)
       (|ofCategory| *3
                     (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|GcdDomain|)))
       (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranCode|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *5))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4))
       (|isDomain| *1 (|FiniteFieldHomomorphisms| *3 *4 *2))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4))
       (|isDomain| *1 (|FiniteFieldHomomorphisms| *2 *4 *3))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|XRecursivePolynomial| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|XDistributedPolynomial| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|MachineFloat|)))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|ScriptFormulaFormat|))
       (|isDomain| *1 (|ScriptFormulaFormat1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1="void")))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
   (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Fraction| *3))))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| *3)))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FourierComponent| *4))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|AbelianGroup|)))
       (|isDomain| *1 (|FourierSeries| *3 *4))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierSeries| *2 *3))
       (|ofCategory| *2
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|Join| (|OrderedSet|) (|AbelianGroup|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranScalarType|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|MachineFloat|)))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| *3))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofType| *6 (|Vector| (|Matrix| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 16))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|InnerAlgebraicNumber|))))
   (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|IndexCard|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Expression| (|Integer|)) *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleExpression| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|JetBundleExpression| *3))))
   (|isDomain| *1 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleBaseFunctionCategory| *4))
       (|isDomain| *2 (|List| (|JetBundleLinearFunction| *4 *5)))
       (|isDomain| *1 (|JetBundleLinearFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleLinearFunction| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetBundleLinearFunction| *4 *5))
       (|ofCategory| *5 (|JetBundleBaseFunctionCategory| *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|JetBundleSymAna| *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofType| *4 (|Union| *2 (|List| *2)))
       (|ofType| *5 (|Union| *2 (|List| *2)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|JetBundle| *3 *4))
       (|ofType| *3 (|List| *2)) (|ofType| *4 (|List| *2))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleXExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleXExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|AssociatedJordanAlgebra| *3 *2))
       (|ofCategory| *2 (|NonAssociativeAlgebra| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|CoercibleTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|CoercibleFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|LeftAlgebra| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LatticeMeetOfJoins|))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LatticeMeetOfJoins|))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XPBWPolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|AssociatedLieAlgebra| *3 *2))
       (|ofCategory| *2 (|NonAssociativeAlgebra| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMagma| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3))))
   (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3))))
   (|ofCategory| *3 (|SetCategory|))
   (|isDomain| *1 (|ThreeDimensionalMatrix| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|MachineInteger|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|MachineFloat|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|Integer|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|MachineInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|MachineInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MakeCachableSet| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4)))
       (|isDomain| *1 (|ModuleMonomial| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|))
       (|ofType| *5 (|Mapping| (|Boolean|) *2 *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4)))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|ModuleMonomial| *3 *4 *5))
       (|ofType| *5 (|Mapping| (|Boolean|) *2 *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|ofCategory| *1 (|MonoidRingCategory| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|NonAssociativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|NoneFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PartialDifferentialRing| *3))
       (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3)
       (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathErrorKind|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|))
       (|isDomain| *1 (|UnivariateSkewPolynomial| *3 *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Automorphism| *4))
       (|ofType| *6 (|Mapping| *4 *4))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6))
       (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|List| (|NonNegativeInteger|)))
       (|ofType| *6 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Polynomial| *3))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|List| (|NonNegativeInteger|)))
       (|ofType| *6 (|NonNegativeInteger|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|AlgebraicNumber|)))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PolynomialAN2Expression|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|AlgebraicNumber|))))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PolynomialAN2Expression|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Tree| *3)) (|isDomain| *1 (|PendantTree| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PermutationGroup| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Factored| *3)))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| *3)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Pi|)) (|isDomain| *2 (|Expression| *4))
       (|isDomain| *1 (|PiCoercions| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ResolveLatticeCompletion| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Exit|)) (|isDomain| *1 (|ResolveLatticeCompletion| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|ofType| *6 (|List| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|RationalFunction| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|SArgand|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|SArgand|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4))
       (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|SquareMatrix| *3 *4))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Character|)) (|ofCategory| *1 (|StringAggregate|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|STransform| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Switch|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Table| (|Symbol|) (|FortranType|)))
       (|isDomain| *1 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|TexFormat|)) (|isDomain| *1 (|TexFormat1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TexmacsFormat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|TaylorSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Tuple| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| '|x| *3))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Segment| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|UniversalSegment| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|))
       (|isDomain| *1 (|UnivariatePolynomial| *3 *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3))
       (|ofType| *3 *2)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|GraphImage|))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Void|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Vector| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4))
       (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|ofType| *7 (|List| (|NonNegativeInteger|)))
       (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4))
       (|ofType| *7 (|List| (|NonNegativeInteger|)))
       (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|XAlgebra| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|XmlElement|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|FreeMonoid| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedMonoid|))
       (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|FreeMonoid| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedMonoid|))
       (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|XRecursivePolynomial| *4 *2))
       (|ofCategory| *1 (|FreeLieAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4))
       (|ofCategory| *1 (|XFreeAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *5 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *5))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Field|)))
 ((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *2 *3))
       (|ofCategory| *2 (|Algebra| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *3 *2))
       (|ofCategory| *3 (|Algebra| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|LieAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *2 *3))
       (|ofCategory| *2 (|Module| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *2))
       (|ofCategory| *3 (|Module| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|OrdinaryWeightedPolynomials| *2 *3 *4 *5))
   (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|))
   (|ofType| *3 (|List| (|Symbol|)))
   (|ofType| *4 (|List| (|NonNegativeInteger|)))
   (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *4 *2))
       (|ofCategory| *6 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|VectorSpace| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *3))
   (|isDomain| *1 (|WeightedPolynomials| *2 *3 *4 *5 *6 *7 *8))
   (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))
   (|ofType| *7 (|List| (|NonNegativeInteger|)))
   (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|Ring|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FactoringUtilities| *5 *6 *7 *8))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|GradedModule| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|AbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *5 *3))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *2 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *3 *2 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|OrderedAbelianMonoidSup|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
   (|isDomain| *1 (|LiePolynomial| *3 *4))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|LiePolynomial| *3 *4))
   (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|CubicalFacet|)))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|CombinatorialOpsCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteCubicalComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|ProductFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3
                     (|Join| (|Algebra| (|Fraction| (|Integer|)))
                             (|TranscendentalFunctionCategory|)
                             (|CommutativeRing|)))
       (|isDomain| *1 (|StreamExponentialSeriesTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *4 (|Module| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |coef| (|NonNegativeInteger|))
                              (|:| |logand| *4))))
       (|isDomain| *1 (|FactoredFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3
                     (|Join| (|Algebra| (|Fraction| (|Integer|)))
                             (|TranscendentalFunctionCategory|)
                             (|CommutativeRing|)))
       (|isDomain| *1 (|StreamExponentialSeriesTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *4 (|Module| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|TextFile|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|TextFile|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|XmlElement|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XmlElement|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|XmlElement|)))
       (|isDomain| *4 (|List| (|XmlAttribute|)))
       (|isDomain| *1 (|XmlElement|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|XmlAttribute|)))
       (|isDomain| *1 (|XmlElement|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|XmlAttribute|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XmlElement|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExportXml|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XmlElement|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExportXml|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetVectorField| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|TwoDimensionalArray| (|JetVectorField| *4 *5)))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |key| *3) (|:| |entry| *4))))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *1 (|TableAggregate| *3 *4))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|TableAggregate| *2 *3)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|SingleInteger|) *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|XHashTable| *3 *4))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |k| (|FreeMonoid| *3)) (|:| |c| *4)))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *1 (|XFreeAlgebra| *4 *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LieExponentials| *2 *3 *4))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|BasicType|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|NormRetractPackage| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|ofType| *6 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Finite|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *2)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|Finite|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| *6))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| *8))
   (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
   (|isDomain| *4 (|Mapping| *8 *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| *6))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| *8))
   (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
   (|isDomain| *4 (|Mapping| *8 *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *4 *5 *6 *7)))
       (|isDomain| *1 (|WuWenTsunTriangularSet| *4 *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *6 *7 *8 *9)))
       (|isDomain| *1 (|WuWenTsunTriangularSet| *6 *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *4 *5 *6 *7))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|List| *3)) (|ofType| *7 *3)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofType| *8 (|List| *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|WeightedPolynomials| *4 *5 *6 *7 *8 *9 *10))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofType| *9 (|List| *3)) (|ofType| *10 *3)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|WeightedGraph| *4 *5))
   (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |weight| *5))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|)) (|:| |weight| *5)
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
   (|isDomain| *1 (|WeightedGraph| *4 *5))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |weight| *4))))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
   (|isDomain| *1 (|WeightedGraph| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|WeightedGraph| *5 *4))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Union| *5 "disjoint"))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))
       (|isDomain| *1 (|WeightedGraph| *4 *2))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))
       (|isDomain| *1 (|WeightedGraph| *4 *2))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|DirectedGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *1 (|ListPackage| *3))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|MultifunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|UndirectedGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|WeightedGraph| (|Product| *3 *3) *4))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|TwoDimensionalArray| (|Union| *4 "disjoint")))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| $) $)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| (|Integer|)))
                             (|:| |basisDen| (|Integer|))
                             (|:| |basisInv| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                             (|:| |basisInv| (|Matrix| *3))))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *3 *5 *6))
       (|ofCategory| *6 (|MonogenicAlgebra| *3 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                             (|:| |basisInv| (|Matrix| *3))))
       (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *4 *3 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *3 *5))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| $) $)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| (|Integer|)))
                             (|:| |basisDen| (|Integer|))
                             (|:| |basisInv| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4))
       (|ofCategory| *4 (|FramedAlgebra| (|Integer|) *3))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4)
                             (|:| |basisInv| (|Matrix| *4))))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *3 *4 *5 *6))
       (|ofCategory| *6 (|MonogenicAlgebra| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4)
                             (|:| |basisInv| (|Matrix| *4))))
       (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *3 *4 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|TaylorSeries| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|TaylorSeries| *5)))
       (|isDomain| *1 (|WeierstrassPreparation| *5))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2)
  (AND (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|CardinalNumber|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|CardinalNumber|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PointCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|VectorSpace| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 *2)))
 ((*1 *2)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FramedModule| *3))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Vector| (|List| (|Integer|))))
       (|isDomain| *1 (|HallBasis|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|Vector| (|Vector| *4)))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *6 (|shallowlyMutable|)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *9 (|shallowlyMutable|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *10))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *10 (|MatrixCategory| *7 *8 *9))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|isDomain| *2 (|List| *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianSemiGroup|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|Color|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Database| *2))
       (|ofCategory| *2
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|CancellationAbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|AbelianMonoid|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|OctonionCategory&| *3 *4))
       (|ofCategory| *3 (|OctonionCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|)))
 ((*1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3)
       (|ofType| *5 *3)))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
   (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Vector| *3))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FramedModule| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Matrix| *5))) (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1) (|isDomain| *1 (|Void|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|SubSpace| 3 *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *4))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1 *3 *4 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Color|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|GraphImage|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *2 *1 *3 *4 *4 *4 *4 *5 *5 *5 *5 *6 *5 *6 *5)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *5 (|Integer|)) (|isDomain| *6 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Vector|
                (|Record| (|:| |scaleX| (|DoubleFloat|))
                          (|:| |scaleY| (|DoubleFloat|))
                          (|:| |deltaX| (|DoubleFloat|))
                          (|:| |deltaY| (|DoubleFloat|))
                          (|:| |points| (|Integer|))
                          (|:| |connect| (|Integer|))
                          (|:| |spline| (|Integer|)) (|:| |axes| (|Integer|))
                          (|:| |axesColor| (|Palette|))
                          (|:| |units| (|Integer|))
                          (|:| |unitsColor| (|Palette|))
                          (|:| |showing| (|Integer|)))))
   (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Vector| (|Union| (|GraphImage|) "undefined")))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *4 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *6 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2 (|GraphImage|)) (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|List|
                (|Vector|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *2
               (|Matrix|
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|VectorHermitePadeSolver|))))) 
(((*1 *1 *1) (|isDomain| *1 (|AlgebraicNumber|)))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *2))))
 ((*1 *2 *3 *1 *2 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *1 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *4))
                             (|:| |deg| (|PositiveInteger|))))
       (|isDomain| *1 (|DegreeReductionPackage| *4 *5))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *6 *2))
       (|isDomain| *4 (|DirectProduct| *5 *6))
       (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *2))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *4 *2 *3 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *3))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Expression| *2)) (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *2 *6))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))
       (|ofCategory| *6 (|Join| (|LinearAggregate| *2) (|finiteAggregate|)))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *2 *6))
       (|ofCategory| *4 (|FiniteSetAggregate| *5))
       (|ofCategory| *6 (|FiniteSetAggregate| *2))))
 ((*1 *1 *1) (|isDomain| *1 (|InnerAlgebraicNumber|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|JetBundleExpression| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|JetBundleXExpression| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListFunctions2| *5 *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *8 (|FiniteLinearAggregate| *2))
       (|ofCategory| *9 (|FiniteLinearAggregate| *2))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *2 *8 *9 *10))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *10 (|MatrixCategory| *2 *8 *9))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *1 (|MonogenicAlgebra| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|isDomain| *4 (|PrimitiveArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *2))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|ofType| *6 (|List| *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *7 *2))
       (|ofCategory| *7 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *8 (|DirectProductCategory| *6 *7))
       (|ofCategory| *9 (|DirectProductCategory| *5 *7))
       (|ofCategory| *10 (|DirectProductCategory| *6 *2))
       (|ofCategory| *11 (|DirectProductCategory| *5 *2))
       (|isDomain| *1
                   (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *2
                                                          *10 *11 *12))
       (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9))
       (|ofCategory| *12 (|RectangularMatrixCategory| *5 *6 *2 *10 *11))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Stream| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|StreamFunctions2| *5 *2))))
 ((*1 *2 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *2))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *5 *6 *7))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|VectorFunctions2| *5 *2))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5))
       (|isDomain| *4 (|OneDimensionalArray| *6)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *5))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *7 *5))
       (|isDomain| *4 (|DirectProduct| *6 *7))
       (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *7 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|DirectProduct| *6 *5))
       (|isDomain| *1 (|DirectProductFunctions2| *6 *7 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *6 *4 *5 *2))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *6) (|finiteAggregate|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|FiniteSetAggregate| *5))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *6 *4 *5 *2))
       (|ofCategory| *4 (|FiniteSetAggregate| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|ListFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5))
       (|isDomain| *4 (|PrimitiveArray| *6)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|PrimitiveArray| *5))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Mapping| *3 *6 *3)) (|isDomain| *5 (|Stream| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamFunctions2| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|VectorFunctions2| *6 *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Complex| (|DoubleFloat|))))
       (|isDomain| *1 (|ComplexDoubleFloatVector|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Vector| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|VectorCategory| *3))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianGroup|)))
 ((*1 *1 *1) (|ofCategory| *1 (|AbelianGroup|)))
 ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|CardinalNumber|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Database| *2))
       (|ofCategory| *2
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|AbelianGroup|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiRng|))
       (|ofCategory| *2 (|AbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|)))
       (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianMonoid|)) (|ofCategory| *2 (|SemiRng|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PointCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|RadicalCategory|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *4 *5 *6 *6 *3)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *1 *3 *4 *4 *5)
  (|partial| AND (|isDomain| *4 (|Vector| (|Integer|)))
   (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |nvars| (|Integer|))
                         (|:| |offsetdata| (|Vector| (|Integer|)))
                         (|:| |expdata| (|SortedExponentVector|))
                         (|:| |coeffdata| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Vector| (|Integer|)))
   (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *2 *2 *4)
  (AND (|isDomain| *2 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Vector| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *2 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *3 (|Vector| (|Integer|)))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|U32Vector|)))
                         (|:| |denoms| (|PrimitiveArray| (|U32Vector|)))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|U32Vector|))
                         (|:| |denom| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Integer|))
   (|isDomain| *2 (|Record| (|:| |num| (|Integer|)) (|:| |den| (|Integer|))))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|Integer|)))
                         (|:| |denoms| (|PrimitiveArray| (|Integer|)))))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1)
  (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))
 ((*1 *1) (|isDomain| *1 (|SymbolTable|)))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|OrderedVariableList| *3)) (|ofType| *3 (|List| *2))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|QueryEquation|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3))
       (|ofType| *3 *2)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|ILogic|))
       (|ofCategory| *1 (|VarCat|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|String|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|ILogic|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|String|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| *1)
                             (|:| |pout| (|NonNegativeInteger|))))
       (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Reference| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *3 *3)
  (AND (|isDomain| *3 (|Equation| *6)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *5 *6))))
 ((*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| (|Equation| *7)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|Equation| *8)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *8)) (|isDomain| *6 (|List| *8))
       (|ofCategory| *8 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *6 (|List| (|Equation| *8)))
       (|ofCategory| *8 (|FunctionSpace| *7)) (|isDomain| *5 (|Equation| *8))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 ((*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *5)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *5 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *5))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ExpressionSolve| *7 *3 *2 *8))
       (|ofCategory| *8
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *3)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *5)))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *1 (|TaylorSolve| *5 *2 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UTSodetools| *4 *5 *6 *2))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Mapping| *6 (|List| *6)))
       (|isDomain| *1 (|UTSodetools| *4 *5 *3 *6))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|UTSodetools| *5 *2 *6 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UTSodetools| *4 *3 *5 *2))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| (|Mapping| *6 (|List| *6))))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|List| *2))) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *2))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 (|List| *5)))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|List| (|Stream| *4))))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4) (|Stream| *4)))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4)))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerTaylorSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *5))
       (|ofCategory| *5 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3
                   (|Stream|
                    (|Record| (|:| |k| (|Fraction| (|Integer|)))
                              (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Stream|
                (|Record| (|:| |k| (|NonNegativeInteger|)) (|:| |c| *3))))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Stream| *5))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|)))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|)))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4 (|RetractableTo| (|Integer|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|CardinalNumber|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DivisionRing|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *4 *5 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateLaurentSeriesCategory| *4))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *4 *5 *2 *6))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5))
       (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Group|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|MappingPackage1| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|Monoid|)) (|ofCategory| *3 (|SemiRng|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *3 *4))
       (|ofCategory| *4 (|LeftModule| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Operator| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RadicalCategory|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *3 *4))
       (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| #1="failed")
                            (|:| |pole| #2="potentialPole")))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3)))
       (|isDomain| *5 (|String|))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| #1#) (|:| |pole| #2#)))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4
                   (|SegmentBinding| (|OrderedCompletion| (|Expression| *5))))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5)))
                            (|:| |f2|
                                 (|List|
                                  (|OrderedCompletion| (|Expression| *5))))
                            (|:| |fail| #3="failed")
                            (|:| |pole| #4="potentialPole")))
       (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
       (|isDomain| *4
                   (|SegmentBinding| (|OrderedCompletion| (|Expression| *6))))
       (|isDomain| *5 (|String|))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6)))
                            (|:| |f2|
                                 (|List|
                                  (|OrderedCompletion| (|Expression| *6))))
                            (|:| |fail| #3#) (|:| |pole| #4#)))
       (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|SegmentBinding|
                (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|ofCategory| *5
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5)))
                        (|:| |f2|
                             (|List| (|OrderedCompletion| (|Expression| *5))))
                        (|:| |fail| #3#) (|:| |pole| #4#)))
   (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|SegmentBinding|
                (|OrderedCompletion| (|Fraction| (|Polynomial| *6)))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6)))
                        (|:| |f2|
                             (|List| (|OrderedCompletion| (|Expression| *6))))
                        (|:| |fail| #3#) (|:| |pole| #4#)))
   (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Union| *3 (|List| *3)))
       (|isDomain| *1 (|FunctionSpaceIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| (|Fraction| *5)))
       (|isDomain| *1 (|RationalIntegration| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Union| (|Expression| *5) (|List| (|Expression| *5))))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Polynomial| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4))
       (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|)))
             (|ofCategory| *3 (|PrimitiveFunctionCategory|))
             (|ofCategory| *3 (|TranscendentalFunctionCategory|))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
             (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|)))
             (|ofCategory| *3 (|PrimitiveFunctionCategory|))
             (|ofCategory| *3 (|TranscendentalFunctionCategory|))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
             (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|)))
             (|ofCategory| *3 (|PrimitiveFunctionCategory|))
             (|ofCategory| *3 (|TranscendentalFunctionCategory|))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
             (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 *4))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| '|x| *4))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 *4))
       (|isDomain| *1 (|UnivariateTaylorSeries| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialExtension| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|DifferentialExtension| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))
       (|isDomain| *1 (|IntegrationResult| *2)) (|isDomain| *3 (|Symbol|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2))
       (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Union| *1 "0"))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|SequenceCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|Segment| (|Integer|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "right")
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "left") (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 (|Integer|))
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *2)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|DataList| (|String|)))
       (|isDomain| *1 (|Database| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ *3))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|QueryEquation|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "count") (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DataList| *4)) (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "sort") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "unique") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Eltable| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *2 *1 *2 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|IndexCard|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|Library|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PermutationCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Permutation| *4))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DirectProduct| *4 *2))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|QuadraticForm| *4 *2))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "value") (|ofCategory| *1 (|RecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|Ruleset| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *2))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| *1))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Fraction| *1))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "last") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "first") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5))
   (|ofCategory| *2 (|IntegralDomain|))
   (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *3 *2))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|Segment| (|Integer|)))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "right") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "left") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|Library|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "value") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *4 *5)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|TableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "last") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "first") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))
 ((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *1
               (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5
                                                                    *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2
               (|Record|
                (|:| |%term|
                     (|Record|
                      (|:| |%coef| (|UnivariatePuiseuxSeries| *4 *5 *6))
                      (|:| |%expon|
                           (|ExponentialOfUnivariatePuiseuxSeries| *4 *5 *6))
                      (|:| |%expTerms|
                           (|List|
                            (|Record| (|:| |k| (|Fraction| (|Integer|)))
                                      (|:| |c| *4))))))
                (|:| |%type| (|String|))))
   (|isDomain| *1
               (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5
                                                                    *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *3))
       (|ofCategory| *3 (|UnivariateLaurentSeriesCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *2 (|Fraction| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *4)
                             (|LinearlyExplicitOver| *4)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *5)
                             (|LinearlyExplicitOver| *5)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *4 *3))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |flg| (|Union| "nil" "sqfr" "irred" "prime"))
                         (|:| |fctr| *4) (|:| |xpnt| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|UnivariatePolynomialCategory| *3) (|IntegralDomain|)
                         (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $)))))
   (|ofCategory| *3 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|UniqueFactorizationDomain|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *2))
       (|ofCategory| *2
                     (|Join| (|UnivariatePolynomialCategory| *3)
                             (|IntegralDomain|)
                             (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|CancellationAbelianMonoid|))
       (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Stream| (|Record| (|:| |k| *4) (|:| |c| *3))))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|String|)) (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGroup|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *4 *5 *6 *7))
       (|ofCategory| *4 (|Join| (|Finite|) (|Field|)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *7 (|FunctionFieldCategory| *4 *5 *6))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FindOrderFinite| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|FiniteDivisor| *6 *7 *4 *8))
       (|isDomain| *5 (|Mapping| *9 *6)) (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|ofCategory| *8 (|FunctionFieldCategory| *6 *7 *4))
       (|ofCategory| *9 (|Join| (|Finite|) (|Field|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ReducedDivisor| *6 *7 *4 *8 *9))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BalancedPAdicRational| *4)) (|ofType| *4 *3)))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|PAdicRational| *4)) (|ofType| *4 *3)))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofType| *4 *3)
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|PAdicRationalConstructor| *4 *5))
       (|ofCategory| *5 (|PAdicIntegerCategory| *4))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|has| *2 (SIGNATURE ^ (*2 *2 *3)))
       (|has| *2 (SIGNATURE |coerce| (*2 (|Symbol|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|PointCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *3)))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Equation| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Evalable| *2)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|Equation| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|BasicOperator|)))
       (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|BasicOperator|)))
       (|isDomain| *3 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *3)))
       (|ofCategory| *1 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Equation| *3)) (|ofCategory| *1 (|Evalable| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|Integer|)))
       (|isDomain| *4 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|EvaluateCycleIndicators| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FreeLieAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Mapping| *1 *1)) (|ofCategory| *1 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|BasicOperator|))) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|FunctionSpace| *4)) (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *2 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|InnerEvalable| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *1 (|InnerEvalable| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|MoebiusTransform| *3))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PermutationCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *2 *6 *7))
       (|ofCategory| *1 (|TensorProductProperty| *5 *6 *7 *3 *2))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *6 (|Module| *5))
       (|ofCategory| *7 (|Module| *5))
       (|ofCategory| *3 (|TensorProductCategory| *5 *6 *7))
       (|ofCategory| *2 (|Module| *5))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|has| *3 (SIGNATURE ^ (*3 *3 *4))) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *5))))
   (|isDomain| *3 (|Vector| (|Expression| *5))) (|isDomain| *4 (|Integer|))
   (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|TransSolvePackageService| *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *1 (|ListPackage| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ComplexCategory&| *3 *2))
       (|ofCategory| *3 (|ComplexCategory| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedAlgebra&| *3 *2 *4))
       (|ofCategory| *3 (|FramedAlgebra| *2 *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4))
       (|ofCategory| *4 (|FramedAlgebra| *2 *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| *1))
   (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| *3) (|:| |quotient| *1)
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |polyPart| (|LaurentPolynomial| *4 *5))
                             (|:| |fracPart| (|Fraction| *5))))
       (|isDomain| *1 (|LaurentPolynomial| *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |primePart| *1) (|:| |commonPart| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDivisionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|Field|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *3 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|CommonDenominator| *4 *5 *3))
       (|ofCategory| *3 (|FiniteLinearAggregate| *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *6) (|:| |den| *4)))
       (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *6 *3))
       (|ofCategory| *6 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *4)) (|:| |den| *4)))
       (|isDomain| *1 (|MatrixCommonDenominator| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record| (|:| |eq| *7)
                             (|:| |rh| (|List| (|Fraction| *6)))))
       (|isDomain| *1 (|PrimitiveRatDE| *5 *6 *7 *3))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *3
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|PolynomialCommonDenominator| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|CommonDenominator| *3 *4 *2))
       (|ofCategory| *2 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))
       (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *2 *3))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|MatrixCommonDenominator| *4 *5))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialCommonDenominator| *3 *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *3 *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|CommonDenominator| *2 *4 *3))
       (|ofCategory| *3 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|InnerCommonDenominator| *2 *4 *5 *3))
       (|ofCategory| *5 (|Join| (|LinearAggregate| *2) (|finiteAggregate|)))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|MatrixCommonDenominator| *2 *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PolynomialCommonDenominator| *2 *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *2 *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| *3)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UniversalSegment| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BalancedPAdicRational| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|BalancedPAdicRational| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PAdicRational| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PAdicRational| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|ofType| *3 *2)
       (|isDomain| *1 (|PAdicRationalConstructor| *3 *4))
       (|ofCategory| *4 (|PAdicIntegerCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofType| *2 (|Integer|))
       (|isDomain| *1 (|PAdicRationalConstructor| *2 *3))
       (|ofCategory| *3 (|PAdicIntegerCategory| *2))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|Vector| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariateFormalPowerSeriesFunctions| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Integer|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerPrimesPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UniqueFactorizationDomain|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|ofCategory| *7 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|GcdDomain|) (|Comparable|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|ExpressionFactorPolynomial| *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Integer|)))
       (|isDomain| *2 (|Factored| (|Complex| (|Integer|))))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|OrderedSet|)
                         (CATEGORY |domain|
                          (SIGNATURE |convert| ((|Symbol|) $))
                          (SIGNATURE |variable|
                           ((|Union| $ "failed") (|Symbol|))))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
   (|isDomain| *1 (|GeneralizedMultivariateFactorize| *4 *5 *6 *7 *3))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *3 (|PolynomialCategory| *7 *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|MonogenicAlgebra| *5 *6)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|InnerAlgFactor| *5 *6 *7 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *7))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7))
                          (|SparseUnivariatePolynomial| *7)))
   (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|Factored| *3))
   (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *3))
   (|ofCategory| *3 (|PolynomialCategory| *7 *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7))
                              (|SparseUnivariatePolynomial| *7)))
       (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *8 (|PolynomialCategory| *7 *6 *5))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))
                (|List| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|List| (|Expression| (|Integer|)))) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator1|
                 (|Fraction|
                  (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LyndonWord| *4)))
       (|isDomain| *1 (|LyndonWord| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ "failed") (|Symbol|))))))
       (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MPolyCatPolyFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|Polynomial| *6) *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4
                                           *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MRationalFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|Fraction| *6) *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|RationalFunctionFactor| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Polynomial| (|Integer|)))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|UniqueFactorizationDomain|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |high| (|List| (|Symbol|)))
                         (|:| |low| (|List| (|Symbol|)))))
   (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2))
       (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))))) 
(((*1 *2)
  (AND
   (|isDomain| *2 (|Record| (|:| |low| (|List| *3)) (|:| |high| (|List| *3))))
   (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UndirectedGraph| *5))
       (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *6)))
   (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *6 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *6))))
   (|isDomain| *1 (|TwoFactorize| *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|TwoFactorize| *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *2))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|)))
       (|isDomain| *5 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *2 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|DirectProductCategory| *3 *4))
       (|ofCategory| *4 (|Monoid|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5))
                   (|Record| (|:| |index| *2) (|:| |exponent| *5))))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))
 ((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Point| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2 (|TubePlot| *3)) (|isDomain| *1 (|NumericTubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|TubePlot| *2))
       (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|TubePlot| *2))
       (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *9))
   (|isDomain| *4 (|Mapping| (|Boolean|) *9))
   (|isDomain| *5 (|Mapping| (|Boolean|) *9 *9))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *9))))
   (|ofCategory| *1 (|TriangularSetCategory| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| *8))
   (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *8))))
   (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2
                   (|Record| (|:| |close| (|List| *6))
                             (|:| |open| (|List| *6))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1 *4)
  (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *3))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *7 (|List| *7)))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *1 *3 *4)
  (AND (|isDomain| *2 (|List| *8)) (|isDomain| *3 (|Mapping| *8 *8 *8))
       (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *10))
       (|isDomain| *1 (|LazardSetSolvingPackage| *5 *6 *7 *8 *9 *10))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *10
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|SquareFreeRegularTriangularSet| *5
                                                  (|IndexedExponents|
                                                   (|OrderedVariableList| *6))
                                                  (|OrderedVariableList| *6)
                                                  (|NewSparseMultivariatePolynomial|
                                                   *5
                                                   (|OrderedVariableList|
                                                    *6)))))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))
 ((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|RegularChain| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |close| *1) (|:| |open| (|List| *7)))))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|ofType| *6 *3)
       (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
       (|ofType| *5 (|Symbol|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|TaylorSeriesExpansion| *4 *5 *6 *2 *3))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *7 *7))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *4 *5 *6 *2 *7))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *5 *6 *7 *2 *8))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *5 *6 *7))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|List| (|Mapping| *3 *3)))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *7 (|OrderedAbelianMonoid|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *9 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *2 (|PowerSeriesCategory| *3 *7 *8))
       (|isDomain| *1 (|TaylorSeriesExpansion&| *6 *3 *7 *8 *2 *9))
       (|ofCategory| *6 (|TaylorSeriesExpansion| *3 *7 *8 *2 *9))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|PowerSeriesCategory| *6 *7 *8))
       (|ofCategory| *7 (|OrderedAbelianMonoid|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *9 (|UnivariateTaylorSeriesCategory| *6))
       (|isDomain| *1 (|TaylorSeriesExpansion&| *5 *6 *7 *8 *2 *9))
       (|ofCategory| *5 (|TaylorSeriesExpansion| *6 *7 *8 *2 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|List| (|Mapping| *3 *3)))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *3 *6 *7 *2 *8))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *2 (|PowerSeriesCategory| *3 *6 *7))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|List| (|Mapping| *5 *5)))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *5 *6 *7 *2 *8))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *5 *6 *7))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|SquareMatrix| *4 *2))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2 (|CancellationAbelianMonoid|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *2 *3))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *2 *3))
       (|ofCategory| *3 (|Monoid|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|PolynomialCategory| *4 (|IndexedExponents| *5) *5))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *5 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Polynomial| *4))
       (|isDomain| *1 (|TaylorSeries| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|SparseMultivariateTaylorSeries| *4 *3 *5)))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *3 *5))
       (|ofCategory| *5 (|PolynomialCategory| *4 (|IndexedExponents| *3) *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|TaylorSeries| *4)))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *3 (|PatternMatchable| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *2 (|PatternMatchable| *3))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |Sys| (|List| *1))
                             (|:| JM (|SparseEchelonMatrix| *5 *1))
                             (|:| |Depend|
                                  (|Union| "failed"
                                           (|List|
                                            (|List|
                                             (|NonNegativeInteger|)))))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CharacteristicZero|))
       (|ofCategory| *2 (|EuclideanDomain|)) (|ofCategory| *2 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|AlgebraicNumber|))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|SimplifyAlgebraicNumberConvertPackage|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Complex| (|Expression| *4)))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Complex| *3))
   (|isDomain| *1 (|TrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|TrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Expression| *4))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Expression| *4))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|TrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|TrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Tree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|Tree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Tree| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Tree| *2))) (|isDomain| *1 (|Tree| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Tree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Tree| *3))) (|isDomain| *1 (|Tree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Tree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Tree| *3))) (|isDomain| *1 (|Tree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1) (|isDomain| *1 (|Pi|)))
 ((*1 *1) (|ofCategory| *1 (|TranscendentalFunctionCategory|)))) 
(((*1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelThreeSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ToolsForSign| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3)
  (|partial| AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|OrderedCompletion| *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ElementaryFunctionSign| *6 *3))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|ofCategory| *6
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *6 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *4))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *6))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *6))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TexmacsFormat|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|OutputForm|)))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| (*2 $))
                              (SIGNATURE |fullDisplay| (*2 $)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OutputFormatterCategory|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TexmacsFormat|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))
 ((*1 *2 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SingleInteger|))
   (|isDomain| *1 (|BinaryFile|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *1 (|File| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|)))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))
 ((*1 *1) (|isDomain| *1 (|ScriptFormulaFormat|)))
 ((*1 *1) (|isDomain| *1 (|HashState|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|ListAggregate| *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1) (|isDomain| *1 (|Symbol|))) ((*1 *1) (|isDomain| *1 (|Symbol|)))
 ((*1 *1) (|isDomain| *1 (|TexFormat|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|UnittestAux| *2))
       (|ofCategory| *2 (|RealNumberSystem|)) (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|UnittestAux| *2))
       (|ofCategory| *2 (|RealNumberSystem|)) (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|RealNumberSystem|)) (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestAux| *5))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|RealNumberSystem|)) (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestAux| *5))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4))
       (|ofCategory| *4 (|RealNumberSystem|)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4))
       (|ofCategory| *4 (|RealNumberSystem|)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UnittestAux| *3))
       (|ofCategory| *3 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|TensorProductCategory| *4 *2 *3))
       (|ofCategory| *2 (|Module| *4)) (|ofCategory| *3 (|Module| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|Module| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|TensorPowerCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|TensorPower| *3 *4 *5 *6))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|FreeModuleCategory| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|ofCategory| *6 (|Comparable|))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *5))
       (|isDomain| *1 (|FreeModuleFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|FreeModuleCategory| *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *2 *4))
       (|ofCategory| *1 (|FreeModuleCategory| *2 *4))
       (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|List| *7)))
       (|isDomain| *4 (|TensorPower| *5 *6 *7 *8))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofCategory| *6 (|CommutativeRing|)) (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|FreeModuleCategory| *6 *7))
       (|ofCategory| *2 (|Module| *6))
       (|isDomain| *1 (|TensorPowerFunctions2| *5 *6 *7 *8 *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinarySearchTree| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinaryTournament| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *2 (|SetCategory|))
   (|isDomain| *1 (|TabulatedComputationPackage| *3 *2))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|TangentExpansions| *2))
       (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|TangentExpansions| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|TangentExpansions| *2))
       (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|JetDifferential| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|List| (|JetDifferential| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Tableau| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|List| (|List| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|List| (|List| *5)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|Tableau| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *4))
                             (|:| |f2| (|List| (|List| (|List| *4))))
                             (|:| |f3| (|List| (|List| *4)))
                             (|:| |f4| (|List| (|List| (|List| *4))))))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *4 *5 *4 *4 *4)
  (AND (|isDomain| *4 (|List| (|List| (|List| *6))))
       (|isDomain| *5 (|List| (|List| *6))) (|isDomain| *3 (|List| *6))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *6))
                             (|:| |f2| (|List| (|List| (|List| *6))))
                             (|:| |f3| (|List| (|List| *6)))
                             (|:| |f4| (|List| (|List| (|List| *6))))))
       (|isDomain| *1 (|TableauxBumpers| *6))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|FiniteLinearAggregate| *4))
   (|ofCategory| *6 (|FiniteLinearAggregate| *4))
   (|ofCategory| *7 (|QuotientFieldCategory| *4))
   (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
   (|isDomain| *1
               (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9 *2))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
   (|ofCategory| *8 (|FiniteLinearAggregate| *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
   (|ofCategory| *2 (|AbelianMonoid|))
   (|ofCategory| *3 (|FiniteLinearAggregate| *2))
   (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|SquareMatrixCategory| *2 *3 *4 *5))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|DirectProductCategory| *2 *3))
   (|ofCategory| *5 (|DirectProductCategory| *2 *3))
   (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Tableau| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Tableau| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6 *6))
       (|isDomain| *5 (|List| (|List| *6))) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *4 (|List| *6))
       (|isDomain| *2
                   (|Record| (|:| |fs| (|Boolean|)) (|:| |sd| (|List| *6))
                             (|:| |td| (|List| (|List| *6)))))
       (|isDomain| *1 (|TableauxBumpers| *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|List| (|Polynomial| *5))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|Equation| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
   (|isDomain| *1 (|FloatingRealPackage| *4))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Symbol|))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|EuclideanDomain|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|isDomain| *2 (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4))))
   (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *4 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *2 *4 *2 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|EuclideanDomain|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *2 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1="failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| *7 #1#))
                              (|:| |basis| (|List| *7)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *5) #2="failed"))
                    (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                             (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                              (|:| |basis| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|Vector| *5))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                              (|:| |basis| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *4))))
 ((*1 *2 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|EuclideanDomain|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|NonLinearFirstOrderODESolver| *5 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
   (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|EuclideanDomain|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Symbol|))
   (|ofCategory| *6
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|EuclideanDomain|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2 (|List| (|Vector| *6)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| (|Equation| *7)))
   (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|EuclideanDomain|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|EuclideanDomain|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |particular| *7) (|:| |basis| (|List| *7)))
                    *7 #3="failed"))
       (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |particular| *3) (|:| |basis| (|List| *3)))
                    *3 #3#))
       (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Equation| *2))
   (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|EuclideanDomain|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *4 (|Equation| *2)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|EuclideanDomain|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|isDomain| *5
               (|Mapping|
                (|Union|
                 (|Record| (|:| |particular| *6) (|:| |basis| (|List| *6)))
                 "failed")
                *7 *6))
   (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *6))
                         (|:| |basis| (|Matrix| *6))))
   (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Vector| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record|
                     (|:| |particular|
                          (|List|
                           (|Record| (|:| |ratpart| *6)
                                     (|:| |coeffs| (|Vector| *6)))))
                     (|:| |basis| (|List| *6)))
                    *7 (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| (|Vector| *6))
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *3 (|Matrix| *7))
   (|isDomain| *5 (|List| (|Vector| *4)))
   (|isDomain| *6
               (|Mapping|
                (|Record|
                 (|:| |particular|
                      (|List|
                       (|Record| (|:| |ratpart| *4)
                                 (|:| |coeffs| (|Vector| *4)))))
                 (|:| |basis| (|List| *4)))
                *7 (|List| *4)))
   (|ofCategory| *4 (|Field|))
   (|ofCategory| *7 (|UnivariateSkewPolynomialCategory| *4))
   (|isDomain| *2
               (|Record|
                (|:| |particular|
                     (|List|
                      (|Record| (|:| |ratpart| (|Vector| *4))
                                (|:| |coeffs| (|Vector| *4)))))
                (|:| |basis| (|List| (|Vector| *4)))))
   (|isDomain| *1 (|OrePolynomialMatrixOperations| *4 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Float|)) (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|TransSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Expression| *4)))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|TransSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Expression| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))) 
(((*1 *2 *3 *2 *3)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *4 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *3 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|SymbolTable|))))
 ((*1 *2 *3 *2 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|FortranType|))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|FortranScalarType|))
       (|isDomain| *2
                   (|List|
                    (|Union| (|:| |name| (|Symbol|))
                             (|:| |bounds|
                                  (|List|
                                   (|Union| (|:| S (|Symbol|))
                                            (|:| P
                                                 (|Polynomial|
                                                  (|Integer|)))))))))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|List|
                 (|Union| (|:| |name| (|Symbol|))
                          (|:| |bounds|
                               (|List|
                                (|Union| (|:| S (|Symbol|))
                                         (|:| P
                                              (|Polynomial|
                                               (|Integer|))))))))))
   (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |key| (|Symbol|))
                          (|:| |entry| (|FortranType|)))))
   (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Union| (|:| |fst| (|FortranScalarType|))
                        (|:| |void| #1="void")))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| #1#)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| #1#)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| "void")))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SymbolTable|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|SymmetricFunctions| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|SymmetricFunctions| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FunctionCalled| *3))
       (|ofType| *3 *2)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RuleCalled| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |sub| (|List| (|OutputForm|)))
                         (|:| |sup| (|List| (|OutputForm|)))
                         (|:| |presup| (|List| (|OutputForm|)))
                         (|:| |presub| (|List| (|OutputForm|)))
                         (|:| |args| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |sub| (|List| (|OutputForm|)))
                         (|:| |sup| (|List| (|OutputForm|)))
                         (|:| |presup| (|List| (|OutputForm|)))
                         (|:| |presub| (|List| (|OutputForm|)))
                         (|:| |args| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Symbol|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|OutputForm|))))
       (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|StringCategory|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|)))
 ((*1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1) (|ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|JetVectorField| *5 (|JetBundleExpression| *5)))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *5 *6 *7))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *7 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|JetVectorField| *5 (|JetBundleExpression| *5)))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *5 *6 *7))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *7 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
   (|ofCategory| *4 (|JetBundleCategory|))
   (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
   (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
   (|isDomain| *2
               (|List|
                (|JetBundleLinearFunction| (|JetBundleSymAna| *4 *5 *6)
                                           (|JetBundleXExpression|
                                            (|JetBundleSymAna| *4 *5 *6)))))
   (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|JetBundleExpression| *4))
       (|isDomain| *1 (|JetCoordinateTransformation| *3 *4 *5 *6))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleCategory|)) (|ofType| *5 (|Vector| *2))
       (|ofType| *6 (|Vector| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|JetBundleExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|JetBundleExpression| *5))
       (|isDomain| *1 (|JetCoordinateTransformation| *4 *5 *6 *7))
       (|ofCategory| *5 (|JetBundleCategory|)) (|ofType| *6 (|Vector| *2))
       (|ofType| *7 (|Vector| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|JetBundleExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6)))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|JetVectorField| *3 (|JetBundleExpression| *3)))
       (|isDomain| *1 (|SymmetryAnalysis| *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofType| *4 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Switch|)))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|OutputForm|) (|OutputForm|) (|OutputForm|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|ListMonoidOps| *5 *6 *7))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|AbelianMonoid|))
       (|ofType| *7 *6)))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|SparseUnivariateSkewPolynomial| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Automorphism| *3))
       (|ofType| *5 (|Mapping| *3 *3))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Segment| *3))
       (|ofCategory| *3 (|PolynomialCategory| *7 *6 *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|))))
       (|isDomain| *1 (|InnerPolySum| *6 *4 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|))))
       (|isDomain| *1 (|InnerPolySum| *5 *4 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceSum| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|)
                             (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|)
                             (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceSum| *4 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Polynomial| *5)))
       (|isDomain| *3 (|Polynomial| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|Collection| *3))))
 ((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |exponent| (|NonNegativeInteger|))
                          (|:| |center| *4) (|:| |num| *4))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
   (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))
 ((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|Union| (|:| |fst| (|FortranScalarType|))
                        (|:| |void| #1="void")))
   (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
   (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Boolean|))
   (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InfiniteTuple| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LieAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *3))))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModuleMonomial| *2 *3 *4))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3))
                   (|Record| (|:| |index| *2) (|:| |exponent| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4))))
   (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *1 (|PatternMatchResult| *3 *4))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|Product| *2 *3)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|List| (|SplittingNode| *3 *5)))
       (|isDomain| *1 (|SplittingNode| *3 *5))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Record| (|:| |val| *4) (|:| |tower| *5))))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|List| (|SplittingNode| *4 *5)))
       (|isDomain| *1 (|SplittingNode| *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |tower| *4)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *3 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *2 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|SplittingNode| *2 *3)))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *2 *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|SplittingTree| *2 *3)))
       (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|SuchThat| *2 *3)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *3 *2))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursiveAggregate| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Point| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Point| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *5))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Boolean|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|SubSpaceComponentProperty|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Point| *4)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SubSpaceComponentProperty|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Point| *4))) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|SubResultantPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|PrimitiveArray| *3))
       (|isDomain| *1 (|SubResultantPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|Float|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |sinh| (|Stream| *4))
                             (|:| |cosh| (|Stream| *4))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |sin| (|Stream| *4))
                             (|:| |cos| (|Stream| *4))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *4 (|Integer|)))
       (|isDomain| *5 (|Mapping| (|Stream| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| *4 (|Integer|)))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *1 (|ODEIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
   (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
   (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|CommutativeRing|))
   (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
   (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
   (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *3)))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2))
   (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
   (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|ComplexCategory| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|EntireRing|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *3 (|OrderedAbelianMonoid|))
   (|ofCategory| *2 (|EntireRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
   (|ofCategory| *2 (|AbelianMonoid|))
   (|ofCategory| *3 (|FiniteLinearAggregate| *2))
   (|ofCategory| *4 (|FiniteLinearAggregate| *2))
   (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|EntireRing|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *5 (|DirectProductCategory| *4 *2))
   (|ofCategory| *6 (|DirectProductCategory| *3 *2))
   (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *2 *2)
  (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
   (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|String|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SingleInteger|))) (|isDomain| *1 (|String|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Stream| *4))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |cycle?| (|Boolean|))
                             (|:| |prefix| (|NonNegativeInteger|))
                             (|:| |period| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|Stream| *3))) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Stream| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Stream| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Distribution| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *5 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|isDomain| *1 (|STransformPackage| *3 *4 *5 *6))
       (|ofCategory| *6 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *5))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Algebra| *2))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|Distribution| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |puiseux| (|Fraction| (|Integer|)))
                         (|:| |laurent| (|Fraction| (|Integer|)))
                         (|:| |coef| (|Sequence| *3))))
   (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Distribution| *3))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Algebra| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
   (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))
   (|isDomain| *2 (|Distribution| *4))
   (|isDomain| *1 (|STransformPackage| *4 *5 *6 *3))
   (|ofCategory| *3 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))
       (|isDomain| *1 (|STransformPackage| *4 *5 *6 *2))
       (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))
       (|isDomain| *1 (|STransformPackage| *4 *5 *6 *2))
       (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateLaurentSeriesConstructorCategory| *4 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|STransformPackage| *4 *2 *5 *6))
       (|ofCategory| *6 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|STransform| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|STransform| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DoubleFloat|)))
       (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| (|List| *4) *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|StreamTensor| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1) (|ofCategory| *1 (|StepThrough|)))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|StepThrough|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Stack| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5))
                   (|Record| (|:| |index| *4) (|:| |exponent| *5))))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *5 (|OrderedVariableList| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|isDomain| *2 (|ModuleMonomial| *5 *6 *7))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *8
                     (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|))
       (|ofType| *5 (|SquareMatrix| *4 *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|ModuleMonomial| *5 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *6 *7 *8))
       (|ofCategory| *8
                     (|PolynomialCategory| *2 *6 (|OrderedVariableList| *4)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *2 *3))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|Monoid|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *1 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *4 *3 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3 *1 *4 *4 *4 *4 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *3)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3 *1 *4 *4 *4 *4 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *3)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |val| (|List| *8))
                             (|:| |towers|
                                  (|List|
                                   (|RegularTriangularSet| *5 *6 *7 *8)))))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |val| (|List| *8))
                             (|:| |towers|
                                  (|List|
                                   (|SquareFreeRegularTriangularSet| *5 *6 *7
                                                                     *8)))))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1
               (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *2 *5 *6)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11))))
   (|isDomain| *5
               (|Record| (|:| |done| (|List| *11))
                         (|:| |todo|
                              (|List|
                               (|Record| (|:| |val| (|List| *10))
                                         (|:| |tower| *11))))))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9))
   (|ofCategory| *11 (|RegularTriangularSetCategory| *7 *8 *9 *10))
   (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|OrderedSet|))
   (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *10 *11))))
 ((*1 *2 *3 *4 *2 *5 *6)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11))))
   (|isDomain| *5
               (|Record| (|:| |done| (|List| *11))
                         (|:| |todo|
                              (|List|
                               (|Record| (|:| |val| (|List| *10))
                                         (|:| |tower| *11))))))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9))
   (|ofCategory| *11 (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *10))
   (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|OrderedSet|))
   (|isDomain| *1
               (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *10 *11))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2
                   (|Record|
                    (|:| |id| (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))
                    (|:| |principalPart| *6)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |poly| *6) (|:| |normal| (|Fraction| *6))
                             (|:| |special| (|Fraction| *6))))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|PartialFractionUtilities| *4 *3))))
 ((*1 *2 *3 *2 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *2 *4 *4 *4 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *2 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))
 ((*1 *2 *3 *2 *4 *4 *4 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *9 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *9 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))
 ((*1 *1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))
 ((*1 *1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Character|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|UniversalSegment| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|BinaryFile|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|CachableSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|CubicalFacet|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *3 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|OrientedFacet|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *3 (|CharacterClass|))))
 ((*1 *2 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |less| (|BinarySearchTree| *3))
                         (|:| |greater| (|BinarySearchTree| *3))))
   (|isDomain| *1 (|BinarySearchTree| *3)) (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|IntegrationResult| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *3
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|IntegrationResultToFunction| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *3))))
       (|ofCategory| *3
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3)))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3)))
       (|isDomain| *1 (|ParallelIntegrationTools| *5 *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5)))
       (|isDomain| *4 (|Vector| (|Vector| *5))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|CharacterClass|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|StringAggregate|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Character|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|StringAggregate|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *2 *4))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SquareMatrix| *2 *3))
       (|ofType| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|SquareMatrix| *3 *4))
       (|ofType| *3 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|not| (|ofCategory| *1 (|arbitraryPrecision|)))
       (|not| (|ofCategory| *1 (|arbitraryExponent|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedMultisetAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|)))
 ((*1 *1) (|isDomain| *1 (|SingleInteger|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|not| (|ofCategory| *1 (|arbitraryPrecision|)))
       (|not| (|ofCategory| *1 (|arbitraryExponent|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1) (|isDomain| *1 (|SingleInteger|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|List| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|List| (|DoubleFloat|)))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|SplittingTree| *2 *3))
   (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
   (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|SplittingTree| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|SplittingTree| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|SplittingNode| *4 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *4 *5))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|SplittingNode| *5 *6))
       (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *5 *6))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|SplittingNode| *4 *5)))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *4 *5))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SplittingNode| *3 *4)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|HashState|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|QueryEquation|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *3 *2))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
   (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1 *1) (|isDomain| *1 (|BasicOperator|)))
 ((*1 *1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|)))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SplittingNode| *3 *2))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1 *1 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *5 *6))))) 
(((*1 *2 *1 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *4 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RetractableTo| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))))
 ((*1 *1 *2 *2 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|SpecialFunctionCategory|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RetractableTo| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|SpecialFunctionCategory|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|OrderedRing|)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FileName|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranPackage|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FortranProgramCategory|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SubSpace| 3 *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Point| *4)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Point| *3))))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *3))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|List| (|SubSpaceComponentProperty|)))
       (|isDomain| *4 (|SubSpaceComponentProperty|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *5))))
       (|isDomain| *3 (|List| (|SubSpaceComponentProperty|)))
       (|isDomain| *4 (|SubSpaceComponentProperty|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|List| (|NonNegativeInteger|)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|List| (|Point| *3)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|SubSpaceComponentProperty|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|SubSpaceComponentProperty|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |points| (|NonNegativeInteger|))
                             (|:| |curves| (|NonNegativeInteger|))
                             (|:| |polygons| (|NonNegativeInteger|))
                             (|:| |constructs| (|NonNegativeInteger|))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))
 ((*1 *2 *3 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6))
                          (|:| |exponent| (|Integer|)))))
   (|ofCategory| *6 (|EuclideanDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|SortPackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *4)
                             (|finiteAggregate|) (|shallowlyMutable|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|SortPackage| *3 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *3)
                             (|finiteAggregate|) (|shallowlyMutable|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|SortPackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *4)
                             (|finiteAggregate|) (|shallowlyMutable|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|SortPackage| *3 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *3)
                             (|finiteAggregate|) (|shallowlyMutable|)))))) 
(((*1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SmallOrdinal|))))) 
(((*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *2 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *3))))
   (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|TransSolvePackageService| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Expression| *5))
                               (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Expression| *5))
                               (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4)))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4)))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))) 
(((*1 *2 *2 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *3 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5
                     (|Join| (|Field|)
                             (CATEGORY |domain|
                              (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
       (|isDomain| *2
                   (|Record| (|:| |solns| (|List| *5))
                             (|:| |maps|
                                  (|List|
                                   (|Record| (|:| |arg| *5) (|:| |res| *5))))))
       (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Field|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
   (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|ofCategory| *6 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Field|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
   (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| *5))
   (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
   (|isDomain| *2 (|Vector| (|Fraction| *5)))
   (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|ofCategory| *6 (|LinearlyExplicitOver| *5))
   (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
   (|isDomain| *2 (|Vector| (|Fraction| *5)))
   (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *2)
  (|partial| AND (|ofCategory| *4 (|Field|))
   (|ofCategory| *5 (|Join| (|FiniteLinearAggregate| *4) (|shallowlyMutable|)))
   (|ofCategory| *2 (|Join| (|FiniteLinearAggregate| *4) (|shallowlyMutable|)))
   (|isDomain| *1 (|LinearSystemMatrixPackage| *4 *5 *2 *3))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *2))))
 ((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Matrix| *4))
   (|ofCategory| *4 (|Field|))
   (|isDomain| *1 (|LinearSystemMatrixPackage1| *4))))
 ((*1 *2 *3 *2 *4 *5)
  (|partial| AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|Mapping| *2 *2))
   (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|ODETools| *2 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Stream| *7)))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Mapping| (|Stream| *7) *7))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *5 *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| *6 *7))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *6 *8))
       (|isDomain| *1 (|SparsePolynomialCoercionHelpers| *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|SmithNormalForm| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping|
                (|Record| (|:| |Smith| (|Matrix| (|Integer|)))
                          (|:| |leftEqMat| (|Matrix| (|Integer|)))
                          (|:| |rightEqMat| (|Matrix| (|Integer|))))
                (|Matrix| (|Integer|))))
   (|isDomain| *3 (|Matrix| (|Integer|)))
   (|isDomain| *2
               (|Record| (|:| |Smith| (|Matrix| (|Integer|)))
                         (|:| |leftEqMat| (|Matrix| (|Integer|)))
                         (|:| |rightEqMat| (|Matrix| (|Integer|)))))
   (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2
                   (|Record| (|:| |Smith| *3) (|:| |leftEqMat| *3)
                             (|:| |rightEqMat| *3)))
       (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *3 (|Mapping| (|Matrix| (|Integer|)) (|Matrix| (|Integer|))))
   (|isDomain| *2 (|Matrix| (|Integer|)))
   (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |Hermite| *3) (|:| |eqMat| *3)))
       (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixManipulation| *3 *4 *5 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|AbelianMonoid|))
       (|isDomain| *1 (|Matrix| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|isDomain| *1 (|IntegralBasisTools| *2 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialExtension| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|DifferentialExtension| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofType| *5 (|Union| *2 *3))
       (|ofType| *6 (|Union| *2 *3)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleSymAna| *4 *5 *6))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundle| *4 *5)) (|ofType| *4 *3) (|ofType| *5 *3)))
 ((*1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|PartialDifferentialOperator| *3 *2))
       (|ofCategory| *3 (|PartialDifferentialRing| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|SparseMultivariateSkewPolynomial| *3 *2 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|ofType| *4 (|Mapping| (|Automorphism| *3) *2))
       (|ofType| *5 (|Mapping| (|Mapping| *3 *3) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|SparseMultivariateSkewPolynomial| *3 *4 *5 *6))
       (|has| *4 (SIGNATURE |variable| (*4 *2))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofType| *5 (|Mapping| (|Automorphism| *3) *4))
       (|ofType| *6 (|Mapping| (|Mapping| *3 *3) *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|Lambda| *5))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Lambda| *5)) (|ofCategory| *5 (|VarCat|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|SKICombinators| *5))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|SKICombinators| *5)) (|ofCategory| *5 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Lambda| *3))) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SKICombinators| *3)))
       (|isDomain| *1 (|SKICombinators| *3)) (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DirectedGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1 *1) (|ofCategory| *1 (|Logic|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|MultifunctionGraph| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|JoinSemilattice|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|MeetSemilattice|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SingleInteger|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|DeltaComplex| *4))
       (|isDomain| *1 (|DeltaComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *4))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *4 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *5 (|AbelianGroup|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|DeltaComplex| *3))
   (|ofCategory| *3 (|AbelianGroup|))
   (|isDomain| *1 (|FiniteSimplicialComplex| *3))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *2 (|DeltaComplex| *4))
   (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|AbelianGroup|))
   (|isDomain| *1 (|FiniteSimplicialComplex| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|CubicalFacet|))))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|OrientedFacet|))))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2
                   (|Record| (|:| |under| *1) (|:| |floor| *1)
                             (|:| |upper| *1)))
       (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|CubicalFacet|))))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|OrientedFacet|))))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteCubicalComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|SBoundary| *4))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|NonNegativeInteger|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|DeltaComplex| *4)) (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|)) (|isDomain| *1 (|DeltaComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|CoChainComplex| *3))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|CoChainComplex| *3))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|))) (|isDomain| *1 (|ChainComplex|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *1 (|Homology|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|))
       (|isDomain| *2 (|List| (|UnivariatePolynomial| *5 *4)))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *5 *4))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|ofType| *5 (|Symbol|))
       (|isDomain| *2 (|List| (|UnivariatePolynomial| *5 *4)))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *5))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *2 (|Vector| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *5 (|Boolean|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9))))
   (|isDomain| *1
               (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5)
  (|partial| AND (|isDomain| *3 (|List| *9)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4)
                         (|:| |ineq| (|List| *9))))
   (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *4))
   (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5)
  (|partial| AND (|isDomain| *3 (|List| *9)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4)
                         (|:| |ineq| (|List| *9))))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *4))
   (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10)
                              (|:| |ineq| (|List| *9)))))
       (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10)
                              (|:| |ineq| (|List| *9)))))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *10))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7))))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
   (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7))))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
   (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *5 *6 *7 *8 *3))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *5 *6 *7 *8 *3))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|GcdDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
   (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|GcdDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
   (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|FortranScalarType|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|SimpleFortranProgram| *5 *4))
       (|ofCategory| *4 (|FunctionSpace| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4))))
   (|isDomain| *1 (|PatternMatchResult| *3 *4))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|PositiveInteger|))
   (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2)
   (|ofType| *4 *2)))) 
(((*1 *1 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|PositiveInteger|))
   (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2)
   (|ofType| *4 *2)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|Finite|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Vector| (|SetOfMIntegersInOneToN| *3 *4)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3)
       (|ofType| *5 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|SubsetLattice| *3 *4)) (|ofType| *4 *2)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Finite|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|SubsetLattice| *3 *4)) (|ofType| *4 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SubsetLattice| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofType| *3 (|List| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|SingleInteger|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|HashState|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|SetAggregate| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|SetAggregate| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PolynomialIdeal| *3 *4 *5 *6)))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| *4)))
       (|ofCategory| *4 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SBoundary| *3)))
       (|isDomain| *1 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *2 (|LeftModule| *5))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|ApplyUnivariateSkewPolynomial| *5 *2 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *2 (|Distribution| *6))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *6 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|IncidenceAlgebra| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|IncidenceAlgebra| *2 *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2 *2)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *3 *2 *2 *4 *5)
  (AND (|isDomain| *4 (|Automorphism| *2)) (|isDomain| *5 (|Mapping| *2 *2))
       (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *2 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Partition|)) (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|SequenceCategory| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *2 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|IndexedAggregate| *3 *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *2 *7))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *4 *6))
       (|ofCategory| *2 (|DirectProductCategory| *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |Indices| (|List| *4))
                             (|:| |Entries| (|List| *5))))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|IndexedAggregate| *2 *4))
       (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *4 *5)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|Ring|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *6 *7))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|Record| (|:| |Indices| (|List| *5))
                             (|:| |Entries| (|List| *6))))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *5 *6))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |Indices| (|List| *4))
                         (|:| |Entries| (|List| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |Indices| (|List| *4))
                         (|:| |Entries| (|List| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *2))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|UnivariateSkewPolynomialCategory| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|OrePolynomialMatrixOperations| *3 *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *5 (|List| (|Vector| *4)))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *6 (|UnivariateSkewPolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *4)))))
       (|isDomain| *1 (|OrePolynomialMatrixOperations| *4 *6))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *2 *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *2 *4))
       (|ofCategory| *4 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Lt| (|Matrix| *4)) (|:| |Pivots| (|List| *4))
                         (|:| |Rank| (|NonNegativeInteger|))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Lt| (|Matrix| (|Fraction| *4)))
                         (|:| |Pivots| (|List| *4))
                         (|:| |Rank| (|NonNegativeInteger|))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Record| (|:| |Index| *4) (|:| |Entry| *5)))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Indices| (|List| *3))
                         (|:| |Entries| (|List| *4))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|Dcpo| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Left| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Right| (|SparseEchelonMatrix| *3 *4))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SegmentCategory| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|QueryEquation|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Segment| *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|SegmentBinding| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *3)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Matrix| (|Polynomial| *5))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *5))))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|StructuralConstantsPackage| *4))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SConformal| *2)) (|ofType| *2 (|PositiveInteger|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Scene| *4)))
       (|isDomain| *3 (|List| (|String|))) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|String|)))
       (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|SceneNamedPoints| *4)))
       (|isDomain| *3 (|List| (|String|)))
       (|isDomain| *1 (|SceneNamedPoints| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *2))
       (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Scene| *4))
       (|isDomain| *1 (|SceneNamedPoints| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SPointCategory|))
       (|isDomain| *2 (|List| (|List| *6))) (|isDomain| *1 (|SceneIFS| *6))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |source| (|Mapping| *5 (|DoubleFloat|)))
                          (|:| |ranges| (|List| (|Segment| (|DoubleFloat|))))
                          (|:| |knots| (|List| (|DoubleFloat|)))
                          (|:| |points| (|List| *5)))))
   (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|))
   (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|SceneIFS| *5))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SceneIFS| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|SceneIFS| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| *4))) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|SceneIFS| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SubSpace| 3 (|DoubleFloat|)))
       (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Export3D|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Reference| (|List| *8)))
       (|isDomain| *4 (|Reference| (|List| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *5 (|Reference| (|NonNegativeInteger|)))
       (|isDomain| *6 (|STransform| *8)) (|isDomain| *7 (|SBoundary| *8))
       (|ofCategory| *8 (|SPointCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *8))))
 ((*1 *2 *1 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Reference| (|List| *8)))
       (|isDomain| *4 (|Reference| (|List| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *5 (|Reference| (|NonNegativeInteger|)))
       (|isDomain| *6 (|STransform| *8))
       (|isDomain| *7 (|Record| (|:| |mins| *8) (|:| |maxs| *8)))
       (|ofCategory| *8 (|SPointCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *8))))) 
(((*1 *2 *1 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *6)) (|isDomain| *5 (|SBoundary| *6))
   (|ofCategory| *6 (|SPointCategory|)) (|isDomain| *2 (|XmlElement|))
   (|isDomain| *1 (|Scene| *6))))
 ((*1 *2 *1 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *6))
   (|isDomain| *5 (|Record| (|:| |mins| *6) (|:| |maxs| *6)))
   (|ofCategory| *6 (|SPointCategory|)) (|isDomain| *2 (|XmlElement|))
   (|isDomain| *1 (|Scene| *6))))) 
(((*1 *2 *1 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *9)) (|isDomain| *5 (|SBoundary| *9))
   (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Boolean|))
   (|isDomain| *8 (|SceneNamedPoints| *9)) (|ofCategory| *9 (|SPointCategory|))
   (|isDomain| *2 (|XmlElement|)) (|isDomain| *1 (|Scene| *9))))
 ((*1 *2 *1 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *9))
   (|isDomain| *5 (|Record| (|:| |mins| *9) (|:| |maxs| *9)))
   (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Boolean|))
   (|isDomain| *8 (|SceneNamedPoints| *9)) (|ofCategory| *9 (|SPointCategory|))
   (|isDomain| *2 (|XmlElement|)) (|isDomain| *1 (|Scene| *9))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|STransform| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
       (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
       (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *1 (|Scene| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *1 (|Scene| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|DirectedGraph| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *1 (|Scene| *5)) (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|DirectedGraph| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *1 (|Scene| *5)) (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *4 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *4 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *4 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *4 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SBoundary| *5)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Record| (|:| |mins| *5) (|:| |maxs| *5)))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SBoundary| *5)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Record| (|:| |mins| *5) (|:| |maxs| *5)))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|SBoundary| *4))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *3 (|Record| (|:| |mins| *4) (|:| |maxs| *4)))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|SBoundary| *4))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *3 (|Record| (|:| |mins| *4) (|:| |maxs| *4)))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |txt| (|String|))
                         (|:| |siz| (|NonNegativeInteger|)) (|:| |pos| *3)
                         (|:| |np| (|List| (|String|)))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |txt| (|String|))
                         (|:| |siz| (|NonNegativeInteger|)) (|:| |pos| *3)
                         (|:| |np| (|List| (|String|)))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|DoubleFloat|)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|DoubleFloat|)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |shptype| (|Symbol|)) (|:| |centre| *3)
                         (|:| |size| *3) (|:| |fill| (|Boolean|))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |shptype| (|Symbol|)) (|:| |centre| *3)
                         (|:| |size| *3) (|:| |fill| (|Boolean|))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SimpleCell| *5 *6)))
       (|isDomain| *1 (|SimpleCell| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SimpleCell| *5 *3)))
       (|isDomain| *1 (|SimpleCell| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Cell| *4)) (|ofCategory| *4 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SimpleCell| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|RealClosedField|))
       (|isDomain| *1 (|SimpleCell| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|SimpleCell| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ScanningUtilities|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
       (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Integer|) *2 *2))
       (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
   (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SortedCache| *3))
       (|ofCategory| *3 (|CachableSet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SBoundary| *3)))
       (|isDomain| *1 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1) (|isDomain| *1 (|SingletonAsOrderedSet|)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1
                   (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7
                                                                      *8 *3))
       (|ofCategory| *3
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *4 *5))
       (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5)))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|Ruleset| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5)))
       (|isDomain| *1 (|Ruleset| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *4 *5))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Pattern| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Mapping| (|Boolean|) (|List| *6)))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Mapping| (|Boolean|) *5))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|AttachPredicates| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|AttachPredicates| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|Mapping| (|Boolean|) (|List| *6)))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| *2)))
       (|isDomain| *2 (|Pattern| *3)) (|isDomain| *1 (|RewriteRule| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| *2)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|RewriteRule| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *5 (|Boolean|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9))))
   (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Union| (|Boolean|) (|List| *1)))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Union| *3 (|List| *1)))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *3 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|Ring|)) (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2))
       (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1)) (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2))
       (|ofCategory| *2 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5))
       (|isDomain| *1 (|AlgebraicFunction| *5 *2))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|OutputForm|))
   (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
   (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RealClosure| *3))
       (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |coef| *3) (|:| |gap| (|NonNegativeInteger|))
                         (|:| |quotient| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |remainder|
                              (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |polnum| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |polden| *3)
                         (|:| |power| (|NonNegativeInteger|))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |polnum| *1) (|:| |polden| *1)
                             (|:| |power| (|NonNegativeInteger|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Float|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2))
   (|ofType| *4 (|List| *2)) (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| *5))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Float|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Float|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
   (|has| *4 (SIGNATURE |retractIfCan| ((|Union| *4 "failed") *2)))
   (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleXExpression| *3))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|FiniteFieldCategory|))
   (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))
   (|ofType| *7 (|PositiveInteger|))))
 ((*1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|RetractableFrom| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RetractableTo| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Algebra| (|Integer|)))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Float|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2))
       (|ofType| *4 (|List| *2))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *5))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|)))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Float|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|)))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|)))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Expression| (|Float|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
       (|has| *4 (SIGNATURE |retractIfCan| ((|Union| *4 "failed") *2)))
       (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleXExpression| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|RetractableFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Integer|)))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |gcd| *1) (|:| |coef1| *1) (|:| |coef2| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef1| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef2| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *2 *4 *5))
       (|isDomain| *1 (|PolynomialSetCategory&| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|PolynomialSetCategory| *2 *4 *5 *6))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|RecursivePolynomialCategory&| *3 *2 *4 *5))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *2 *4 *5))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| *7)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|PositiveInteger|)))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RomanNumeral|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|CancellationAbelianMonoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FramedModule&| *3 *4))
       (|ofCategory| *3 (|FramedModule| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSetAggregate&| *3 *4))
       (|ofCategory| *3 (|FiniteSetAggregate| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))
 ((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))
 ((*1 *2)
  (AND (|ofType| *4 *2) (|ofType| *5 *2)
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *5 *6))
       (|ofCategory| *8 (|DirectProductCategory| *4 *6))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RectangularMatrixCategory&| *3 *4 *5 *6 *7 *8))
       (|ofCategory| *3 (|RectangularMatrixCategory| *4 *5 *6 *7 *8))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Factored| *4) *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *4))
       (|isDomain| *1 (|FactoredFunctionUtilities| *4))))
 ((*1 *1 *1) (|isDomain| *1 (|Plot|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1) (|isDomain| *1 (|Plot3D|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| (|AlgebraicNumber|))))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Kernel| (|AlgebraicNumber|)))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
       (|isDomain| *3 (|List| (|Kernel| (|AlgebraicNumber|))))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
       (|isDomain| *3 (|Kernel| (|AlgebraicNumber|)))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdeal| *3 *2 *4 *5))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *2 *4) (|RetractableTo| *2)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4)) (|ofType| *6 (|Vector| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| (|InnerAlgebraicNumber|))))
       (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Kernel| (|InnerAlgebraicNumber|)))
       (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|InnerAlgebraicNumber|)))
       (|isDomain| *3 (|List| (|Kernel| (|InnerAlgebraicNumber|))))
       (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|InnerAlgebraicNumber|)))
       (|isDomain| *3 (|Kernel| (|InnerAlgebraicNumber|)))
       (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|MonogenicAlgebra| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|NormInMonogenicAlgebra| *4 *2 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RealNumberSystem|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionSpace&| *3 *4))
       (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerNumberSystem&| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|NonAssociativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OctonionCategory&| *3 *4))
       (|ofCategory| *3 (|OctonionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|QuotientFieldCategory&| *3 *4))
       (|ofCategory| *3 (|QuotientFieldCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|QuaternionCategory&| *3 *4))
       (|ofCategory| *3 (|QuaternionCategory| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealClosedField&| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealNumberSystem&| *3))
       (|ofCategory| *3 (|RealNumberSystem|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|Rng|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3)) (|isDomain| *1 (|IncidenceAlgebra| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3 (|Mapping| *4 (|Integer|) (|Integer|)))
       (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|OutputForm|))))
       (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4))
       (|isDomain| *1 (|QuadraticForm| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *5)))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *2))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|IndexedAggregate| *3 *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *7 *2))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *5 *6))
       (|ofCategory| *2 (|DirectProductCategory| *4 *6))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| *5)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *5))
       (|isDomain| *3 (|List| *5)) (|ofType| *4 (|Symbol|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|PolynomialInterpolation| *4 *5))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *5))
       (|isDomain| *1 (|PolynomialInterpolation| *4 *5))
       (|ofType| *4 (|Symbol|))))
 ((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *6)))
       (|isDomain| *1 (|RationalInterpolation| *5 *6))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *4))
       (|isDomain| *1 (|RandomDistributions| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|RetractableTo| *5)
                             (|Comparable|)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RootFSSplit| *6 *3))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |funs| (|List| *6)) (|:| |nroot| *6)
                              (|:| |npow1| (|Integer|))
                              (|:| |npow2| (|Integer|)))))
       (|isDomain| *1 (|RootFSSplit| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *2 (|Fraction| (|Factored| (|Polynomial| *4))))
       (|isDomain| *1 (|RationalFunctionFactorizer| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|Fraction| (|SparseUnivariatePolynomial| *2))))
   (|isDomain| *4 (|Kernel| *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *5 *2 *6))
   (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *2)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *2))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Fraction|
                (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *1 (|RationalFunction| *5))
   (|ofCategory| *5 (|IntegralDomain|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Kernel| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *1)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|Fraction| (|SparseUnivariatePolynomial| *3))))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *6)) (|isDomain| *4 (|Variable| *5))
       (|ofType| *5 (|Symbol|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 (|Polynomial| *6)))
       (|isDomain| *1 (|PolynomialToUnivariatePolynomial| *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Fraction|
                    (|SparseUnivariatePolynomial|
                     (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|RationalFunction| *5))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *2))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|PolynomialCategory| *5 *4 *2))
   (|ofCategory| *2 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *2 *5 *6 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *6))
                          (SIGNATURE |numer| (*6 $))
                          (SIGNATURE |denom| (*6 $)))))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|RetractableTo| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *6))))))
       (|isDomain| *1 (|RetractSolvePackage| *5 *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|Fraction| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|GenusZeroIntegration| *5 *6 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3 *4 *4 *5 *6 *7 *8)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|isDomain| *4 (|SparseUnivariatePolynomial| *11))
   (|isDomain| *6 (|List| *10)) (|isDomain| *7 (|List| (|NonNegativeInteger|)))
   (|isDomain| *8 (|List| *11)) (|ofCategory| *10 (|OrderedSet|))
   (|ofCategory| *11 (|EuclideanDomain|))
   (|ofCategory| *5 (|PolynomialCategory| *11 *9 *10))
   (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *1 (|MultivariateSquareFree| *9 *10 *11 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofType| *6 (|List| *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|RepeatedSquaring| *2))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $)))))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|RepeatedDoubling| *2))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE + ($ $ $)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Vector| *5))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|Field|))
       (|ofCategory| *6 (|Finite|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *6))))
       (|isDomain| *1 (|RepresentationPackage2| *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *4))))
       (|isDomain| *1 (|RepresentationPackage2| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Finite|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Matrix| *6))
       (|isDomain| *1 (|RepresentationPackage2| *6))
       (|ofCategory| *6 (|Field|)) (|ofCategory| *6 (|Ring|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|RepresentationPackage2| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Vector| (|Vector| *5)))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Vector| *4))) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Permutation| (|Integer|)))
       (|isDomain| *1 (|FiniteGroupPackage| *3))
       (|ofCategory| *3 (|Join| (|Group|) (|Finite|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Permutation| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|RepresentationPackage1| *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Permutation| (|Integer|))))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|RepresentationPackage1| *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|Polynomial| *4)))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
   (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |radval| (|Expression| (|Integer|)))
                              (|:| |radmult| (|Integer|))
                              (|:| |radvect|
                                   (|List|
                                    (|Matrix| (|Expression| (|Integer|))))))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|ReductionOfOrder| *3 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |eq| *3) (|:| |op| (|List| *5))))
       (|isDomain| *1 (|ReductionOfOrder| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RecurrenceOperator| *4 *3))
   (|ofCategory| *3
                 (|Join| (|FunctionSpace| *4) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))) 
(((*1 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|RecurrenceOperator| *3 *4))
   (|ofCategory| *4
                 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *3 *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Symbol|))
                             (|PartialDifferentialRing| (|Symbol|))
                             (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *1 (|RecurrenceOperator| *3 *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *3 *4 *4 *2 *5 *6)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
       (|isDomain| *6 (|Stream| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *7) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|)) (|RetractableTo| *4)
                             (|PartialDifferentialRing| *4)
                             (|CombinatorialOpsCategory|)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *7 *2))))) 
(((*1 *2 *3 *4 *2 *5 *6)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
       (|isDomain| *6 (|Stream| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *7) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|)) (|RetractableTo| *4)
                             (|PartialDifferentialRing| *4)
                             (|CombinatorialOpsCategory|)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *7 *2))))) 
(((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|RightOpenIntervalRootCharacterization| (|RealClosure| *4)
                                                        (|SparseUnivariatePolynomial|
                                                         (|RealClosure| *4))))
   (|isDomain| *3 (|OutputForm|)) (|isDomain| *1 (|RealClosure| *4))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|RightOpenIntervalRootCharacterization| (|RealClosure| *3)
                                                        (|SparseUnivariatePolynomial|
                                                         (|RealClosure| *3))))
   (|isDomain| *1 (|RealClosure| *3))
   (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |left| (|Fraction| (|Integer|)))
                              (|:| |right| (|Fraction| (|Integer|))))))
       (|isDomain| *1 (|RealZeroPackage| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *5 (|Fraction| (|Integer|)))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |left| (|Fraction| (|Integer|)))
                              (|:| |right| (|Fraction| (|Integer|))))))
       (|isDomain| *1 (|RealZeroPackageQ| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *5 (|Fraction| (|Integer|)))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|RealZeroPackage| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackage| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6))
       (|isDomain| *1 (|RandomDistributions| *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|Record| (|:| |value| *4) (|:| |weight| (|Integer|)))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Mapping| *4))
   (|isDomain| *1 (|RandomDistributions| *4))))) 
(((*1 *2 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Fraction| *5)))
   (|isDomain| *1 (|TranscendentalRischDESystem| *4 *5))))) 
(((*1 *2 *3 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| *6))
   (|isDomain| *4 (|Mapping| *6 *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |a| *6) (|:| |b| (|Fraction| *6)) (|:| |h| *6)
                         (|:| |c1| (|Fraction| *6)) (|:| |c2| (|Fraction| *6))
                         (|:| |t| *6)))
   (|isDomain| *1 (|TranscendentalRischDESystem| *5 *6))))) 
(((*1 *2 *3 *4 *2 *2 *5 *6 *7)
  (AND
   (|isDomain| *4 (|LaurentPolynomial| *6 (|SparseUnivariatePolynomial| *6)))
   (|isDomain| *7
               (|Mapping|
                (|Record| (|:| |logands| (|List| *6))
                          (|:| |basis|
                               (|List| (|Vector| (|Fraction| (|Integer|))))))
                (|List| (|Kernel| *6)) (|List| *6)))
   (|ofCategory| *6
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *8)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
   (|isDomain| *5 (|List| (|Kernel| *6)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| *2) (|LinearlyExplicitOver| *2)))
   (|isDomain| *1 (|ParametricRischDE| *8 *6))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *5 (|Symbol|))
       (|isDomain| *7
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *3)
                               (|:| |coeffs| (|Vector| *3))))
                    (|List| (|Kernel| *3)) (|List| *3)))
       (|isDomain| *8
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *3))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *3)) (|List| *3)))
       (|isDomain| *4 (|List| *3)) (|isDomain| *6 (|List| (|Kernel| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *9)))
       (|ofCategory| *9
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *3)
                              (|:| |coeffs| (|Vector| *3)))))
       (|isDomain| *1 (|ParametricRischDE| *9 *3))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *6 (|Symbol|))
       (|isDomain| *8
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *4)
                               (|:| |coeffs| (|Vector| *4))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *9
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *4))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|List| *4))
       (|isDomain| *7 (|List| (|Kernel| *4)))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *10)))
       (|ofCategory| *10
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *4)
                              (|:| |coeffs| (|Vector| *4)))))
       (|isDomain| *1 (|ParametricRischDE| *10 *4))))
 ((*1 *2 *3 *4 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *6 (|Symbol|))
       (|isDomain| *8
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *4)
                               (|:| |coeffs| (|Vector| *4))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *9
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *4))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *10)))
       (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|List| *4))
       (|isDomain| *7 (|List| (|Kernel| *4)))
       (|ofCategory| *10
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *4)
                                    (|:| |coeffs| (|Vector| *4)))
                          "failed"))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *4)
                                    (|:| |coeffs| (|Vector| *4)))))))
       (|isDomain| *1 (|ParametricRischDE| *10 *4))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|List| (|Kernel| *3)))
   (|ofCategory| *3
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *7)))
   (|ofCategory| *7
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeffs| (|Vector| *3))))
   (|isDomain| *1 (|ElementaryRischDEX2| *7 *3))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Kernel| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |ans| *3) (|:| |right| *3)
                             (|:| |primpart| *3) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX2| *6 *3))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record| (|:| |ans| *4) (|:| |right| *4)
                             (|:| |primpart| *4) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX2| *6 *4))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryRischDEX| *3 *2))
   (|ofCategory| *2
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|)
                         (|LiouvillianFunctionCategory|)
                         (|SpecialFunctionCategory|) (|FunctionSpace| *3)))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record| (|:| |ans| *4) (|:| |right| *4)
                             (|:| |primpart| *4) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX| *6 *4))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|)
                             (|FunctionSpace| *6)))))) 
(((*1 *2 *3 *4 *4 *4 *5 *6 *7)
  (|partial| AND (|isDomain| *5 (|Symbol|))
   (|isDomain| *6
               (|Mapping|
                (|Union|
                 (|Record| (|:| |mainpart| *4)
                           (|:| |limitedlogs|
                                (|List|
                                 (|Record| (|:| |coeff| *4)
                                           (|:| |logand| *4)))))
                 "failed")
                *4 (|List| *4)))
   (|isDomain| *7
               (|Mapping|
                (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4))
                         "failed")
                *4 *4))
   (|ofCategory| *4
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *8)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| *3) (|LinearlyExplicitOver| *3)))
   (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|ElementaryRischDESystem| *8 *4))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping| (|SparseUnivariatePolynomial| *5)
                          (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |ans| (|SparseUnivariatePolynomial| *5))
                         (|:| |remainder| (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|RDEaux| *5))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *5 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|SparseUnivariatePolynomial| *7)
                              (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|Field|))
       (|isDomain| *2
                   (|Union|
                    (|List|
                     (|Record| (|:| |ans| (|SparseUnivariatePolynomial| *7))
                               (|:| |remainder|
                                    (|SparseUnivariatePolynomial| *7))))
                    (|Record|
                     (|:| |ans| (|List| (|SparseUnivariatePolynomial| *7)))
                     (|:| |acoeff| (|SparseUnivariatePolynomial| *7))
                     (|:| |eegen| (|SparseUnivariatePolynomial| *7))
                     (|:| |bpar| (|SparseUnivariatePolynomial| *7))
                     (|:| |lcpar| (|List| (|SparseUnivariatePolynomial| *7)))
                     (|:| |dpar| (|Integer|)))))
       (|isDomain| *1 (|RDEaux| *7))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RadicalCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealClosedField|)))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RealClosedField|))
   (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursiveAggregate| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|ComplexCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|OctonionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OnePointCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OrderedCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|QuaternionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RationalRetractions| *3))
   (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RationalRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RationalRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Integer|))))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|RadixUtilities|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Factored| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *5) (|:| |radicand| (|List| *5))))
       (|isDomain| *1 (|FactoredFunctions| *5))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RadicalCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Queue| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *1 *1) (|isDomain| *1 (|Partition|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|QuadraticForm| *3 *4))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|InnerAlgebraicNumber|))))
   (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Algebra| *3)) (|isDomain| *1 (|LocalAlgebra| *2 *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Module| *3)) (|isDomain| *1 (|Localize| *2 *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|QuotientFieldCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|InnerAlgebraicNumber|))))
   (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *3 *2))
       (|ofCategory| *3 (|Algebra| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *2))
       (|ofCategory| *3 (|Module| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|QuasiAlgebraicSet| (|Fraction| (|Integer|))
                                    (|OrderedVariableList| *3)
                                    (|DirectProduct| (|#| *3)
                                                     (|NonNegativeInteger|))
                                    (|DistributedMultivariatePolynomial| *3
                                                                         (|Fraction|
                                                                          (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|QuasiAlgebraicSet2| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *4 *5 *6 *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|Boolean|) "failed"))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *2))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *2 *3 *5))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|MonogenicAlgebra| *2 *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4
                                           *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1="failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *3 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1#) (|Symbol|))))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4
                                           *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1="failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *3 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1#) (|Symbol|))))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| C (|Matrix| *5))
                              (|:| |lg| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|Automorphism| *5))
       (|isDomain| *4 (|Mapping| *5 *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6 *2))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Automorphism| *6))
       (|isDomain| *5 (|Mapping| *6 *6)) (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| R (|Matrix| *6)) (|:| A (|Matrix| *6))
                             (|:| |Ainv| (|Matrix| *6))))
       (|isDomain| *1 (|PseudoLinearNormalForm| *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *8))
       (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
       (|isDomain| *4 (|Mapping| *8 *8 *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|Mapping| (|Boolean|) *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *6 *7 *8 *9))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |bas| (|GeneralTriangularSet| *4 *5 *6 *7))
                         (|:| |top| (|List| *7))))
   (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *2))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *7) (|List| *7)))
       (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |rnum| *4) (|:| |polnum| *3)
                             (|:| |den| *4)))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|CartanKuranishi| *4 *5))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *2 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|EuclideanDomain|))))
 ((*1 *2 *1 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |lm| (|FreeMonoid| *3))
                         (|:| |rm| (|FreeMonoid| *3))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |quotient| (|NonNegativeInteger|))
                         (|:| |remainder| (|NonNegativeInteger|))))
   (|isDomain| *1 (|NonNegativeInteger|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultantReduit| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |resultantReduit| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|GcdDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |discriminant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |discriminant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|RetractableTo| (|Fraction| *2))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BoundIntegerRoots| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|LinearlyExplicitOver| *2)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|PolynomialRationalRoots| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceRationalRoots| *5 *3))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|PolynomialRationalRoots| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|PrintPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|IntegerPrimesPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerPrimesPackage| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerPrimesPackage| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |primelt| *5)
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *5)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *5))))
 ((*1 *2 *3 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |primelt| *3)
                         (|:| |pol1| (|SparseUnivariatePolynomial| *3))
                         (|:| |pol2| (|SparseUnivariatePolynomial| *3))
                         (|:| |prim| (|SparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *3))
   (|ofCategory| *3 (|AlgebraicallyClosedField|))
   (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *3 *4 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef1| (|Integer|))
                             (|:| |coef2| (|Integer|))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|PrimitiveElement| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| (|Integer|)))
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *5)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|PrimitiveElement| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| (|Integer|)))
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *6)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|PrimitiveElement| *6))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|IntegrationResult| *2))
       (|ofCategory| *2 (|RetractableTo| *3)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PrimitiveFunctionCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|PrimitiveFunctionCategory|))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *4 (|List| (|Symbol|)))
   (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |lczlc|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))
                    (|:| |k| (|Integer|))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |lcx0lc|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))
                    (|:| |lcx0m|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Preorder| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|PositiveInteger|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *5))
   (|isDomain| *1 (|PrecomputedAssociatedEquations| *5 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| (|List| *4)))
       (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                         (|:| |posY| (|NonNegativeInteger|))))
   (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FiniteBiCPO| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FiniteCoDcpo| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FiniteDcpo| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|Poset| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|Poset| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|List| (|Boolean|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *1 (|Poset| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FiniteGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *3 (|NonNegativeInteger|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |name| (|String|))
                         (|:| |arrType| (|NonNegativeInteger|))
                         (|:| |fromOb| (|NonNegativeInteger|))
                         (|:| |toOb| (|NonNegativeInteger|))
                         (|:| |xOffset| (|Integer|))
                         (|:| |yOffset| (|Integer|))
                         (|:| |map| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PermutationCategory| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|U32Vector|)))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|)))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|U32Vector|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PrimitiveArray| (|ModMonic| *3 *4)))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *3 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *3) (|:| |radicand| (|List| *3))))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *3 *8))
       (|ofCategory| *8
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*3 $))
                              (SIGNATURE |denom| (*3 $))
                              (SIGNATURE |coerce| ($ *3)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *3) (|:| |radicand| *3)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*8 $))
                              (SIGNATURE |denom| (*8 $))
                              (SIGNATURE |coerce| ($ *8)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *9) (|:| |radicand| *9)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *9))
       (|ofCategory| *9
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*8 $))
                              (SIGNATURE |denom| (*8 $))
                              (SIGNATURE |coerce| ($ *8)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *7 (|PolynomialCategory| *3 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *8) (|:| |radicand| *8)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *3 *7 *8))
       (|ofCategory| *8
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $))
                              (SIGNATURE |coerce| ($ *7)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2 (|Record| (|:| |val| *1) (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |val| (|Pattern| *3))
                         (|:| |exponent| (|Pattern| *3))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *4))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *4))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |val| (|Pattern| *3))
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|SemiRing|))
   (|isDomain| *2
               (|Record| (|:| |var| *5)
                         (|:| |exponent| (|NonNegativeInteger|))))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *3 (|Comparable|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiRing|))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *3 (|Comparable|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|HeuGcd| *4))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|OrderedRing|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|CyclotomicPolynomialPackage|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *4 *2 *5)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|Pattern| *6)))
       (|isDomain| *5
                   (|Mapping| (|PatternMatchResult| *6 *8) *8 (|Pattern| *6)
                              (|PatternMatchResult| *6 *8)))
       (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *6))
                             (|RetractableTo| *7)))
       (|isDomain| *2 (|PatternMatchResult| *6 *8))
       (|ofCategory| *7 (|Join| (|Comparable|) (|Ring|)))
       (|isDomain| *1 (|PatternMatchTools| *6 *7 *8))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|ComplexCategory| *6))
       (|ofCategory| (|Polynomial| *6) (|PatternMatchable| *5))
       (|ofCategory| *6 (|Join| (|PatternMatchable| *5) (|CommutativeRing|)))
       (|isDomain| *1 (|ComplexPatternMatch| *5 *6 *3))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *4 *1))
       (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *1 (|PatternMatchable| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *6))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *3)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|isDomain| *1 (|PatternMatchPushDown| *5 *3 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|ConvertibleTo| *4)
                             (|PatternMatchable| *5)
                             (|RetractableTo| (|Kernel| $))))
       (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchFunctionSpace| *5 *6 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| (|Integer|) *3))
       (|isDomain| *4 (|Pattern| (|Integer|)))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *1 (|PatternMatchIntegerNumberSystem| *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *6))
       (|isDomain| *3 (|Kernel| *6)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|RetractableTo| (|Kernel| $))
                             (|ConvertibleTo| *4) (|PatternMatchable| *5)))
       (|isDomain| *4 (|Pattern| *5))
       (|isDomain| *1 (|PatternMatchKernel| *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchListResult| *5 *6 *3))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *3 (|ListAggregate| *6))
       (|isDomain| *1 (|PatternMatchListAggregate| *5 *6 *3))))
 ((*1 *2 *3 *4 *2 *5)
  (AND
   (|isDomain| *5
               (|Mapping| (|PatternMatchResult| *6 *3) *8 (|Pattern| *6)
                          (|PatternMatchResult| *6 *3)))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|PatternMatchResult| *6 *3)) (|isDomain| *4 (|Pattern| *6))
   (|ofCategory| *6 (|SetCategory|))
   (|ofCategory| *3
                 (|Join| (|PolynomialCategory| *9 *7 *8) (|ConvertibleTo| *4)))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *6)))
   (|isDomain| *1 (|PatternMatchPolynomialCategory| *6 *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|PolynomialCategory| *8 *6 *7)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *7 (|PatternMatchable| *5))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchPolynomialCategory| *5 *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|QuotientFieldCategory| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|PatternMatchable| *5)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5))
       (|isDomain| *1 (|PatternMatchQuotientFieldCategory| *5 *6 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 (|Symbol|)))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchSymbol| *5))))
 ((*1 *2 *3 *4 *5 *2 *6)
  (AND (|isDomain| *4 (|List| (|Pattern| *7)))
       (|isDomain| *5 (|Mapping| *9 (|List| *9)))
       (|isDomain| *6
                   (|Mapping| (|PatternMatchResult| *7 *9) *9 (|Pattern| *7)
                              (|PatternMatchResult| *7 *9)))
       (|ofCategory| *7 (|SetCategory|))
       (|ofCategory| *9
                     (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *7))
                             (|RetractableTo| *8)))
       (|isDomain| *2 (|PatternMatchResult| *7 *9)) (|isDomain| *3 (|List| *9))
       (|ofCategory| *8 (|Join| (|Comparable|) (|Ring|)))
       (|isDomain| *1 (|PatternMatchTools| *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *5)))
       (|ofCategory| *5 (|PatternMatchable| *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| (|Boolean|) *5))
       (|isDomain| *1 (|PatternMatchPushDown| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2 (|List| (|Segment| (|DoubleFloat|))))
       (|isDomain| *1 (|PlotTools|))))) 
(((*1 *1 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *2 *2 *2 *3 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Plot|))
       (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))
 ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |det| *12) (|:| |rows| (|List| (|Integer|)))
                         (|:| |cols| (|List| (|Integer|)))))
   (|isDomain| *4 (|Matrix| *12))
   (|isDomain| *5 (|List| (|Fraction| (|Polynomial| *9))))
   (|isDomain| *6 (|List| (|List| *12))) (|isDomain| *7 (|NonNegativeInteger|))
   (|isDomain| *8 (|Integer|))
   (|ofCategory| *9 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *12 (|PolynomialCategory| *9 *11 *10))
   (|ofCategory| *10 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *11 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |eqzro| (|List| *12)) (|:| |neqzro| (|List| *12))
                         (|:| |wcond| (|List| (|Polynomial| *9)))
                         (|:| |bsoln|
                              (|Record|
                               (|:| |partsol|
                                    (|Vector| (|Fraction| (|Polynomial| *9))))
                               (|:| |basis|
                                    (|List|
                                     (|Vector|
                                      (|Fraction| (|Polynomial| *9)))))))))
   (|isDomain| *1 (|ParametricLinearEquations| *9 *10 *11 *12))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *7)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |det| *8) (|:| |rows| (|List| (|Integer|)))
                              (|:| |cols| (|List| (|Integer|))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *6)))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))
       (|ofCategory| *3 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |rank| (|NonNegativeInteger|))
                          (|:| |eqns|
                               (|List|
                                (|Record| (|:| |det| *7)
                                          (|:| |rows| (|List| (|Integer|)))
                                          (|:| |cols| (|List| (|Integer|))))))
                          (|:| |fgb| (|List| *7)))))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |rank| (|NonNegativeInteger|))
                          (|:| |eqns|
                               (|List|
                                (|Record| (|:| |det| *7)
                                          (|:| |rows| (|List| (|Integer|)))
                                          (|:| |cols| (|List| (|Integer|))))))
                          (|:| |fgb| (|List| *7)))))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |mat| (|Matrix| (|Fraction| (|Polynomial| *4))))
                         (|:| |vec| (|List| (|Fraction| (|Polynomial| *4))))
                         (|:| |rank| (|NonNegativeInteger|))
                         (|:| |rows| (|List| (|Integer|)))
                         (|:| |cols| (|List| (|Integer|)))))
   (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record|
                (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4))))
                (|:| |basis|
                     (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record|
                (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4))))
                (|:| |basis|
                     (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |rank| (|NonNegativeInteger|))
                              (|:| |eqns|
                                   (|List|
                                    (|Record| (|:| |det| *8)
                                              (|:| |rows| (|List| (|Integer|)))
                                              (|:| |cols|
                                                   (|List| (|Integer|))))))
                              (|:| |fgb| (|List| *8)))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |sysok| (|Boolean|)) (|:| |z0| (|List| *7))
                             (|:| |n0| (|List| *7))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *2 (|PolynomialCategory| *4 *6 *5))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *2))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Matrix| *11))
       (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *8))))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|String|))
       (|isDomain| *7 (|Integer|))
       (|ofCategory| *8 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *11 (|PolynomialCategory| *8 *10 *9))
       (|ofCategory| *9 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record|
                    (|:| |rgl|
                         (|List|
                          (|Record| (|:| |eqzro| (|List| *11))
                                    (|:| |neqzro| (|List| *11))
                                    (|:| |wcond| (|List| (|Polynomial| *8)))
                                    (|:| |bsoln|
                                         (|Record|
                                          (|:| |partsol|
                                               (|Vector|
                                                (|Fraction|
                                                 (|Polynomial| *8))))
                                          (|:| |basis|
                                               (|List|
                                                (|Vector|
                                                 (|Fraction|
                                                  (|Polynomial| *8))))))))))
                    (|:| |rgsz| (|Integer|))))
       (|isDomain| *1 (|ParametricLinearEquations| *8 *9 *10 *11))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *7))
                              (|:| |neqzro| (|List| *7))
                              (|:| |wcond| (|List| (|Polynomial| *4)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *4))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *4))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |eqzro| (|List| *8)) (|:| |neqzro| (|List| *8))
                          (|:| |wcond| (|List| (|Polynomial| *5)))
                          (|:| |bsoln|
                               (|Record|
                                (|:| |partsol|
                                     (|Vector| (|Fraction| (|Polynomial| *5))))
                                (|:| |basis|
                                     (|List|
                                      (|Vector|
                                       (|Fraction| (|Polynomial| *5))))))))))
   (|isDomain| *4 (|String|))
   (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
   (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *7))
                              (|:| |neqzro| (|List| *7))
                              (|:| |wcond| (|List| (|Polynomial| *4)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *4))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *4))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9))
       (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *9))
                              (|:| |neqzro| (|List| *9))
                              (|:| |wcond| (|List| (|Polynomial| *6)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *6))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *6))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *9))
                              (|:| |neqzro| (|List| *9))
                              (|:| |wcond| (|List| (|Polynomial| *6)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *6))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *6))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|String|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|))
       (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8))
       (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|))
       (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8))
       (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PolynomialInterpolationAlgorithms| *4 *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|PrincipalIdealDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| *1)) (|:| |generator| *1)))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PrincipalIdealDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PositiveInteger|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Partition|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Factored| (|Polynomial| *6)))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Polynomial| *6))
       (|ofCategory| *6 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *6))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Fraction| *3)))
       (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|))))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |order| (|NonNegativeInteger|))
                         (|:| |function| *8)))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
   (|isDomain| *2
               (|Record| (|:| |order| (|NonNegativeInteger|))
                         (|:| |function| *6)))
   (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
       (|ofCategory| *4
                     (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6
                     (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|FiniteDivisor| *6 *7 *8 *9))
       (|isDomain| *4 (|List| (|Kernel| *6)))
       (|ofCategory| *6 (|AlgebraicallyClosedField|))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|ofCategory| *9 (|FunctionFieldCategory| *6 *7 *8))
       (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *5 *6 *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseMultivariatePolynomial| *4 (|Kernel| *5))))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|isDomain| *2 (|SparseMultivariatePolynomial| *4 (|Kernel| *5)))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|GcdDomain|) (|Comparable|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|ExpressionFactorPolynomial| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5 (|ComplexCategory| *4))
   (|ofCategory| *4 (|IntegerNumberSystem|))
   (|isDomain| *1 (|ComplexIntegerSolveLinearPolynomialEquation| *4 *5))))
 ((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldSolveLinearPolynomialEquation| *4 *5 *3))))
 ((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
   (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
   (|isDomain| *1 (|IntegerSolveLinearPolynomialEquation|))))
 ((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *1)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Matrix| *1))
   (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|Vector| *1))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Matrix| *1))
   (|ofCategory| *1 (|CharacteristicNonZero|))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
   (|isDomain| *2 (|Vector| *1))))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|CharacteristicNonZero|)))
 ((*1 *1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|CharacteristicNonZero|))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
   (|ofCategory| *7 (|PolynomialCategory| *5 *6 *4))
   (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialFactorizationByRecursion| *5 *6 *4 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *2 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *2 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
   (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ProductFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |left| (|NonNegativeInteger|))
                              (|:| |right| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|NonNegativeInteger|))
                          (|:| |right| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|NonNegativeInteger|))
                         (|:| |right| (|NonNegativeInteger|))))
   (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *4 *2))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *5
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|ofCategory| *1 (|ModularEvaluationCategory| *6 *2))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *4 (|Integer|))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *5
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *5
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |eval1coeffbuf| (|U32Vector|))
                         (|:| |eval1expbuf| (|SortedExponentVector|))))
   (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |eval1coeffbuf| (|U32Vector|))
                         (|:| |eval1expbuf| (|SortedExponentVector|))))
   (|ofCategory| *1 (|ModularEvaluationCategory| *5 *3))
   (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))
   (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *4
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|FinitelyGenerated|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1) (|ofCategory| *1 (|Finite|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1) (|isDomain| *1 (|Integer|)))
 ((*1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Permutation| *3))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Permutation| *4))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PermutationGroup| *3))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|PermutationCategory| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Set| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Set| (|List| *4)))
       (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Set| (|Set| *4)))
       (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| (|Set| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Permutation| *6))
       (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Vector| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SquareMatrix| *4 *2)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *2 (|Join| (|Ring|) (|CommutativeStar|)))
       (|isDomain| *1 (|Permanent| *4 *2))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |preimage| (|List| *3))
                         (|:| |image| (|List| *3))))
   (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Partition|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Finite|))
        (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))
   (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))
        (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Mapping| *4 *4))
       (|isDomain| *1 (|PartialDifferentialOperatorHelper| *4 *3))
       (|ofCategory| *4 (|PartialDifferentialRing| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Automorphism| *4))
       (|isDomain| *1 (|PartialDifferentialOperatorHelper| *4 *3))
       (|ofCategory| *4 (|PartialDifferentialRing| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |adjMat| *3) (|:| |detMat| *4)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|PartialDifferentialOperator| *2 *3))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1) (|ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| (|PoincareBirkhoffWittLyndonBasis| *3))
                          (|:| |c| *4))))
   (|isDomain| *1 (|LieExponentials| *3 *4 *5))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Module| (|Fraction| (|Integer|)))))
   (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LyndonWord| *3)))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Any|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|AnyFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|PatternFunctions1| *4 *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternFunctions1| *4 *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|PatternMatchResult| *4 *5))
   (|ofCategory| *5 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternFunctions1| *5 *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternFunctions1| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| (|Boolean|) *5))
       (|isDomain| *1 (|PatternFunctions1| *4 *5)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |op| (|BasicOperator|))
                         (|:| |arg| (|List| (|Pattern| *3)))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |num| (|Pattern| *3))
                         (|:| |den| (|Pattern| *3))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Any|))
       (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |var| (|List| (|Symbol|))) (|:| |pred| (|Any|))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternMatchResult| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|ListAggregate| *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|isDomain| *3 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
   (|isDomain| *1 (|PatternMatchResult| *4 *2))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *1 *3)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchListResult| *5 *6 (|List| *6)))
       (|isDomain| *1 (|PatternMatch| *5 *6 *4))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|List| (|Equation| *3)))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|ofCategory| *3 (|RetractableTo| (|Symbol|)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *3))))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4)) (|ofCategory| *3 (|Ring|))
       (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|))))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|))))
       (|not| (|ofCategory| *3 (|Ring|)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatch| *5 *6 *4))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PatternMatchResult| *4 *5))
       (|isDomain| *3 (|PatternMatchResult| *4 *6))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|ListAggregate| *5))
       (|isDomain| *1 (|PatternMatchListResult| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *3 *4))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *3 *5))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|List| *4))) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| *4)) (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| (|List| *4)))
       (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| (|List| *4)))
       (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|BalancedPAdicRational| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Integer|)))
       (|isDomain| *1 (|NumericContinuedFraction| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PAdicRational| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|Integer|))
       (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PAdicRationalConstructor| *3 *4))
       (|ofCategory| *4 (|PAdicIntegerCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FloatingPointSystem&| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FloatingPointSystem&| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Stream| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|EuclideanModularRing| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofType| *5 (|Mapping| *4 *4 *2))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *7 (|Mapping| (|Union| *4 "failed") *4 *4 *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularField| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularRing| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|PAdicIntegerCategory| *4))))) 
(((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6))
   (|isDomain| *1 (|PadeApproximants| *5 *4 *6))
   (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7))
   (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5)
   (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5)))
   (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))
 ((*1 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7))
   (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5)
   (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5)))
   (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))) 
(((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|ContinuedFraction| *6))
   (|isDomain| *1 (|PadeApproximants| *5 *4 *6))
   (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Any|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Automorphism| *5)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *2))
       (|ofCategory| *2 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                             (|:| |generator| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                             (|:| |generator| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |generator| *1) (|:| |coef1| *1)
                             (|:| |coef2| *1) (|:| |coefu| *1)
                             (|:| |coefv| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Database| (|IndexCard|)))
       (|isDomain| *1 (|OperationsQuery|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *2 *2)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|List| *2))
   (|isDomain| *1 (|BasicOperatorFunctions1| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|Mapping| *4 (|List| *4)))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|Mapping| *4 (|List| *4)))
   (|isDomain| *1 (|BasicOperatorFunctions1| *4))
   (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Operator| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Operator| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *4 *2))
       (|ofCategory| *2 (|LeftModule| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *1 (|Operator| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|)))
       (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *2 *4))
       (|ofCategory| *4 (|LeftModule| *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|)))
       (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OnePointCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *4 (|Any|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *2 (|String|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|))
       (|isDomain| *2 (|Void|))))
 ((*1 *2 *3 *1 *4)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4))
       (|ofCategory| *4 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *5))
       (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *6))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *6 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *6))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathErrorKind|))
       (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OpenMathErrorKind|))
       (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |cd| (|String|)) (|:| |name| (|String|))))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|OpenMathEncoding|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|SingleInteger|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathDevice|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathDevice|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|CommonOperators|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *4))
       (|ofCategory| *4 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|ExpressionSpace&| *3))
       (|ofCategory| *3 (|ExpressionSpace|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpace&| *3 *4))
       (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|OrientedFacet|)))
   (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Boolean|))))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Boolean|))))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|List| *4)) (|ofCategory| *4 (|Field|))
   (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|ODETools| *4 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|ODETools| *4 *5))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|ODETools| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *6))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |particular| (|Union| *6 "failed"))
                              (|:| |basis| (|List| *6)))
                    *7 *6))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *6) "failed"))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|List| (|Vector| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record|
                     (|:| |particular|
                          (|List|
                           (|Record| (|:| |ratpart| *6)
                                     (|:| |coeffs| (|Vector| *6)))))
                     (|:| |basis| (|List| *6)))
                    *7 (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| (|Vector| *6))
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| A (|Matrix| *5))
                             (|:| |eqs|
                                  (|List|
                                   (|Record| (|:| C (|Matrix| *5))
                                             (|:| |g| (|Vector| *5))
                                             (|:| |eq| *6) (|:| |rh| *5))))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| A (|Matrix| *5))
                             (|:| |eqs|
                                  (|List|
                                   (|Record| (|:| C (|Matrix| *5))
                                             (|:| |lg| (|List| (|Vector| *5)))
                                             (|:| |eq| *6)
                                             (|:| |lrh| (|List| *5)))))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vec| (|Vector| *5))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Fraction| *6)))
       (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *7)))
       (|isDomain| *4 (|Mapping| (|List| *6) *7))
       (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
       (|ofCategory| *6
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *2 (|List| (|Fraction| *7)))
       (|isDomain| *1 (|RationalRicDE| *6 *7))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|List| *5) *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Fraction| *6)))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *7 (|Fraction| *7)))
   (|isDomain| *4 (|Mapping| (|List| *6) *7))
   (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
   (|ofCategory| *6
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2 (|List| (|Fraction| *7)))
   (|isDomain| *1 (|RationalRicDE| *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Fraction| *5)))
       (|isDomain| *1 (|RationalRicDE| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|AlgebraicallyClosedField|))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Fraction| *6)))
       (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *5 (|Fraction| *5)))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|AlgebraicallyClosedField|))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|List| (|Fraction| *5)))
   (|isDomain| *1 (|RationalRicDE| *4 *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|AlgebraicallyClosedField|))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|List| (|Fraction| *6)))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Record| (|:| |poly| *6) (|:| |eq| *3))))
       (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *7
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|List| *5) *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |poly| *6)
                          (|:| |eq|
                               (|LinearOrdinaryDifferentialOperator2| *6
                                                                      (|Fraction|
                                                                       *6))))))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4 (|Mapping| (|List| *7) *7 (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|ofCategory| *6
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List| (|Record| (|:| |frac| (|Fraction| *7)) (|:| |eq| *3))))
   (|isDomain| *1 (|PrimitiveRatRicDE| *6 *7 *3 *8))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *7))
   (|ofCategory| *8
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *7)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |frac| (|Fraction| *6))
                          (|:| |eq|
                               (|LinearOrdinaryDifferentialOperator2| *6
                                                                      (|Fraction|
                                                                       *6))))))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *4 (|MonogenicAlgebra| *5 *7))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vec| (|Vector| *5))))
       (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *4 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *8)) (|ofCategory| *8 (|MonogenicAlgebra| *5 *7))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *8 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *8))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping|
                (|Record| (|:| |particular| (|Union| *5 "failed"))
                          (|:| |basis| (|List| *5)))
                *3 *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3
                 (|Join| (|UnivariateSkewPolynomialCategory| *5)
                         (CATEGORY |domain| (SIGNATURE |adjoint| ($ $)))))
   (|isDomain| *2 (|Record| (|:| |ltilde| *3) (|:| |r| (|Union| *3 "failed"))))
   (|isDomain| *1 (|IntegrateSolutions| *5 *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |ltilde|
                         (|LinearOrdinaryDifferentialOperator1|
                          (|Fraction| *5)))
                    (|:| |r|
                         (|Union|
                          (|LinearOrdinaryDifferentialOperator1|
                           (|Fraction| *5))
                          "failed"))))
       (|isDomain| *1 (|RationalLODE| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|RationalLODE| *4 *2))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *2 (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|RationalLODE| *4 *2))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Fraction| *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Fraction| *6) #1="failed"))
                    (|:| |basis| (|List| (|Fraction| *6)))))
       (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|List| (|Fraction| *6)))
                             (|:| |mat| (|Matrix| *5))))
       (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Fraction| *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Union| (|Fraction| *6) #1#))
                         (|:| |basis| (|List| (|Fraction| *6)))))
   (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|List| (|Fraction| *6)))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|Record| (|:| |basis| (|List| (|Fraction| *6)))
                         (|:| |mat| (|Matrix| *5))))
   (|isDomain| *1 (|RationalLODE| *5 *6))))) 
(((*1 *2 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|PrimitiveRatRicDE| *4 *3 *2 *5))
   (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3))
   (|ofCategory| *5
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *2 *6))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Record| (|:| |constant| *5) (|:| |eq| *3))))
       (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *7
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |eq| *5))))
   (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatRicDE| *4 *2 *3 *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *5
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *3 *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *5
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *5 *3))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *3
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5))))
   (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4))))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5))))
   (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *6 *3))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *3
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4))))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *6 *3))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4))
   (|ofCategory| *3
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *4)))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Fraction| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *6
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *4))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *8))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *8)
                                    (|:| |coeffs| (|Vector| *5)))))
                    (|:| |basis| (|List| *8))))
       (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *8))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *1 (|ODEIntegration| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *1 (|ODEIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|EuclideanDomain|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|ConstantLODE| *6 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Quaternion| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Octonion| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|DivisionRing|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedAbelianMonoidSup|)))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|)))
       (|isDomain| *4 (|Float|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |value| (|Float|)) (|:| |error| (|Float|))
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|)))
       (|isDomain| *4 (|Float|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |value| (|Float|)) (|:| |error| (|Float|))
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|)))
       (|isDomain| *4 (|Float|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |value| (|Float|)) (|:| |error| (|Float|))
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|)))
       (|isDomain| *4 (|Float|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |value| (|Float|)) (|:| |error| (|Float|))
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|)))
       (|isDomain| *4 (|Float|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |value| (|Float|)) (|:| |error| (|Float|))
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|)))
       (|isDomain| *4 (|Float|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |value| (|Float|)) (|:| |error| (|Float|))
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|)))
       (|isDomain| *4 (|Float|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |value| (|Float|)) (|:| |error| (|Float|))
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|)))
       (|isDomain| *4 (|Float|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |value| (|Float|)) (|:| |error| (|Float|))
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| (|Float|) (|Float|)))
       (|isDomain| *4 (|Float|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |value| (|Float|)) (|:| |error| (|Float|))
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature|))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *6 *5 *3 *7)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Record| (|:| |to_try| (|Float|)) (|:| |did| (|Float|))
                             (|:| |next| (|Float|))))
       (|isDomain| *7
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))
 ((*1 *2 *3 *4 *5 *6 *5 *3 *7 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Record| (|:| |to_try| (|Float|)) (|:| |did| (|Float|))
                             (|:| |next| (|Float|))))
       (|isDomain| *7
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *5 *5 *5 *4 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))
 ((*1 *2 *3 *4 *5 *5 *6 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
   (|ofCategory| *4 (|CommutativeRing|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|CommutativeRing|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Complex| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *3)) (|ofCategory| *3 (|ConvertibleTo| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|NewSparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| *4) (|:| |outmult| (|Integer|))
                              (|:| |outvect| (|List| (|Matrix| *4))))))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Matrix| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CharacteristicPolynomialPackage| *2))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1
                   (|CharacteristicPolynomialInMonogenicalAlgebra| *4 *2 *3))
       (|ofCategory| *3 (|MonogenicAlgebra| *4 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Polynomial| *5))
       (|isDomain| *1 (|EigenPackage| *5)) (|ofCategory| *5 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *2 (|Polynomial| *4)) (|isDomain| *1 (|EigenPackage| *4))
       (|ofCategory| *4 (|GcdDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerEigenPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *5))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|NumericRealEigenPackage| *5))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *10))
       (|isDomain| *4 (|List| *6)) (|isDomain| *5 (|List| *10))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *9 (|IntegralDomain|))
       (|ofCategory| *10 (|PolynomialCategory| *9 *7 *8))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|Record|
                    (|:| |deter| (|List| (|SparseUnivariatePolynomial| *10)))
                    (|:| |dterm|
                         (|List|
                          (|List|
                           (|Record| (|:| |expt| (|NonNegativeInteger|))
                                     (|:| |pcoef| *10)))))
                    (|:| |nfacts| (|List| *6)) (|:| |nlead| (|List| *10))))
       (|isDomain| *1 (|NPCoef| *6 *7 *8 *9 *10))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))
       (|ofType| *7 (|PositiveInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *4 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NormalizationPackage| *6 *7 *8 *4 *5))
       (|ofCategory| *5 (|RegularTriangularSetCategory| *6 *7 *8 *4))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofCategory| *3
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|)))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *1 (|NormalizationPackage| *4 *5 *6 *2 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *2))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2)
                         (|:| |polj| *2)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *2))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2)
                         (|:| |polj| *2)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *4 *5 *6))
   (|isDomain| *1 (|NGroebnerPackage| *4 *5 *6 *2))
   (|ofCategory| *4 (|LeftOreRing|)) (|ofCategory| *6 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|LeftOreRing|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|NGroebnerPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|SolvableSkewPolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|LeftOreRing|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|NGroebnerPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|LeftOreRing|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|NGroebnerPackage| *4 *5 *6 *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|DistributedJetBundlePolynomial| *3 *4 *5 *6)))
       (|ofType| *5 (|List| *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Polynomial| *3)))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|FGLMIfCanPackage| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6 *7))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|JetBundlePolynomial| *3 *4)))
       (|isDomain| *1 (|JetBundlePolynomial| *3 *4))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|JetBundleFunctionCategory| *4)
                             (|PolynomialCategory| *3 (|IndexedExponents| *4)
                                                   *4)))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|ofType| *5 (|List| *4)) (|isDomain| *1 (|JetGroebner| *3 *4 *5 *6 *7))
       (|ofCategory| *7
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *3
                                                   (|OrderedVariableList|
                                                    *4))))
   (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|LexTriangularPackage| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|SolvableSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|LeftOreRing|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|NGroebnerPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|NewtonInterpolation| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| (|Complex| *4))
                              (|:| |outmult| (|Integer|))
                              (|:| |outvect|
                                   (|List| (|Matrix| (|Complex| *4)))))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|TwoDimensionalArray| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeSemiRng|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|NonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *3 (|Integer|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|EuclideanDomain|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Factored| *2))
       (|ofCategory| *2 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *1 (|MultivariateSquareFree| *5 *6 *7 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|EuclideanDomain|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8)))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |upol| (|SparseUnivariatePolynomial| *8))
                             (|:| |Lval| (|List| *8))
                             (|:| |Lfact|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *8))
                                    (|:| |exponent| (|Integer|)))))
                             (|:| |ctpol| *8)))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8)))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |unitPart| *9)
                             (|:| |suPart|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *9))
                                    (|:| |exponent| (|Integer|)))))))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *9))
                             (|:| |polval| (|SparseUnivariatePolynomial| *8))))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *5 *4 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6))
                          (|:| |exponent| (|Integer|)))))
   (|ofCategory| *6 (|EuclideanDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|MultiplicativeDependence|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|MergeThing| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|MoreSystemCommands|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Multiset| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Multiset| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|List| (|Kernel| (|Expression| (|Integer|)))))
       (|isDomain| *4 (|List| (|Expression| (|Integer|))))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (|partial| AND (|isDomain| *5 (|List| (|Expression| (|Integer|))))
   (|isDomain| *7
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| *3)))
                         (|:| |atan_kers| (|List| (|Kernel| *3)))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|List| (|Kernel| *3))) (|isDomain| *6 (|Symbol|))
   (|isDomain| *2
               (|Record| (|:| |degree| (|OrderedExpression|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| *3)))
                         (|:| |atan_kers| (|List| (|Kernel| *3)))))
   (|isDomain| *4 (|Kernel| (|Expression| (|Integer|))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|Record| (|:| |degree| (|OrderedExpression|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2
               (|Record|
                (|:| |lk| (|List| (|Kernel| (|Expression| (|Integer|)))))
                (|:| |lc| (|List| (|Expression| (|Integer|))))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Kernel| (|Expression| (|Integer|))))
   (|isDomain| *4 (|Symbol|))
   (|isDomain| *2
               (|Record| (|:| |sign| (|Integer|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| (|Expression| *2))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| *2))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Equation| (|OrderedCompletion| (|Expression| (|Integer|)))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|Union| (|OrderedCompletion| (|Expression| (|Integer|)))
                        (|Record|
                         (|:| |leftHandLimit|
                              (|Union|
                               (|OrderedCompletion| (|Expression| (|Integer|)))
                               #1="failed"))
                         (|:| |rightHandLimit|
                              (|Union|
                               (|OrderedCompletion| (|Expression| (|Integer|)))
                               #1#)))
                        #2="failed"))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|OrderedCompletion| (|Expression| (|Integer|))))
       (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2
                   (|Union| (|OrderedCompletion| (|Expression| (|Integer|)))
                            (|Record|
                             (|:| |leftHandLimit|
                                  (|Union|
                                   (|OrderedCompletion|
                                    (|Expression| (|Integer|)))
                                   #1#))
                             (|:| |rightHandLimit|
                                  (|Union|
                                   (|OrderedCompletion|
                                    (|Expression| (|Integer|)))
                                   #1#)))
                            #2#))
       (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| (|Expression| (|Integer|))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|FreeModuleCategory| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MonoidRingCategory| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *6)))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5
                                           *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5
                                           *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *6 (|IntegralDomain|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *6 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |sup| (|Polynomial| *6))
                             (|:| |inf| (|Polynomial| *6))))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4
                                           *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *2)) (|isDomain| *4 (|Mapping| *2 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *2))
       (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |normal| (|Factored| *3))
                             (|:| |special| (|Factored| *3))))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|CyclicGroup| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofType| *3 (|Symbol|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|Field|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|InfiniteCyclicGroup| *2)) (|ofType| *2 (|Symbol|))))
 ((*1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *1)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *1 (|MonogenicAlgebra| *5 *6))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|Matrix| *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2
                   (|Record| (|:| |puiseux| (|Fraction| (|Integer|)))
                             (|:| |laurent| (|Fraction| (|Integer|)))
                             (|:| |coef| (|Sequence| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Stream| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Sequence| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|MomentPackage| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Sequence| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Sequence| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Stream| (|Record| (|:| |an| *4) (|:| |bn| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| *4))
                             (|:| |bn| (|Stream| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Record| (|:| |an| (|List| *4)) (|:| |bn| (|List| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|CommutativeRing|))
   (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
   (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
   (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CyclicGroup| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InfiniteCyclicGroup| *3))
       (|ofType| *3 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|ModuleMonomial| *3 *2 *4))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *2))
                   (|Record| (|:| |index| *3) (|:| |exponent| *2))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|Finite|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|ModuleMonomial| *2 *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3))
                   (|Record| (|:| |index| *2) (|:| |exponent| *3))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PrimitiveArray| (|ModMonic| *3 *4)))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|FiniteFieldCategory|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModMonic| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
       (|ofCategory| *7 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| *7)))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
   (|ofCategory| *8 (|CommutativeRing|))))) 
(((*1 *2 *2 *3 *4 *4 *5 *6)
  (AND
   (|isDomain| *2
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List| (|SparseUnivariatePolynomial| *8))))
   (|isDomain| *3 (|List| (|List| *7))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *6
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|ofCategory| *8 (|CommutativeRing|))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| *9)))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List| (|SparseUnivariatePolynomial| *10))))
       (|ofCategory| *9 (|CommutativeRing|))
       (|ofCategory| *10 (|CommutativeRing|))
       (|isDomain| *2
                   (|Union| (|Matrix| (|SparseUnivariatePolynomial| *10))
                            (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *9 *10))))) 
(((*1 *2 *3 *4 *5 *6 *6)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|SortedExponentVector|))
       (|isDomain| *5 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *6 (|Integer|))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Symbol|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Vector|
                (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|)))))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
   (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Vector| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *6 *6)
  (AND
   (|isDomain| *5
               (|Mapping| (|Vector| *2) (|List| *2) (|Integer|) (|Integer|)))
   (|isDomain| *6 (|Integer|)) (|isDomain| *3 (|Vector| (|U32Vector|)))
   (|isDomain| *4 (|List| (|U32Vector|))) (|isDomain| *2 (|U32Vector|))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *8
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *9
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial| (|Integer|)))))
       (|isDomain| *6 (|Integer|))
       (|isDomain| *2
                   (|Union|
                    (|Matrix| (|SparseUnivariatePolynomial| (|Integer|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND
   (|isDomain| *3
               (|List|
                (|List| (|Fraction| (|Polynomial| (|AlgebraicNumber|))))))
   (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|isDomain| *8
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List|
                           (|SparseUnivariatePolynomial|
                            (|Polynomial| (|AlgebraicNumber|))))))
   (|isDomain| *2
               (|Union|
                (|Matrix|
                 (|SparseUnivariatePolynomial|
                  (|Polynomial| (|AlgebraicNumber|))))
                (|Boolean|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|isDomain| *8
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List|
                           (|SparseUnivariatePolynomial|
                            (|Polynomial| (|Integer|))))))
   (|isDomain| *2
               (|Union|
                (|Matrix|
                 (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
                (|Boolean|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial|
                                (|AlgebraicNumber|)))))
       (|isDomain| *2
                   (|Union|
                    (|Matrix|
                     (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial| (|Integer|)))))
       (|isDomain| *2
                   (|Union|
                    (|Matrix| (|SparseUnivariatePolynomial| (|Integer|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|List|
                (|Record| (|:| |ind| (|NonNegativeInteger|))
                          (|:| |poly| (|U32Vector|)))))
   (|isDomain| *3 (|U32Vector|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ind| (|NonNegativeInteger|))
                              (|:| |poly| (|U32Vector|)))))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *2 *3 *2 *4 *4 *5)
  (AND (|isDomain| *3 (|U32Matrix|))
       (|isDomain| *5
                   (|List|
                    (|Record| (|:| |ind| (|NonNegativeInteger|))
                              (|:| |poly| (|U32Vector|)))))
       (|isDomain| *2 (|U32Vector|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *5
               (|List|
                (|Record| (|:| |ind| (|NonNegativeInteger|))
                          (|:| |poly| (|U32Vector|)))))
   (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|NonNegativeInteger|))
   (|isDomain| *2
               (|Record| (|:| |matr| (|U32Matrix|))
                         (|:| |poly| (|U32Vector|))))
   (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |ind| (|NonNegativeInteger|))
                              (|:| |poly| (|U32Vector|)))))
       (|isDomain| *2 (|U32Vector|)) (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Matrix|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |poly| (|U32Vector|))
                              (|:| |degree| (|NonNegativeInteger|))
                              (|:| |separate_factors|
                                   (|Mapping| (|List| (|U32Vector|)))))))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|U32Vector|)))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *13))
   (|isDomain| *4 (|List| *11)) (|isDomain| *6 (|List| *12))
   (|isDomain| *7 (|List| *13)) (|isDomain| *8 (|List| (|NonNegativeInteger|)))
   (|isDomain| *9
               (|Mapping|
                (|Mapping|
                 (|Union| (|List| (|SparseUnivariatePolynomial| *12)) "failed")
                 (|SparseUnivariatePolynomial| *12))
                (|List| (|SparseUnivariatePolynomial| *12))))
   (|ofCategory| *11 (|OrderedSet|)) (|ofCategory| *12 (|IntegralDomain|))
   (|ofCategory| *13 (|PolynomialCategory| *12 *10 *11))
   (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *12)))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *13)))
   (|isDomain| *1 (|MultivariateLifting| *10 *11 *12 *13))))
 ((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *12))
   (|isDomain| *4 (|List| *11))
   (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *9)))
   (|isDomain| *6 (|List| *9)) (|isDomain| *7 (|List| *12))
   (|isDomain| *8 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *9 (|EuclideanDomain|)) (|ofCategory| *11 (|OrderedSet|))
   (|ofCategory| *9 (|IntegralDomain|))
   (|ofCategory| *12 (|PolynomialCategory| *9 *10 *11))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *12)))
   (|isDomain| *1 (|MultivariateLifting| *10 *11 *9 *12))))) 
(((*1 *2 *3 *4 *5 *6 *2 *7)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *11)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *11))
   (|isDomain| *4 (|List| *9)) (|isDomain| *5 (|List| *10))
   (|isDomain| *6 (|List| (|NonNegativeInteger|)))
   (|isDomain| *7
               (|Mapping|
                (|Union| (|List| (|SparseUnivariatePolynomial| *10)) "failed")
                (|SparseUnivariatePolynomial| *10)))
   (|ofCategory| *9 (|OrderedSet|)) (|ofCategory| *10 (|IntegralDomain|))
   (|ofCategory| *11 (|PolynomialCategory| *10 *8 *9))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|MultivariateLifting| *8 *9 *10 *11))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6))
       (|isDomain| *1 (|MakeBinaryCompiledFunction| *3 *5 *6 *7))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MakeUnaryCompiledFunction| *3 *5 *6))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MakeUnaryCompiledFunction| *4 *5 *6))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|Record| (|:| |part1| *3) (|:| |part2| *4)))
       (|isDomain| *1 (|MakeRecord| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleExpression| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|JetBundleXExpression| *4)))
       (|isDomain| *1 (|JetBundleXExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6))
       (|isDomain| *1 (|MakeBinaryCompiledFunction| *4 *5 *6 *7))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *6))
       (|ofCategory| *6 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |next| (|List| (|NonNegativeInteger|)))
                          (|:| |map|
                               (|List| (|List| (|NonNegativeInteger|)))))))
   (|ofCategory| *3 (|SetCategory|))
   (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))) 
(((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|MultifunctionGraph| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|MultifunctionGraph| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Loop|))
       (|isDomain| *1 (|FunctionGraph| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|OrderedCompletion| *3)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|OrderedCompletion| *3)
                            (|Record|
                             (|:| |leftHandLimit|
                                  (|Union| (|OrderedCompletion| *3)
                                           #1="failed"))
                             (|:| |rightHandLimit|
                                  (|Union| (|OrderedCompletion| *3) #1#)))
                            "failed"))
       (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|String|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|OrderedCompletion| *3))
   (|isDomain| *1 (|PowerSeriesLimitPackage| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Equation| (|OrderedCompletion| (|Polynomial| *5))))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Union|
                    (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                    (|Record|
                     (|:| |leftHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2="failed"))
                     (|:| |rightHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#)))
                    #3="failed"))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Union|
                    (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                    (|Record|
                     (|:| |leftHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#))
                     (|:| |rightHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#)))
                    #3#))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *1 (|RationalFunctionLimitPackage| *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Loop|))
       (|isDomain| *1 (|MultifunctionGraph| *4))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|MultifunctionGraph| (|String|)))
       (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Permutation| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|MultifunctionGraph| (|String|)))
       (|isDomain| *1 (|MultifunctionGraph| *5))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|PermutationGroup| (|NonNegativeInteger|)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Polynomial| (|Integer|))) (|isDomain| *5 (|List| *3))
       (|isDomain| *7 (|List| (|Symbol|)))
       (|ofCategory| *1 (|ModularEvaluationCategory| *8 *3))
       (|ofCategory| *8 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *6 (|Symbol|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *1 (|ModularEvaluationCategory| *3 *2))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *3 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *3 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Union|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                           (|DoubleFloat|))
                "undefined"))
   (|isDomain| *5 (|Segment| (|DoubleFloat|)))
   (|isDomain| *6 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *5 *6)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Union|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                           (|DoubleFloat|))
                "undefined"))
   (|isDomain| *5 (|Segment| (|DoubleFloat|)))
   (|isDomain| *6 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|DoubleFloat|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))
 ((*1 *2 *2 *3 *4 *4 *5)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3
                   (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                              (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|DoubleFloat|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |prod| *5))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| *5))
   (|isDomain| *1 (|DistinctDegreeFactorize| *4 *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *5) (|:| |degree| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| *5))
   (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factor| *3) (|:| |degree| (|Integer|)))))
       (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MultiDictionary| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |entry| *3)
                              (|:| |count| (|NonNegativeInteger|)))))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|PartialDifferentialRing| *6))
       (|isDomain| *2 (|Matrix| *7))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *7 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *7))
       (|ofCategory| *4 (|FiniteLinearAggregate| *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Matrix| *6))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *6 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *6))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *6))
       (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *3 *7 *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|PartialDifferentialRing| *4))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *4 *2 *5 *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *3 (|FiniteLinearAggregate| *4))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|PartialDifferentialRing| *5))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Matrix| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|AbelianMonoid|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|SemiRng|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))) 
(((*1 *2 *1 *3 *4 *5 *6 *6 *7)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *5 (|List| *1)) (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7 (|Union| *8 "one"))
       (|ofCategory| *1 (|MatrixCategory| *8 *9 *10))
       (|ofCategory| *8 (|AbelianMonoid|))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5 *4))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))
       (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5 *4)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MappingPackage3| *5 *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *4 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5))
       (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofType| *4 (|List| *3)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *2 *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *4)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *3))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|NonNegativeInteger|) *2))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Mapping| *3 (|NonNegativeInteger|) *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MappingPackage1| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|MappingPackage1| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Mapping| *6 *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks3| *5 *6 *2))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| (|List| *1)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| (|List| *1)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|PositiveInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|FiniteLinearAggregate| *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *6))
       (|isDomain| *2 (|List| (|List| *3)))
       (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3))
       (|ofCategory| *3 (|TwoDimensionalArrayCategory| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|FiniteLinearAggregate| *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *6))
       (|isDomain| *2 (|List| (|List| *3)))
       (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3))
       (|ofCategory| *3 (|TwoDimensionalArrayCategory| *6 *7 *8))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MagmaWithUnit|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))) 
(((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))) 
(((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|))
   (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|isDomain| *1 (|ModularAlgebraicGcdTools3|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|SortedExponentVector|))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ModularAlgebraicGcdTools3|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|U32Vector|)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *7 *3 *6))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *5 *6 *4))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|SortedExponentVector|))))) 
(((*1 *2 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *5 (|List| (|Symbol|)))
   (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *3 *2 *6))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
   (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *6))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|))
   (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *6 *7 *2))
   (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *2 *3))
   (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
   (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *2 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *2 *3 *4 *5 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))
       (|isDomain| *1 (|ModularAlgebraicGcd| *6 *7 *8))
       (|ofCategory| *8 (|ModularAlgebraicGcdOperations| *2 *6 *7))))
 ((*1 *2 *3 *3 *4 *5 *6 *5)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|List| (|Symbol|)))
       (|isDomain| *6 (|Symbol|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|ofCategory| *9 (|Type|)) (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|ModularAlgebraicGcd2| *3 *7 *8 *9 *10 *11))
       (|ofCategory| *10 (|ModularEvaluationCategory| *3 *7))
       (|ofCategory| *11 (|ModularAlgebraicGcdOperations| *7 *8 *9))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *2 *3 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|ThreeDimensionalMatrix| *2)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Vector| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|FreeMonoid| *3))
   (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|OneDimensionalArray| (|List| (|LyndonWord| *5))))
       (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LyndonWord| *5)))
       (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |Inv| (|Matrix| *4))
                             (|:| |Pivots| (|List| *4))))
       (|isDomain| *1 (|LUDecomposition| *4))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4 (|Vector| (|Integer|))) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|LUDecomposition| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| LU (|Matrix| *4))
                             (|:| |Perm| (|Vector| (|Integer|)))
                             (|:| |Pivots| (|List| *4))))
       (|isDomain| *1 (|LUDecomposition| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| (|Fraction| *8)))
                             (|:| |vec| (|Vector| (|Fraction| *8)))))
       (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| *8)) "failed"))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *8))))))
       (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|ListAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *4)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
   (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
   (|isDomain| *1 (|LinearPolynomialEquationByFractions| *4))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |llcm_res| *1) (|:| |coeff1| *1)
                         (|:| |coeff2| *1)))
   (|ofCategory| *1 (|LeftOreRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|Loop|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|Loop|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *3))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *5 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |singularity|
                      (|Record|
                       (|:| |point|
                            (|Union| (|Expression| (|Integer|)) "infinity"))
                       (|:| |lpf|
                            (|LinearOrdinaryDifferentialOperator3|
                             (|Expression| (|Integer|))
                             (|UnivariateTaylorSeries|
                              (|Expression| (|Integer|)) *6 *7)
                             (|UnivariateLaurentSeries|
                              (|Expression| (|Integer|)) *6 *7)))
                       (|:| |dxt| (|PositiveInteger|))))
                 (|:| |fos|
                      (|List|
                       (|Record|
                        (|:| |op|
                             (|LinearOrdinaryDifferentialOperator3|
                              (|Expression| (|Integer|))
                              (|UnivariateTaylorSeries|
                               (|Expression| (|Integer|)) *6 *7)
                              (|UnivariateLaurentSeries|
                               (|Expression| (|Integer|)) *6 *7)))
                        (|:| |ram|
                             (|UnivariatePolynomial| *6
                                                     (|Expression|
                                                      (|Integer|))))
                        (|:| |expart|
                             (|UnivariateLaurentSeries|
                              (|Expression| (|Integer|)) *6 *7)))))
                 (|:| |mge|
                      (|List|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Union| (|Expression| (|Integer|)) "infinity"))
   (|isDomain| *5
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))
                (|List| (|Expression| (|Integer|)))))
   (|isDomain| *6 (|List| (|Expression| (|Integer|)))) (|ofType| *7 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |ecs|
                      (|List|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *7
                                                  *8)))
                 (|:| |ecr|
                      (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
                 (|:| |ect|
                      (|Fraction|
                       (|UnivariatePolynomial| *7
                                               (|Expression| (|Integer|))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
   (|ofType| *8 (|Expression| (|Integer|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| (|Expression| (|Integer|)))) (|ofType| *5 *2)
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
       (|ofType| *4 (|Symbol|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))))
   (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
   (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Union| (|Expression| (|Integer|)) "infinity"))
   (|ofType| *5 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *5 *6)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *5 *6)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|ofType| *5 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator1|
                 (|Fraction|
                  (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Union|
                (|List|
                 (|Record|
                  (|:| |op|
                       (|LinearOrdinaryDifferentialOperator3|
                        (|Expression| (|Integer|))
                        (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                  *7)
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *6 *7)))
                  (|:| |ram|
                       (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
                  (|:| |expart|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))
                (|List|
                 (|Union|
                  (|LinearOrdinaryDifferentialOperator3|
                   (|Expression| (|Integer|))
                   (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                   (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                              *7))
                  (|Record|
                   (|:| |ope|
                        (|LinearOrdinaryDifferentialOperator3|
                         (|Expression| (|Integer|))
                         (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                   *6 *7)
                         (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                    *6 *7)))
                   (|:| |dext| (|PositiveInteger|))
                   (|:| |alpha| (|Expression| (|Integer|)))
                   (|:| |rami|
                        (|UnivariatePolynomial| *6
                                                (|Expression|
                                                 (|Integer|)))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Expression| (|Integer|)))
   (|isDomain| *5 (|PositiveInteger|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6 *7)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 *4)))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Union| (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *5 *6)))
   (|isDomain| *4
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *5 *6)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *5 *6)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Union|
                (|List|
                 (|Record|
                  (|:| |op|
                       (|LinearOrdinaryDifferentialOperator3|
                        (|Expression| (|Integer|))
                        (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                  *7)
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *6 *7)))
                  (|:| |ram|
                       (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
                  (|:| |expart|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))
                (|List|
                 (|Union|
                  (|LinearOrdinaryDifferentialOperator3|
                   (|Expression| (|Integer|))
                   (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                   (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                              *7))
                  (|Record|
                   (|:| |ope|
                        (|LinearOrdinaryDifferentialOperator3|
                         (|Expression| (|Integer|))
                         (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                   *6 *7)
                         (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                    *6 *7)))
                   (|:| |dext| (|PositiveInteger|))
                   (|:| |alpha| (|Expression| (|Integer|)))
                   (|:| |rami|
                        (|UnivariatePolynomial| *6
                                                (|Expression|
                                                 (|Integer|)))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))
       (|ofType| *4 (|Symbol|))
       (|isDomain| *2
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *4 *5)
                    (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *4
                                               *5)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
       (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *2 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *5 (|Integer|))
   (|ofType| *6 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *5 (|Integer|))
   (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6 *7)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| *5))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Stream|
                    (|Record|
                     (|:| |Qt|
                          (|LinearOrdinaryDifferentialOperator3|
                           (|Expression| (|Integer|))
                           (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                     *7 *8)
                           (|UnivariateLaurentSeries|
                            (|Expression| (|Integer|)) *7 *8)))
                     (|:| |Rt|
                          (|LinearOrdinaryDifferentialOperator3|
                           (|Expression| (|Integer|))
                           (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                     *7 *8)
                           (|UnivariateLaurentSeries|
                            (|Expression| (|Integer|)) *7 *8))))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |main|
                         (|Record|
                          (|:| |Qt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))
                          (|:| |Rt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))))
                    (|:| |nf|
                         (|Record|
                          (|:| |Qt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))
                          (|:| |Rt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))))
                    (|:| |error|
                         (|LinearOrdinaryDifferentialOperator3|
                          (|Expression| (|Integer|))
                          (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                    *7 *8)
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |llc|
                         (|List|
                          (|Stream|
                           (|Record| (|:| |k| (|Integer|))
                                     (|:| |c| (|Expression| (|Integer|)))))))
                    (|:| |rlc|
                         (|List|
                          (|Stream|
                           (|Record| (|:| |k| (|Integer|))
                                     (|:| |c| (|Expression| (|Integer|)))))))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |laurl|
                         (|List|
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))
                    (|:| |laurr|
                         (|List|
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
   (|isDomain| *5 (|Fraction| (|Integer|))) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Record|
                (|:| |Qt|
                     (|LinearOrdinaryDifferentialOperator3|
                      (|Expression| (|Integer|))
                      (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                *7)
                      (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                 *7)))
                (|:| |Rt|
                     (|LinearOrdinaryDifferentialOperator3|
                      (|Expression| (|Integer|))
                      (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                *7)
                      (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                 *7)))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator3|
                 (|Expression| (|Integer|))
                 (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                 (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                            *7))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *4 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))))
   (|ofType| *4 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |point|
                      (|Record| (|:| |x| (|Integer|)) (|:| |y| (|Integer|))))
                 (|:| |slope| (|Fraction| (|Integer|)))
                 (|:| |npoly|
                      (|UnivariatePolynomial| *4
                                              (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
   (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|AbelianMonoidRing| *3 (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperator3Aux| *3 *4 *2))
       (|ofCategory| *2 (|Join| (|DifferentialRing|) (|LeftModule| *4)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeMonoid| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ListMonoidOps| *4 *2 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofType| *5 *2)))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|FreeAbelianMonoidCategory| *2 *4))
       (|ofCategory| *4 (|CancellationAbelianMonoid|))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeMonoid| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|ListMonoidOps| *2 *4 *5))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND
   (|isDomain| *2 (|Mapping| (|NonNegativeInteger|) (|NonNegativeInteger|)))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|CancellationAbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeGroup| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeMonoid| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ListMultiDictionary| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *2 *1)
  (AND (|isDomain| *1 (|ListMultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *1 (|ListPackage| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|BasicType|)) (|isDomain| *2 (|List| (|List| *5)))
       (|isDomain| *1 (|ListPackage| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2
                   (|Record| (|:| |yes| (|List| *5)) (|:| |no| (|List| *5))))
       (|isDomain| *1 (|ListPackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|ListToMap| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Mapping| *5 *6)) (|isDomain| *1 (|ListToMap| *6 *5))))
 ((*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|isDomain| *6 (|Mapping| *2 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *2))))) 
(((*1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|List| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|List| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
       (|isDomain| *5 (|List| (|Mapping| *7 *7)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *7))
                             (|:| |vec| (|Vector| *7))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *7))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|List| (|Mapping| *5 *5)))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|ConstantLinearDependence| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *1)) (|isDomain| *4 (|Vector| *1))
       (|ofCategory| *1 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *5))
                             (|:| |vec| (|Vector| *5))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *1))
       (|ofCategory| *1 (|LinearlyExplicitOver| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *5) #1="failed"))
                    (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|LinearlyExplicitOver| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *5) #1#))
                             (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| *5))
       (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| *5)) #2="failed"))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *5))))))
       (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|LinearlyExplicitOver| *5))
       (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| (|Fraction| *5)) #2#))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *5))))))
       (|isDomain| *1 (|LinearDependence| *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Vector| *5))
   (|ofCategory| *5 (|LinearlyExplicitOver| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *4))
   (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *5))
       (|ofCategory| *5 (|LinearlyExplicitOver| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *2)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *2 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| *2)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *2 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5)) (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|Fraction| *6))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5))
       (|isDomain| *4 (|List| (|LaurentPolynomial| *5 *6)))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|LaurentPolynomial| *5 *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *2))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |ratpart| *4) (|:| |coeffs| (|Vector| *4)))))
   (|ofCategory| *4 (|Field|))
   (|isDomain| *2
               (|Record|
                (|:| |particular|
                     (|Union|
                      (|Record| (|:| |ratpart| *4)
                                (|:| |coeffs| (|Vector| *4)))
                      "failed"))
                (|:| |basis|
                     (|List|
                      (|Record| (|:| |ratpart| *4)
                                (|:| |coeffs| (|Vector| *4)))))))
   (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Equation| (|OnePointCompletion| *3)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|OnePointCompletion| *3))
   (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Equation| (|OnePointCompletion| (|Polynomial| *5))))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|Library|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|KeyedAccessFile| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *2 *2)
  (AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *3 (|OrderedVariableList| *4)) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *5 *6))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *3 *4)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|LinGroebnerPackage| *3 *4))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|isDomain| *1 (|LinGroebnerPackage| *5 *6))
   (|ofCategory| *6 (|GcdDomain|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|isDomain| *1 (|LinGroebnerPackage| *5 *6))
   (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |glbase|
                         (|List| (|DistributedMultivariatePolynomial| *4 *5)))
                    (|:| |glval| (|List| (|Integer|)))))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2
               (|Record|
                (|:| |gblist|
                     (|List| (|DistributedMultivariatePolynomial| *4 *5)))
                (|:| |gvlist| (|List| (|Integer|)))))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgebraicFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|CombinatorialFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *5))
       (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ExpressionSpace&| *4))
       (|ofCategory| *4 (|ExpressionSpace|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FunctionSpace&| *4 *5))
       (|ofCategory| *4 (|FunctionSpace| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LiouvillianFunction| *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|SquareFreeRegularTriangularSet| *5
                                                  (|IndexedExponents|
                                                   (|OrderedVariableList| *6))
                                                  (|OrderedVariableList| *6)
                                                  (|NewSparseMultivariatePolynomial|
                                                   *5
                                                   (|OrderedVariableList|
                                                    *6)))))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|List| (|Polynomial| *3)))
   (|ofCategory| *3 (|GcdDomain|)) (|isDomain| *1 (|FGLMIfCanPackage| *3 *4))
   (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *3
                                                   (|OrderedVariableList|
                                                    *4))))
   (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|LexTriangularPackage| *3 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FGLMIfCanPackage| *4 *5))
       (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *4
                                                   (|OrderedVariableList|
                                                    *5))))
   (|ofCategory| *4 (|GcdDomain|)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LexTriangularPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LiePolynomial| *4 *5)))
       (|isDomain| *1 (|LieExponentials| *4 *5 *6))
       (|ofCategory| *5
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *6 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |k| (|LyndonWord| *3)) (|:| |c| *4))))
   (|isDomain| *1 (|LieExponentials| *3 *4 *5))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Module| (|Fraction| (|Integer|)))))
   (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *4)))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *6)
  (|partial| AND (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *3)))
   (|isDomain| *5
               (|Record| (|:| |contp| *3)
                         (|:| |factors|
                              (|List|
                               (|Record| (|:| |irr| *10)
                                         (|:| |pow| (|Integer|)))))))
   (|isDomain| *6 (|List| *3)) (|isDomain| *7 (|List| *8))
   (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|EuclideanDomain|))
   (|ofCategory| *10 (|PolynomialCategory| *3 *9 *8))
   (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |polfac| (|List| *10)) (|:| |correct| *3)
                         (|:| |corrfact|
                              (|List| (|SparseUnivariatePolynomial| *3)))))
   (|isDomain| *1 (|LeadingCoefDetermination| *8 *9 *3 *10))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|List| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LeadingCoefDetermination| *6 *7 *3 *8))
       (|ofCategory| *8 (|PolynomialCategory| *3 *7 *6))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|LazardSetSolvingPackage| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *2
                     (|SquareFreeRegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| |const| (|Record| (|:| |val| (|Symbol|))))
                        (|:| |var| (|Record| (|:| |str| (|String|))))))
   (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|CoDcpo| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| |const| (|Record| (|:| |val| (|Symbol|))))
                        (|:| |var| (|Record| (|:| |str| (|String|))))))
   (|isDomain| *1 (|LatticeJoinOfMeets|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|LaplaceTransform| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *2) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Kernel| *1))) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Equation| *1)) (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1 *1 *1)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|Lambda| *4)) (|ofCategory| *4 (|VarCat|))))) 
(((*1 *2 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4
                 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *5)))
   (|isDomain| *1 (|Kovacic| *4 *5))))
 ((*1 *2 *3 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| *6))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *6)))
   (|isDomain| *1 (|Kovacic| *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))
   (|ofCategory| *2 (|Comparable|))
   (|isDomain| *1 (|KernelFunctions2| *2 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Kernel| *4)) (|isDomain| *1 (|KernelFunctions2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|Comparable|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|TranscendentalFunctionCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *1 (|Kernel| *5))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
   (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|JetVectorField| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *4 *5))
                             (|:| IC (|List| *5))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|isDomain| *3 (|List| (|OrderedVariableList| *4)))
   (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Rank| (|NonNegativeInteger|))
                         (|:| |NumMultVar| (|NonNegativeInteger|))
                         (|:| |Betas| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
   (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |Rank| (|NonNegativeInteger|))
                             (|:| |NumMultVar| (|NonNegativeInteger|))
                             (|:| |Betas| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|List| (|List| *5)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *5 *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *1))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|SparseEchelonMatrix| *3 *4)))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleBaseFunctionCategory| *2))))) 
(((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *4 *5))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|SparseEchelonMatrix| *6 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *6))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |DSys| (|List| *1))
                             (|:| |JVars| (|List| (|List| *6)))))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|Record| (|:| |DPhi| *1) (|:| |JVars| (|List| *5))))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
   (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *2 *3 *4 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |Sys| (|List| *1))
                             (|:| JM (|SparseEchelonMatrix| *5 *1))
                             (|:| |Depend|
                                  (|Union| "failed"
                                           (|List|
                                            (|List|
                                             (|NonNegativeInteger|)))))))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Expression| (|Integer|)) *3))
   (|isDomain| *1 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|PositiveInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|PositiveInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|List| (|PositiveInteger|))))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|List| (|PositiveInteger|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|JetBundleCategory|))
   (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OneDimensionalArray| *4))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|IndexedAggregate| *4 *3)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *4 (|List| (|Complex| *6)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Complex| *6))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *5 *6 *7))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Complex| *5))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Complex| *5))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *3))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *3 *2))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *2 *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
   (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *6))))
       (|isDomain| *4 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *6))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Algebra| *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1
                   (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7
                                                                      *8 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *4 (|Permutation| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *4 (|List| (|Permutation| (|Integer|))))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Expression| *5))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|IntegrationResultToFunction| *4 *2))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Expression| *4))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|IrredPolyOverFiniteField| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerRoots| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerRoots| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRoots| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerRoots| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *1 (|IntegerRoots| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |base| *3)
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|isDomain| *1 (|IntegerRoots| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerRoots| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |scalar| (|Fraction| (|Integer|)))
                          (|:| |coeff| (|SparseUnivariatePolynomial| *2))
                          (|:| |logand| (|SparseUnivariatePolynomial| *2)))))
   (|isDomain| *4 (|List| (|Record| (|:| |integrand| *2) (|:| |intvar| *2))))
   (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|IntegrationResult| *2))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |scalar| (|Fraction| (|Integer|)))
                          (|:| |coeff| (|SparseUnivariatePolynomial| *3))
                          (|:| |logand| (|SparseUnivariatePolynomial| *3)))))
   (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |integrand| *3) (|:| |intvar| *3))))
   (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegrationResult| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InternalPrintPackage|))))) 
(((*1 *2 *2 *3 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|InverseLaplaceTransform| *4 *2))
   (|ofCategory| *2
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)
                         (|SpecialFunctionCategory|)
                         (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |polypart| *3)))
       (|isDomain| *1 (|TranscendentalIntegration| *5 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |ir| (|IntegrationResult| (|Fraction| *6)))
                             (|:| |specpart| (|Fraction| *6))
                             (|:| |polypart| *6)))
       (|isDomain| *1 (|TranscendentalIntegration| *5 *6))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Fraction| *9)) (|isDomain| *5 (|Mapping| *4 *4))
       (|isDomain| *6 (|Mapping| *9 *9))
       (|isDomain| *7
                   (|Mapping|
                    (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4))
                             "failed")
                    *4))
       (|isDomain| *8 (|Mapping| (|IntegrationResult| *4) *4))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *9)))
                    (|:| |a0| (|IntegrationResult| *4))))
       (|isDomain| *1 (|TranscendentalIntegration| *4 *9))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |answer| (|Fraction| *8))
                              (|:| |logpart| (|Fraction| *8))
                              (|:| |ir| (|IntegrationResult| (|Fraction| *8))))
                    (|Fraction| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Record| (|:| |ans| *7) (|:| |right| *7)
                              (|:| |primpart| *7) (|:| |sol?| (|Boolean|)))
                    (|Integer|) *7))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *3 (|Fraction| *8))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *8)))
                    (|:| |a0| *7)))
       (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |answer| (|Fraction| *8))
                              (|:| |logpart| (|Fraction| *8))
                              (|:| |ir| (|IntegrationResult| (|Fraction| *8))))
                    (|Fraction| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Union| (|Record| (|:| |ratpart| *7) (|:| |coeff| *7))
                             "failed")
                    *7))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *3 (|Fraction| *8))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *8)))
                    (|:| |a0| *7)))
       (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Mapping| (|IntegrationResult| *3) *3 (|Symbol|)))
       (|isDomain| *6
                   (|Mapping|
                    (|Union| (|Record| (|:| |special| *3) (|:| |integrand| *3))
                             "failed")
                    *3 (|Symbol|)))
       (|ofCategory| *3 (|ElementaryFunctionCategory|))
       (|ofCategory| *3 (|LiouvillianFunctionCategory|))
       (|ofCategory| *3 (|RetractableTo| *4))
       (|ofCategory| *3 (|FunctionSpace| *7)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7 (|ConvertibleTo| (|Pattern| (|Integer|))))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *7 (|PatternMatchable| (|Integer|)))
       (|ofCategory| *7 (|Comparable|))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|IntegrationTools| *7 *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *2))
       (|ofCategory| *2 (|ElementaryFunctionCategory|))
       (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *2 (|List| (|Kernel| *6)))
       (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Kernel| *6))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Kernel| *6)) (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *5))) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Kernel| *5)) (|isDomain| *1 (|IntegrationTools| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Kernel| *5))) (|isDomain| *3 (|Symbol|))
       (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *5))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
   (|isDomain| *3 (|Symbol|))
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|RationalFunctionIntegration| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionIntegration| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|IntegerRetractions| *3))
   (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|RationalIntegration| *3 *4))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |special| *3) (|:| |integrand| *3)))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
   (|ofCategory| *3 (|LiouvillianFunctionCategory|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))
 ((*1 *2 *2 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|isDomain| *4 (|OrderedCompletion| *2))
   (|ofCategory| *2 (|SpecialFunctionCategory|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *2))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |special| *3) (|:| |integrand| *3)))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
   (|ofCategory| *3 (|LiouvillianFunctionCategory|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                             (|GcdDomain|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Record| (|:| |const| *3) (|:| |nconst| *3)))
       (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *9 *9))
       (|isDomain| *4 (|Mapping| (|Factored| *9) *9))
       (|isDomain| *5
                   (|Mapping| (|List| (|Vector| (|Fraction| (|Integer|))))
                              (|Matrix| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| (|Fraction| *9)))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| *9)))
       (|isDomain| *7 (|List| (|Fraction| *9))) (|ofCategory| *8 (|Field|))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *8))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| (|Fraction| *9)))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Kernel| *7)))
       (|isDomain| *5 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| *7))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Kernel| *7)))
       (|isDomain| *5 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *7)
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricIntegration| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Kernel| *3)))
       (|isDomain| *6 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))
                          #1="failed"))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))))
       (|isDomain| *1 (|ParametricIntegration| *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))
                          #1#))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))))
       (|isDomain| *1 (|ParametricIntegration| *6 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| (|List| (|Vector| (|Fraction| (|Integer|))))
                              (|Matrix| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *6))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| (|Fraction| *7)))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping|
                (|List|
                 (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6))))
                (|List| *6)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *6)))
   (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6)))))
   (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping|
                (|List|
                 (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6))))
                (|List| *7)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *6)))
   (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6)))))
   (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *7)
                               (|:| |coeffs| (|Vector| *7))))
                    (|Integer|) (|List| *7)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| (|Fraction| *8))
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *7)
                               (|:| |coeffs| (|Vector| *7))))
                    (|List| *7)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| (|Fraction| *8))
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *5 (|Kernel| *4)) (|isDomain| *6 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *6)
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| *6))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *5 *6 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|Kernel| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))
                    (|:| |basis| (|List| *3))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2 *2 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 "failed") *2 *2 (|Symbol|)))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|PureAlgebraicIntegration| *5 *2 *6))
   (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|PureAlgebraicIntegration| *5 *3 *6))
       (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3)))
       (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3 *4 *3)
  (AND (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3)))
       (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |answer| (|Fraction| *6))
                             (|:| |logpart| (|Fraction| *6))
                             (|:| |specpart| (|Fraction| *6))
                             (|:| |polypart| *6)))
       (|isDomain| *1 (|TranscendentalHermiteIntegration| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| *5)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |answer| (|Fraction| *5))
                             (|:| |logpart| (|Fraction| *5))
                             (|:| |specpart| (|Fraction| *5))
                             (|:| |polypart| *5)))
       (|isDomain| *1 (|TranscendentalHermiteIntegration| *6 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|CRApackage| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7)
                              (|:| |basisInv| (|Matrix| *7)))))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7)
                             (|:| |basisInv| (|Matrix| *7))))
       (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *6 *7 *8))))
 ((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6)
  (AND (|isDomain| *5 (|Kernel| *4))
       (|isDomain| *6 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1="failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4 *5 *5 *5 *4 *6 *4)
  (AND (|isDomain| *5 (|Kernel| *4))
       (|isDomain| *6 (|Fraction| (|SparseUnivariatePolynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1#))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|IntegrationResult| *5)) (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|GenusZeroIntegration| *4 *5 *6))
       (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *2 *2 *3 *3 *4 *2 *5)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 #1="failed") *2 *2 (|Symbol|)))
   (|isDomain| *5 (|SparseUnivariatePolynomial| *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7))
   (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *2 *2 *3 *3 *4 *3 *2 *5 *2)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 #1#) *2 *2 (|Symbol|)))
   (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7))
   (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4 *3 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *3 *4 *4 *4 *3 *5 *3)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerFactorizationPackage| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|ElementaryIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *3)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeff| *3)))
   (|isDomain| *1 (|ElementaryIntegration| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| (|List| *3)))
   (|isDomain| *1 (|DenominatorIntegration| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|LiouvillianFunctionCategory|)
                         (|SpecialFunctionCategory|) (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *4 (|Kernel| *7)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|) (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |logpart|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |ir|
                         (|IntegrationResult|
                          (|Fraction| (|SparseUnivariatePolynomial| *7))))))
       (|isDomain| *1 (|DenominatorIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *4 (|Kernel| *7)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|) (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |logpart|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |ir|
                         (|IntegrationResult|
                          (|Fraction| (|SparseUnivariatePolynomial| *7))))))
       (|isDomain| *1 (|DenominatorIntegration| *6 *7))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Kernel| *8))
       (|isDomain| *4
                   (|Mapping| (|SparseUnivariatePolynomial| *8)
                              (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *8)) (|Matrix| *8)))
       (|isDomain| *6 (|List| *8))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *8)
                              (|:| |coeffs| (|Vector| *8)))))
       (|isDomain| *1 (|AlgebraicIntegration| *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|SparseUnivariatePolynomial| *7)
                          (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
   (|isDomain| *5 (|List| *8))
   (|ofCategory| *7 (|Join| (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|ofCategory| *8
                 (|FunctionFieldCategory| *7 (|SparseUnivariatePolynomial| *7)
                                          (|SparseUnivariatePolynomial|
                                           (|Fraction|
                                            (|SparseUnivariatePolynomial|
                                             *7)))))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *8) (|:| |coeffs| (|Vector| *7)))))
   (|isDomain| *1 (|AlgebraicIntegrate2| *6 *7 *8))))) 
(((*1 *2 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Kernel| *10))
       (|isDomain| *4
                   (|Mapping| (|SparseUnivariatePolynomial| *10)
                              (|SparseUnivariatePolynomial| *10)))
       (|isDomain| *5
                   (|Mapping|
                    (|List|
                     (|Record|
                      (|:| |ratpart|
                           (|Fraction| (|SparseUnivariatePolynomial| *10)))
                      (|:| |coeffs| (|Vector| *10))))
                    (|List| (|Fraction| (|SparseUnivariatePolynomial| *10)))))
       (|isDomain| *6
                   (|Mapping|
                    (|List|
                     (|Record|
                      (|:| |ratpart|
                           (|Fraction| (|SparseUnivariatePolynomial| *10)))
                      (|:| |coeffs| (|Vector| *10))))
                    (|Fraction| (|SparseUnivariatePolynomial| *10))
                    (|List| (|Fraction| (|SparseUnivariatePolynomial| *10)))))
       (|isDomain| *7 (|Mapping| (|List| (|Vector| *10)) (|Matrix| *10)))
       (|isDomain| *8 (|List| *10))
       (|ofCategory| *10
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *9)))
       (|ofCategory| *9 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *10)
                              (|:| |coeffs| (|Vector| *10)))))
       (|isDomain| *1 (|AlgebraicIntegration| *9 *10))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND
   (|isDomain| *3
               (|Mapping| (|SparseUnivariatePolynomial| *9)
                          (|SparseUnivariatePolynomial| *9)))
   (|isDomain| *4
               (|Mapping|
                (|List|
                 (|Record|
                  (|:| |ratpart|
                       (|Fraction| (|SparseUnivariatePolynomial| *9)))
                  (|:| |coeffs| (|Vector| *9))))
                (|List| (|Fraction| (|SparseUnivariatePolynomial| *9)))))
   (|isDomain| *5
               (|Mapping|
                (|List|
                 (|Record|
                  (|:| |ratpart|
                       (|Fraction| (|SparseUnivariatePolynomial| *9)))
                  (|:| |coeffs| (|Vector| *9))))
                (|Fraction| (|SparseUnivariatePolynomial| *9))
                (|List| (|Fraction| (|SparseUnivariatePolynomial| *9)))))
   (|isDomain| *6 (|Mapping| (|List| (|Vector| *9)) (|Matrix| *9)))
   (|isDomain| *7 (|List| *10))
   (|ofCategory| *9 (|Join| (|AlgebraicallyClosedField|) (|FunctionSpace| *8)))
   (|ofCategory| *10
                 (|FunctionFieldCategory| *9 (|SparseUnivariatePolynomial| *9)
                                          (|SparseUnivariatePolynomial|
                                           (|Fraction|
                                            (|SparseUnivariatePolynomial|
                                             *9)))))
   (|ofCategory| *8
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *10) (|:| |coeffs| (|Vector| *9)))))
   (|isDomain| *1 (|AlgebraicIntegrate2| *8 *9 *10))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *7 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegrate| *5 *6 *7 *8 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *7 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegrate| *5 *6 *7 *8 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5
                   (|Mapping| (|SparseUnivariatePolynomial| *3)
                              (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegration| *6 *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *3 *2 *4)
  (|partial| AND
   (|isDomain| *4 (|Mapping| (|Union| (|Integer|) #1="failed") *5))
   (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *5 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4 *2 *5)
  (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) #1#) *4))
   (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) #1#) *4))
   (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|GenExEuclid| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|GeneralHenselPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofType| *4 *3)
       (|ofType| *5 (|Mapping| *3 *3 (|NonNegativeInteger|)))
       (|isDomain| *1 (|InnerModularGcd| *3 *2 *4 *5))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|InnerModularGcd| *4 *2 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|)) (|ofType| *5 *4)
       (|ofType| *6 (|Mapping| *4 *4 (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|InnerModularGcd| *4 *2 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|)) (|ofType| *5 *4)
       (|ofType| *6 (|Mapping| *4 *4 (|NonNegativeInteger|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *6))))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *7 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *6 *7 *5))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *4 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|InputForm|))
       (|isDomain| *1 (|InputFormFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|InputForm|)))
       (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|InputForm|))) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|DirectedGraph| *1))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|InputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|InputForm|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|InputForm|)))
       (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6))
       (|isDomain| *5
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *6))
                              (|SparseUnivariatePolynomial| *6)))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| *7) (|:| |outmult| (|Integer|))
                              (|:| |outvect| (|List| (|Matrix| *7))))))
       (|isDomain| *1 (|InnerNumericEigenPackage| *6 *7 *4))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericEigenPackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNumericEigenPackage| *4 *5 *6))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|isDomain| *1 (|IncrementingMaps| *3))
       (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|isDomain| *1 (|IncrementingMaps| *3))
       (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|OneDimensionalArray| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|SingleInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SingleInteger|))
       (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4 *4 *5 *6 *5 *6)
  (AND (|isDomain| *4 (|List| (|Integer|)))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|isDomain| *6 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *4 *5)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *8 *9)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4
                   (|List|
                    (|PrimitiveArray|
                     (|Fraction| (|Polynomial| (|Integer|))))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|isDomain| *6 (|NonNegativeInteger|)) (|isDomain| *8 (|Symbol|))
       (|isDomain| *9
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *7 (|U32Vector|))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |defects| (|Vector| (|Integer|)))
                              (|:| |cinds| (|Vector| (|Integer|)))
                              (|:| |rowlen| (|Integer|))
                              (|:| |offsetdata| (|Vector| (|Integer|)))
                              (|:| |expdata| (|SortedExponentVector|))
                              (|:| |coeffdata| (|PrimitiveArray| (|Integer|))))
                    "no_solution"))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|U32Vector|))
       (|isDomain| *7 (|Integer|)) (|isDomain| *8 (|Symbol|))
       (|isDomain| *2
                   (|Union|
                    (|Record|
                     (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                     (|:| |defects| (|Vector| (|Integer|)))
                     (|:| |cinds| (|Vector| (|Integer|))))
                    "no_solution"))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|ILogic|))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ILogic|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|ILogic|))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ILogic|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|FlexibleArray| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofType| *4 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FlexibleArray| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FlexibleArray| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FlexibleArray| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FlexibleArray| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|IndexedFlexibleArray| *2 *3))
       (|ofCategory| *2 (|Type|)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| (|Fraction| (|Polynomial| *4))
                                   (|SuchThat| (|Symbol|) (|Polynomial| *4))))
                     (|:| |geneigvec|
                          (|List|
                           (|Matrix| (|Fraction| (|Polynomial| *4))))))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                     (|:| |geneigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *5)))))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *4 (|SparseUnivariatePolynomial| *4)))
                     (|:| |geneigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *4)))))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| (|Fraction| (|Polynomial| *4))
                                   (|SuchThat| (|Symbol|) (|Polynomial| *4))))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Matrix| (|Fraction| (|Polynomial| *4))))))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *5)))))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *4 (|SparseUnivariatePolynomial| *4)))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *4)))))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Union| (|Fraction| (|Polynomial| *4))
                             (|SuchThat| (|Symbol|) (|Polynomial| *4)))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Union| *5 (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|List| (|Union| *4 (|SparseUnivariatePolynomial| *4))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND
   (|isDomain| *3
               (|Union| (|Fraction| (|Polynomial| *6))
                        (|SuchThat| (|Symbol|) (|Polynomial| *6))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *6)))))
   (|isDomain| *1 (|EigenPackage| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record|
                (|:| |eigval|
                     (|Union| (|Fraction| (|Polynomial| *5))
                              (|SuchThat| (|Symbol|) (|Polynomial| *5))))
                (|:| |eigmult| (|NonNegativeInteger|))
                (|:| |eigvec|
                     (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *1 (|EigenPackage| *5))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|Union| *6 (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *4 (|Matrix| *6)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|InnerEigenPackage| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record|
                (|:| |eigval| (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                (|:| |eigmult| (|NonNegativeInteger|))
                (|:| |eigvec|
                     (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))))
   (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|InnerEigenPackage| *5))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Union| (|Fraction| (|Polynomial| *5))
                        (|SuchThat| (|Symbol|) (|Polynomial| *5))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *1 (|EigenPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Union| *5 (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Comparable|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Record| (|:| |k| *4) (|:| |c| *3)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|PolynomialIdeal| (|Fraction| (|Integer|))
                                   (|DirectProduct| (|#| *4)
                                                    (|NonNegativeInteger|))
                                   (|OrderedVariableList| *4)
                                   (|DistributedMultivariatePolynomial| *4
                                                                        (|Fraction|
                                                                         (|Integer|))))))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *3)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *3)
                                  (|DistributedMultivariatePolynomial| *3
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|IdealDecompositionPackage| *3))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |mval| (|Matrix| *4))
                             (|:| |invmval| (|Matrix| *4))
                             (|:| |genIdeal| (|PolynomialIdeal| *4 *5 *6 *7))))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mval| (|Matrix| *3))
                         (|:| |invmval| (|Matrix| *3))
                         (|:| |genIdeal| (|PolynomialIdeal| *3 *4 *5 *6))))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
   (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6))
       (|ofCategory| *6 (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *6 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Polynomial| *4))
                               (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Database| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| (*2 $))
                              (SIGNATURE |fullDisplay| (*2 $)))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| (*2 $))
                              (SIGNATURE |fullDisplay| (*2 $)))))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *7 (|Ring|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *4 *7))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *8))
   (|isDomain| *4 (|Matrix| (|SparseUnivariatePolynomial| *8)))
   (|ofCategory| *5 (|Ring|)) (|ofCategory| *8 (|Ring|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|Matrix| *6))
   (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *7 *8))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *7))
   (|isDomain| *4 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *7 (|Ring|))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *7))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *7 (|Ring|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *7 (|Ring|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *4 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| $) $)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *3 *3 *2 *4)
  (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6)
                         (|:| |basisInv| (|Matrix| *6))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6)
                          (|:| |basisInv| (|Matrix| *6)))))
   (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *5 *6 *7))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |flg| (|Union| "nil" "sqfr" "irred" "prime"))
                          (|:| |fctr| *3) (|:| |xpnt| (|Integer|)))))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *3 *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerAlgebraicNumber|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|HopfAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|Module| *2))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|))) (|isDomain| *1 (|Homology|))))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Homology|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|HeuGcd| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|Heap| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|DistributedMultivariatePolynomial| *3 *4))
       (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|ofType| *3 (|List| (|Symbol|)))
       (|isDomain| *1 (|GeneralDistributedMultivariatePolynomial| *3 *4 *5))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|HomogeneousDistributedMultivariatePolynomial| *3 *4))
       (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|HallBasis|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|HallBasis|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|HashState|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|HankelPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *5 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *5)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                     (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|AlgebraicNumber|)))
                           (|UnivariateFormalPowerSeries|
                            (|AlgebraicNumber|))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|AlgebraicNumber|) (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|AlgebraicNumber|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|AlgebraicNumber|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *4 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *4)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Integer|))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Integer|))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Integer|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Integer|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Polynomial| *4))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Polynomial| *4))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Polynomial| *4))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Polynomial| *4))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping|
                (|Record|
                 (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                 (|:| |guessStream|
                      (|Mapping|
                       (|Stream|
                        (|UnivariateFormalPowerSeries|
                         (|Fraction| (|Polynomial| (|Integer|)))))
                       (|UnivariateFormalPowerSeries|
                        (|Fraction| (|Polynomial| (|Integer|))))))
                 (|:| |guessModGen|
                      (|Mapping|
                       (|Mapping| (|Vector| (|U32Vector|))
                                  (|List| (|U32Vector|)) (|Integer|)
                                  (|Integer|))
                       (|NonNegativeInteger|)))
                 (|:| |testGen|
                      (|Mapping|
                       (|Mapping|
                        (|Vector|
                         (|UnivariateFormalPowerSeries|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))))
                        (|UnivariateFormalPowerSeries|
                         (|SparseMultivariatePolynomial|
                          (|Fraction| (|Polynomial| (|Integer|)))
                          (|NonNegativeInteger|))))
                       (|List| (|PositiveInteger|))))
                 (|:| |exprStream|
                      (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                 (|Expression| (|Integer|)) (|Symbol|)))
                 (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                 (|:| A
                      (|Mapping| (|Polynomial| (|Integer|))
                                 (|NonNegativeInteger|) (|NonNegativeInteger|)
                                 (|SparseUnivariatePolynomial|
                                  (|Polynomial| (|Integer|)))))
                 (|:| AF
                      (|Mapping|
                       (|SparseMultivariatePolynomial|
                        (|Fraction| (|Polynomial| (|Integer|)))
                        (|NonNegativeInteger|))
                       (|NonNegativeInteger|) (|NonNegativeInteger|)
                       (|UnivariateFormalPowerSeries|
                        (|SparseMultivariatePolynomial|
                         (|Fraction| (|Polynomial| (|Integer|)))
                         (|NonNegativeInteger|)))))
                 (|:| AX
                      (|Mapping| (|Expression| (|Integer|))
                                 (|NonNegativeInteger|) (|Symbol|)
                                 (|Expression| (|Integer|))))
                 (|:| C
                      (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|))))
                (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *5 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *5)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                     (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|AlgebraicNumber|)))
                           (|UnivariateFormalPowerSeries|
                            (|AlgebraicNumber|))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|AlgebraicNumber|) (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|AlgebraicNumber|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|AlgebraicNumber|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *4 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *4)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Integer|))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Integer|))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Integer|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Integer|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Polynomial| *4))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Polynomial| *4))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Polynomial| *4))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Polynomial| *4))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping|
                (|Record|
                 (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                 (|:| |guessStream|
                      (|Mapping|
                       (|Stream|
                        (|UnivariateFormalPowerSeries|
                         (|Fraction| (|Polynomial| (|Integer|)))))
                       (|UnivariateFormalPowerSeries|
                        (|Fraction| (|Polynomial| (|Integer|))))))
                 (|:| |guessModGen|
                      (|Mapping|
                       (|Mapping| (|Vector| (|U32Vector|))
                                  (|List| (|U32Vector|)) (|Integer|)
                                  (|Integer|))
                       (|NonNegativeInteger|)))
                 (|:| |testGen|
                      (|Mapping|
                       (|Mapping|
                        (|Vector|
                         (|UnivariateFormalPowerSeries|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))))
                        (|UnivariateFormalPowerSeries|
                         (|SparseMultivariatePolynomial|
                          (|Fraction| (|Polynomial| (|Integer|)))
                          (|NonNegativeInteger|))))
                       (|List| (|PositiveInteger|))))
                 (|:| |exprStream|
                      (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                 (|Expression| (|Integer|)) (|Symbol|)))
                 (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                 (|:| A
                      (|Mapping| (|Polynomial| (|Integer|))
                                 (|NonNegativeInteger|) (|NonNegativeInteger|)
                                 (|SparseUnivariatePolynomial|
                                  (|Polynomial| (|Integer|)))))
                 (|:| AF
                      (|Mapping|
                       (|SparseMultivariatePolynomial|
                        (|Fraction| (|Polynomial| (|Integer|)))
                        (|NonNegativeInteger|))
                       (|NonNegativeInteger|) (|NonNegativeInteger|)
                       (|UnivariateFormalPowerSeries|
                        (|SparseMultivariatePolynomial|
                         (|Fraction| (|Polynomial| (|Integer|)))
                         (|NonNegativeInteger|)))))
                 (|:| AX
                      (|Mapping| (|Expression| (|Integer|))
                                 (|NonNegativeInteger|) (|Symbol|)
                                 (|Expression| (|Integer|))))
                 (|:| C
                      (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|))))
                (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *5))
                          (|UnivariateFormalPowerSeries| *5)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *5
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *5
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *7) *7 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *6 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *6)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *5
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *5
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *7 (|NonNegativeInteger|) (|Symbol|) *7))
                    (|:| C (|Mapping| (|List| *6) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *5))
                          (|UnivariateFormalPowerSeries| *5)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *5
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *5
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *5
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *5
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *5))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *5)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *5))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *5))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *5) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *5))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *5))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *5))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *5))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|GuessOption|)))
   (|isDomain| *2
               (|Record| (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                         (|:| |guessStream|
                              (|Mapping|
                               (|Stream|
                                (|UnivariateFormalPowerSeries|
                                 (|Fraction| (|Polynomial| (|Integer|)))))
                               (|UnivariateFormalPowerSeries|
                                (|Fraction| (|Polynomial| (|Integer|))))))
                         (|:| |guessModGen|
                              (|Mapping|
                               (|Mapping| (|Vector| (|U32Vector|))
                                          (|List| (|U32Vector|)) (|Integer|)
                                          (|Integer|))
                               (|NonNegativeInteger|)))
                         (|:| |testGen|
                              (|Mapping|
                               (|Mapping|
                                (|Vector|
                                 (|UnivariateFormalPowerSeries|
                                  (|SparseMultivariatePolynomial|
                                   (|Fraction| (|Polynomial| (|Integer|)))
                                   (|NonNegativeInteger|))))
                                (|UnivariateFormalPowerSeries|
                                 (|SparseMultivariatePolynomial|
                                  (|Fraction| (|Polynomial| (|Integer|)))
                                  (|NonNegativeInteger|))))
                               (|List| (|PositiveInteger|))))
                         (|:| |exprStream|
                              (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                         (|Expression| (|Integer|))
                                         (|Symbol|)))
                         (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                         (|:| A
                              (|Mapping| (|Polynomial| (|Integer|))
                                         (|NonNegativeInteger|)
                                         (|NonNegativeInteger|)
                                         (|SparseUnivariatePolynomial|
                                          (|Polynomial| (|Integer|)))))
                         (|:| AF
                              (|Mapping|
                               (|SparseMultivariatePolynomial|
                                (|Fraction| (|Polynomial| (|Integer|)))
                                (|NonNegativeInteger|))
                               (|NonNegativeInteger|) (|NonNegativeInteger|)
                               (|UnivariateFormalPowerSeries|
                                (|SparseMultivariatePolynomial|
                                 (|Fraction| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|)))))
                         (|:| AX
                              (|Mapping| (|Expression| (|Integer|))
                                         (|NonNegativeInteger|) (|Symbol|)
                                         (|Expression| (|Integer|))))
                         (|:| C
                              (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                         (|NonNegativeInteger|)))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4)))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|GuessOption|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| *8) (|List| *6) (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6))
   (|ofCategory| *6 (|Field|)) (|ofType| *9 (|Mapping| *6 *8))
   (|ofType| *10 (|Mapping| *8 *6)) (|isDomain| *2 (|List| *8))
   (|isDomain| *1 (|Guess| *6 *7 *8 *9 *10)) (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8
                 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                         (|RetractableTo| (|Symbol|))
                         (|RetractableTo| (|Integer|))
                         (|CombinatorialOpsCategory|)
                         (|PartialDifferentialRing| (|Symbol|))
                         (CATEGORY |domain| (SIGNATURE * ($ $ $))
                          (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                          (SIGNATURE |numerator| ($ $))
                          (SIGNATURE |denominator| ($ $))
                          (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| *9) (|List| *7) (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|Field|))
   (|ofType| *10 (|Mapping| *7 *9)) (|ofType| *11 (|Mapping| *9 *7))
   (|isDomain| *2 (|List| *9)) (|isDomain| *1 (|Guess| *7 *8 *9 *10 *11))
   (|ofCategory| *8 (|GcdDomain|))
   (|ofCategory| *9
                 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                         (|RetractableTo| (|Symbol|))
                         (|RetractableTo| (|Integer|))
                         (|CombinatorialOpsCategory|)
                         (|PartialDifferentialRing| (|Symbol|))
                         (CATEGORY |domain| (SIGNATURE * ($ $ $))
                          (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                          (SIGNATURE |numerator| ($ $))
                          (SIGNATURE |denominator| ($ $))
                          (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|AlgebraicNumber|))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|AlgebraicNumber|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|AlgebraicNumber|))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|AlgebraicNumber|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *6)
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6))
   (|ofCategory| *6
                 (|Join| (|FiniteFieldCategory|)
                         (|ConvertibleTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessFinite| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *7)
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *7
                 (|Join| (|FiniteFieldCategory|)
                         (|ConvertibleTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessFinite| *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Integer|)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Integer|)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| *6)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *6))))
   (|ofCategory| *6 (|Ring|))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomial| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| *7)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *7))))
   (|ofCategory| *7 (|Ring|))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomial| *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| (|Integer|))))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| (|Integer|))))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| (|Expression| (|Integer|))))
       (|isDomain| *2 (|Polynomial| *4))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessFiniteFunctions| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessFiniteFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))))) 
(((*1 *1) (|isDomain| *1 (|GroupPresentation|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|GroupPresentation|))))) 
(((*1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *4)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *1 (|DirectProductCategory| *3 *4))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Boolean|))
   (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|isDomain| *4 (|List| (|OrderedVariableList| *5)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |dpolys|
                         (|List| (|DistributedMultivariatePolynomial| *5 *6)))
                    (|:| |coords| (|List| (|Integer|)))))
       (|isDomain| *1 (|GroebnerSolve| *5 *6 *7))
       (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *3 (|List| (|OrderedVariableList| *4)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerSolve| *4 *5 *6)) (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|isDomain| *4 (|List| (|OrderedVariableList| *5)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|DistributedMultivariatePolynomial| *5 *6))))
       (|isDomain| *1 (|GroebnerSolve| *5 *6 *7))
       (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *1) (|isDomain| *1 (|GraphImage|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|))) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|Vector| (|Vector| (|Integer|))))
       (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Vector| (|Integer|))))
       (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SemiRing|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Mapping| *3))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *5 *3))
   (|isDomain| *1 (|GosperSummationMethod| *5 *3 *6 *7 *2))
   (|ofCategory| *2
                 (|Join| (|RetractableTo| (|Fraction| (|Integer|))) (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|DrawOptionFunctions1| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|GuessOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *2))
                   (|Record| (|:| |index| *5) (|:| |exponent| *2))))
       (|ofCategory| *2
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *2 (|OrderedVariableList| *3)))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5))
                   (|Record| (|:| |index| *2) (|:| |exponent| *5))))
       (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))) 
(((*1 *1 *2 *3 *4)
  (AND (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *4
                     (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *4))
                   (|Record| (|:| |index| *3) (|:| |exponent| *4))))
       (|isDomain| *1 (|GeneralModulePolynomial| *5 *2 *3 *4 *6 *7))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *4 (|OrderedVariableList| *5)))))) 
(((*1 *1 *2 *3 *1)
  (AND (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3
                     (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *3))
                   (|Record| (|:| |index| *5) (|:| |exponent| *3))))
       (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *3 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *3 (|OrderedVariableList| *4)))))) 
(((*1 *2 *3 *2 *4 *5)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *1 (|GeneralHenselPackage| *4 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *6 (|PositiveInteger|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *2 (|Record| (|:| |plist| (|List| *3)) (|:| |modulo| *5)))
       (|isDomain| *1 (|GeneralHenselPackage| *5 *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2 (|Stream| (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6)))
   (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *3)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *2 *4 *5))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Mapping| *5 *4 *4))
       (|ofCategory| *4 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GenExEuclid| *3 *5))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Vector| (|List| *3)))
   (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|GenExEuclid| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *5 (|List| *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|Vector| (|List| *6)))
   (|isDomain| *1 (|GenExEuclid| *4 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GenExEuclid| *5 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|String|))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1))))
   (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))
 ((*1 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record|
                (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
                (|:| |basis|
                     (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1))))
   (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))
 ((*1 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record|
                (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
                (|:| |basis|
                     (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Symbol|)))
       (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| (|Symbol|)))
       (|ofType| *7 (|Vector| (|Matrix| *4)))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| *2)) (|ofType| *7 (|Vector| (|Matrix| *4)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Symbol|)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| *2)) (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|GenericNonAssociativeAlgebra| *2 *3 *4 *5))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofType| *3 (|PositiveInteger|))
       (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|Vector| (|Matrix| *2)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *3)))))
 ((*1 *2)
  (AND (|isDomain| *2 (|List| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| (|Symbol|)))
       (|ofType| *7 (|Vector| (|Matrix| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|Join| (|GcdDomain|) (|canonicalUnitNormal|)))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Vector| *4))
                             (|:| |transform| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|GcdBasis| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Fraction| *4)))
       (|ofCategory| *4 (|Join| (|GcdDomain|) (|canonicalUnitNormal|)))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Vector| *4))
                             (|:| |transform| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|GcdBasis| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|GcdDomain|) (|canonicalUnitNormal|)))
       (|isDomain| *1 (|GcdBasis| *3))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |totdeg| (|NonNegativeInteger|)) (|:| |pol| *4)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *4 (|PolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |lcmfij| *7)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *4)
                         (|:| |polj| *4)))
   (|isDomain| *1 (|GroebnerInternalPackage| *6 *7 *8 *4))))) 
(((*1 *2 *3 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *7)
                         (|:| |polj| *7)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|Record| (|:| |lcmfij| *6)
                             (|:| |totdeg| (|NonNegativeInteger|))
                             (|:| |poli| *4) (|:| |polj| *4)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *4))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|Record| (|:| |lcmfij| *6)
                             (|:| |totdeg| (|NonNegativeInteger|))
                             (|:| |poli| *4) (|:| |polj| *4)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *4)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                          (|:| |polj| *6))))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |totdeg| (|NonNegativeInteger|))
                          (|:| |pol| *3))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |poly| *3) (|:| |mult| *5)))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *3))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *3)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                          (|:| |polj| *6))))
   (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|PolynomialCategory| *4 *3 *5))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5 *6))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *4)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                          (|:| |polj| *6))))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *5)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *3)
                          (|:| |polj| *3))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *4 *3 *5))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *4 *3 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *7)
                         (|:| |polj| *7)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *2))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|GaloisGroupUtilities| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *6))))) 
(((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4 *5)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4 *5 *6)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *2))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|Multiset| (|NonNegativeInteger|)))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Multiset| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *6
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Set| (|NonNegativeInteger|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |contp| (|Integer|))
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow| (|Integer|)))))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *2
                   (|Record| (|:| |contp| (|Integer|))
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow| (|Integer|)))))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |factors| (|List| *3))))
   (|isDomain| *1 (|GaloisGroupFactorizer| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |flg| (|Union| "nil" "sqfr" "irred" "prime"))
                          (|:| |fctr| *2) (|:| |xpnt| (|Integer|)))))
   (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|Factored| *2))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |contp| (|Integer|))
                         (|:| |factors|
                              (|List|
                               (|Record| (|:| |irr| *4)
                                         (|:| |pow| (|Integer|)))))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|Factored| *4))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranType|))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| *3)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FunctionSpaceReduce| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|FunctionSpaceReduce| *4 *3))
   (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceReduce| *5 *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|DoubleFloat|)))
       (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2)) (|ofCategory| *2 (|Finite|))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Record| (|:| |pos_Check?| (|Boolean|))
                             (|:| |atan_Flag|
                                  (|Union| "complex" "real: two sides"
                                           "real: left side" "real: right side"
                                           "just do it"))
                             (|:| |coeff_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6)
                                           #1="none"))
                             (|:| |inv_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6) #1#))
                             (|:| |zero_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6) #1#))
                             (|:| |log_x_replace| (|Boolean|))
                             (|:| |log_x_val| *6)))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *6 *7) (|Field|)
                             (|PowerSeriesCategory| *6 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *6))
       (|ofType| *12 (|Mapping| *6 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *5 *6 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *6 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *3 *2 *4 *5))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *4 (|Symbol|)) (|ofType| *5 *2)))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *5
                 (|Join| (|UnivariatePowerSeriesCategory| *2 *4) (|Field|)
                         (|PowerSeriesCategory| *2 *4
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *2))
   (|ofType| *9 (|Mapping| *2 *4))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *2 *4 *5 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *2 *4 (|SingletonAsOrderedSet|) *5
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *3 *4 *5 *4 *3)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| #1="complex" #2="real: two sides"
                            #3="real: left side" #4="real: right side"
                            #5="just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3 *6 *6 *6)
  (AND (|isDomain| *5 (|Union| #1# #2# #3# #4# #5#))
       (|isDomain| *6 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *7)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *8)))))
       (|ofCategory| *8 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *9
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *8) (|Field|)
                             (|PowerSeriesCategory| *3 *8
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *11 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *9)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *7 *3 *8 *9 *10 *11
                                                           *12 *13))
       (|ofCategory| *10 (|PartialTranscendentalFunctions| *9))
       (|ofCategory| *12
                     (|TaylorSeriesExpansion| *3 *8 (|SingletonAsOrderedSet|)
                                              *9 *11))
       (|ofType| *13 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| #6="complex" #7="real: two sides"
                            #8="real: left side" #9="real: right side"
                            #10="just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3 *6 *6 *6)
  (AND (|isDomain| *5 (|Union| #6# #7# #8# #9# #10#))
       (|isDomain| *6 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *8 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *9
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *8) (|Field|)
                             (|PowerSeriesCategory| *3 *8
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *11 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *13 (|Mapping| *3 *8))
       (|isDomain| *2
                   (|Union| (|:| |%series| *9)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *7 *3 *8 *9 *10 *11
                                                            *12 *13 *14))
       (|ofCategory| *10 (|PartialTranscendentalFunctions| *9))
       (|ofCategory| *12
                     (|TaylorSeriesExpansion| *3 *8 (|SingletonAsOrderedSet|)
                                              *9 *11))
       (|ofType| *14 (|Symbol|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union|
                    (|:| |%expansion| (|ExponentialExpansion| *5 *3 *6 *7))
                    (|:| |%problem|
                         (|Record| (|:| |func| (|String|))
                                   (|:| |prob| (|String|))))))
       (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *5 *3 *6 *7))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofType| *6 (|Symbol|)) (|ofType| *7 *3)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|))))
 ((*1 *1 *2 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |coef| (|Integer|)) (|:| |var| (|Kernel| *1))))
   (|ofCategory| *1 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Kernel| *1)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|List| (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|FactoredFunctionUtilities| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|FramedModule| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|RetractableTo| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6)) (|ofCategory| *6 (|FramedAlgebra| *4 *5))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofType| *7 *2)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|EuclideanDomain|))
       (|ofCategory| *3 (|QuotientFieldCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Vector| *2))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|QuotientFieldCategory| *5))
       (|ofCategory| *2 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6)))
       (|isDomain| *1 (|FractionalIdeal| *5 *6 *7 *2))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedAlgebra&| *3 *4 *5))
       (|ofCategory| *3 (|FramedAlgebra| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|FiniteGroupPackage| *3))
       (|ofCategory| *3 (|Join| (|Group|) (|Finite|)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| (|Integer|)))))
   (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |gen| *3) (|:| |exp| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |factor| *3) (|:| |exponent| (|Integer|)))))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Union| "nil" "sqfr" "irred" "prime"))
       (|isDomain| *1 (|Factored| *4)) (|ofCategory| *4 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|Union| "nil" "sqfr" "irred" "prime"))
       (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))
 ((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Bits|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|FieldOfPrimeCharacteristic|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |exponent| (|NonNegativeInteger|))
                              (|:| |center| *4) (|:| |num| *4))))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranPackage|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *5
               (|List|
                (|List|
                 (|Union| (|:| |array| (|List| *3)) (|:| |scalar| *3)))))
   (|isDomain| *6 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *4
               (|List| (|Union| (|:| |array| (|List| *3)) (|:| |scalar| *3))))
   (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranPackage|))))
 ((*1 *2 *3 *4 *5 *6 *3)
  (AND
   (|isDomain| *5
               (|List|
                (|List|
                 (|Union| (|:| |array| (|List| *3)) (|:| |scalar| *3)))))
   (|isDomain| *6 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *4
               (|List| (|Union| (|:| |array| (|List| *3)) (|:| |scalar| *3))))
   (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranPackage|))))
 ((*1 *2 *3 *4 *5 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|TheSymbolTable|))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SExpression|))
       (|isDomain| *1 (|FortranPackage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FileName|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Stack| (|String|)))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Stack| (|String|)))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |next| (|NonNegativeInteger|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FunctionGraph| *3))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lm| (|FreeMonoid| *3))
                         (|:| |mm| (|FreeMonoid| *3))
                         (|:| |rm| (|FreeMonoid| *3))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|isDomain| *1 (|FiniteMoebiusFunction| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|List| *5)))
       (|isDomain| *1 (|FloatingRealPackage| *5))
       (|ofCategory| *5 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|FloatingComplexPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *4 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|List| (|Complex| *5))))
   (|isDomain| *1 (|FloatingComplexPackage| *5))
   (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4))))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Equation|
                 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4))))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4)))))
       (|isDomain| *1 (|FloatingComplexPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Equation|
                (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4)))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *1 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|FiniteLattice| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofType| *3 (|FiniteBiCPO| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteLattice| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 (|FiniteBiCPO| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Vector| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *1 (|FileCategory| *2 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |value| *3)
                              (|:| |posX| (|NonNegativeInteger|))
                              (|:| |posY| (|NonNegativeInteger|)))))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |name| (|String|))
                              (|:| |arrType| (|NonNegativeInteger|))
                              (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|))
                              (|:| |xOffset| (|Integer|))
                              (|:| |yOffset| (|Integer|))
                              (|:| |map| (|List| (|NonNegativeInteger|))))))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Tree| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Tree| (|Integer|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Tree| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Tree| (|Integer|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1 *4 *4)
  (AND (|isDomain| *3 (|Scene| (|SCartesian| 2))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| *1))
       (|isDomain| *5 (|Boolean|)) (|ofCategory| *1 (|FiniteGraph| *6))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2
                     (|Join| (|FieldOfPrimeCharacteristic|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *4))
                              (SIGNATURE |lookup| ((|PositiveInteger|) $))
                              (SIGNATURE |basis|
                               ((|Vector| $) (|PositiveInteger|)))
                              (SIGNATURE |Frobenius| ($ $)))))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage2| *2 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| (|PrimeField| *3))
                           (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
   (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|ofType| *4 (|Union| (|SparseUnivariatePolynomial| *3) *2))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Matrix| (|PrimeField| *3)))
       (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4
        (|Union| (|SparseUnivariatePolynomial| *3)
                 (|Vector|
                  (|List|
                   (|Record| (|:| |value| *3)
                             (|:| |index| (|SingleInteger|)))))))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4
        (|Union| (|SparseUnivariatePolynomial| *3)
                 (|Vector|
                  (|List|
                   (|Record| (|:| |value| *3)
                             (|:| |index| (|SingleInteger|)))))))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factor| (|Integer|))
                              (|:| |exponent| (|Integer|)))))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Table| (|PositiveInteger|) (|NonNegativeInteger|)))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Union| "prime" "polynomial" "normal" "cyclic"))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *8))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|Mapping| *8 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *9))
       (|isDomain| *5 (|Vector| *9)) (|isDomain| *6 (|Vector| (|Integer|)))
       (|ofCategory| *8 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *9 (|AbelianMonoidRing| *8 *7))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *8 *9))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *9))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|FiniteAbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|ofCategory| *9
                     (|FiniteAbelianMonoidRing| (|Fraction| *7)
                                                (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussianFractions| *7 *8 *9))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|FractionFreeFastGaussian| *3 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *3 *4))))) 
(((*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Mapping| *2 (|NonNegativeInteger|) (|NonNegativeInteger|) *7))
   (|isDomain| *4 (|Vector| *7))
   (|isDomain| *6 (|Vector| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *7 (|AbelianMonoidRing| *2 *5))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
   (|isDomain| *1 (|FractionFreeFastGaussian| *2 *7))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *7))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Mapping| *6 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *6 *7))
       (|ofCategory| *7 (|AbelianMonoidRing| *6 (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2
                   (|Union| (|SparseUnivariatePolynomial| *4)
                            (|Vector|
                             (|List|
                              (|Record| (|:| |value| *4)
                                        (|:| |index| (|SingleInteger|)))))))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Matrix| *4))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Vector|
                    (|List|
                     (|Record| (|:| |value| *4)
                               (|:| |index| (|SingleInteger|))))))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroup| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroupExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroupExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionFieldCategory&| *4 *3 *5 *6))
       (|ofCategory| *4 (|FunctionFieldCategory| *3 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *5)) (|:| |den| *5)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5))
   (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4))
   (|ofCategory| *3 (|UniqueFactorizationDomain|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5))
   (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4))
   (|ofCategory| *3 (|UniqueFactorizationDomain|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2
                   (|Record| (|:| |num| *1) (|:| |den| *5) (|:| |derivden| *5)
                             (|:| |gd| *5)))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FunctionFieldCategory&| *4 *5 *6 *7))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| (|Polynomial| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *3 (|Finite|)) (|isDomain| *2 (|List| (|List| *3)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Complex| (|Float|))))
       (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Complex| (|Float|))))
       (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *2 *3)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *4 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *1 *2 *3 *3 *3 *4)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *4 *3 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *4 *3 *5))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *2 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *2 *4 *5))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5))
       (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Symbol|))) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FourierComponent| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |Null| "null") (|:| |Assignment| "assignment")
                        (|:| |Conditional| "conditional")
                        (|:| |Return| "return") (|:| |Block| "block")
                        (|:| |Comment| "comment") (|:| |Call| "call")
                        (|:| |For| "for") (|:| |While| "while")
                        (|:| |Repeat| "repeat") (|:| |Goto| "goto")
                        (|:| |Continue| "continue")
                        (|:| |ArrayAssignment| "arrayAssignment")
                        (|:| |Save| "save") (|:| |Stop| "stop")
                        (|:| |Common| "common") (|:| |Print| "print")))
   (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |nullBranch| "null")
                        (|:| |assignmentBranch|
                             (|Record| (|:| |var| (|Symbol|))
                                       (|:| |arrayIndex|
                                            (|List|
                                             (|Polynomial| (|Integer|))))
                                       (|:| |rand|
                                            (|Record|
                                             (|:| |ints2Floats?| (|Boolean|))
                                             (|:| |expr| (|OutputForm|))))))
                        (|:| |arrayAssignmentBranch|
                             (|Record| (|:| |var| (|Symbol|))
                                       (|:| |rand| (|OutputForm|))
                                       (|:| |ints2Floats?| (|Boolean|))))
                        (|:| |conditionalBranch|
                             (|Record| (|:| |switch| (|Switch|))
                                       (|:| |thenClause| (|FortranCode|))
                                       (|:| |elseClause| (|FortranCode|))))
                        (|:| |returnBranch|
                             (|Record| (|:| |empty?| (|Boolean|))
                                       (|:| |value|
                                            (|Record|
                                             (|:| |ints2Floats?| (|Boolean|))
                                             (|:| |expr| (|OutputForm|))))))
                        (|:| |blockBranch| (|List| (|FortranCode|)))
                        (|:| |commentBranch| (|List| (|String|)))
                        (|:| |callBranch| (|String|))
                        (|:| |forBranch|
                             (|Record|
                              (|:| |range|
                                   (|SegmentBinding|
                                    (|Polynomial| (|Integer|))))
                              (|:| |span| (|Polynomial| (|Integer|)))
                              (|:| |body| (|FortranCode|))))
                        (|:| |labelBranch| (|SingleInteger|))
                        (|:| |loopBranch|
                             (|Record| (|:| |switch| (|Switch|))
                                       (|:| |body| (|FortranCode|))))
                        (|:| |commonBranch|
                             (|Record| (|:| |name| (|Symbol|))
                                       (|:| |contents| (|List| (|Symbol|)))))
                        (|:| |printBranch| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Finite|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
   (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|FreeAbelianMonoidCategory| *4 *2))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|CancellationAbelianMonoid|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|CancellationAbelianMonoid|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|CancellationAbelianMonoid|))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial|
                (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|FakePolynomial|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|FakePolynomial|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *2 *6))
       (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|Ring|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *1 (|FactoringUtilities| *6 *7 *8 *9))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *3 *3 *4 *5 *4 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *4 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *7 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *8 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|ofCategory| *2 (|FunctionSpace| *5))
       (|isDomain| *1 (|ExpressionSolve| *5 *2 *6 *7))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *7
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *2)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|EuclideanDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1 *1)
  (|partial| AND (|isDomain| *2 (|Record| (|:| |coef1| *1) (|:| |coef2| *1)))
   (|ofCategory| *1 (|EuclideanDomain|))))
 ((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                         (|:| |generator| *1)))
   (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))
 ((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Kernel| *1))
   (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|List| (|Kernel| *1)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Kernel| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|List| (|Kernel| *1)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Kernel| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|List| (|BasicOperator|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|RetractableTo| (|Integer|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *5))
       (|isDomain| *1 (|AlgebraicFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *1)) (|ofCategory| *1 (|Ring|))
       (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Exit|)) (|isDomain| *1 (|ErrorFunctions|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|CommuteUnivariatePolynomialCategory| *3 *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *3))) (|isDomain| *1 (|Equation| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |unit| *1) (|:| |canonical| *1)
                         (|:| |associate| *1)))
   (|ofCategory| *1 (|EntireRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|EntireRing|)))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| *5))
   (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ExpressionLinearSolve| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|List| (|Stream| *4)))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *4 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |vec| (|Vector| (|Fraction| (|Integer|))))
                            (|:| |func| *5) (|:| |fail| (|Boolean|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Kernel| *2)))
   (|isDomain| *4 (|Symbol|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *2))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |funcs| (|List| *6))
                             (|:| |kers| (|List| (|Kernel| *6)))
                             (|:| |vals| (|List| *6))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *6))))) 
(((*1 *2 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *4 (|OrderedAbelianMonoid|))
   (|isDomain| *1
               (|ElementaryFunctionsGeneralizedUnivariatePowerSeries| *3 *4
                                                                      *2))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *3 *4)
                         (CATEGORY |domain| (SIGNATURE |removeZeros| ($ $ *4))
                          (SIGNATURE |apply_taylor| ($ (|Stream| *3) $)))))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseMultivariatePolynomial| *4 (|Kernel| *5))))
   (|ofCategory| *4 (|Join| (|GcdDomain|) (|Comparable|)))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseMultivariatePolynomial| *4 (|Kernel| *5)))))
   (|isDomain| *1 (|ExpressionFactorPolynomial| *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *3))
       (|ofCategory| *3 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))) 
(((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|List| (|Record| (|:| |func| *2) (|:| |pole| (|Boolean|)))))
   (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))
   (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|ElementaryFunction| *4 *2))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|DifferentialRing|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|isDomain| *4 (|UnivariatePolynomial| *6 *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofType| *6 (|Symbol|))
       (|isDomain| *2 (|ContinuedFraction| (|UnivariatePolynomial| *6 *5)))
       (|isDomain| *1 (|DistributionContinuedFractionPackage| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|isDomain| *4 (|UnivariatePolynomial| *6 (|Fraction| *5)))
       (|ofCategory| *5 (|IntegralDomain|)) (|not| (|ofCategory| *5 (|Field|)))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofType| *6 (|Symbol|))
       (|isDomain| *2
                   (|ContinuedFraction|
                    (|UnivariatePolynomial| *6 (|Fraction| *5))))
       (|isDomain| *1 (|DistributionContinuedFractionPackage| *5 *6))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Plot|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|ParametricSurface| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|ParametricSurface| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|TwoDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|TwoDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|DoubleFloat|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|DoubleFloat|))) (|isDomain| *5 (|Boolean|))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|ParametricSurface| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|ParametricSurface| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *3
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|DifferentialVariableCategory| *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3 *3 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|DiscreteLogarithmPackage| *3))
   (|ofCategory| *3
                 (|Join| (|Monoid|) (|Finite|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Integer|))))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|DistributionFunctions2| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|isDomain| *2 (|Distribution| *6))
       (|isDomain| *1 (|DistributionFunctions2| *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Sequence| *2))
       (|isDomain| *1 (|Distribution| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|)) (|not| (|ofCategory| *3 (|Field|)))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| (|Fraction| *3)))
                             (|:| |bn| (|Stream| (|Fraction| *3)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| *3))
                             (|:| |bn| (|Stream| *3))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|)) (|not| (|ofCategory| *3 (|Field|)))
       (|isDomain| *2
                   (|Stream| (|SparseUnivariatePolynomial| (|Fraction| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Stream| (|SparseUnivariatePolynomial| *3)))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|DirichletRing| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Polynomial| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |varOrder| (|List| (|Symbol|)))
                             (|:| |inhom|
                                  (|Union|
                                   (|List| (|Vector| (|NonNegativeInteger|)))
                                   "failed"))
                             (|:| |hom|
                                  (|List| (|Vector| (|NonNegativeInteger|))))))
       (|isDomain| *1 (|DiophantineSolutionPackage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|DictionaryOperations| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|DictionaryOperations| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|IntegerMod| *3))
       (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|IntegerMod| 2))
       (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ComplexDoubleFloatVector|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DoubleFloatVector|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DoubleFloat|))))) 
(((*1 *2 *3 *4 *5 *5 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|Polynomial| *6))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *7))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *7
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|isDomain| *1 (|DefiniteIntegrationTools| *6 *7))))
 ((*1 *2 *3 *4 *4 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
   (|isDomain| *4 (|OrderedCompletion| *6))
   (|ofCategory| *6
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|DefiniteIntegrationTools| *5 *6))))) 
(((*1 *2 *3 *4 *2 *2 *5)
  (|partial| AND (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *3 (|Kernel| *4)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *4
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|DefiniteIntegrationTools| *6 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DefiniteIntegrationTools| *4 *5))
       (|ofCategory| *5
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *4)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *3))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Dequeue| *3))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|DeltaComplex| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|List| (|List| (|Integer|)))))
       (|ofCategory| *5 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *5))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|DeltaComplex| *4)) (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *3))
       (|isDomain| *6 (|Boolean|))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| "failed")
                            (|:| |pole| "potentialPole")))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *7 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |deg| (|NonNegativeInteger|))
                              (|:| |prod| *3))))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Record| (|:| |cont| *5)
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow| (|Integer|)))))))
       (|isDomain| *1 (|DistinctDegreeFactorize| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|DoubleResultantPackage| *5 *2 *6 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *2 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *1 (|CyclotomicPolynomialPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *1 (|CyclotomicPolynomialPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Matrix| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|List| (|Integer|)))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Segment| (|Integer|)))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|CubicalFacet|)))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|CubicalFacet|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|CyclicStreamTools| *3 *2))
       (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CyclicStreamTools| *4 *3))
       (|ofCategory| *3 (|LazyStreamAggregate| *4))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Type|))
   (|isDomain| *1 (|CyclicStreamTools| *3 *2))
   (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|Record| (|:| |start| *3) (|:| |factors| (|Factored| *3))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| *4))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *2)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factors| (|List| *3)) (|:| |error| *5))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *5)))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factors| (|List| *3)) (|:| |error| *4))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootPackage| *3 *4))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory| (|Complex| (|Integer|))))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *2))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Fraction| *3)))
       (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Fraction| *3)))
       (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Lambda| (|Typed|)))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|ILogic|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|RealNumberSystem|))
       (|ofCategory| *3 (|TranscendentalFunctionCategory|))
       (|isDomain| *2 (|Record| (|:| |r| *3) (|:| |phi| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|Comparable|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Commutator|)))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Commutator|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1) (|ofCategory| *1 (|CombinatorialOpsCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|CombinatorialOpsCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))
       (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))))) 
(((*1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ChainComplex|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|CoChainComplex| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Coalgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Coalgebra| *2 *3)) (|ofCategory| *3 (|Module| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Plot|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Vector| *6)))
       (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |transform| (|Matrix| *6))
                             (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Vector| *4)) (|isDomain| *5 (|List| (|Mapping| *4 *4)))
       (|ofCategory| *4 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *4) #1="failed"))
                    (|:| |basis| (|List| (|Vector| *4)))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
       (|isDomain| *5 (|List| (|Mapping| *7 *7)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *7) #1#))
                             (|:| |basis| (|List| (|Vector| *7)))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *7))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|Vector| *3))
   (|isDomain| *4 (|List| (|Mapping| *3 *3)))
   (|ofCategory| *3 (|FunctionSpace| *5))
   (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *5 *3))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *2 (|Vector| *6)) (|isDomain| *3 (|Matrix| *6))
   (|isDomain| *4 (|List| (|Mapping| *6 *6)))
   (|ofCategory| *6 (|FunctionSpace| *5))
   (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Vector| *5))
   (|isDomain| *3 (|List| (|Mapping| *5 *5)))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5)) (|ofType| *3 *2)
       (|ofCategory| *4 (|Field|)) (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Mapping| (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *2 (|Matrix| (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
   (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
   (|ofType| *6 (|SquareMatrix| *4 *5))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Mapping| (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *2 (|Matrix| (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
   (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
   (|ofType| *6 (|SquareMatrix| *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofType| *6 (|SquareMatrix| *4 *5))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
   (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |IDe| (|JetDifferentialEquation| *4 *5))
                             (|:| |ISys| (|List| *5))
                             (|:| |Order| (|NonNegativeInteger|))
                             (|:| |NumProj| (|NonNegativeInteger|))
                             (|:| |Dim| (|NonNegativeInteger|))
                             (|:| |CarChar| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CartanKuranishi| *5 *6))
       (|ofCategory| *6 (|JetBundleFunctionCategory| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartanKuranishi| *6 *7))
       (|ofCategory| *7 (|JetBundleFunctionCategory| *6))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartanKuranishi| *6 *7))
       (|ofCategory| *7 (|JetBundleFunctionCategory| *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |func| *3) (|:| |poly| *3)
                             (|:| |c1| (|Fraction| *5))
                             (|:| |c2| (|Fraction| *5))
                             (|:| |deg| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|isDomain| *2
                   (|Record| (|:| |func| (|List| *4)) (|:| |poly| *4)
                             (|:| |c1| (|Fraction| *6))
                             (|:| |c2| (|Fraction| *6))
                             (|:| |deg| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ChangeOfVariable| *5 *6 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|isDomain| *1 (|ChangeOfVariable| *2 *5 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *3 (|Fraction| *6))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| (|Fraction| *6)) (|:| |radicand| *6)))
       (|isDomain| *1 (|ChangeOfVariable| *5 *6 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2
               (|Record| (|:| |radicand| (|Fraction| *5))
                         (|:| |deg| (|NonNegativeInteger|))))
   (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Record| (|:| |coef| (|Fraction| *5)) (|:| |poly| *3)))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Character|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|ChainComplex|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))))
   (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Cell| *2))
   (|ofCategory| *2 (|RealClosedField|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|Cell| *3)) (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Character|)))
       (|isDomain| *1 (|CharacterClass|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|CharacterClass|))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|CartesianTensor| *5 *6 *7))
       (|ofType| *5 (|Integer|)) (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *7 (|CommutativeRing|))
       (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|CartesianTensor| *5 *6 *8))
       (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Cell| *5))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Cell| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Cell| *5)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|CachableSet|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|CancellationAbelianMonoid|)))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|BinaryTournament| *3))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|BinaryTreeCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|BinarySearchTree| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinarySearchTree| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *1 (|BasicOperatorFunctions1| *2))
   (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|List| (|Mapping| *4 (|List| *4))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|List| (|Mapping| *4 (|List| *4))))
   (|isDomain| *1 (|BasicOperatorFunctions1| *4))
   (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|None|))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *1) (|ofCategory| *1 (|BoundedMeetSemilattice|)))) 
(((*1 *1) (|ofCategory| *1 (|BoundedJoinSemilattice|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|BitStreamFrame|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Boolean|)))
       (|isDomain| *1 (|BitStreamFrame|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|BinaryFile|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *6 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *6 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *5 *6 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *2 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|BezoutMatrixWrapper| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|BezoutMatrixWrapper| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3 *3 *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|isDomain| *1 (|BalancedBinaryTree| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *2) *2 *2 *2))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|BalancedFactorisation| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Join| (|GcdDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|BalancedFactorisation| *5 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ArrayStack| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |minor| (|List| (|PositiveInteger|)))
                             (|:| |eq| *3)
                             (|:| |minors|
                                  (|List| (|List| (|PositiveInteger|))))
                             (|:| |ops| (|List| *3))))
       (|isDomain| *1 (|AssociatedEquations| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|AssociatedEquations| *4 *5))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *5))
                             (|:| |vec|
                                  (|Vector| (|List| (|PositiveInteger|))))))
       (|isDomain| *1 (|AssociatedEquations| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OneDimensionalArray| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|OneDimensionalArray| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|Segment| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|Segment| (|Integer|)))))) 
(((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *3 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *1))) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|ApplyRules| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|RewriteRule| *4 *5 *2)))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|ApplyRules| *4 *5 *2))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| (|RewriteRule| *5 *6 *2)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6
                     (|Join| (|Ring|) (|PatternMatchable| *5) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *5))))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *6) (|PatternMatchable| *5)
                             (|ConvertibleTo| (|Pattern| *5))))
       (|isDomain| *1 (|ApplyRules| *5 *6 *2))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|Any|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *5 *2))
       (|ofCategory| *2 (|FunctionSpace| *5))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *5
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *5
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *5
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 $)))))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 $)))))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|AlgebraicFunctionField| *4 *5 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofType| *7 *6)))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|AssociationListAggregate| *3 *4))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Type|))
   (|isDomain| *2 (|Record| (|:| |key| *3) (|:| |entry| *4)))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *2 (|FunctionSpace| *3))
       (|isDomain| *1 (|AlgebraicFunction| *3 *2))
       (|ofCategory| *3 (|RetractableTo| *4))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|AlgebraicFunction| *4 *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *4 *2))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *5 *2))))) 
(((*1 *1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|Segment| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2))
       (|ofCategory| *2 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))) 
((|opposite?| . 1993753) (|zerosOf| . 1992844) (|zeroOf| . 1992110)
 (|rootsOf| . 1991201) (|makeSketch| . 1990984) (|rootSum| . 1990467)
 (|inrootof| . 1990225) (|droot| . 1989977) (|iroot| . 1989718)
 (|size?| . 1989585) (|eq?| . 1989498) (|assoc| . 1989282)
 (|doublyTransitive?| . 1989119) (|knownInfBasis| . 1988775)
 (|rootSplit| . 1987768) (|ratDenom| . 1983656) (|ratPoly| . 1982592)
 (|rootFactor| . 1981357) (|rootPower| . 1980177) (|rootProduct| . 1978997)
 (|rootSimp| . 1977817) (|rootKerSimp| . 1976551) (|leftRank| . 1976336)
 (|rightRank| . 1976121) (|doubleRank| . 1975906) (|weakBiRank| . 1975691)
 (|biRank| . 1975476) (|basisOfCommutingElements| . 1975282)
 (|basisOfLeftAnnihilator| . 1975085) (|basisOfRightAnnihilator| . 1974888)
 (|basisOfLeftNucleus| . 1974694) (|basisOfRightNucleus| . 1974500)
 (|basisOfMiddleNucleus| . 1974306) (|basisOfNucleus| . 1974112)
 (|basisOfCenter| . 1973918) (|basisOfLeftNucloid| . 1973706)
 (|basisOfRightNucloid| . 1973494) (|basisOfCentroid| . 1973282)
 (|radicalOfLeftTraceForm| . 1973088) (|showTypeInOutput| . 1972978)
 (|obj| . 1972907) (|dom| . 1972829) (|objectOf| . 1972752)
 (|domainOf| . 1972675) (|any| . 1972560) (|applyRules| . 1971539)
 (|localUnquote| . 1971068) (|vertSplit| . 1970425) (|blockConcat| . 1970149)
 (|vertConcat| . 1969642) (|horizConcat| . 1969135) (|squareTop| . 1968896)
 (|swapColumns!| . 1968641) (|swapRows!| . 1968386) (|setsubMatrix!| . 1968128)
 (|setColumn!| . 1967873) (|colSlice| . 1967587) (|rowSlice| . 1967301)
 (|oneDimensionalArray| . 1967031) (|associatedSystem| . 1966609)
 (|uncouplingMatrices| . 1966342) (|associatedEquations| . 1965771)
 (|arrayStack| . 1965644) (|morphism| . 1965249)
 (|balancedFactorisation| . 1964724) (|mapDown!| . 1964407)
 (|mapUp!| . 1964092) (|setleaves!| . 1963954) (|balancedBinaryTree| . 1963798)
 (|sylvesterMatrix| . 1963278) (|subSylvesterMatrix| . 1962064)
 (|bezoutMatrix| . 1961544) (|subResultant| . 1960873)
 (|subResultantList| . 1960230) (|bezoutResultant| . 1959657)
 (|bezoutDiscriminant| . 1959090) (|inspect| . 1959001) (|extract!| . 1958912)
 (|position!| . 1958820) (|starts| . 1958633) (|_\|_| . 1958575) (T$ . 1958517)
 (|test| . 1958473) (|false| . 1958432) (|true| . 1958391)
 (|setProperties| . 1958267) (|setProperty| . 1958144) (|property| . 1958018)
 (|deleteProperty!| . 1957930) (|assert| . 1957842) (|has?| . 1957719)
 (|input| . 1957449) (|comparison| . 1957306) (|equality| . 1957163)
 (|nary?| . 1957077) (|unary?| . 1956991) (|nullary?| . 1956905)
 (|arity| . 1956795) (|properties| . 1956674) (|derivative| . 1956063)
 (|constantOperator| . 1955910) (|constantOpIfCan| . 1955755)
 (|setright!| . 1955598) (|setleft!| . 1955441)
 (|brillhartIrreducible?| . 1955120) (|brillhartTrials| . 1954769)
 (|noLinearFactor?| . 1954609) (|insertRoot!| . 1954502)
 (|binarySearchTree| . 1954370) (|nor| . 1954271) (|nand| . 1954172)
 (|node| . 1954057) (|binaryTournament| . 1953925) (|binaryTree| . 1953737)
 (|subtractIfCan| . 1953660) (|setPosition| . 1953528)
 (|cylindricalDecomposition| . 1953030) (|projectionSet| . 1952775)
 (|coefficientSet| . 1952520) (|discriminantSet| . 1952265)
 (|resultantSet| . 1952010) (|principalSubResultantSet| . 1951752)
 (|specialise| . 1951472) (|squareFreeBasis| . 1951244)
 (|generalizedContinuumHypothesisAssumed| . 1951157)
 (|generalizedContinuumHypothesisAssumed?| . 1951075) (|countable?| . 1950988)
 (|Aleph| . 1950883) (|unravel| . 1950671) (|ravel| . 1950459)
 (|leviCivitaSymbol| . 1950278) (|kroneckerDelta| . 1950097)
 (|reshape| . 1949720) (|alphanumeric| . 1949672) (|alphabetic| . 1949624)
 (|hexDigit| . 1949576) (|digit| . 1949528) (|charClass| . 1949339)
 (|simpleCells| . 1949166) (|projection| . 1949063) (|variablesOf| . 1948930)
 (|mainVariableOf| . 1948806) (|makeCell| . 1948467) (|setMult| . 1948379)
 (|getIntervals| . 1948266) (|cubicalFacet| . 1947897)
 (|chainComplex| . 1947785) (|alphanumeric?| . 1947705)
 (|lowerCase?| . 1947625) (|upperCase?| . 1947545) (|alphabetic?| . 1947465)
 (|hexDigit?| . 1947385) (|digit?| . 1947305) (|newline| . 1947262)
 (|escape| . 1947219) (|char| . 1947062) (|ord| . 1946982)
 (|mkIntegral| . 1946643) (|radPoly| . 1946247) (|rootPoly| . 1945748)
 (|goodPoint| . 1945450) (|chvar| . 1944360) (|setOutMode| . 1944143)
 (|setRedMode| . 1943926) (|stirling| . 1943703) (|alpha| . 1943428)
 (|hilbert| . 1943123) (|alphaHilbert| . 1942818) (|arbFunctions| . 1942461)
 (|gauge| . 1942104) (|gaugeHilbert| . 1941750) (|bound| . 1941527)
 (|complete2| . 1940871) (|removeDuplicates| . 1940700) (|find| . 1940554)
 (|setMode| . 1940307) (|conj| . 1940125) (|gradeInvolution| . 1939943)
 (|rc| . 1939758) (|lc| . 1939573) (|toTable| . 1938788)
 (|ePseudoscalar| . 1938609) (|eFromBinaryMap| . 1938381)
 (|multivector| . 1938164) (|ee| . 1937930) (|e| . 1937729)
 (|linearlyDependentOverConstants?| . 1937422)
 (|linearDependenceOverConstants| . 1937149)
 (|particularSolutionOverConstants| . 1936569)
 (|solveLinearOverConstants| . 1935633) (|nullSpaceOverConstants| . 1935315)
 (|constant_subspace| . 1934876) (|clipParametric| . 1934107)
 (|clipWithRanges| . 1933659) (|counit| . 1933520) (|coproduct| . 1933381)
 (|coboundary| . 1933197) (|validate| . 1932982) (|coChainComplex| . 1932823)
 (|numberOfHues| . 1932742) (|blue| . 1932703) (|green| . 1932664)
 (|yellow| . 1932625) (|red| . 1932586) (|iifact| . 1932400)
 (|iibinom| . 1932186) (|iiperm| . 1931972) (|iipow| . 1931758)
 (|iidsum| . 1931544) (|iidprod| . 1931330) (|ipow| . 1931116)
 (|factorial| . 1930741) (|multinomial| . 1930585)
 (|distinct_partition| . 1930460) (|permutation| . 1930076)
 (|stirling1| . 1929948) (|stirling2| . 1929820) (|catalan| . 1929695)
 (|summation| . 1929017) (|factorials| . 1928443) (|mkcomm| . 1928314)
 (|smaller?| . 1928226) (|polarCoordinates| . 1927948) (|complex| . 1927835)
 (|imaginary| . 1927728) (|writeCategory| . 1927571) (|writePackage| . 1927401)
 (|solid| . 1927293) (|solid?| . 1927188) (|denominators| . 1927048)
 (|numerators| . 1926908) (|convergents| . 1926748) (|approximants| . 1926588)
 (|reducedForm| . 1926478) (|partialQuotients| . 1926338)
 (|partialDenominators| . 1926198) (|partialNumerators| . 1926058)
 (|reducedContinuedFraction| . 1925915) (|polar| . 1925665)
 (|cylindrical| . 1925415) (|spherical| . 1925165) (|parabolic| . 1924915)
 (|parabolicCylindrical| . 1924665) (|paraboloidal| . 1924415)
 (|ellipticCylindrical| . 1924140) (|prolateSpheroidal| . 1923865)
 (|oblateSpheroidal| . 1923590) (|bipolar| . 1923315)
 (|bipolarCylindrical| . 1923040) (|toroidal| . 1922765) (|conical| . 1922487)
 (|modTree| . 1922353) (|multiEuclideanTree| . 1922219)
 (|complexZeros| . 1921426) (|divisorCascade| . 1920712) (|graeffe| . 1920503)
 (|pleskenSplit| . 1919965) (|reciprocalPolynomial| . 1919756)
 (|rootRadius| . 1919337) (|schwerpunkt| . 1919102) (|setErrorBound| . 1918893)
 (|startPolynomial| . 1918582) (|cycleElt| . 1918426)
 (|computeCycleLength| . 1918233) (|computeCycleEntry| . 1918083)
 (|addCube| . 1917930) (|cubicalComplex| . 1917185) (|coerceP| . 1916956)
 (|powerSum| . 1916789) (|elementary| . 1916622) (|alternating| . 1916455)
 (|cyclic| . 1916288) (|dihedral| . 1916121) (|cap| . 1915938)
 (|cup| . 1915803) (|wreath| . 1915668) (|SFunction| . 1915492)
 (|skewSFunction| . 1915313) (|cyclotomicDecomposition| . 1915131)
 (|cyclotomicFactorization| . 1914945) (|doubleResultant| . 1914599)
 (|distdfact| . 1914097) (|separateDegrees| . 1913750) (|exptMod| . 1913514)
 (|trace2PowMod| . 1913278) (|tracePowMod| . 1913042)
 (|irreducible?| . 1912830) (|decimal| . 1912721) (|innerint| . 1911758)
 (|faceMap| . 1911561) (|triangle| . 1911414) (|deltaComplex| . 1910701)
 (|circle| . 1910552) (|dequeue| . 1910428) (|exteriorDifferential| . 1910265)
 (|totalDifferential| . 1910061) (|homogeneous?| . 1909717)
 (|leadingBasisTerm| . 1909429) (|ignore?| . 1908878) (|computeInt| . 1908326)
 (|checkForZero| . 1907173) (|doubleFloatFormat| . 1907092) (|qsqrt| . 1907044)
 (|qlog| . 1906996) (|hypergeometric0F1| . 1906758) (|qnew| . 1906287)
 (|directedGraph| . 1904338) (|rotatez| . 1904167) (|rotatey| . 1903996)
 (|rotatex| . 1903825) (|exponentb| . 1903632) (|exponenta| . 1903439)
 (|expb| . 1903234) (|expa| . 1903028) (|dictionary| . 1902797)
 (|dioSolve| . 1902246) (|additive?| . 1902084) (|multiplicative?| . 1901922)
 (|zeta| . 1901837) (|newLine| . 1901756) (|copies| . 1901632)
 (|say| . 1901389) (|sayLength| . 1901140) (|monotoneConvolution| . 1901022)
 (|booleanConvolution| . 1900904) (|freeConvolution| . 1900786)
 (|classicalConvolution| . 1900668) (|orthogonalPolynomials| . 1900164)
 (|jacobiParameters| . 1899538) (|monotoneCumulants| . 1899322)
 (|hankelDeterminants| . 1899177) (|booleanCumulants| . 1899030)
 (|freeCumulants| . 1898883) (|classicalCumulants| . 1898736)
 (|moments| . 1898589) (|booleanCumulant| . 1898428) (|freeCumulant| . 1898267)
 (|classicalCumulant| . 1898106) (|moment| . 1897942)
 (|gaussianDistribution| . 1897787) (|poissonDistribution| . 1897632)
 (|wignerDistribution| . 1897477) (|freePoissonDistribution| . 1897322)
 (|bernoulliDistribution01| . 1897167) (|arcsineDistribution| . 1896950)
 (|distributionByMonotoneCumulants| . 1896542)
 (|booleanCumulantFromJacobi| . 1896364)
 (|distributionByJacobiParameters| . 1896088)
 (|distributionByBooleanCumulants| . 1895818)
 (|distributionByFreeCumulants| . 1895548)
 (|distributionByClassicalCumulants| . 1895278)
 (|distributionByEvenMoments| . 1895008) (|distributionByMoments| . 1894738)
 (|mapall| . 1894452) (|R1_to_R2_coercion| . 1894289) (|setnext!| . 1894135)
 (|setprevious!| . 1893981) (|next| . 1893876) (|previous| . 1893771)
 (|datalist| . 1893647) (|shanksDiscLogAlgorithm| . 1893345)
 (|separant| . 1893075) (|leader| . 1892805) (|isobaric?| . 1892500)
 (|weights| . 1891849) (|differentialVariables| . 1891544)
 (|extractBottom!| . 1891451) (|extractTop!| . 1891358)
 (|insertBottom!| . 1891262) (|insertTop!| . 1891166) (|recolor| . 1890808)
 (|makeObject| . 1883820) (|drawComplex| . 1883501)
 (|drawComplexVectorField| . 1883213) (|setRealSteps| . 1883131)
 (|setImagSteps| . 1883049) (|setClipValue| . 1882961) (|draw| . 1873535)
 (|option?| . 1873375) (|range| . 1873144) (|colorFunction| . 1872695)
 (|curveColor| . 1872537) (|pointColor| . 1872379) (|clip| . 1870643)
 (|clipBoolean| . 1870500) (|style| . 1870280) (|toScale| . 1870058)
 (|pointColorPalette| . 1869915) (|curveColorPalette| . 1869772)
 (|var1Steps| . 1869525) (|var2Steps| . 1869278) (|space| . 1868964)
 (|tubePoints| . 1868717) (|tubeRadius| . 1868499)
 (|JContinuedFraction| . 1867655) (|makeVariable| . 1866784) (|Nul| . 1866689)
 (|exponents| . 1866596) (|iisqrt2| . 1866387) (|iisqrt3| . 1866178)
 (|iiexp| . 1865966) (|iilog| . 1865754) (|iisin| . 1865542)
 (|iicos| . 1865330) (|iitan| . 1865118) (|iicot| . 1864906)
 (|iisec| . 1864694) (|iicsc| . 1864482) (|iiasin| . 1864270)
 (|iiacos| . 1864058) (|iiatan| . 1863846) (|iiacot| . 1863634)
 (|iiasec| . 1863422) (|iiacsc| . 1863210) (|iisinh| . 1862998)
 (|iicosh| . 1862786) (|iitanh| . 1862574) (|iicoth| . 1862362)
 (|iisech| . 1862150) (|iicsch| . 1861938) (|iiasinh| . 1861726)
 (|iiacosh| . 1861514) (|iiatanh| . 1861302) (|iiacoth| . 1861090)
 (|iiasech| . 1860878) (|iiacsch| . 1860666) (|specialTrigs| . 1860366)
 (|localReal?| . 1860126) (|poly_factor| . 1859653) (|do_quo| . 1859106)
 (|rischNormalize| . 1856888) (|realLiouvillian| . 1855888)
 (|realElementary| . 1854888) (|validExponential| . 1854335)
 (|rootNormalize| . 1853798) (|rmap| . 1853246) (|tanQ| . 1852698)
 (|irootDep| . 1851995) (|select!| . 1851633) (|delete!| . 1851320)
 (|sncndn| . 1851053) (|lin_sol| . 1850795) (|ellipticRC| . 1850555)
 (|ellipticRD| . 1850309) (|ellipticRF| . 1850063) (|ellipticRJ| . 1849811)
 (|qsetelt!| . 1849373) (|unit?| . 1849288) (|associates?| . 1849200)
 (|unitCanonical| . 1849151) (|unitNormal| . 1848963)
 (|factorAndSplit| . 1848795) (|rightOne| . 1848670) (|leftOne| . 1848545)
 (|rightZero| . 1848420) (|leftZero| . 1848295) (|swap| . 1847971)
 (|error| . 1847454) (|minPoly| . 1846949) (|operators| . 1846837)
 (|tower| . 1846595) (|kernels| . 1846353) (|mainKernel| . 1846248)
 (|distribute| . 1846139) (|multiEuclidean| . 1846033)
 (|extendedEuclidean| . 1845700) (|euclideanSize| . 1845592)
 (|sizeLess?| . 1845499) (|getSimplifyDenomsFlag| . 1845339)
 (|setSimplifyDenomsFlag| . 1845176) (|simplifyPower| . 1845010)
 (|number?| . 1844847) (|replaceDiffs| . 1844292)
 (|constantToUnaryFunction| . 1844123) (|tubePlot| . 1842695)
 (|exponentialOrder| . 1842449) (|getMult| . 1842361)
 (|completeEval| . 1841926) (|lowerPolynomial| . 1841560)
 (|raisePolynomial| . 1841194) (|normalDeriv| . 1840847) (|ran| . 1840560)
 (|subst_var| . 1840459) (|to_UP| . 1840276) (|highCommonTerms| . 1840049)
 (|mapCoef| . 1839831) (|nthCoef| . 1839619) (|binomThmExpt| . 1839332)
 (|fmecg| . 1839106) (|pomopo!| . 1838907) (|mapExponents| . 1838673)
 (|linearAssociatedLog| . 1838270) (|linearAssociatedOrder| . 1838070)
 (|linearAssociatedExp| . 1837860) (|createNormalElement| . 1837720)
 (|setLabelValue| . 1837630) (|getCode| . 1837538) (|printCode| . 1837459)
 (|code| . 1834833) (|operation| . 1834096) (|common| . 1833967)
 (|printStatement| . 1833864) (|save| . 1833819) (|stop| . 1833774)
 (|block| . 1833670) (|cond| . 1833497) (|returns| . 1832801)
 (|call| . 1832720) (|comment| . 1832549) (|continue| . 1832459)
 (|gotoJump| . 1832369) (|repeatUntilLoop| . 1832283) (|whileLoop| . 1832197)
 (|forLoop| . 1831890) (|sin?| . 1831758) (|zeroVector| . 1831575)
 (|zeroSquareMatrix| . 1831392) (|identitySquareMatrix| . 1831209)
 (|fort_clean_lines| . 1831105) (|do_with_error_env3| . 1830908)
 (|do_with_error_env2| . 1830711) (|do_with_error_env1| . 1830552)
 (|expression2Fortran1| . 1830337) (|statement2Fortran| . 1830202)
 (|expression2Fortran| . 1830067) (|getStatement| . 1829894)
 (|changeExprLength| . 1829773) (|displayLines| . 1829644)
 (|dispStatement| . 1829520) (|fortFormatHead| . 1829261)
 (|fortFormatTypeLines| . 1829102) (|fort_format_types| . 1828939)
 (|indentFortLevel| . 1828818) (|checkType| . 1828730)
 (|newFortranTempVar| . 1828645) (|clear_used_intrinsics| . 1828564)
 (|get_used_intrinsics| . 1828463) (|get_fort_indent| . 1828377)
 (|lSpaceBasis| . 1828040) (|finiteBasis| . 1827703) (|principal?| . 1827358)
 (|divisor| . 1825699) (|weierstrassHalfPeriods| . 1825530)
 (|weierstrassInvariants| . 1825361) (|modularInvariantJ| . 1825249)
 (|landen1| . 1824944) (|landen2| . 1824607) (|landen| . 1824276)
 (|kprod| . 1823977) (|sn2| . 1823672) (|useNagFunctions| . 1823203)
 (|rationalPoints| . 1822498) (|nonSingularModel| . 1821708)
 (|algSplitSimple| . 1821251) (|hyperelliptic| . 1820671)
 (|elliptic| . 1819818) (|integralDerivationMatrix| . 1819435)
 (|integralRepresents| . 1819128) (|integralCoordinates| . 1818786)
 (|yCoordinates| . 1818444) (|inverseIntegralMatrixAtInfinity| . 1818130)
 (|integralMatrixAtInfinity| . 1817816) (|inverseIntegralMatrix| . 1817502)
 (|integralMatrix| . 1817188) (|reduceBasisAtInfinity| . 1816884)
 (|normalizeAtInfinity| . 1816580) (|complementaryBasis| . 1816276)
 (|integral?| . 1815368) (|integralAtInfinity?| . 1815066)
 (|integralBasisAtInfinity| . 1814765) (|ramified?| . 1814163)
 (|ramifiedAtInfinity?| . 1813864) (|singular?| . 1813262)
 (|singularAtInfinity?| . 1812963) (|branchPoint?| . 1812361)
 (|branchPointAtInfinity?| . 1812062) (|rationalPoint?| . 1811392)
 (|absolutelyIrreducible?| . 1810734) (|genus| . 1810054)
 (|getZechTable| . 1809369) (|createZechTable| . 1809135)
 (|createMultiplicationTable| . 1808767)
 (|createMultiplicationMatrix| . 1808474)
 (|createLowComplexityTable| . 1808165)
 (|createLowComplexityNormalBasis| . 1807712) (|fffg| . 1806626)
 (|generalCoefficient| . 1806190) (|ShiftAction| . 1805943)
 (|ShiftC| . 1805667) (|DiffAction| . 1805420) (|DiffC| . 1805144)
 (|qShiftAction| . 1804894) (|qShiftC| . 1804615) (|genVectorStream| . 1804302)
 (|genVectorStream2| . 1803989) (|generalInterpolation| . 1802136)
 (|representationType| . 1802001) (|createPrimitiveElement| . 1801946)
 (|tableForDiscreteLogarithm| . 1801776) (|factorsOfCyclicGroupSize| . 1801545)
 (|sizeMultiplication| . 1800418) (|getMultiplicationMatrix| . 1799606)
 (|getMultiplicationTable| . 1798616) (|primitive?| . 1798314)
 (|numberOfIrreduciblePoly| . 1798146) (|numberOfPrimitivePoly| . 1797978)
 (|numberOfNormalPoly| . 1797810) (|createIrreduciblePoly| . 1797585)
 (|createPrimitivePoly| . 1797360) (|createNormalPoly| . 1797135)
 (|createNormalPrimitivePoly| . 1796910)
 (|createPrimitiveNormalPoly| . 1796685) (|nextIrreduciblePoly| . 1796501)
 (|nextPrimitivePoly| . 1796317) (|nextNormalPoly| . 1796133)
 (|nextNormalPrimitivePoly| . 1795949) (|nextPrimitiveNormalPoly| . 1795765)
 (|leastAffineMultiple| . 1795583) (|reducedQPowers| . 1795325)
 (|rootOfIrreduciblePoly| . 1794725) (|mapContra| . 1794500)
 (|looseEquals| . 1794367) (|diagramHeight| . 1794226)
 (|diagramWidth| . 1794085) (|deepDiagramSvg| . 1793890)
 (|diagramsSvg| . 1793667) (|diagramSvg| . 1793472) (|subdiagramSvg| . 1793258)
 (|isFunctional?| . 1793128) (|distanceMatrix| . 1792987)
 (|laplacianMatrix| . 1792846) (|adjacencyMatrix| . 1792694)
 (|incidenceMatrix| . 1792553) (|isAcyclic?| . 1792423)
 (|loopsArrows| . 1792287) (|loopsAtNode| . 1792102) (|loopsNodes| . 1791966)
 (|spanningForestNode| . 1791818) (|spanningTreeNode| . 1791630)
 (|spanningForestArrow| . 1791482) (|spanningTreeArrow| . 1791294)
 (|routeArrows| . 1791092) (|routeNodes| . 1790890) (|arrowsToArrow| . 1790691)
 (|arrowsFromArrow| . 1790492) (|nodeToArrow| . 1790293)
 (|nodeFromArrow| . 1790094) (|arrowsToNode| . 1789895)
 (|arrowsFromNode| . 1789696) (|nodeToNode| . 1789497)
 (|nodeFromNode| . 1789298) (|outDegree| . 1789154) (|inDegree| . 1789010)
 (|getArrowIndex| . 1788863) (|arrowName| . 1788682) (|isFixPoint?| . 1788503)
 (|isGreaterThan?| . 1788321) (|isDirectSuccessor?| . 1788139)
 (|kgraph| . 1787979) (|cycleClosed| . 1787819) (|cycleOpen| . 1787659)
 (|terminal| . 1787564) (|initial| . 1787204) (|getArrows| . 1786610)
 (|getVertexIndex| . 1786466) (|getVertices| . 1786140) (|flush| . 1785968)
 (|write!| . 1785825) (|read!| . 1785685) (|iomode| . 1785511)
 (|reopen!| . 1785341) (|open| . 1785033) (|rightUnit| . 1784867)
 (|leftUnit| . 1784701) (|rightMinimalPolynomial| . 1784474)
 (|leftMinimalPolynomial| . 1784247) (|associatorDependence| . 1783801)
 (|lieAlgebra?| . 1783435) (|jordanAlgebra?| . 1783069)
 (|noncommutativeJordanAlgebra?| . 1782703) (|jordanAdmissible?| . 1782337)
 (|lieAdmissible?| . 1781971) (|jacobiIdentity?| . 1781605)
 (|powerAssociative?| . 1781454) (|alternative?| . 1781088)
 (|flexible?| . 1780722) (|rightAlternative?| . 1780356)
 (|leftAlternative?| . 1779990) (|antiAssociative?| . 1779624)
 (|associative?| . 1779258) (|antiCommutative?| . 1778892)
 (|commutative?| . 1778526) (|rightCharacteristicPolynomial| . 1778343)
 (|leftCharacteristicPolynomial| . 1778160) (|rightNorm| . 1778034)
 (|leftNorm| . 1777908) (|rightTrace| . 1777782) (|leftTrace| . 1777656)
 (|someBasis| . 1777503) (|finiteLattice| . 1777183) (|LiePoly| . 1776997)
 (|quickSort| . 1776704) (|heapSort| . 1776411) (|shellSort| . 1776118)
 (|gamma| . 1776007) (|outputSpacing| . 1775886) (|outputGeneral| . 1775697)
 (|outputFixed| . 1775508) (|outputFloating| . 1775319) (|exp1| . 1775238)
 (|log10| . 1774914) (|log2| . 1774790) (|rationalApproximation| . 1774204)
 (|relerror| . 1774125) (|complexSolve| . 1772885) (|complexRoots| . 1772326)
 (|realRoots| . 1771822) (|support| . 1771619) (|moebiusFunction| . 1771448)
 (|overlap| . 1771168) (|hcrf| . 1771073) (|hclf| . 1770978)
 (|writable?| . 1770887) (|readable?| . 1770796) (|exists?| . 1770705)
 (|extension| . 1770615) (|directory| . 1770525) (|filename| . 1770429)
 (|functionGraph| . 1768995) (|shallowExpand| . 1768754)
 (|deepExpand| . 1768513) (|clearFortranOutputStack| . 1768402)
 (|showFortranOutputStack| . 1768291) (|popFortranOutputStack| . 1768199)
 (|pushFortranOutputStack| . 1767941) (|topFortranOutputStack| . 1767840)
 (|setFormula!| . 1767730) (|formula| . 1767623) (|linkToFortran| . 1766602)
 (|setLegalFortranSourceExtensions| . 1766507) (|fracPart| . 1766115)
 (|polyPart| . 1765908) (|fullPartialFraction| . 1765662)
 (|primeFrobenius| . 1765477) (|discreteLog| . 1765239)
 (|decreasePrecision| . 1765054) (|increasePrecision| . 1764869)
 (|bits| . 1764484) (|unitNormalize| . 1764391) (|unit| . 1763888)
 (|flagFactor| . 1763692) (|sqfrFactor| . 1763561) (|primeFactor| . 1763430)
 (|nthFlag| . 1763237) (|nthExponent| . 1763106)
 (|irreducibleFactor| . 1762975) (|factors| . 1762379) (|nilFactor| . 1762248)
 (|regularRepresentation| . 1761623) (|traceMatrix| . 1760914)
 (|randomLC| . 1760524) (|minimize| . 1760192) (|module| . 1759427)
 (|represents| . 1758379) (|rightRegularRepresentation| . 1758033)
 (|leftRegularRepresentation| . 1757687) (|rightTraceMatrix| . 1757138)
 (|leftTraceMatrix| . 1756589) (|rightDiscriminant| . 1756130)
 (|leftDiscriminant| . 1755671) (|mergeFactors| . 1755519)
 (|algtower| . 1755121) (|isMult| . 1754874) (|applyQuote| . 1754164)
 (|exprToXXP| . 1753294) (|exprToUPS| . 1749557) (|exprToGenUPS| . 1745820)
 (|exprToPS| . 1738324) (|localAbs| . 1736507) (|atan1| . 1735203)
 (|integ| . 1733899) (|integ_df| . 1732592) (|powToUPS| . 1730026)
 (|universe| . 1729891) (|cardinality| . 1729736)
 (|internalIntegrate0| . 1729143) (|makeCos| . 1728869) (|makeSin| . 1728595)
 (|logGamma| . 1728164) (|li2| . 1728053) (|rabs| . 1727342)
 (|lambert_via_newton1| . 1726834) (|lambert_via_newton2| . 1726326)
 (|lambert_inverse_series| . 1725895) (|iiGamma| . 1725705) (|iiabs| . 1725515)
 (|iiBeta| . 1725297) (|iidigamma| . 1725107) (|iipolygamma| . 1724889)
 (|iiBesselJ| . 1724671) (|iiBesselY| . 1724453) (|iiBesselI| . 1724235)
 (|iiBesselK| . 1724017) (|iiAiryAi| . 1723827) (|iiAiryAiPrime| . 1723637)
 (|iiAiryBi| . 1723447) (|iiAiryBiPrime| . 1723257) (|iAiryAi| . 1723067)
 (|iAiryAiPrime| . 1722877) (|iAiryBi| . 1722687) (|iAiryBiPrime| . 1722497)
 (|iiHypergeometricF| . 1722279) (|iiPolylog| . 1722086)
 (|iLambertW| . 1721896) (|bringDown| . 1721227) (|newReduc| . 1720912)
 (|logical?| . 1720822) (|character?| . 1720732) (|doubleComplex?| . 1720642)
 (|complex?| . 1720552) (|double?| . 1720462) (|fortranCharacter| . 1720417)
 (|fortranDoubleComplex| . 1720372) (|fortranComplex| . 1720327)
 (|fortranLogical| . 1720282) (|fortranInteger| . 1720237)
 (|fortranDouble| . 1720192) (|fortranReal| . 1720147) (|external?| . 1720065)
 (|dimensionsOf| . 1719950) (|scalarTypeOf| . 1719793)
 (|fortranCarriageReturn| . 1719713) (|fortranLiteral| . 1719594)
 (|fortranLiteralLine| . 1719475) (|processTemplate| . 1719296)
 (|makeFR| . 1718565) (|musserTrials| . 1718206) (|stopMusserTrials| . 1717847)
 (|numberOfFactors| . 1717415) (|modularFactor| . 1717153)
 (|useSingleFactorBound?| . 1716989) (|useSingleFactorBound| . 1716822)
 (|useEisensteinCriterion?| . 1716658) (|useEisensteinCriterion| . 1716491)
 (|eisensteinIrreducible?| . 1716324) (|tryFunctionalDecomposition?| . 1716160)
 (|tryFunctionalDecomposition| . 1715993) (|henselFact| . 1715519)
 (|btwFact| . 1714939) (|beauzamyBound| . 1714495) (|bombieriNorm| . 1713626)
 (|rootBound| . 1713182) (|singleFactorBound| . 1712247)
 (|quadraticNorm| . 1711831) (|infinityNorm| . 1711415)
 (|scaleRoots| . 1711236) (|shiftRoots| . 1711057)
 (|degreePartition| . 1710477) (|factorOfDegree| . 1708970)
 (|factorsOfDegree| . 1708688) (|pascalTriangle| . 1708516)
 (|rangePascalTriangle| . 1708239) (|sizePascalTriangle| . 1708101)
 (|fillPascalTriangle| . 1707977) (|safeCeiling| . 1707805)
 (|safeFloor| . 1707633) (|safetyMargin| . 1707258) (|sumSquares| . 1707113)
 (|euclideanNormalForm| . 1706794) (|euclideanGroebner| . 1705787)
 (|factorGroebnerBasis| . 1704990) (|groebnerFactorize| . 1703392)
 (|credPol| . 1703085) (|gbasis| . 1702747) (|critT| . 1702280)
 (|critM| . 1701980) (|critB| . 1701674) (|critBonD| . 1701208)
 (|critMTonD1| . 1700745) (|critMonD1| . 1700279) (|redPo| . 1699906)
 (|updatF| . 1699453) (|updatD| . 1698987) (|minGbasis| . 1698683)
 (|lepol| . 1698386) (|prinshINFO| . 1698092) (|prindINFO| . 1697581)
 (|fprindINFO| . 1697067) (|prinpolINFO| . 1696738) (|prinb| . 1696416)
 (|critpOrder| . 1695946) (|makeCrit| . 1695361) (|gcdBasis| . 1694970)
 (|gcdDecomposition| . 1694327) (|conditionsForIdempotents| . 1692956)
 (|genericRightDiscriminant| . 1692610) (|genericRightTraceForm| . 1692258)
 (|genericLeftDiscriminant| . 1691912) (|genericLeftTraceForm| . 1691560)
 (|genericRightNorm| . 1691211) (|genericRightTrace| . 1690862)
 (|genericRightMinimalPolynomial| . 1690487) (|rightRankPolynomial| . 1689647)
 (|genericLeftNorm| . 1689298) (|genericLeftTrace| . 1688949)
 (|genericLeftMinimalPolynomial| . 1688574) (|leftRankPolynomial| . 1687734)
 (|generic| . 1685870) (|rightUnits| . 1685149) (|leftUnits| . 1684428)
 (|gnuDraw| . 1683126) (|compBound| . 1682874) (|tablePow| . 1682586)
 (|solveid| . 1682340) (|testModulus| . 1682106)
 (|generalizedMoebiusFunction| . 1681846)
 (|canonicalMoebiusFunction| . 1681626) (|moebiusMatrix| . 1681224)
 (|removeZeros| . 1680977) (|infsum| . 1680663) (|HenselLift| . 1680328)
 (|completeHensel| . 1680071) (|multMonom| . 1679486) (|build| . 1678901)
 (|leadingIndex| . 1678322) (|leadingExponent| . 1677743) (|option| . 1677234)
 (|checkOptions| . 1677095) (|displayKind| . 1676875) (|indexName| . 1676655)
 (|variableName| . 1676435) (|functionNames| . 1676188)
 (|functionName| . 1675968) (|one| . 1675746) (|checkExtraValues| . 1675524)
 (|safety| . 1675271) (|allDegrees| . 1675049) (|maxMixedDegree| . 1674796)
 (|maxDegree| . 1674492) (|maxLevel| . 1674188) (|Somos| . 1673890)
 (|homogeneous| . 1673592) (|maxPower| . 1673294) (|maxSubst| . 1672996)
 (|maxShift| . 1672692) (|maxDerivative| . 1672388) (|GospersMethod| . 1671800)
 (|primitiveMonomials| . 1671494) (|totalDegreeSorted| . 1671170)
 (|totalDegree| . 1670562) (|nextSubsetGray| . 1670413)
 (|firstSubsetGray| . 1670260) (|clipPointsDefault| . 1670087)
 (|drawToScale| . 1669914) (|adaptive| . 1669521) (|putColorInfo| . 1669359)
 (|appendPoint| . 1669227) (|component| . 1668666) (|ranges| . 1668173)
 (|pointLists| . 1668051) (|makeGraphImage| . 1667436)
 (|sendGraphImage| . 1667358) (|graphImage| . 1667314) (|groebSolve| . 1666873)
 (|testDim| . 1666536) (|genericPosition| . 1665997)
 (|toPermutationIfCan| . 1665717) (|directProduct| . 1665524)
 (|refactor| . 1665470) (|groupPresentation| . 1665133) (F2EXPRR . 1664676)
 (EXPRR2F . 1664212) (|iim2| . 1664056) (|iiretractVar| . 1663848)
 (|guess| . 1652599) (|guessExpRat| . 1642976) (|guessBinRat| . 1633353)
 (|guessAlgDep| . 1628972) (|guessFE| . 1624699) (|guessAlg| . 1620426)
 (|guessPade| . 1616153) (|algDepHP| . 1597548) (|substHP| . 1579595)
 (|shiftHP| . 1542642) (|diffHP| . 1505689) (|guessRec| . 1498172)
 (|guessPRec| . 1490655) (|guessRat| . 1483138) (|guessADE| . 1475621)
 (|guessHolo| . 1468104) (|HankelMatrix| . 1467951) (|update!| . 1467860)
 (|lfunc| . 1467775) (|inHallBasis?| . 1467649) (|reorder| . 1466885)
 (|heap| . 1466765) (|gcdprim| . 1466613) (|gcdcofact| . 1466454)
 (|gcdcofactprim| . 1466295) (|lintgcd| . 1466108) (|hex| . 1465995)
 (|parts| . 1465546) (|count| . 1465084) (|every?| . 1464854)
 (|any?| . 1464624) (|map!| . 1464156) (|dispGenerators| . 1464074)
 (|homologyzc2| . 1464032) (|homologyc2| . 1463990) (|homologyzz| . 1463948)
 (|homologyz| . 1463906) (|homology0| . 1463864) (|homologyGroup| . 1463769)
 (|antipode| . 1463628) (|trueEqual| . 1463532) (|factorList| . 1462867)
 (|listConjugateBases| . 1462242) (|matrixGcd| . 1461780)
 (|divideIfCan!| . 1461326) (|leastPower| . 1460897) (|idealiser| . 1460056)
 (|idealiserMatrix| . 1459636) (|moduleSum| . 1459125)
 (|mapUnivariate| . 1458389) (|mapUnivariateIfCan| . 1458011)
 (|mapMatrixIfCan| . 1457589) (|mapBivariate| . 1457150)
 (|fullDisplay| . 1456236) (|relationsIdeal| . 1455737) (|saturate| . 1455188)
 (|groebner?| . 1454903) (|groebnerIdeal| . 1454611) (|ideal| . 1453597)
 (|leadingIdeal| . 1453340) (|backOldPos| . 1452898)
 (|generalPosition| . 1452393) (|quotient| . 1451641) (|zeroDim?| . 1451035)
 (|inRadical?| . 1450747) (|in?| . 1450459) (|element?| . 1450171)
 (|zeroDimPrime?| . 1449512) (|zeroDimPrimary?| . 1448853)
 (|radical| . 1448222) (|primaryDecomp| . 1447042) (|leadingTerm| . 1446827)
 (|constructOrdered| . 1446603) (|leadingSupport| . 1446448)
 (|eigenvector| . 1445797) (|generalizedEigenvector| . 1443964)
 (|eigenvalues| . 1442960) (|eigenvectors| . 1441047)
 (|generalizedEigenvectors| . 1439305) (|removeRepeats!| . 1439088)
 (|shrinkable| . 1438801) (|physicalLength!| . 1438517)
 (|physicalLength| . 1438208) (|flexibleArray| . 1437921)
 (|parseILTerm| . 1437653) (|parseIL2| . 1437385) (|parseIL| . 1437309)
 (|proposition| . 1437233) (|generalizedInverse| . 1436947)
 (|row_operation_base| . 1436593) (|row_operation_modular| . 1436236)
 (|do_modular_solve| . 1435613) (|do_poly_integer| . 1434516)
 (|merge_exponents| . 1434261) (|merge2| . 1433844) (|setFieldInfo| . 1433543)
 (|pol| . 1433329) (|xn| . 1433099) (|dAndcExp| . 1432849) (|repSq| . 1432643)
 (|expPot| . 1432439) (|qPot| . 1432244) (|lookup| . 1431957)
 (|normal?| . 1431381) (|normalElement| . 1431043)
 (|minimalPolynomial| . 1430214) (|incidenceAlgebra| . 1429795)
 (|increment| . 1429627) (|incrementBy| . 1429456) (|charpol| . 1429161)
 (|solve1| . 1428865) (|innerEigenvectors| . 1428252) (|compile| . 1428122)
 (|declare| . 1427995) (|parse| . 1427916) (|unparse| . 1427837)
 (|flatten| . 1427654) (|binary| . 1427452) (|packageCall| . 1427089)
 (|coerceToType| . 1426958) (|atType| . 1426827) (|pretendOfType| . 1426696)
 (|interpret| . 1426491) (|infiniteProduct| . 1426321)
 (|evenInfiniteProduct| . 1426151) (|oddInfiniteProduct| . 1425981)
 (|generalInfiniteProduct| . 1425777) (|innerSolve1| . 1425185)
 (|innerSolve| . 1424829) (|makeEq| . 1424475)
 (|modularGcdPrimitive| . 1424183) (|modularGcd| . 1423891)
 (|reduction| . 1423284) (|signAround| . 1422509) (|invmod| . 1422448)
 (|powmod| . 1422384) (|mulmod| . 1422320) (|submod| . 1422256)
 (|addmod| . 1422192) (|mask| . 1422134) (|dec| . 1422076) (|inc| . 1422018)
 (|symmetricRemainder| . 1421957) (|positiveRemainder| . 1421896)
 (|bit?| . 1421799) (|algint| . 1421280) (|algintegrate| . 1420638)
 (|palgintegrate| . 1419996) (|algextint| . 1416734)
 (|algextint_base| . 1414987) (|bitLength| . 1414905) (|bitCoef| . 1414818)
 (|bitTruth| . 1414696) (|contains?| . 1414449) (|width| . 1414240)
 (|inf| . 1414031) (|qinterval| . 1413819) (|interval| . 1413145)
 (|li_int| . 1411965) (|poly_int| . 1410785) (|solve_u| . 1410143)
 (|lfextendedint| . 1409561) (|lfintegrate| . 1408945)
 (|BasicMethod| . 1408782) (|PollardSmallFactor| . 1408652)
 (|palgint0| . 1407295) (|palgRDE0| . 1405944) (|rationalize_ir| . 1405347)
 (|palgLODE0| . 1403634) (|carmichaelLambda| . 1403526)
 (|chineseRemainder| . 1402402) (|divisors| . 1402257) (|eulerPhi| . 1402149)
 (|fibonacci| . 1402041) (|harmonic| . 1401892) (|jacobi| . 1401781)
 (|moebiusMu| . 1401505) (|numberOfDivisors| . 1401397)
 (|sumOfDivisors| . 1401289) (|sumOfKthPowerDivisors| . 1401139)
 (|HermiteIntegrate| . 1399259) (|palgint| . 1398648) (|palgRDE| . 1398032)
 (|param_RDE| . 1397145) (|param_LODE| . 1396258) (|palgLODE| . 1395438)
 (|primextint| . 1394694) (|expextint| . 1393938) (|diffextint| . 1393353)
 (|unkextint| . 1392768) (|monologextint| . 1391846) (|extendedint| . 1388856)
 (|logextint| . 1386933) (|splitConstant| . 1386346)
 (|pmComplexintegrate| . 1385639) (|pmintegrate| . 1384251)
 (|infieldint| . 1383944) (|integerIfCan| . 1383795)
 (|internalIntegrate| . 1382806) (|infieldIntegrate| . 1382494)
 (|varselect| . 1382272) (|kmax| . 1382050) (|ksec| . 1381788)
 (|vark| . 1381531) (|removeConstantTerm| . 1381304) (|mkPrim| . 1381026)
 (|intPatternMatch| . 1380185) (|primintegrate| . 1379279)
 (|expintegrate| . 1378338) (|lambintegrate| . 1377600)
 (|monomialIntegrate| . 1377139) (|monomialIntPoly| . 1376851)
 (|inverseLaplace| . 1376254) (|iprint| . 1376130) (|elem?| . 1376002)
 (|notelem| . 1375828) (|logpart| . 1375473) (|ratpart| . 1375380)
 (|mkAnswer| . 1374941) (|perfectNthPower?| . 1374755)
 (|perfectNthRoot| . 1374363) (|approxNthRoot| . 1374205)
 (|perfectSquare?| . 1374068) (|perfectSqrt| . 1373953)
 (|approxSqrt| . 1373844) (|generateIrredPoly| . 1373623)
 (|complexExpand| . 1372728) (|complexIntegrate| . 1371726)
 (|dimensionOfIrreducibleRepresentation| . 1371572)
 (|irreducibleRepresentation| . 1370979) (|checkRur| . 1370394)
 (|cAcsch| . 1370218) (|cAsech| . 1370042) (|cAcoth| . 1369866)
 (|cAtanh| . 1369690) (|cAcosh| . 1369514) (|cAsinh| . 1369338)
 (|cCsch| . 1369162) (|cSech| . 1368986) (|cCoth| . 1368810)
 (|cTanh| . 1368634) (|cCosh| . 1368458) (|cSinh| . 1368282)
 (|cAcsc| . 1368106) (|cAsec| . 1367930) (|cAcot| . 1367754)
 (|cAtan| . 1367578) (|cAcos| . 1367402) (|cAsin| . 1367226) (|cCsc| . 1367050)
 (|cSec| . 1366874) (|cCot| . 1366698) (|cTan| . 1366522) (|cCos| . 1366346)
 (|cSin| . 1366170) (|cLog| . 1365994) (|cExp| . 1365818)
 (|cRationalPower| . 1365620) (|cPower| . 1365441)
 (|seriesToOutputForm| . 1365058) (|iCompose| . 1364941)
 (|taylorQuoByVar| . 1364827) (|iExquo| . 1364670) (|getStream| . 1364476)
 (|getRef| . 1364291) (|makeSeries| . 1364023) (GF2FG . 1363471)
 (FG2F . 1362957) (F2FG . 1362443) (|explogs2trigs| . 1361891)
 (|trigs2explogs| . 1361328) (|do_liou| . 1360685) (|swap!| . 1360478)
 (|fill!| . 1360059) (|entry?| . 1359814) (|indices| . 1359473)
 (|index?| . 1359312) (|dimS| . 1359045) (|dimJ| . 1358778) (|Pr| . 1358616)
 (|Pm| . 1358451) (|integrateIfCan| . 1358335) (|derivativeOf?| . 1358213)
 (|weight| . 1357103) (|type| . 1357012) (|allRepeated| . 1356605)
 (|m2r| . 1356216) (|r2m| . 1355827) (|repeatedIndex| . 1355711)
 (|multiIndex| . 1355592) (|numerJP| . 1355382) (|autoReduce| . 1355225)
 (|reduceMod| . 1355065) (|simpMod| . 1354276) (|simpOne| . 1354154)
 (|dSubst| . 1354026) (|solveFor| . 1353895) (|sortLD| . 1353738)
 (|leadingDer| . 1353616) (|freeOf?| . 1353247) (|orderDim| . 1352992)
 (|formalDiff2| . 1352300) (|formalDiff| . 1351760) (|class| . 1351109)
 (|const?| . 1350959) (|jetVariables| . 1350809) (|numDepVar| . 1350325)
 (|numIndVar| . 1349841) (|getNotation| . 1349405) (|setNotation| . 1348896)
 (P . 1347578) (U . 1347140) (X . 1346702) (|ground| . 1346018)
 (|printSys| . 1345773) (|jacobiMatrix| . 1345076) (|makeSystem| . 1344862)
 (|setSimpMode| . 1344422) (|extractSymbol| . 1343986)
 (|analyseSymbol| . 1343519) (|prolongSymbol| . 1343287)
 (|prolongMV| . 1342894) (|project| . 1342666) (|contract| . 1341340)
 (|differentials| . 1341141) (|dP| . 1340869) (|dU| . 1340655) (|dX| . 1340441)
 (|d| . 1340101) (|eqRep?| . 1339899) (|ground?| . 1339146)
 (|prolong| . 1338226) (|lie| . 1337833) (|directions| . 1337635)
 (|diffP| . 1337364) (|diffU| . 1337151) (|diffX| . 1336938)
 (|search| . 1336800) (|keys| . 1336643) (|key?| . 1336483)
 (|symbolIfCan| . 1336356) (|kernel| . 1335793) (|height| . 1335140)
 (|argument| . 1334748) (|constantKernel| . 1334578)
 (|constantIfCan| . 1334399) (|kovacic| . 1333440) (|toStringConven| . 1333284)
 (|unbind| . 1333203) (|bind| . 1333122) (|subst| . 1332432)
 (|free?| . 1332314) (|getBoundValue| . 1332185) (|isFreeNode?| . 1332067)
 (|isBoundNode?| . 1331949) (|isLambda?| . 1331831) (|isCompound?| . 1331713)
 (|parseLambda| . 1331596) (|lambda| . 1331129) (|laplace| . 1330537)
 (|latticeJoinOfMeets| . 1330309) (|toStringUnwrapped| . 1330057)
 (|opType| . 1329805) (|deductions| . 1329486) (|meet| . 1329112)
 (|emptyLattice| . 1329010) (|latticeMeetOfJoins| . 1328782)
 (|logicF| . 1328642) (|logicT| . 1328502) (|trailingCoefficient| . 1328329)
 (|normalizeIfCan| . 1327874) (|polCase| . 1327490) (|distFact| . 1326613)
 (|identification| . 1326272) (|LyndonCoordinates| . 1325919)
 (|LyndonBasis| . 1325545) (|zeroDimensional?| . 1324923)
 (|fglmIfCan| . 1324352) (|lexTriangular| . 1323896)
 (|squareFreeLexTriangular| . 1322898) (|belong?| . 1320956)
 (|fresnelC| . 1320279) (|fresnelS| . 1319602) (|erfi| . 1318925)
 (|erf| . 1318248) (|dilog| . 1317777) (|li| . 1317100) (|Chi| . 1316423)
 (|Shi| . 1315746) (|Ci| . 1315069) (|Si| . 1314392) (|Ei| . 1313715)
 (|linGenPos| . 1313274) (|groebgen| . 1312835) (|totolex| . 1312524)
 (|minPol| . 1311799) (|computeBasis| . 1311560) (|coord| . 1310850)
 (|anticoord| . 1310517) (|intcompBasis| . 1310226) (|choosemon| . 1309938)
 (|close!| . 1309756) (|pack!| . 1309610) (|library| . 1309531)
 (|complexLimit| . 1308328) (|dehomogenize| . 1307614) (|lin_comb!| . 1307359)
 (|lin_comb| . 1305456) (|linearlyDependent?| . 1305227)
 (|linearDependence| . 1304998) (|solveLinear| . 1303210)
 (|reducedSystem| . 1302026) (|setDifference| . 1301905)
 (|setIntersection| . 1301784) (|setUnion| . 1301663) (|tails| . 1301540)
 (|append| . 1301460) (|null| . 1301346) (|nil| . 1301272) (|match| . 1299961)
 (|splitList| . 1299682) (|topologicalSort!| . 1299500)
 (|topologicalSort| . 1299138) (|cartesianPower| . 1298926)
 (|minShift| . 1298767) (|substitute| . 1298653) (|duplicates?| . 1298517)
 (|mapGen| . 1297829) (|mapExpon| . 1297300) (|commutativeEquality| . 1297101)
 (|leftMult| . 1296930) (|rightMult| . 1296759) (|makeUnit| . 1296594)
 (|nthFactor| . 1295801) (|nthExpon| . 1295308) (|makeMulti| . 1295074)
 (|makeTerm| . 1294903) (|listOfMonoms| . 1294662) (|sort!| . 1294202)
 (|reverse!| . 1293762) (|copyInto!| . 1293545) (|sorted?| . 1293114)
 (|reverse| . 1292457) (|insert| . 1291978) (|delete| . 1291699)
 (|delta_deriv| . 1291427) (|symmetricSquare| . 1291273) (|factor1| . 1290638)
 (|testnp| . 1289790) (|testfn| . 1288731) (|testf2| . 1287307)
 (|testll| . 1286189) (|testlc| . 1285013) (|testln| . 1282073)
 (|testlw| . 1280524) (|testcp| . 1279725) (|testco| . 1279168)
 (|testcx| . 1278590) (|testpd| . 1277999) (|testfr| . 1275366)
 (|testsb| . 1274401) (|testro| . 1273607) (|testfo| . 1270974)
 (|testsc| . 1270256) (|testfg| . 1269481) (|testlp| . 1268795)
 (|testis| . 1268421) (|testgt| . 1268162) (|gen_exp| . 1266853)
 (|ge_minimal| . 1264466) (|symmetricProduct| . 1264072)
 (|symmetricPower| . 1263586) (|directSum| . 1263192) (|entries| . 1262932)
 (|loop| . 1262828) (|lcmCoef| . 1262638)
 (|solveLinearPolynomialEquationByFractions| . 1262370) (|list| . 1262280)
 (|hasSolution?| . 1261599) (|linSolve| . 1261020) (|intoMatrix| . 1260514)
 (|LUDecomp| . 1260189) (|LUSolve| . 1259979) (|LUInverse| . 1259716)
 (|LyndonWordsList| . 1259494) (|LyndonWordsList1| . 1259248)
 (|lyndonIfCan| . 1259110) (|lyndon| . 1258978) (|lyndon?| . 1258818)
 (|lexico| . 1258402) (|numberOfComputedEntries| . 1258260) (|rst| . 1258157)
 (|frst| . 1258054) (|lazyEvaluate| . 1257951) (|lazy?| . 1257820)
 (|explicitlyEmpty?| . 1257689) (|explicitEntries?| . 1257558)
 (|matrixDimensions| . 1257390) (|matrixConcat3D| . 1257246) (|plus| . 1256764)
 (|identityMatrix| . 1256580) (|zeroMatrix| . 1255996)
 (|algebraicGcd| . 1255101) (|pseudoRem| . 1254915)
 (|canonicalIfCan| . 1254730) (|pack_modulus| . 1254444) (|MPtoMPT| . 1254187)
 (|pack_exps| . 1253925) (|repack1| . 1253646) (|pack_exps0| . 1253422)
 (|m_inverse| . 1253165) (|rightRecip| . 1252936) (|leftRecip| . 1252707)
 (|leftPower| . 1252509) (|rightPower| . 1252311) (|one?| . 1251850)
 (|element| . 1251533) (|rowMatrix| . 1251219) (|rows| . 1250572)
 (|columnMatrix| . 1250258) (|columns| . 1249611) (|subMatrix| . 1248699)
 (|bandMatrix| . 1247966) (|blockSplit| . 1246448) (|iter| . 1246245)
 (|arg1| . 1246088) (|arg2| . 1245931) (|comp| . 1245652) (|nullary| . 1245517)
 (|id| . 1245413) (|recur| . 1245021) (|const| . 1244497) (|curry| . 1244281)
 (|diag| . 1244062) (|curryRight| . 1243796) (|curryLeft| . 1243530)
 (|constantRight| . 1243267) (|constantLeft| . 1243004) (|twist| . 1242738)
 (|kronecker_prod1| . 1242250) (|positivePower| . 1241954)
 (|kroneckerSum| . 1241483) (|kroneckerProduct| . 1240938)
 (|elRow1!| . 1240613) (|elRow2!| . 1240285) (|elColumn2!| . 1239957)
 (|fractionFreeGauss!| . 1239622) (|invertIfCan| . 1239159) (|copy!| . 1239012)
 (|plus!| . 1238862) (|minus!| . 1238567) (|leftScalarTimes!| . 1238417)
 (|rightScalarTimes!| . 1238267) (|times!| . 1238117) (|power!| . 1237915)
 (|gradient| . 1237583) (|divergence| . 1237288) (|laplacian| . 1236993)
 (|hessian| . 1236661) (|bandedHessian| . 1236287) (|jacobian| . 1235955)
 (|bandedJacobian| . 1235578) (|duplicates| . 1235306)
 (|removeDuplicates!| . 1235061) (|ddFact| . 1234756)
 (|separateFactors| . 1234114) (|meshPar2Var| . 1232850)
 (|meshFun2Var| . 1232342) (|meshPar1Var| . 1231975) (|ptFunc| . 1231535)
 (|ldegree| . 1231313) (|subst_vars| . 1231125) (|trial_division| . 1230791)
 (|toPermutation| . 1230617) (|toCayleyGraph| . 1230162) (|limit| . 1226288)
 (|contraAdjoint| . 1225964) (|coAdjoint| . 1225640)
 (|multifunctionGraph| . 1223917) (|minimumExponent| . 1223754)
 (|maximumExponent| . 1223591) (|precision| . 1223151) (|mantissa| . 1222974)
 (|rowEch| . 1222823) (|rowEchLocal| . 1222669) (|rowEchelonLocal| . 1222512)
 (|normalizedDivide| . 1221901) (|maxint| . 1221716)
 (|binaryFunction| . 1221410) (|makeFloatFunction| . 1220906)
 (|function| . 1219674) (|makeRecord| . 1219481) (|unaryFunction| . 1219216)
 (|compiledFunction| . 1218638) (|corrPoly| . 1217953) (|lifting| . 1216428)
 (|exprex| . 1216188) (|coerceS| . 1215948) (|mfactor| . 1215769)
 (|ddfact| . 1215334) (|mmul| . 1215198) (|mod_exp| . 1214888)
 (|power_matrix| . 1214460) (|modular_compose| . 1214093)
 (|ini_rdata| . 1213786) (|red_pol| . 1213499) (|HP_solve_I| . 1212717)
 (|HP_solve_A| . 1211871) (|HP_solve_P| . 1211049) (|HP_solve_PA| . 1210154)
 (|HP_solve_M| . 1209347) (|check_sol1a| . 1209026) (|VSUPI_to_VPA| . 1208807)
 (|VSUPPI_to_VPA| . 1208465) (|LLFI_to_LPA| . 1208254)
 (|LLFPI_to_LPA| . 1207943) (|get_variables| . 1207728)
 (|unpack_poly| . 1207373) (|HP_solve| . 1206565)
 (|gen_Monte_Carlo_check| . 1205985) (|LLF_to_LPA| . 1205620)
 (|VSUPS_to_VPA| . 1205222) (|frobenius| . 1205026) (|computePowers| . 1204814)
 (|An| . 1204630) (|UnVectorise| . 1204446) (|Vectorise| . 1204262)
 (|setPoly| . 1204115) (|index| . 1203405) (|exponent| . 1202252)
 (|exQuo| . 1201238) (|cumulant2moment| . 1201100)
 (|moment2cumulant| . 1200962) (|moment2nthJacobi| . 1200713)
 (|moment2jacobi| . 1200408) (|moment2jacobi2| . 1200162)
 (|freeCumulant2moment| . 1200024) (|moment2freeCumulant| . 1199886)
 (|booleanCumulant2moment| . 1199748) (|moment2booleanCumulant| . 1199610)
 (|monotoneCumulant2moment| . 1199472)
 (|monotoneCumulant2momentPoly| . 1199264) (|qcumulant2nthmoment| . 1199074)
 (|hankelDeterminant| . 1198887) (|jacobi2poly| . 1198680)
 (|moment2Stransform| . 1198251) (|moment2monotoneCumulant| . 1197908)
 (|derivationCoordinates| . 1197594) (|generator| . 1196201)
 (|splitSquarefree| . 1195843) (|normalDenom| . 1195598)
 (|totalfract| . 1194933) (|pushdterm| . 1194350) (|pushucoef| . 1193752)
 (|pushuconst| . 1193264) (|numberOfMonomials| . 1192651)
 (|monomials| . 1192015) (|mrv_normalize| . 1191489) (|mrv_limit| . 1188679)
 (|mrv_limit1| . 1188462) (|mrv_sign| . 1187946) (|mrv_cmp| . 1187257)
 (|mrv_set| . 1186539) (|expr_to_series| . 1185933) (|mrv_rewrite| . 1185257)
 (|mrv_rewrite0| . 1185009) (|members| . 1184329) (|multiset| . 1184031)
 (|systemCommand| . 1183909) (|mergeDifference| . 1183780)
 (|logDependenceQ| . 1183546) (|squareFreePrim| . 1183240)
 (|compdegd| . 1182777) (|univcase| . 1182468) (|consnewpol| . 1181869)
 (|nsqfree| . 1181070) (|intChoose| . 1180145) (|coefChoose| . 1179808)
 (|myDegree| . 1179342) (|normDeriv2| . 1178980) (|plenaryPower| . 1178818)
 (|commutator| . 1178543) (|associator| . 1178481) (|antiCommutator| . 1178418)
 (|naiveBeckermannLabahn| . 1177811)
 (|naiveBeckermannLabahnMultipoint| . 1177236)
 (|naiveBeckermannLabahn1| . 1176291) (|naiveBeckermannLabahn0| . 1175837)
 (|reduceBasis0| . 1175379) (|reduceBasis| . 1174934)
 (|complexEigenvalues| . 1174679) (|complexEigenvectors| . 1174185)
 (|newton| . 1173989) (|groebner| . 1170631) (|redPol| . 1170012)
 (|hMonic| . 1169469) (|virtualDegree| . 1168848) (|sPol| . 1167971)
 (|shift| . 1167558) (|normalizedAssociate| . 1167207) (|normalize| . 1164644)
 (|outputArgs| . 1164228) (|normInvertible?| . 1163754)
 (|normFactors| . 1163367) (|npcoef| . 1162479)
 (|characteristicPolynomial| . 1160136) (|realEigenvalues| . 1159908)
 (|realEigenvectors| . 1159518) (|halfExtendedResultant2| . 1159226)
 (|halfExtendedResultant1| . 1158934) (|extendedResultant| . 1158566)
 (|subResultantsChain| . 1158346) (|lazyPseudoQuotient| . 1158232)
 (|lazyPseudoRemainder| . 1158118) (|bernoulliB| . 1157880)
 (|eulerE| . 1157642) (|numeric| . 1155923) (|complexNumeric| . 1151881)
 (|numericIfCan| . 1150448) (|complexNumericIfCan| . 1147247)
 (|FormatArabic| . 1147119) (|ScanArabic| . 1146991) (|FormatRoman| . 1146863)
 (|ScanRoman| . 1146735) (|ScanFloatIgnoreSpaces| . 1146617)
 (|ScanFloatIgnoreSpacesIfCan| . 1146493) (|rk4| . 1145743) (|rk4a| . 1145364)
 (|rk4qc| . 1144289) (|rk4f| . 1143916) (|aromberg| . 1143499)
 (|asimpson| . 1143082) (|atrapezoidal| . 1142665) (|romberg| . 1142251)
 (|simpson| . 1141837) (|trapezoidal| . 1141423) (|rombergo| . 1141009)
 (|simpsono| . 1140595) (|trapezoidalo| . 1140181) (|sup| . 1139909)
 (|inv| . 1138588) (|imagE| . 1138477) (|imagk| . 1138366) (|imagj| . 1138255)
 (|imagi| . 1138144) (|octon| . 1137876) (|constDsolve| . 1137109)
 (|expint| . 1136522) (|diff| . 1135729) (|algDsolve| . 1134140)
 (|denomLODE| . 1133127) (|indicialEquations| . 1130943)
 (|indicialEquation| . 1129943) (|denomRicDE| . 1129442)
 (|leadingCoefficientRicDE| . 1128851) (|constantCoefficientRicDE| . 1128220)
 (|changeVar| . 1127260) (|ratDsolve| . 1124807)
 (|indicialEquationAtInfinity| . 1123983) (|integrate_sols| . 1122453)
 (|reduceLODE| . 1121407) (|singRicDE| . 1119879) (|polyRicDE| . 1118446)
 (|ricDsolve| . 1114148) (|triangulate| . 1112071) (|solveInField| . 1109887)
 (|wronskianMatrix| . 1109386) (|variationOfParameters| . 1109151)
 (|addVertex| . 1109044) (|boolWordPermute| . 1108723) (|reindex| . 1108444)
 (|subtract| . 1108391) (|sameFace?| . 1108216) (|isSubsetOf?| . 1108127)
 (|allSubsets| . 1107503) (|getIndexesSigned| . 1107408)
 (|getIndexes| . 1107295) (|orientedFacetIfCan| . 1107181)
 (|orientedFacetSigned| . 1107086) (|orientedFacetUnsigned| . 1106991)
 (|orientedFacet| . 1106753) (|operator| . 1104500) (|arguments| . 1104362)
 (|has_op?| . 1104206) (|is_symbol?| . 1104050) (|precondition| . 1103959)
 (|OMmakeConn| . 1103855) (|OMcloseConn| . 1103767)
 (|OMconnInDevice| . 1103662) (|OMconnOutDevice| . 1103557)
 (|OMconnectTCP| . 1103392) (|OMbindTCP| . 1103257) (|OMopenFile| . 1103121)
 (|OMopenString| . 1102988) (|OMclose| . 1102906) (|OMsetEncoding| . 1102775)
 (|OMputApp| . 1102693) (|OMputAtp| . 1102611) (|OMputAttr| . 1102529)
 (|OMputBind| . 1102447) (|OMputBVar| . 1102365) (|OMputError| . 1102283)
 (|OMputObject| . 1102201) (|OMputEndApp| . 1102119) (|OMputEndAtp| . 1102037)
 (|OMputEndAttr| . 1101955) (|OMputEndBind| . 1101873)
 (|OMputEndBVar| . 1101791) (|OMputEndError| . 1101709)
 (|OMputEndObject| . 1101627) (|OMputInteger| . 1101505)
 (|OMputFloat| . 1101379) (|OMputVariable| . 1101258) (|OMputString| . 1101137)
 (|OMputSymbol| . 1101013) (|OMgetApp| . 1100931) (|OMgetAtp| . 1100849)
 (|OMgetAttr| . 1100767) (|OMgetBind| . 1100685) (|OMgetBVar| . 1100603)
 (|OMgetError| . 1100521) (|OMgetObject| . 1100439) (|OMgetEndApp| . 1100357)
 (|OMgetEndAtp| . 1100275) (|OMgetEndAttr| . 1100193)
 (|OMgetEndBind| . 1100111) (|OMgetEndBVar| . 1100029)
 (|OMgetEndError| . 1099947) (|OMgetEndObject| . 1099865)
 (|OMgetInteger| . 1099778) (|OMgetFloat| . 1099687)
 (|OMgetVariable| . 1099601) (|OMgetString| . 1099515)
 (|OMgetSymbol| . 1099376) (|OMgetType| . 1099290)
 (|OMencodingBinary| . 1099240) (|OMencodingSGML| . 1099190)
 (|OMencodingXML| . 1099140) (|OMencodingUnknown| . 1099090)
 (|omError| . 1098948) (|errorInfo| . 1098854) (|errorKind| . 1098751)
 (|OMReadError?| . 1098661) (|OMUnknownSymbol?| . 1098571)
 (|OMUnknownCD?| . 1098481) (|OMParseError?| . 1098391) (|OMwrite| . 1096955)
 (|OMread| . 1096829) (|OMreadFile| . 1096711) (|OMreadStr| . 1096593)
 (|OMlistCDs| . 1096493) (|OMlistSymbols| . 1096363)
 (|OMsupportsCD?| . 1096241) (|OMsupportsSymbol?| . 1096116)
 (|OMunhandledSymbol| . 1095994) (|OMreceive| . 1095858) (|OMsend| . 1095694)
 (|OMserve| . 1095559) (|infinity| . 1095349) (|makeop| . 1095017)
 (|opeval| . 1094713) (|evaluateInverse| . 1094416) (|evaluate| . 1093344)
 (|conjug| . 1093038) (|getDatabase| . 1092901) (|whatInfinity| . 1092754)
 (|infinite?| . 1092487) (|finite?| . 1092135) (|minusInfinity| . 1091927)
 (|plusInfinity| . 1091719) (|pureLex| . 1091496) (|totalLex| . 1091273)
 (|reverseLex| . 1091050) (|leftLcm| . 1090903) (|right_ext_ext_GCD| . 1090556)
 (|rightExtendedGcd| . 1090272) (|rightGcd| . 1090125)
 (|rightExactQuotient| . 1089972) (|rightRemainder| . 1089825)
 (|rightQuotient| . 1089678) (|rightLcm| . 1089531)
 (|leftExtendedGcd| . 1089247) (|leftGcd| . 1089100)
 (|leftExactQuotient| . 1088947) (|leftRemainder| . 1088800)
 (|leftQuotient| . 1088653) (|times| . 1088382) (|monicLeftDivide| . 1087807)
 (|monicRightDivide| . 1087232) (|leftDivide| . 1086675)
 (|rightDivide| . 1086118) (|output| . 1085733) (|outputList| . 1085610)
 (|or| . 1085463) (|and| . 1085316) (|quo| . 1085155) (|rem| . 1084994)
 (~= . 1084859) (|blankSeparate| . 1084764) (|semicolonSeparate| . 1084669)
 (|commaSeparate| . 1084574) (|pile| . 1084479) (|paren| . 1084199)
 (|bracket| . 1084059) (|prod| . 1083913) (|overlabel| . 1083863)
 (|overbar| . 1083816) (|prime| . 1083674) (|quote| . 1083586)
 (|supersub| . 1083488) (|presuper| . 1083438) (|presub| . 1083388)
 (|super| . 1083338) (|sub| . 1083288) (|rarrow| . 1083238)
 (|assign| . 1078270) (|slash| . 1078220) (|over| . 1078170) (|zag| . 1078120)
 (|box| . 1077933) (|label| . 1077883) (|infix?| . 1077802)
 (|postfix| . 1077752) (|infix| . 1077603) (|prefix| . 1077505)
 (|vconcat| . 1077362) (|hconcat| . 1077219) (|rspace| . 1077133)
 (|vspace| . 1077052) (|hspace| . 1076971) (|messagePrint| . 1076857)
 (|message| . 1076777) (|padecf| . 1076458) (|pade| . 1075499)
 (|root| . 1075232) (|quotientByP| . 1075170) (|moduloP| . 1075065)
 (|modulus| . 1073789) (|digits| . 1073101) (|continuedFraction| . 1072092)
 (|light| . 1072016) (|pastel| . 1071940) (|bright| . 1071644)
 (|dim| . 1071568) (|dark| . 1071492) (|motzkinPathArray| . 1071312)
 (|jacobiPathArray| . 1071135) (|bottom| . 1070877) (|surface| . 1070779)
 (|coordinate| . 1070354) (|partitions| . 1069869) (|odd_partitions| . 1069545)
 (|distinct_partitions| . 1069221) (|conjugates| . 1069096)
 (|shuffle| . 1068924) (|shufflein| . 1068752) (|sequences| . 1068413)
 (|permutations| . 1068253) (|lists| . 1067997) (|atoms| . 1067741)
 (|makeResult| . 1067437) (|is?| . 1066236) (|Is| . 1064868)
 (|addMatchRestricted| . 1064677) (|insertMatch| . 1064489)
 (|addMatch| . 1064301) (|getMatch| . 1064114) (|failed| . 1063774)
 (|failed?| . 1063372) (|optpair| . 1063230) (|getBadValues| . 1063101)
 (|resetBadValues| . 1063012) (|hasTopPredicate?| . 1062888)
 (|topPredicate| . 1062698) (|setTopPredicate| . 1062536)
 (|patternVariable| . 1062376) (|withPredicates| . 1062244)
 (|setPredicates| . 1062112) (|predicates| . 1061983)
 (|hasPredicate?| . 1061859) (|optional?| . 1061735) (|multiple?| . 1061611)
 (|generic?| . 1061487) (|quoted?| . 1061363) (|inR?| . 1061239)
 (|depth| . 1061104) (|isList| . 1060962) (|isQuotient| . 1060736)
 (|isOp| . 1060319) (|predicate| . 1060102) (|satisfy?| . 1059443)
 (|addBadValue| . 1059152) (|badValues| . 1058950) (|retractable?| . 1058062)
 (|listOfTerms| . 1057242) (|One| . 1056754) (|adjoint| . 1055439)
 (|id_map| . 1055223) (|diff_map| . 1055009) (|ptree| . 1054822)
 (|coerceImages| . 1054500) (|fixedPoints| . 1054344) (|odd?| . 1053981)
 (|even?| . 1053618) (|numberOfCycles| . 1053479) (|cyclePartition| . 1053349)
 (|coerceListOfPairs| . 1053212) (|coercePreimagesImages| . 1053075)
 (|listRepresentation| . 1052854) (|permanent| . 1052651) (|cycles| . 1052504)
 (|cycle| . 1052366) (|perm_to_vec| . 1052089)
 (|initializeGroupForWordProblem| . 1051790) (|movedPoints| . 1051533)
 (|wordInGenerators| . 1051335) (|wordInStrongGenerators| . 1051137)
 (|orbits| . 1050990) (|orbit| . 1050365) (|permutationGroup| . 1050209)
 (|wordsForStrongGenerators| . 1050040) (|strongGenerators| . 1049884)
 (|base| . 1049415) (|random| . 1048254) (|generators| . 1047728)
 (|eval1a| . 1046970) (|eval1| . 1045446) (|modpreduction| . 1044789)
 (|modpeval| . 1044541) (|addVertex2| . 1044335) (|setMult!| . 1044160)
 (|getMaxRight| . 1044057) (|getMaxLeft| . 1043954) (|getIndexs| . 1043725)
 (|productFacet| . 1043359)
 (|solveLinearPolynomialEquationByRecursion| . 1042945)
 (|factorByRecursion| . 1042516) (|factorSquareFreeByRecursion| . 1042087)
 (|randomR| . 1041460) (|bivariateSLPEBR| . 1041043) (|charthRoot| . 1040784)
 (|conditionP| . 1040446) (|solveLinearPolynomialEquation| . 1039408)
 (|factorSquareFreePolynomial| . 1039203) (|factorPolynomial| . 1038687)
 (|squareFreePolynomial| . 1038482) (|gcdPolynomial| . 1037877)
 (|cmult| . 1037287) (|possibleOrder| . 1036720) (|simplifyCoeffs| . 1036002)
 (|torsion?| . 1034976) (|torsionIfCan| . 1033833) (|getGoodPrime| . 1033532)
 (|badNum| . 1032953) (|mix| . 1032583) (|doubleDisc| . 1032325)
 (|polyred| . 1032098) (|padicFraction| . 1031990)
 (|padicallyExpand| . 1031822) (|fractionalTerms| . 1031666)
 (|numberOfFractionalTerms| . 1031530) (|nthFractionalTerm| . 1031391)
 (|firstNumer| . 1031283) (|firstDenom| . 1031143)
 (|compactFraction| . 1031035) (|partialFraction| . 1030135)
 (|gcdPrimitive| . 1029246) (|symmetricGroup| . 1028911)
 (|alternatingGroup| . 1028576) (|abelianGroup| . 1028399)
 (|cyclicGroup| . 1027961) (|dihedralGroup| . 1027523) (|mathieu11| . 1027234)
 (|mathieu12| . 1026945) (|mathieu22| . 1026656) (|mathieu23| . 1026367)
 (|mathieu24| . 1026078) (|janko2| . 1025789) (|rubiksGroup| . 1025667)
 (|youngGroup| . 1025338) (|lexGroebner| . 1025150) (|totalGroebner| . 1024962)
 (|qcoerce| . 1024785) (|expressIdealMember| . 1024674)
 (|principalIdeal| . 1024480) (|LagrangeInterpolation| . 1024269)
 (|psolve| . 1014079) (|wrregime| . 1013074) (|rdregime| . 1011919)
 (|bsolve| . 1010330) (|dmp2rfi| . 1009039) (|se2rfi| . 1008586)
 (|pr2dmp| . 1008198) (|hasoln| . 1007659) (|ParCondList| . 1006701)
 (|redpps| . 1006112) (|B1solve| . 1005202) (|factorset| . 1004820)
 (|maxrank| . 1003999) (|minrank| . 1003178) (|minset| . 1002787)
 (|nextSublist| . 1002349) (|overset?| . 1001892) (|ParCond| . 1001271)
 (|redmat| . 1000856) (|regime| . 999560) (|sqfree| . 999213)
 (|inconsistent?| . 998366) (|debug| . 998071) (|numFunEvals| . 997999)
 (|setAdaptive| . 997924) (|adaptive?| . 997852)
 (|setScreenResolution| . 997777) (|screenResolution| . 997534)
 (|setMaxPoints| . 997459) (|maxPoints| . 997216) (|setMinPoints| . 997141)
 (|minPoints| . 996898) (|parametric?| . 996823) (|plotPolar| . 996141)
 (|debug3D| . 996064) (|numFunEvals3D| . 995990) (|setAdaptive3D| . 995913)
 (|adaptive3D?| . 995839) (|setScreenResolution3D| . 995762)
 (|screenResolution3D| . 995688) (|setMaxPoints3D| . 995611)
 (|maxPoints3D| . 995537) (|setMinPoints3D| . 995460) (|minPoints3D| . 995386)
 (|tValues| . 995278) (|tRange| . 995092) (|plot| . 993090)
 (|pointPlot| . 992385) (|calcRanges| . 992204) (|optional| . 991902)
 (|multiple| . 991600) (|fixPredicate| . 991265) (|patternMatch| . 986281)
 (|patternMatchTimes| . 985668) (|bernoulli| . 985331) (|chebyshevT| . 984985)
 (|chebyshevU| . 984639) (|cyclotomic| . 984117) (|euler| . 983821)
 (|fixedDivisor| . 983644) (|laguerre| . 983467) (|legendre| . 983168)
 (|dmpToHdmp| . 982896) (|hdmpToDmp| . 982624) (|pToHdmp| . 982385)
 (|hdmpToP| . 982146) (|dmpToP| . 981918) (|pToDmp| . 981690)
 (|sylvesterSequence| . 981482) (|sturmSequence| . 981277)
 (|boundOfCauchy| . 981066) (|sturmVariationsOf| . 980781)
 (|lazyVariations| . 980455) (|content| . 979768) (|minimumDegree| . 978978)
 (|isPlus| . 977869) (|isTimes| . 976733) (|isExpt| . 974675)
 (|isPower| . 973658) (|rroot| . 972933) (|qroot| . 972160) (|froot| . 971403)
 (|nthr| . 970669) (|copy_first| . 970492) (|copy_slice| . 970312)
 (|eval_at| . 970164) (|vector_add_mul| . 969978) (|mul_by_binomial| . 969623)
 (|mul_by_scalar| . 969443) (|mul| . 969298)
 (|truncated_multiplication| . 969150) (|truncated_mul_add| . 968967)
 (|pow| . 968527) (|divide!| . 968347) (|remainder!| . 968170)
 (|vector_combination| . 967981) (|to_mod_pa| . 967773) (|pa_to_sup| . 967596)
 (|lcm| . 967263) (|extended_gcd| . 967072) (< . 966661) (> . 966430)
 (>= . 966292) (<= . 966020) (|createY| . 965519) (|createX| . 965018)
 (|createWidth| . 964526) (|isDirected?| . 964076) (|coverMatrix| . 963928)
 (|zetaMatrix| . 963780) (|moebius| . 963533) (|isAntiChain?| . 963409)
 (|isChain?| . 963285) (|isAntisymmetric?| . 963161)
 (|completeTransitivity| . 963072) (|completeReflexivity| . 962983)
 (|objectToIndex| . 962845) (|indexToObject| . 962707) (|lowerSet| . 962618)
 (|upperSet| . 962529) (|lub| . 962334) (|glb| . 962139) (|joinIfCan| . 961799)
 (|meetIfCan| . 961459) (|implies| . 961201) (|powerSetStructure| . 961112)
 (|opposite| . 961023) (|addArrow!| . 959800) (|setArr| . 959623)
 (|setVert| . 959471) (|getArr| . 959329) (|getVert| . 959205)
 (|finitePoset| . 958301) (|addObject!| . 957855) (|powerset| . 957675)
 (|completelyOrderedSet| . 957511) (|posetN5| . 957347) (|posetM5| . 957183)
 (|posetO6| . 957019) (|posetP6| . 956855) (|posetL7| . 956691)
 (|firstUncouplingMatrix| . 956417) (|le| . 956245) (|lcx0| . 955670)
 (|lcz| . 955235) (|coeffs0| . 954948) (|coeffs1| . 954644)
 (|alg_reduce0| . 954434) (|alg_reduce| . 954141)
 (|alg_trial_division| . 953817) (|integral| . 952652)
 (|primitiveElement| . 949992) (|nextPrime| . 949875) (|prevPrime| . 949758)
 (|primes| . 949610) (|print| . 949414) (|merge!| . 948990)
 (|get_rational_roots| . 948198) (|integerBound| . 947723)
 (|resultantEuclidean| . 947404) (|semiResultantEuclidean2| . 947150)
 (|semiResultantEuclidean1| . 946896) (|indiceSubResultant| . 946665)
 (|indiceSubResultantEuclidean| . 946294)
 (|semiIndiceSubResultantEuclidean| . 945988) (|degreeSubResultant| . 945757)
 (|degreeSubResultantEuclidean| . 945386)
 (|semiDegreeSubResultantEuclidean| . 945080)
 (|lastSubResultantEuclidean| . 944758)
 (|semiLastSubResultantEuclidean| . 944501)
 (|subResultantGcdEuclidean| . 944217)
 (|semiSubResultantGcdEuclidean2| . 943969)
 (|semiSubResultantGcdEuclidean1| . 943721) (|discriminantEuclidean| . 943402)
 (|semiDiscriminantEuclidean| . 943148) (|chainSubResultants| . 942938)
 (|schema| . 942701) (|resultantReduit| . 942487)
 (|resultantReduitEuclidean| . 942130)
 (|semiResultantReduitEuclidean| . 941838) (|divide| . 940991)
 (|next_sousResultant2| . 940803) (|pdct| . 940723) (|powers| . 940572)
 (|partition| . 940358) (|complete| . 939481) (|pole?| . 939136)
 (|zRange| . 939011) (|yRange| . 938763) (|xRange| . 938515)
 (|listBranches| . 938235) (|triangular?| . 937897)
 (|rewriteIdealWithRemainder| . 937549)
 (|rewriteIdealWithHeadRemainder| . 937201) (|remainder| . 936757)
 (|headRemainder| . 936380) (|roughUnitIdeal?| . 936042)
 (|roughEqualIdeals?| . 935701) (|roughSubIdeal?| . 935360)
 (|roughBase?| . 935022) (|trivialIdeal?| . 934721) (|collectUpper| . 934452)
 (|collect| . 934014) (|collectUnder| . 933745) (|mainVariable?| . 933441)
 (|mainVariables| . 933140) (|removeSquaresIfCan| . 932816)
 (|unprotectedRemoveRedundantFactors| . 932496)
 (|removeRedundantFactors| . 930817) (|certainlySubVariety?| . 930462)
 (|possiblyNewVariety?| . 930070) (|probablyZeroDim?| . 929718)
 (|selectPolynomials| . 929209) (|selectOrPolynomials| . 928684)
 (|selectAndPolynomials| . 928159) (|quasiMonicPolynomials| . 927696)
 (|univariate?| . 927379) (|univariatePolynomials| . 926916)
 (|linear?| . 926599) (|linearPolynomials| . 926136) (|bivariate?| . 925819)
 (|bivariatePolynomials| . 925356)
 (|removeRoughlyRedundantFactorsInPols| . 924673)
 (|removeRoughlyRedundantFactorsInPol| . 924346) (|interReduce| . 924022)
 (|roughBasicSet| . 923565) (|crushedSet| . 923241)
 (|rewriteSetByReducingWithParticularGenerators| . 922768)
 (|rewriteIdealWithQuasiMonicGenerators| . 922341)
 (|squareFreeFactors| . 921992) (|univariatePolynomialsGcds| . 921251)
 (|removeRoughlyRedundantFactorsInContents| . 920892)
 (|removeRedundantFactorsInContents| . 920533)
 (|removeRedundantFactorsInPols| . 920174) (|irreducibleFactors| . 919757)
 (|lazyIrreducibleFactors| . 919340)
 (|removeIrreducibleRedundantFactors| . 918920) (|normalForm| . 918224)
 (|changeBase| . 917871) (|companionBlocks| . 917519) (|xCoord| . 917396)
 (|yCoord| . 917273) (|zCoord| . 917150) (|rCoord| . 917027)
 (|thetaCoord| . 916904) (|phiCoord| . 916781) (|color| . 916584)
 (|hue| . 916313) (|shade| . 916114) (|nthRootIfCan| . 915949)
 (|expIfCan| . 915829) (|logIfCan| . 915709) (|sinIfCan| . 915589)
 (|cosIfCan| . 915469) (|tanIfCan| . 915349) (|cotIfCan| . 915229)
 (|secIfCan| . 915109) (|cscIfCan| . 914989) (|asinIfCan| . 914869)
 (|acosIfCan| . 914749) (|atanIfCan| . 914629) (|acotIfCan| . 914509)
 (|asecIfCan| . 914389) (|acscIfCan| . 914269) (|sinhIfCan| . 914149)
 (|coshIfCan| . 914029) (|tanhIfCan| . 913909) (|cothIfCan| . 913789)
 (|sechIfCan| . 913669) (|cschIfCan| . 913549) (|asinhIfCan| . 913429)
 (|acoshIfCan| . 913309) (|atanhIfCan| . 913189) (|acothIfCan| . 913069)
 (|asechIfCan| . 912949) (|acschIfCan| . 912829) (|pushdown| . 911216)
 (|pushup| . 909603) (|reducedDiscriminant| . 909288)
 (|idealSimplify| . 909032) (|definingInequation| . 908776)
 (|definingEquations| . 908485) (|setStatus| . 908172)
 (|quasiAlgebraicSet| . 907878) (|radicalSimplify| . 907240)
 (|denominator| . 906867) (|numerator| . 906504) (|denom| . 905074)
 (|numer| . 903624) (|quadraticForm| . 903452) (|back| . 903361)
 (|front| . 903270) (|rotate!| . 903179) (|dequeue!| . 903088)
 (|enqueue!| . 902994) (|quatern| . 902872) (|imagK| . 902650)
 (|imagJ| . 902428) (|imagI| . 902206) (|conjugate| . 901675)
 (|queue| . 901553) (|nthRoot| . 901105) (|fractRadix| . 900970)
 (|wholeRadix| . 900838) (|cycleRagits| . 900706) (|prefixRagits| . 900574)
 (|fractRagits| . 900440) (|wholeRagits| . 900308) (|radix| . 900146)
 (|randnum| . 899969) (|reseed| . 899846) (|seed| . 899758)
 (|factorSquareFree| . 898189) (|rational| . 896706) (|rational?| . 895354)
 (|rationalIfCan| . 893871) (|setvalue!| . 893727) (|setchildren!| . 893555)
 (|node?| . 893390) (|child?| . 893225) (|leaves| . 893095) (|nodes| . 892965)
 (|rename| . 892869) (|rename!| . 892773) (|mainValue| . 892648)
 (|mainDefiningPolynomial| . 892523) (|mainForm| . 892417) (|sqrt| . 891703)
 (|multi_SPDE| . 890576) (SPDE1 . 890121) (|rischDEsys| . 889038)
 (|ei_int| . 888203) (|mk_erf| . 887639) (|risch_de_ext| . 886927)
 (|do_risch_DE| . 886157) (|do_param_RDE| . 885514) (|param_rde| . 882439)
 (|param_rde2| . 881052) (|exp_lower_bound| . 880161) (|monomRDEsys| . 879586)
 (|baseRDEsys| . 879221) (|weighted| . 878985) (|rdHack1| . 878729)
 (|midpoint| . 878406) (|midpoints| . 878048) (|realZeros| . 874746)
 (|mainCharacterization| . 874343) (|algebraicOf| . 873916)
 (|makeRec| . 873253) (|makeFEq| . 872587) (|getEq| . 872064)
 (|values| . 870902) (|eltable?| . 870351) (|ReduceOrder| . 869901)
 (|setref| . 869814) (|deref| . 869732) (|ref| . 869650)
 (|radicalEigenvectors| . 869166) (|radicalEigenvector| . 868905)
 (|radicalEigenvalues| . 868708) (|eigenMatrix| . 868504)
 (|normalise| . 868379) (|gramschmidt| . 868245) (|orthonormalBasis| . 868037)
 (|antisymmetricTensors| . 867587) (|createGenericMatrix| . 867385)
 (|symmetricTensors| . 867018) (|tensorProduct| . 866464)
 (|permutationRepresentation| . 865405) (|completeEchelonBasis| . 865223)
 (|createRandomElement| . 865040) (|cyclicSubmodule| . 864771)
 (|standardBasisOfCyclicSubmodule| . 864513) (|areEquivalent?| . 863777)
 (|isAbsolutelyIrreducible?| . 863329) (|meatAxe| . 862131)
 (|scanOneDimSubspaces| . 861849) (|double| . 861597) (|expt| . 861345)
 (|lift| . 859426) (|showArrayValues| . 859349) (|showScalarValues| . 859272)
 (|solveRetract| . 858864) (|variables| . 856024) (|mainVariable| . 855093)
 (|univariate| . 851697) (|multivariate| . 849556) (|uniform01| . 849464)
 (|normal01| . 849372) (|exponential1| . 849280) (|chiSquare1| . 849139)
 (|normal| . 848996) (|exponential| . 848600) (|chiSquare| . 848440)
 (F . 848277) (|t| . 848117) (|factorFraction| . 847877)
 (|alg_split_roots| . 847314) (|alg_split_root0| . 846968) (|uniform| . 846491)
 (|binomial| . 845864) (|poisson| . 845698) (|geometric| . 845532)
 (|ridHack1| . 845417) (|interpolate| . 843974) (|nullity| . 842601)
 (|column| . 842048) (|qelt| . 841358) (|maxColIndex| . 840811)
 (|minColIndex| . 840264) (|maxRowIndex| . 839717) (|minRowIndex| . 839170)
 (|antisymmetric?| . 838581) (|symmetric?| . 838027) (|diagonal?| . 837473)
 (|square?| . 836919) (|matrix| . 835572) (|rectangularMatrix| . 835312)
 (|annihilate?| . 835233) (|characteristic| . 833209) (|round| . 833154)
 (|fractionPart| . 832483) (|wholePart| . 832020) (|floor| . 831803)
 (|ceiling| . 831586) (|norm| . 827629) (|mightHaveRoots| . 827382)
 (|refine| . 825328) (|middle| . 825119) (|size| . 822770) (|right| . 822149)
 (|left| . 821528) (|roman| . 821363) (|mainSquareFreePart| . 821128)
 (|mainPrimitivePart| . 820893) (|mainContent| . 820658)
 (|primitivePart!| . 820423) (|gcd| . 817788) (|iexactQuo| . 816630)
 (|next_subResultant2| . 816381) (|LazardQuotient2| . 815854)
 (|LazardQuotient| . 815333) (|subResultantChain| . 815055)
 (|halfExtendedSubResultantGcd2| . 814421)
 (|halfExtendedSubResultantGcd1| . 813787) (|extendedSubResultantGcd| . 813041)
 (|exactQuotient!| . 812557) (|exactQuotient| . 812073)
 (|primPartElseUnitCanonical!| . 811833) (|primPartElseUnitCanonical| . 811593)
 (|retract| . 804904) (|retractIfCan| . 797886) (|lazyResidueClass| . 797212)
 (|monicModulo| . 796894) (|lazyPseudoDivide| . 795737)
 (|lazyPremWithDefault| . 795016) (|lazyPquo| . 794603) (|lazyPrem| . 794190)
 (|pquo| . 793777) (|prem| . 793364) (|supRittWu?| . 793130)
 (|RittWuCompare| . 792894) (|mainMonomials| . 792663)
 (|mainCoefficients| . 792432) (|leastMonomial| . 792229)
 (|mainMonomial| . 792026) (|quasiMonic?| . 791795) (|monic?| . 791362)
 (|deepestInitial| . 791159) (|iteratedInitials| . 790928)
 (|deepestTail| . 790725) (|head| . 790419) (|mdeg| . 790170) (|mvar| . 789703)
 (|relativeApprox| . 789093) (|rootOf| . 787483) (|allRootsOf| . 786358)
 (|definingPolynomial| . 785282) (|positive?| . 784712) (|negative?| . 784142)
 (|augment| . 782800) (|lastSubResultant| . 781864)
 (|lastSubResultantElseSplit| . 781525) (|invertibleSet| . 781202)
 (|invertible?| . 780470) (|invertibleElseSplit?| . 780125)
 (|purelyAlgebraicLeadingMonomial?| . 779802)
 (|algebraicCoefficients?| . 779479) (|purelyTranscendental?| . 779156)
 (|purelyAlgebraic?| . 778515) (|prepareSubResAlgo| . 778028)
 (|internalLastSubResultant| . 777028) (|integralLastSubResultant| . 776589)
 (|toseLastSubResultant| . 776150) (|toseInvertible?| . 775272)
 (|toseInvertibleSet| . 774876) (|toseSquareFreePart| . 774440)
 (|quotedOperators| . 773964) (|pattern| . 773524) (|suchThat| . 771294)
 (|rule| . 770385) (|rules| . 769899) (|ruleset| . 769413) (|rur| . 767296)
 (|create| . 767241) (|nullBoundary| . 767150) (|boxBoundary| . 767053)
 (|ellipseBoundary| . 766956) (|intersection| . 766813) (|sunion| . 766716)
 (|extendToPoint| . 766619) (|containsPoint?| . 766487)
 (|lineIntersect| . 766390) (|isNull?| . 766261) (|isEllipse?| . 766132)
 (|isBox?| . 766003) (|getMin| . 765909) (|getMax| . 765815)
 (|getCentre| . 765721) (|clearCache| . 765599) (|linearSearch| . 765447)
 (|enterInCache| . 765154) (|parse_integer| . 765030) (|variableOf| . 764836)
 (|samplePoint| . 764546) (|hasDimension?| . 764198)
 (|allSimpleCells| . 763665) (|createSceneRoot| . 763164)
 (|createSceneGroup| . 763077) (|addSceneGroup| . 762987)
 (|createSceneLine| . 762565) (|addSceneLine| . 762134)
 (|createSceneLines| . 762000) (|addSceneLines| . 761863)
 (|createSceneShape| . 761486) (|addSceneShape| . 761103)
 (|createSceneDef| . 760976) (|addSceneDef| . 760846)
 (|createSceneUse| . 760722) (|addSceneUse| . 760595)
 (|createSceneArrows| . 760389) (|addSceneArrows| . 760180)
 (|createSceneArrow| . 759809) (|addSceneArrow| . 759432)
 (|createSceneNamedPoints| . 759295) (|addSceneNamedPoints| . 759155)
 (|createSceneIFS| . 758836) (|addSceneIFS| . 758511)
 (|createSceneBox| . 758382) (|addSceneBox| . 758250)
 (|createSceneText| . 757608) (|addSceneText| . 756957)
 (|createSceneClip| . 756673) (|addSceneClip| . 756383)
 (|createSceneGrid| . 755740) (|addSceneGrid| . 755085)
 (|createScenePattern| . 754643) (|addScenePattern| . 754195)
 (|createSceneRuler| . 753838) (|addSceneRuler| . 753475)
 (|createSceneGraph| . 753250) (|addSceneGraph| . 753022)
 (|createSceneMaterial| . 752551) (|addSceneMaterial| . 752074)
 (|createSceneTransform| . 751943) (|addSceneTransform| . 751809)
 (|createPlot1Din2D| . 751304) (|addPlot1Din2D| . 750793)
 (|createPlot1Din2Dparametric| . 750486) (|addPlot1Din2Dparametric| . 750176)
 (|createPlot1Din3Dparametric| . 749624) (|addPlot1Din3Dparametric| . 749066)
 (|createPlot2Din3D| . 748532) (|addPlot2Din3D| . 748259)
 (|createPlot2Din3Dparametric| . 747672) (|addPlot2Din3Dparametric| . 747079)
 (|createArrows2Din2D| . 746842) (|addArrows2Din2D| . 746602)
 (|addChild!| . 746477) (|removeChild!| . 746352) (|setTransform!| . 746193)
 (|toSVG| . 745088) (|toX3D| . 744213) (|toObj| . 743386) (|writeSvg| . 743234)
 (|writeSvgQuantised| . 743082) (|writeX3d| . 742930) (|writeObj| . 742611)
 (|smesh| . 742443) (|singleFace| . 742315) (|subdivide| . 742222)
 (|sierpinskiDivide| . 742080) (|stube| . 741603) (|curveLoops| . 741365)
 (|indexes| . 741208) (|pointList| . 740949) (|findNode| . 740775)
 (|addNode!| . 740598) (|addPoints!| . 740457) (|findPoint| . 740319)
 (|getNames| . 740168) (|isNodeBranch?| . 740032) (|isNodeLeaf?| . 739896)
 (|isPointLeaf?| . 739760) (|namedBranch| . 739550) (|namedPoints| . 739178)
 (|normalisePoint| . 739086) (|structuralConstants| . 737734)
 (|equation| . 737373) (|incr| . 737246) (|high| . 737154) (|low| . 737062)
 (|hi| . 736970) (|lo| . 736878) (BY . 736748) (|horizSplit| . 735811)
 (|horizJoin| . 735671) (|join| . 734930) (|pivots| . 734668)
 (|pivot| . 734425) (|primitiveRowEchelon| . 733991) (|setGcdMode| . 733788)
 (|rowEchelon| . 730871) (|extract| . 730693) (|appendRow!| . 730403)
 (|consRow!| . 730113) (|deleteRow!| . 729913) (|setRow!| . 729052)
 (|row| . 728188) (|sortedPurge!| . 727966) (|purge!| . 727744)
 (|elimZeroCols!| . 727582) (|allIndices| . 727410) (|nrows| . 726635)
 (|ncols| . 725860) (|dilate| . 725746) (|firstn| . 725558)
 (|sequence| . 725271) (|apply| . 722999) (|union| . 722206)
 (|subset?| . 722072) (|symmetricDifference| . 721966) (|difference| . 721756)
 (|intersect| . 719733) (|set| . 719504) (|brace| . 719137) (|latex| . 719052)
 (|hashUpdate!| . 718961) (|hash| . 718869) (|complement| . 718451)
 (|subsetLattice| . 718301) (|delta| . 718092) (|enumerate| . 717806)
 (|setOfMinN| . 717606) (|elements| . 717406) (|replaceKthElement| . 717241)
 (|incrementKthElement| . 717079) (|cdr| . 716851) (|car| . 716623)
 (|float| . 716159) (|integer| . 715669) (|symbol| . 715110)
 (|destruct| . 714627) (|float?| . 714364) (|integer?| . 713742)
 (|symbol?| . 713233) (|string?| . 712846) (|list?| . 712583)
 (|pair?| . 712320) (|null?| . 712057) (|eq| . 711791) (|fortran| . 711556)
 (|startTable!| . 710720) (|stopTable!| . 709956)
 (|supDimElseRittWu?| . 709174) (|algebraicSort| . 708398)
 (|moreAlgebraic?| . 707616) (|subTriSet?| . 706834) (|subPolSet?| . 705996)
 (|internalSubPolSet?| . 705158) (|internalInfRittWu?| . 704320)
 (|internalSubQuasiComponent?| . 703566) (|subQuasiComponent?| . 701934)
 (|removeSuperfluousQuasiComponents| . 701158) (|subCase?| . 700240)
 (|removeSuperfluousCases| . 699408) (|prepareDecompose| . 698126)
 (|branchIfCan| . 697010) (|startTableGcd!| . 696137)
 (|stopTableGcd!| . 695336) (|startTableInvSet!| . 694463)
 (|stopTableInvSet!| . 693662) (|stosePrepareSubResAlgo| . 693146)
 (|stoseInternalLastSubResultant| . 692092)
 (|stoseIntegralLastSubResultant| . 691624) (|stoseLastSubResultant| . 691156)
 (|stoseInvertible?_sqfreg| . 690643) (|stoseInvertibleSet_sqfreg| . 690218)
 (|stoseInvertible?_reg| . 689705) (|stoseInvertibleSet_reg| . 689280)
 (|stoseInvertible?| . 688344) (|stoseInvertibleSet| . 687919)
 (|stoseSquareFreePart| . 687454) (|coleman| . 687278)
 (|inverseColeman| . 687102) (|listYoungTableaus| . 686923)
 (|makeYoungTableau| . 686750) (|nextColeman| . 686574)
 (|nextLatticePermutation| . 686416) (|nextPartition| . 686054)
 (|numberOfImproperPartitions| . 685936) (|subSet| . 685778)
 (|unrankImproperPartitions0| . 685620) (|unrankImproperPartitions1| . 685462)
 (|subresultantSequence| . 685196) (|SturmHabichtSequence| . 684930)
 (|SturmHabichtCoefficients| . 684692) (|SturmHabicht| . 684454)
 (|countRealRoots| . 684219) (|SturmHabichtMultiple| . 683942)
 (|countRealRootsMultiple| . 683668) (|coHomology| . 683225)
 (|homology| . 682536) (|coChain| . 682240) (|chain| . 681806)
 (|fundamentalGroup| . 680808) (|oneSkeleton| . 680472)
 (|simplicialJoin| . 680318) (|makeDisjoint| . 680202)
 (|refactorIndexes| . 679935) (|cone| . 679773) (|link| . 679344)
 (|star| . 679187) (|boundary| . 678593) (|addImpliedFaces| . 678255)
 (|sort| . 677234) (|grade| . 676670) (|minIndex| . 676248)
 (|maxIndex| . 675672) (|addSimplex| . 675515)
 (|simplicialComplexIfCan| . 675170) (|simplicialComplex| . 674554)
 (|sphereSolid| . 674170) (|sphereSurface| . 673786) (|line| . 673621)
 (|torusSurface| . 673188) (|band| . 672902) (|moebiusBand| . 672616)
 (|projectiveSpace| . 672065) (|kleinBottle| . 671632) (|dunceHat| . 671320)
 (|Or| . 671181) (|And| . 671042) (|Not| . 670909) (|xor| . 670759)
 (|not| . 670573) (|qconvert| . 670487) (|/\\| . 670196) (|\\/| . 669905)
 (~ . 669394) (|top| . 669303) (|pop!| . 669212) (|push!| . 669118)
 (|redux| . 668801) (|freeVariable?| . 668672) (|getVariable| . 668502)
 (|isS?| . 668376) (|isK?| . 668250) (|isI?| . 668124) (|variable?| . 667998)
 (|atom?| . 667118) (|getChildren| . 666529) (|parseTerm| . 665909)
 (|parseSki| . 665784) (S . 665696) (K . 665608) (I . 665520) (|ski| . 665337)
 (|Delta| . 664988) (D . 662415) (|Pfaffian| . 661849) (|minordet| . 660994)
 (|determinant| . 659855) (|diagonalProduct| . 659183) (|trace| . 658252)
 (|diagonal| . 657995) (|diagonalMatrix| . 656412) (|scalarMatrix| . 655887)
 (|hermite| . 655434) (|completeHermite| . 655086) (|smith| . 654507)
 (|completeSmith| . 653475) (|diophantineSystem| . 653045)
 (|remap_variables| . 652660) (|csubst| . 652302)
 (|particularSolution| . 650101) (|mapSolve| . 649491) (|linear| . 648810)
 (|quadratic| . 648126) (|cubic| . 647439) (|quartic| . 646749)
 (|aLinear| . 646437) (|aQuadratic| . 646122) (|aCubic| . 645804)
 (|aQuartic| . 645483) (|radicalSolve| . 642599) (|radicalRoots| . 641874)
 (|contractSolve| . 640957) (|decomposeFunc| . 640716) (|limitPart| . 640667)
 (|integerPart| . 640564) (|ordinalPower| . 640512) (|ordinalMul| . 640460)
 (|ordinalAdd| . 640408) (|omegapower| . 640359) (|omega| . 640313)
 (|bubbleSort!| . 639719) (|insertionSort!| . 639125) (|check| . 638262)
 (|objects| . 637869) (|lprop| . 637712) (|llprop| . 637546) (|lllp| . 637388)
 (|lllip| . 637220) (|lp| . 637080) (|mesh?| . 636950) (|mesh| . 635544)
 (|polygon?| . 635414) (|polygon| . 634855) (|closedCurve?| . 634725)
 (|closedCurve| . 634166) (|curve?| . 634036) (|curve| . 633282)
 (|point?| . 633152) (|enterPointData| . 632963) (|composites| . 632833)
 (|components| . 632703) (|numberOfComposites| . 632562)
 (|numberOfComponents| . 631743) (|create3Space| . 631517)
 (|outputAsFortran| . 630888) (|outputAsScript| . 630625)
 (|outputAsTex| . 630362) (|abs| . 629398) (|Beta| . 628540)
 (|digamma| . 627861) (|polygamma| . 627284) (|Gamma| . 626351)
 (|besselJ| . 625859) (|besselY| . 625367) (|besselI| . 624875)
 (|besselK| . 624383) (|airyAi| . 623903) (|airyAiPrime| . 623653)
 (|airyBi| . 623173) (|airyBiPrime| . 622923) (|lambertW| . 622256)
 (|polylog| . 622000) (|weierstrassP| . 621525) (|weierstrassPPrime| . 621050)
 (|weierstrassSigma| . 620788) (|weierstrassZeta| . 620526)
 (|weierstrassPInverse| . 620264) (|whittakerM| . 620002)
 (|whittakerW| . 619740) (|angerJ| . 619484) (|weberE| . 619228)
 (|struveH| . 618972) (|struveL| . 618716) (|hankelH1| . 618460)
 (|hankelH2| . 618204) (|lommelS1| . 617942) (|lommelS2| . 617680)
 (|kummerM| . 617418) (|kummerU| . 617156) (|legendreP| . 616663)
 (|legendreQ| . 616401) (|kelvinBei| . 616145) (|kelvinBer| . 615889)
 (|kelvinKei| . 615633) (|kelvinKer| . 615377) (|ellipticK| . 614694)
 (|ellipticE| . 613061) (|ellipticF| . 612109) (|ellipticPi| . 611349)
 (|jacobiSn| . 610697) (|jacobiCn| . 610045) (|jacobiDn| . 609393)
 (|jacobiZeta| . 609043) (|jacobiTheta| . 608787) (|lerchPhi| . 608525)
 (|riemannZeta| . 608275) (|charlierC| . 608013) (|hermiteH| . 607588)
 (|jacobiP| . 607320) (|laguerreL| . 606717) (|meixnerM| . 606449)
 (|hypergeometricF| . 605999) (|meijerG| . 605537) (|lambertW0| . 605351)
 (|weierstrassP0| . 605159) (|weierstrassPPrime0| . 604967)
 (|weierstrassZeta0| . 604775) (|weierstrassSigma0| . 604583)
 (|subNode?| . 604304) (|infLex?| . 603969) (|setEmpty!| . 603777)
 (|setStatus!| . 603554) (|setCondition!| . 603359) (|setValue!| . 603164)
 (|copy| . 601933) (|status| . 601430) (|condition| . 601238)
 (|value| . 600455) (|splitNodeOf!| . 599893) (|remove!| . 598530)
 (|remove| . 597478) (|subNodeOf?| . 597152) (|nodeOf?| . 596882)
 (|result| . 596615) (|conditions| . 596395) (|updateStatus!| . 596203)
 (|extractSplittingLeaf| . 596009) (|extendedCoords| . 595900)
 (|screenCoords| . 595791) (|screenCoordZ| . 595698) (|screenCoordY| . 595605)
 (|screenCoordX| . 595512) (|inBounds?| . 595417) (|isVector?| . 595328)
 (|isPoint?| . 595239) (|toVector| . 595186) (|toPoint| . 595133)
 (|perpendicular| . 595077) (|colinearity| . 594981) (|parallel| . 594885)
 (|distance| . 594478) (|distanceSquared| . 594382) (|Pnan?| . 594293)
 (|max| . 593384) (|min| . 592473) (|sivec| . 592288) (|svec| . 592095)
 (|sipnt| . 591910) (|spnt| . 591717) (|squareMatrix| . 591509)
 (|transpose| . 590493) (|rightTrim| . 590209) (|leftTrim| . 589925)
 (|trim| . 589641) (|split| . 586948) (|position| . 585619)
 (|replace| . 585495) (|match?| . 585362) (|substring?| . 585231)
 (|suffix?| . 585138) (|prefix?| . 585045) (|upperCase!| . 584991)
 (|upperCase| . 584847) (|lowerCase!| . 584793) (|lowerCase| . 584649)
 (|KrullNumber| . 583623) (|numberOfVariables| . 582597)
 (|algebraicDecompose| . 581196) (|transcendentalDecompose| . 578374)
 (|internalDecompose| . 574024) (|decompose| . 570855)
 (|upDateBranches| . 569158) (|printInfo| . 568143) (|pre_process| . 566896)
 (|internalZeroSetSplit| . 566046) (|internalAugment| . 564641)
 (|monomial| . 561361) (|leadingMonomial| . 560002)
 (|leadingCoefficient| . 557985) (|stack| . 557863)
 (|possiblyInfinite?| . 557736) (|explicitlyFinite?| . 557609)
 (|nextItem| . 557549) (|init| . 557301) (|exp0| . 557145) (|log1| . 556989)
 (|tensorMap| . 556819) (|stransform| . 556168) (|stranslate| . 556019)
 (|identity| . 555761) (|xform| . 555663) (|compound| . 555565)
 (|STransform1| . 555088) (|STransform2| . 554611) (|STransform| . 554134)
 (|distributionBySTransform| . 553090)
 (|freeMultiplicativeConvolution| . 552442) (|filterUntil| . 552169)
 (|filterWhile| . 551896) (|stream| . 551385) (|showAll?| . 551238)
 (|showAllElements| . 551085) (|showElements| . 550883) (|cons| . 550611)
 (|delay| . 550481) (|findCycle| . 550137) (|repeating?| . 549949)
 (|repeating| . 549833) (|uentries| . 549739) (|ucodeToString| . 549662)
 (|exquo| . 548236) (|recip| . 546191) (|integers| . 546007)
 (|oddintegers| . 545823) (|int| . 544947) (|mapmult| . 544804)
 (|deriv| . 544510) (|gderiv| . 544317) (|compose| . 544174)
 (|addiag| . 543986) (|prodiag| . 543798) (|general_Lambert_product| . 543617)
 (|lazyIntegrate| . 543157) (|nlde| . 542907) (|powern| . 542683)
 (|mapdiv| . 542505) (|lazyGintegrate| . 542232) (|power| . 542054)
 (|sincos| . 541744) (|sinhcosh| . 541432) (|asin| . 539909) (|acos| . 538386)
 (|atan| . 536771) (|acot| . 535448) (|asec| . 534125) (|acsc| . 532802)
 (|sinh| . 531285) (|cosh| . 529768) (|tanh| . 528251) (|coth| . 526934)
 (|sech| . 525617) (|csch| . 524300) (|asinh| . 522980) (|acosh| . 521660)
 (|atanh| . 520340) (|acoth| . 519020) (|asech| . 517700) (|acsch| . 516380)
 (|subresultantVector| . 516157) (|primitivePart| . 514917)
 (|pointData| . 514752) (|parent| . 514625) (|level| . 514452)
 (|extractProperty| . 514272) (|extractClosed| . 514117)
 (|extractIndex| . 513944) (|extractPoint| . 513788) (|traverse| . 513603)
 (|defineProperty| . 513362) (|closeComponent| . 513146)
 (|modifyPoint| . 512491) (|addPointLast| . 512280) (|addPoint2| . 512121)
 (|addPoint| . 511469) (|merge| . 510244) (|deepCopy| . 510117)
 (|shallowCopy| . 509990) (|numberOfChildren| . 509817) (|children| . 509511)
 (|child| . 509335) (|birth| . 509208) (|internal?| . 509053)
 (|root?| . 508898) (|leaf?| . 508615) (|rhs| . 507971) (|lhs| . 507327)
 (|construct| . 501851) (|sum| . 498349) (|outputForm| . 497384) (NOT . 497033)
 (AND . 496720) (EQ . 496407) (OR . 496094) (GE . 495781) (LE . 495468)
 (GT . 495155) (LT . 494842) (|ansatz| . 494532) (|transform| . 493252)
 (|linearize| . 492667) (|detSys| . 491459) (|ncDetSys| . 490251)
 (|detSysNS| . 489454) (|sample| . 489098) (|string| . 488586)
 (|argscript| . 488492) (|superscript| . 488398) (|subscript| . 488304)
 (|script| . 487807) (|scripts| . 487325) (|scripted?| . 487248)
 (|name| . 486470) (|resetNew| . 486399) (|symFunc| . 486067)
 (|symbolTableOf| . 485939) (|argumentListOf| . 485807)
 (|returnTypeOf| . 485577) (|printHeader| . 485263) (|returnType!| . 484548)
 (|argumentList!| . 484108) (|endSubProgram| . 484027)
 (|currentSubProgram| . 483946) (|newSubProgram| . 483828)
 (|clearTheSymbolTable| . 483633) (|showTheSymbolTable| . 483585)
 (|symbolTable| . 483377) (|printTypes| . 483182) (|newTypeLists| . 483094)
 (|typeLists| . 482605) (|externalList| . 482513) (|typeList| . 481975)
 (|parametersOf| . 481883) (|fortranTypeOf| . 481758) (|declare!| . 480940)
 (|solve| . 460831) (|triangularSystems| . 460560) (|bumprow| . 460166)
 (|bumptab| . 459923) (|bumptab1| . 459736) (|untab| . 459540)
 (|bat1| . 459340) (|bat| . 459153) (|tab1| . 458960) (|tab| . 458782)
 (|lex| . 458642) (|slex| . 458467) (|inverse| . 456702) (|maxrow| . 456182)
 (|mr| . 455749) (|listOfLists| . 455028) (|tableau| . 454322)
 (|tanSum| . 454194) (|tanAn| . 453998) (|tanNa| . 453867)
 (|initTable!| . 453685) (|printInfo!| . 453470) (|startStats!| . 453258)
 (|printStats!| . 453076) (|clearTable!| . 452894) (|usingTable?| . 452709)
 (|printingInfo?| . 452524) (|makingStats?| . 452339) (|extractIfCan| . 452177)
 (|insert!| . 451237) (|interpretString| . 451117)
 (|stripCommentsAndBlanks| . 451028) (|linearExtend| . 450083)
 (|tensor| . 449377) (|testEqualsAux| . 449221) (|xftestEqualsAux| . 449065)
 (|testNotEqualsAux| . 448909) (|xftestNotEqualsAux| . 448753)
 (|testTrueAux| . 448600) (|xftestTrueAux| . 448447)
 (|testLibraryErrorAux| . 448294) (|xftestLibraryErrorAux| . 448141)
 (|testEqualsAuxCmp| . 448012) (|testRealEqualsAux| . 447810)
 (|xftestRealEqualsAux| . 447608) (|testComplexEqualsAux| . 447375)
 (|xftestComplexEqualsAux| . 447142) (|testAbsolutePrecision| . 447005)
 (|testRelativePrecision| . 446868) (|testsuite| . 446751)
 (|testsuiteNoClear| . 446634) (|testcase| . 446517)
 (|testcaseNoClear| . 446400) (|statistics| . 446131) (|incPass| . 446053)
 (|incFail| . 445893) (|incXfPass| . 445733) (|decXfPass| . 445655)
 (|incXfFail| . 445577) (|chkLibraryError| . 445499)
 (|incLibraryError| . 445339) (|incXfLibraryError| . 445179)
 (|incFatal| . 445062) (|incXfFatal| . 444945) (|decFatal| . 444867)
 (|decXfFatal| . 444789) (|addWarning| . 444668) (|testEquals| . 444553)
 (|xftestEquals| . 444438) (|testRealEquals| . 444323)
 (|xftestRealEquals| . 444208) (|testComplexEquals| . 444093)
 (|xftestComplexEquals| . 443978) (|testNotEquals| . 443863)
 (|xftestNotEquals| . 443748) (|testTrue| . 443636) (|xftestTrue| . 443524)
 (|testLibraryError| . 443412) (|xftestLibraryError| . 443300)
 (|setPrologue!| . 443099) (|setTex!| . 443006) (|setEpilogue!| . 442805)
 (|prologue| . 442610) (|new| . 441157) (|tex| . 441067) (|epilogue| . 440872)
 (|endOfFile?| . 440793) (|readIfCan!| . 440506) (|readLineIfCan!| . 440416)
 (|readLine!| . 440338) (|writeLine!| . 440181) (|display| . 438276)
 (|coerceL| . 437915) (|sign| . 435062) (|nonQsign| . 434934)
 (|direction| . 434785) (|createThreeSpace| . 434671) (|pi| . 434167)
 (|cyclicParents| . 434037) (|cyclicEqual?| . 433913)
 (|cyclicEntries| . 433783) (|cyclicCopy| . 433697) (|tree| . 433361)
 (|cyclic?| . 433112) (|cos| . 431490) (|cot| . 430170) (|csc| . 428850)
 (|sec| . 427530) (|sin| . 425908) (|tan| . 424388)
 (|complexNormalize| . 422522) (|complexElementary| . 420656)
 (|trigs| . 419786) (|real| . 418551) (|imag| . 417536) (|real?| . 416516)
 (|complexForm| . 415563) (|UpTriBddDenomInv| . 415272)
 (|LowTriBddDenomInv| . 414981) (|simplify| . 413085) (|htrigs| . 412804)
 (|simplifyExp| . 412523) (|simplifyLog| . 412242) (|expandPower| . 411961)
 (|expandLog| . 411680) (|cos2sec| . 411399) (|cosh2sech| . 411118)
 (|cot2trig| . 410837) (|coth2trigh| . 410556) (|csc2sin| . 410275)
 (|csch2sinh| . 409994) (|sec2cos| . 409713) (|sech2cosh| . 409432)
 (|sin2csc| . 409151) (|sinh2csch| . 408870) (|tan2trig| . 408589)
 (|tanh2trigh| . 408308) (|tan2cot| . 408027) (|tanh2coth| . 407746)
 (|cot2tan| . 407465) (|coth2tanh| . 407184) (|removeCosSq| . 406903)
 (|removeSinSq| . 406622) (|removeCoshSq| . 406341) (|removeSinhSq| . 406060)
 (|expandTrigProducts| . 405565) (|fintegrate| . 404947)
 (|coefficient| . 401652) (|taylor_via_deriv| . 399762)
 (|taylor_via_lode| . 399337) (|applyTaylor| . 398937)
 (|apply_taylor| . 398296) (|coHeight| . 397938) (|extendIfCan| . 397658)
 (|algebraicVariables| . 397340) (|zeroSetSplitIntoTriangularSystems| . 396898)
 (|zeroSetSplit| . 392030) (|reduceByQuasiMonic| . 391744)
 (|collectQuasiMonic| . 391461) (|removeZero| . 391175)
 (|initiallyReduce| . 390685) (|headReduce| . 390195)
 (|stronglyReduce| . 389909) (|rewriteSetWithReduction| . 389492)
 (|autoReduced?| . 389109) (|initiallyReduced?| . 387973)
 (|headReduced?| . 386837) (|stronglyReduced?| . 386200) (|reduced?| . 385324)
 (|normalized?| . 384188) (|quasiComponent| . 383772) (|initials| . 383454)
 (|basicSet| . 382549) (|infRittWu?| . 381160) (|getCurve| . 381047)
 (|listLoops| . 380867) (|closed?| . 380623) (|open?| . 380482)
 (|setClosed| . 380338) (|tube| . 379901) (|point| . 378799)
 (|unitVector| . 377843) (|cosSinInfo| . 377693) (|loopPoints| . 377420)
 (|select| . 376537) (|generalTwoFactor| . 376169) (|tryTwoFactor| . 375801)
 (|generalSqFr| . 375433) (|twoFactor| . 375034) (|doFactor| . 374601)
 (|diagramSvg2| . 374404) (|undirectedGraph| . 372573) (|setOrder| . 372222)
 (|getOrder| . 372032) (|less?| . 371546) (|userOrdered?| . 371399)
 (|largest| . 371012) (|more?| . 370695) (|setVariableOrder| . 370414)
 (|getVariableOrder| . 370207) (|resetVariableOrder| . 370106)
 (|factor| . 357854) (|prime?| . 356801) (|hadamard| . 356622)
 (|pre_gauss| . 356508) (|pre_smith| . 356394) (|pre_lr| . 356228)
 (|rationalFunction| . 355739) (|taylorIfCan| . 355542) (|taylor| . 350022)
 (|removeZeroes| . 348848) (|taylorRep| . 348656) (|hasHi| . 348530)
 (|segment| . 348221) (SEGMENT . 347944) (|commonDenominator| . 346611)
 (|clearDenominator| . 345241) (|splitDenominator| . 342891)
 (|monicRightFactorIfCan| . 342648) (|rightFactorIfCan| . 342402)
 (|leftFactorIfCan| . 342201) (|monicDecomposeIfCan| . 341940)
 (|monicCompleteDecompose| . 341716) (|decomposeIfCan| . 341424)
 (|completeDecompose| . 341165) (|divideIfCan| . 340898)
 (|noKaratsuba| . 340708) (|karatsubaOnce| . 340518) (|karatsuba| . 340283)
 (|separate| . 339448) (|pseudoDivide| . 338841) (|pseudoQuotient| . 338652)
 (|composite| . 338109) (|subResultantGcd| . 337499) (|resultant| . 336472)
 (|discriminant| . 334872) (|pseudoRemainder| . 334693) (|shiftRight| . 334468)
 (|karatsubaDivide| . 334175) (|monicDivide| . 333577) (|shiftLeft| . 333262)
 (|divideExponents| . 333069) (|unmakeSUP| . 332870) (|makeSUP| . 332671)
 (|unvectorise| . 332177) (|vectorise| . 331949) (|eval| . 323664)
 (|extend| . 321176) (|approximate| . 319935) (|truncate| . 319557)
 (|order| . 314030) (|center| . 313456) (|terms| . 312780)
 (|squareFreePart| . 311757) (|BumInSepFFE| . 311298)
 (|multiplyExponents| . 310740) (|laurentIfCan| . 310542) (|laurent| . 305963)
 (|laurentRep| . 305770) (|rationalPower| . 305529) (|puiseux| . 301047)
 (|dominantTerm| . 299914) (|limitPlus| . 298746) (|split!| . 298544)
 (|setlast!| . 298388) (|qsetrest!| . 298232) (|setrest!| . 297956)
 (|setelt!| . 292064) (|qsetfirst!| . 291908) (|setfirst!| . 291752)
 (|cycleSplit!| . 291599) (|concat!| . 290917) (|cycleTail| . 290810)
 (|cycleLength| . 290664) (|cycleEntry| . 290557) (|third| . 290450)
 (|second| . 290212) (|tail| . 289801) (|last| . 289162) (|rest| . 288331)
 (|elt| . 274423) (|first| . 273101) (|concat| . 272312)
 (|invmultisect| . 271792) (|multisect| . 271272) (|revert| . 270875)
 (|generalLambert| . 270355) (|evenlambert| . 269958) (|oddlambert| . 269561)
 (|lambert| . 269164) (|lagrange| . 268767) (|differentiate| . 263836)
 (|univariatePolynomial| . 263110) (|integrate| . 249648) (^ . 244058)
 (|polynomial| . 243180) (|multiplyCoefficients| . 242689)
 (|quoByVar| . 242575) (|coefficients| . 241063) (|series| . 232815)
 (|stFunc1| . 232504) (|stFunc2| . 232176) (|stFuncN| . 231847)
 (|fixedPointExquo| . 231637) (|ode1| . 231386) (|ode2| . 231129)
 (|ode| . 230841) (|mpsode| . 230502) (UP2UTS . 230201) (UTS2UP . 229858)
 (LODO2FUN . 229507) (RF2UTS . 229130) (|seriesSolve| . 224014) (= . 222996)
 (|parseVarTerm| . 222734) (|parseVar| . 222656) (|toString| . 221817)
 (|getType| . 221613) (|getName| . 221535) (|var| . 221342)
 (|variable| . 220420) (|add_slots| . 220277) (|repack_polys| . 219731)
 (|empty| . 218906) (|chinese_update| . 218560) (|hensel_update| . 218386)
 (|rational_reconstruction| . 217420) (|remove_denoms| . 217035)
 (|reconstruct| . 215840) (|length| . 214645) (|cross| . 214318)
 (|outerProduct| . 214160) (|dot| . 213531) (- . 210827) (|zero?| . 209594)
 (|zero| . 209146) (|vector| . 208903) (|scan| . 206658) (|reduce| . 199219)
 (|hp_solve| . 198785) (|graphCurves| . 198135) (|drawCurves| . 197603)
 (|update| . 197431) (|show| . 197263) (|scale| . 196735) (|connect| . 196567)
 (|region| . 196399) (|points| . 196231) (|units| . 195562)
 (|getGraph| . 195418) (|putGraph| . 195246) (|graphs| . 194943)
 (|graphStates| . 194195) (|graphState| . 193926) (|makeViewport2D| . 193721)
 (|viewport2D| . 193665) (|getPickedPoints| . 193540) (|key| . 193264)
 (|close| . 192974) (|write| . 192284) (|colorDef| . 192151) (|reset| . 191967)
 (|intensity| . 191837) (|lighting| . 191701) (|clipSurface| . 191570)
 (|showClipRegion| . 191439) (|showRegion| . 191308) (|hitherPlane| . 191178)
 (|eyeDistance| . 191048) (|perspective| . 190917) (|translate| . 190441)
 (|zoom| . 189884) (|rotate| . 189618) (|drawStyle| . 189487)
 (|outlineRender| . 189356) (|diagonals| . 189225) (|axes| . 188761)
 (|controlPanel| . 188503) (|viewpoint| . 185740) (|dimensions| . 185354)
 (|title| . 184878) (|resize| . 184596) (|move| . 184308) (|options| . 183848)
 (|modifyPointData| . 183479) (|subspace| . 182976) (|makeViewport3D| . 182586)
 (|viewport3D| . 182528) (|viewDeltaYDefault| . 182343)
 (|viewDeltaXDefault| . 182158) (|viewZoomDefault| . 181973)
 (|viewPhiDefault| . 181788) (|viewThetaDefault| . 181603)
 (|pointColorDefault| . 181424) (|lineColorDefault| . 181245)
 (|axesColorDefault| . 181066) (|unitsColorDefault| . 180887)
 (|pointSizeDefault| . 180678) (|viewPosDefault| . 180445)
 (|viewSizeDefault| . 180218) (|viewDefaults| . 180132)
 (|viewWriteDefault| . 179923) (|viewWriteAvailable| . 179819)
 (|var1StepsDefault| . 179610) (|var2StepsDefault| . 179401)
 (|tubePointsDefault| . 179192) (|tubeRadiusDefault| . 178965)
 (|void| . 178927) (|coordinates| . 176862) (|coordinatesIfCan| . 176724)
 (|member?| . 175999) (|complementSpace| . 175447) (|canonicalBasis| . 175309)
 (|Zero| . 174790) (|subspace?| . 174660) (|isBasis?| . 174494)
 (|rank| . 170961) (|intBasis| . 170436) (+ . 167302) (|sumBasis| . 166777)
 (|columnSpace| . 166020) (|nullSpace| . 163861) (|basis| . 161916)
 (|dimension| . 159699) (|weierstrass| . 159476) (|integralBasis| . 157315)
 (|localIntegralBasis| . 155424) (|weightedDistanceMatrix| . 155198)
 (|closedCartesian| . 154564) (|closedTensor| . 153787) (|cartesian| . 152693)
 (|routeArrowWeight| . 152480) (|routeNodeWeight| . 152267)
 (|distanceWeighted| . 152013) (|addWArrow!| . 151773)
 (|weightedGraph| . 148807) (|changeWeightLevel| . 148118)
 (|characteristicSerie| . 147241) (|characteristicSet| . 146534)
 (|medialSet| . 145827) (|Hausdorff| . 145532) (|Frobenius| . 144879)
 (|transcendenceDegree| . 144532) (|extensionDegree| . 143784)
 (|inGroundField?| . 143657) (|transcendent?| . 143530) (|algebraic?| . 143084)
 (|varList| . 141867) (|sh| . 141463) (|mirror| . 140722)
 (|monomial?| . 139644) (|monom| . 139299) (|rquo| . 138445) (|lquo| . 137591)
 (|mindegTerm| . 137384) (|table| . 136578) (|writeXml| . 136431)
 (|writeVRML| . 136134) (|xmlAttribute| . 135919) (|xmlElement| . 135600)
 (|empty?| . 134668) (|outputVRML| . 134430) (|log| . 131398) (|exp| . 128516)
 (|product| . 126922) (|LiePolyIfCan| . 126532) (|trunc| . 126156)
 (|degree| . 120984) (/ . 117266) (|quasiRegular| . 117000)
 (|quasiRegular?| . 116671) (|constant| . 115887) (|constant?| . 115436)
 (|coef| . 114790) (|mindeg| . 114483) (|maxdeg| . 114173) (|coerce| . 72170)
 (|#| . 71465) (|reductum| . 69552) (|map| . 38739) (* . 27937)
 (|RemainderList| . 27443) (|unexpand| . 27101) (|expand| . 24786) (Y . 24311)
 (|triangSolve| . 22987) (|univariateSolve| . 19930) (|realSolve| . 17394)
 (|positiveSolve| . 15576) (|squareFree| . 12532) (|convert| . 1895)
 (|linearlyDependentOverZ?| . 1690) (|linearDependenceOverZ| . 1476)
 (|particularSolutionOverQ| . 988) (|solveLinearlyOverQ| . 30)) 