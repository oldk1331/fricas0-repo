
(2097786 . 1)                
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| (|Integer|)))
                                  #1="failed"))
                    (|:| |basis|
                         (|List| (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|IntegerLinearDependence| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| (|Integer|))) #1#))
                    (|:| |basis|
                         (|List| (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|IntegerLinearDependence| *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|IntegerLinearDependence| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
   (|ofCategory| *5 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|IntegerLinearDependence| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Integer|)))
   (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *5 (|Join| (|ConvertibleTo| *2) (|CommutativeRing|)))
       (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *1 (|ComplexPattern| *4 *5 *3))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *3 (|ComplexCategory| *5))))
 ((*1 *2 *1)
  (AND (|ofType| *5 (|List| *4)) (|isDomain| *2 (|JetBundlePolynomial| *3 *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundlePolynomial| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|)) (|ofType| *5 (|List| *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|OutputFormatterCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|FramedModule| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GeneralPolynomialSet| *3 *4 *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|FreeGroup| *5)))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|GroupPresentationFunctions1| *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|ConvertibleFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ConvertibleTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *6))
       (|ofCategory| *6 (|Join| (|DifferentialRing|) (|LeftModule| *5)))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|LinearOrdinaryDifferentialOperator3| *4 *5 *6))
       (|isDomain| *1 (|LODOConvertions| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator3| *4 *5 *6))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|DifferentialRing|) (|LeftModule| *5)))
       (|isDomain| *2 (|LinearOrdinaryDifferentialOperator1| *6))
       (|isDomain| *1 (|LODOConvertions| *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|LieSquareMatrix| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Integer|)))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *4 *5 *6 *7 *8))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SingletonAsOrderedSet|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|SquareFreeRegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *4 *5 *6 *7
                                                               *8))))
 ((*1 *1 *2 *3 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *5)))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *6)))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *6)))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4))))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|RealClosure| (|Fraction| *4))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SquareFreeRegularTriangularSet| *4
                                                 (|IndexedExponents|
                                                  (|OrderedVariableList| *6))
                                                 (|OrderedVariableList| *6)
                                                 (|NewSparseMultivariatePolynomial|
                                                  *4
                                                  (|OrderedVariableList| *6))))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *4
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *5 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|PolynomialSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|UniqueFactorizationDomain|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|UnivariatePolynomialSquareFree| *4 *3))
       (|ofCategory| *3
                     (|Join| (|UnivariatePolynomialCategory| *4)
                             (|IntegralDomain|)
                             (CATEGORY |domain| (SIGNATURE |gcd| (% % %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|SquareFreeRegularTriangularSet| *4
                                                      (|IndexedExponents|
                                                       (|OrderedVariableList|
                                                        *6))
                                                      (|OrderedVariableList|
                                                       *6)
                                                      (|NewSparseMultivariatePolynomial|
                                                       *4
                                                       (|OrderedVariableList|
                                                        *6)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Float|))
       (|isDomain| *2 (|List| (|List| (|Float|))))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *4 *5)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Stream| *4) (|Stream| *4)))
       (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *4))
       (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|List| (|Stream| *5)) (|List| (|Stream| *5))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|Stream| *5)))
   (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *5))
   (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *6)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *6 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| (|Expression| *6)))
       (|isDomain| *1 (|DegreeReductionPackage| *5 *6))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|IntegrationResult| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|IntegrationResultToFunction| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentExpansionCategory| *3 *2))
       (|ofCategory| *3 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2))
       (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3))
       (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|XPolynomial| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|XRecursivePolynomial| *3 *4))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| (|Symbol|)) (|:| |c| (|XPolynomial| *3)))))
   (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| *3)
                          (|:| |c| (|XRecursivePolynomial| *3 *4)))))
   (|isDomain| *1 (|XRecursivePolynomial| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianGroup|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianSemiGroup|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Color|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|DirectedGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|DenavitHartenbergMatrix| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FreeModule| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FreeModule| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|FunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2
                     (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3)))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Permutation| (|Integer|)))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|LeftModule| *2)) (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Magma|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6)) (|isDomain| *4 (|Mapping| *6 *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Mapping| *7 *5))
       (|isDomain| *1 (|MappingPackage3| *5 *6 *7))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *2 *4))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *2))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|MultifunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RightModule| *2)) (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|UndirectedGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|VectorCategory| *3))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|WeightedGraph| (|Product| *3 *3) *4))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2 *1 *1 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *6))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *8 (|Type|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *8 *9 *10))
       (|isDomain| *1
                   (|TwoDimensionalArrayFunctions| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|TwoDimensionalArrayCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *7))
       (|isDomain| *4 (|CartesianTensor| *5 *6 *7)) (|ofType| *5 (|Integer|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *7 (|CommutativeRing|))
       (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|CartesianTensor| *5 *6 *8))
       (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Complex| *6))
       (|isDomain| *1 (|ComplexFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Expression| *3) (|Expression| *3)))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6))
       (|isDomain| *4 (|DirectProduct| *5 *6))
       (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|isDomain| *2 (|DirectProduct| *5 *7))
       (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Equation| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Equation| *6))
       (|isDomain| *1 (|EquationFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|Kernel| *6)) (|ofCategory| *6 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ExpressionSpaceFunctions1| *6 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *5)) (|isDomain| *4 (|Kernel| *5))
       (|ofCategory| *5 (|ExpressionSpace|))
       (|ofCategory| *2 (|ExpressionSpace|))
       (|isDomain| *1 (|ExpressionSpaceFunctions2| *5 *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Expression| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *2 (|Expression| *6))
       (|isDomain| *1 (|ExpressionFunctions2| *5 *6))))
 ((*1 *2 *3 *1)
  (|partial| AND
   (|isDomain| *3
               (|Mapping| (|Union| (|Polynomial| (|Integer|)) "failed")
                          (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                                    (|:| |denom| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|Mapping| (|Polynomial| (|Integer|))
                          (|Polynomial| (|Integer|))))
   (|isDomain| *3
               (|Record| (|:| |var| (|Symbol|))
                         (|:| |coef|
                              (|SparseUnivariatePolynomial|
                               (|Fraction| (|Polynomial| (|Integer|)))))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Mapping| (|Polynomial| (|Integer|))
                          (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|FiniteAbelianMonoidRing| *7 *5))
       (|isDomain| *1 (|FiniteAbelianMonoidRingFunctions2| *5 *6 *4 *7 *2))
       (|ofCategory| *4 (|FiniteAbelianMonoidRing| *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *5))
       (|isDomain| *4 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *9 (|Field|))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| (|Fraction| *10)))
       (|isDomain| *2 (|FiniteDivisor| *9 *10 *11 *12))
       (|isDomain| *1 (|FiniteDivisorFunctions2| *5 *6 *7 *8 *9 *10 *11 *12))
       (|ofCategory| *12 (|FunctionFieldCategory| *9 *10 *11))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|FullyEvalableOver| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *8 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *8))
       (|ofCategory| *2 (|FunctionFieldCategory| *8 *9 *10))
       (|isDomain| *1
                   (|FunctionFieldCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10
                                                      *2))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| (|Fraction| *9)))))
 ((*1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *6) (|finiteAggregate|)))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|Comparable|))
       (|ofCategory| *2 (|FreeModuleCategory| *6 *7))
       (|isDomain| *1 (|FreeModuleCoefficientFunctions2| *5 *6 *7 *4 *2))
       (|ofCategory| *4 (|FreeModuleCategory| *5 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|Factored| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Factored| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *6))
       (|isDomain| *1 (|FactoredFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Fraction| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|FractionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *5))
       (|isDomain| *4 (|FractionalIdeal| *5 *6 *7 *8))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|QuotientFieldCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *8 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6)))
       (|ofCategory| *9 (|EuclideanDomain|))
       (|ofCategory| *10 (|QuotientFieldCategory| *9))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| *10))
       (|isDomain| *2 (|FractionalIdeal| *9 *10 *11 *12))
       (|isDomain| *1 (|FractionalIdealFunctions2| *5 *6 *7 *8 *9 *10 *11 *12))
       (|ofCategory| *12
                     (|Join| (|FramedAlgebra| *10 *11)
                             (|RetractableTo| *10)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|FramedNonAssociativeAlgebra| *6))
       (|isDomain| *1 (|FramedNonAssociativeAlgebraFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *2 (|FunctionSpace| *6))
       (|isDomain| *1 (|FunctionSpaceFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|FunctionSpace| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *2 (|FiniteSetAggregate| *6))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|FiniteSetAggregate| *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|HomogeneousAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|IndexedProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|IntegrationResult| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|IntegrationResult| *6))
       (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *6 *5))
   (|isDomain| *4
               (|Union| (|Record| (|:| |ratpart| *5) (|:| |coeff| *5))
                        "failed"))
   (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|))
   (|isDomain| *2 (|Record| (|:| |ratpart| *6) (|:| |coeff| *6)))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *2 *5))
   (|isDomain| *4 (|Union| *5 "failed")) (|ofCategory| *5 (|Field|))
   (|ofCategory| *2 (|Field|))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *2))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *6 *5))
   (|isDomain| *4
               (|Union|
                (|Record| (|:| |mainpart| *5)
                          (|:| |limitedlogs|
                               (|List|
                                (|Record| (|:| |coeff| *5)
                                          (|:| |logand| *5)))))
                "failed"))
   (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |mainpart| *6)
                         (|:| |limitedlogs|
                              (|List|
                               (|Record| (|:| |coeff| *6)
                                         (|:| |logand| *6))))))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|InfiniteTuple| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|InfiniteTuple| *6))
       (|isDomain| *1 (|InfiniteTupleFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7))
       (|isDomain| *4 (|InfiniteTuple| *6))
       (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|InfiniteTuple| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6))
       (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7))
       (|isDomain| *4 (|InfiniteTuple| *6)) (|isDomain| *5 (|Stream| *7))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
       (|ofCategory| *8 (|Type|)) (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|ListFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|List| *8))
       (|isDomain| *1 (|ListFunctions3| *6 *7 *8))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *8 "failed") *5))
   (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *6 (|FiniteLinearAggregate| *5))
   (|ofCategory| *7 (|FiniteLinearAggregate| *5))
   (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
   (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
   (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *8))
   (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *1 (|MultipleMap| *5 *6 *4 *7 *8 *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *8)) (|ofCategory| *8 (|Ring|))
       (|ofCategory| *9 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|PolynomialCategory| *9 *7 *5))
       (|isDomain| *1 (|MPolyCatFunctions2| *5 *6 *7 *8 *9 *4 *2))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *8 *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|Ring|))
       (|ofCategory| *2 (|PolynomialCategory| *9 *8 *6))
       (|isDomain| *1 (|MPolyCatFunctions3| *5 *6 *7 *8 *9 *4 *2))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *9 *7 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|MonoidRing| *5 *7))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|Monoid|)) (|isDomain| *2 (|MonoidRing| *6 *7))
       (|isDomain| *1 (|MonoidRingFunctions2| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|NewSparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|NewSparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|NewSparseUnivariatePolynomialFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|OctonionCategory| *6))
       (|isDomain| *1 (|OctonionCategoryFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|OctonionCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OnePointCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|OnePointCompletion| *6))
       (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| *6))
       (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OnePointCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OrderedCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|OrderedCompletion| *6))
       (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *2 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| *6))
       (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OrderedCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricPlaneCurve| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricPlaneCurve| *6))
       (|isDomain| *1 (|ParametricPlaneCurveFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricSpaceCurve| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSpaceCurve| *6))
       (|isDomain| *1 (|ParametricSpaceCurveFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricSurface| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSurface| *6))
       (|isDomain| *1 (|ParametricSurfaceFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6))
       (|isDomain| *4 (|PatternMatchResult| *5 *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *5 *7))
       (|isDomain| *1 (|PatternMatchResultFunctions2| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Pattern| *6))
       (|isDomain| *1 (|PatternFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Polynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Polynomial| *6))
       (|isDomain| *1 (|PolynomialFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *7)) (|isDomain| *4 (|Mapping| *2 *8))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2
                     (CATEGORY |domain| (SIGNATURE + (% % %))
                      (SIGNATURE * (% % %))
                      (SIGNATURE ^ (% % (|NonNegativeInteger|)))))
       (|isDomain| *1 (|PolynomialCategoryLifting| *6 *7 *8 *5 *2))
       (|ofCategory| *5 (|PolynomialCategory| *8 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|PrimitiveArray| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|PrimitiveArray| *6))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Point| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Point| *6)) (|isDomain| *1 (|PointFunctions2| *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Polynomial| *4)))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %))
                              (SIGNATURE |variable|
                               ((|Union| % "failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2 (|QuotientFieldCategory| *6))
       (|isDomain| *1 (|QuotientFieldCategoryFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|QuotientFieldCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|QuaternionCategory| *6))
       (|isDomain| *1 (|QuaternionCategoryFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|QuaternionCategory| *5))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *5 *5 *5))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *10 *7))
       (|ofCategory| *7 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *10 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *8 (|DirectProductCategory| *6 *7))
       (|ofCategory| *9 (|DirectProductCategory| *5 *7))
       (|ofCategory| *2 (|RectangularMatrixCategory| *5 *6 *10 *11 *12))
       (|isDomain| *1
                   (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *10
                                                          *11 *12 *2))
       (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9))
       (|ofCategory| *11 (|DirectProductCategory| *6 *10))
       (|ofCategory| *12 (|DirectProductCategory| *5 *10))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Segment| *6))
       (|isDomain| *1 (|SegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|SegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|SegmentBinding| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|SegmentBinding| *6))
       (|isDomain| *1 (|SegmentBindingFunctions2| *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2))
       (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Sequence| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *6))
       (|isDomain| *1 (|SequenceFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Stream| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Stream| *6))
       (|isDomain| *1 (|StreamFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6))
       (|isDomain| *5 (|Stream| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|StreamFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|SparseUnivariatePolynomialFunctions2| *5 *6))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4 *4))
       (|ofCategory| *1 (|TableAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UnivariateLaurentSeries| *5 *7 *9))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6)
       (|isDomain| *2 (|UnivariateLaurentSeries| *6 *8 *10))
       (|isDomain| *1 (|UnivariateLaurentSeriesFunctions2| *5 *6 *7 *8 *9 *10))
       (|ofType| *8 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UniversalSegment| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|UniversalSegment| *6))
       (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UniversalSegment| *5))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Stream| *6))
       (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *6))
       (|isDomain| *4 (|UnivariatePolynomial| *5 *6)) (|ofType| *5 (|Symbol|))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *8 (|Ring|))
       (|isDomain| *2 (|UnivariatePolynomial| *7 *8))
       (|isDomain| *1 (|UnivariatePolynomialFunctions2| *5 *6 *7 *8))
       (|ofType| *7 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *1 (|UnivariatePolynomialCategoryFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UnivariatePuiseuxSeries| *5 *7 *9))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6)
       (|isDomain| *2 (|UnivariatePuiseuxSeries| *6 *8 *10))
       (|isDomain| *1 (|UnivariatePuiseuxSeriesFunctions2| *5 *6 *7 *8 *9 *10))
       (|ofType| *8 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *6 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *6))
       (|isDomain| *1 (|UnivariateTaylorSeriesFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|VectorFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *6 "failed") *5))
   (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Type|))
   (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Vector| *6))
   (|isDomain| *1 (|VectorFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|)) (|ofCategory| *1 (|Aggregate|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPolynomialRing| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|Algebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofType| *6 (|Vector| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 2))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|CartesianTensor| *3 *4 *5)))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|DirectProduct| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SKICombinators| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|Lambda| *4)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Lambda| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|SKICombinators| *4)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SKICombinators| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|ILogic|)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Matrix| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) %))
                              (SIGNATURE |fullDisplay| ((|Void|) %)))))
       (|isDomain| *1 (|Database| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 10))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|DirichletRing| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|DirichletRing| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|)))
       (|isDomain| *1 (|DirichletRing| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|)))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|DirichletRing| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Distribution| *5))
       (|isDomain| *1 (|DistributionFunctions2| *4 *5))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| (|Expression| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|) (|IntegralDomain|)
                             (|ConvertibleTo| (|Float|))))
       (|isDomain| *2 (|SegmentBinding| (|Float|)))
       (|isDomain| *1 (|DrawNumericHack| *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)
       (|ofCategory| *3
                     (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|GcdDomain|)))
       (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *5))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4))
       (|isDomain| *1 (|FiniteFieldHomomorphisms| *3 *4 *2))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4))
       (|isDomain| *1 (|FiniteFieldHomomorphisms| *2 *4 *3))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|XRecursivePolynomial| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|XDistributedPolynomial| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|MachineFloat|)))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1="void")))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
   (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Fraction| *3))))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| *3)))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FourierComponent| *4))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|AbelianGroup|)))
       (|isDomain| *1 (|FourierSeries| *3 *4))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierSeries| *2 *3))
       (|ofCategory| *2
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|Join| (|OrderedSet|) (|AbelianGroup|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranScalarType|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|MachineFloat|)))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| *3))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofType| *6 (|Vector| (|Matrix| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 16))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|IndexCard|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Expression| (|Integer|)) *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleExpression| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|JetBundleExpression| *3))))
   (|isDomain| *1 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleBaseFunctionCategory| *4))
       (|isDomain| *2 (|List| (|JetBundleLinearFunction| *4 *5)))
       (|isDomain| *1 (|JetBundleLinearFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleLinearFunction| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetBundleLinearFunction| *4 *5))
       (|ofCategory| *5 (|JetBundleBaseFunctionCategory| *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|JetBundleSymAna| *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofType| *4 (|Union| *2 (|List| *2)))
       (|ofType| *5 (|Union| *2 (|List| *2)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|JetBundle| *3 *4))
       (|ofType| *3 (|List| *2)) (|ofType| *4 (|List| *2))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleXExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleXExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|AssociatedJordanAlgebra| *3 *2))
       (|ofCategory| *2 (|NonAssociativeAlgebra| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|CoercibleTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|CoercibleFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|LeftAlgebra| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LatticeMeetOfJoins|))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LatticeMeetOfJoins|))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XPBWPolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|AssociatedLieAlgebra| *3 *2))
       (|ofCategory| *2 (|NonAssociativeAlgebra| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMagma| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3))))
   (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3))))
   (|ofCategory| *3 (|SetCategory|))
   (|isDomain| *1 (|ThreeDimensionalMatrix| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|MachineInteger|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|MachineFloat|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|Integer|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|MachineInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|MachineInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MakeCachableSet| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4)))
       (|isDomain| *1 (|ModuleMonomial| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|))
       (|ofType| *5 (|Mapping| (|Boolean|) *2 *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4)))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|ModuleMonomial| *3 *4 *5))
       (|ofType| *5 (|Mapping| (|Boolean|) *2 *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|ofCategory| *1 (|MonoidRingCategory| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|NonAssociativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|NoneFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PartialDifferentialRing| *3))
       (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3)
       (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathErrorKind|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|))
       (|isDomain| *1 (|UnivariateSkewPolynomial| *3 *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Automorphism| *4))
       (|ofType| *6 (|Mapping| *4 *4))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6))
       (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|List| (|NonNegativeInteger|)))
       (|ofType| *6 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Polynomial| *3))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|List| (|NonNegativeInteger|)))
       (|ofType| *6 (|NonNegativeInteger|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|AlgebraicNumber|)))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PolynomialAN2Expression|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|AlgebraicNumber|))))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PolynomialAN2Expression|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Tree| *3)) (|isDomain| *1 (|PendantTree| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PermutationGroup| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Factored| *3)))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| *3)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PiDomain|)) (|isDomain| *2 (|Expression| *4))
       (|isDomain| *1 (|PiCoercions| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ResolveLatticeCompletion| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Exit|)) (|isDomain| *1 (|ResolveLatticeCompletion| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|ofType| *6 (|List| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|RationalFunction| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|SArgand|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|SArgand|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4))
       (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|SquareMatrix| *3 *4))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Character|)) (|ofCategory| *1 (|StringAggregate|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|STransform| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Switch|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Table| (|Symbol|) (|FortranType|)))
       (|isDomain| *1 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|TexFormat|)) (|isDomain| *1 (|TexFormat1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TexmacsFormat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|TaylorSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Tuple| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| '|x| *3))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Segment| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|UniversalSegment| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|))
       (|isDomain| *1 (|UnivariatePolynomial| *3 *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3))
       (|ofType| *3 *2)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|GraphImage|))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Void|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Vector| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4))
       (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|ofType| *7 (|List| (|NonNegativeInteger|)))
       (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4))
       (|ofType| *7 (|List| (|NonNegativeInteger|)))
       (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|XAlgebra| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|XmlElement|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|FreeMonoid| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedMonoid|))
       (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|FreeMonoid| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedMonoid|))
       (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|ofType| *2 (|List| (|Symbol|))) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *2) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5))
                   (|Record| (|:| |index| *4) (|:| |exponent| *5))))
       (|isDomain| *1 (|GeneralModulePolynomial| *2 *3 *4 *5 *6 *7))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *3 *5 (|OrderedVariableList| *2)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|XRecursivePolynomial| *4 *2))
       (|ofCategory| *1 (|FreeLieAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4))
       (|ofCategory| *1 (|XFreeAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *5 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *5))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Field|)))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 *4))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *2 *3))
       (|ofCategory| *2 (|Algebra| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *3 *2))
       (|ofCategory| *3 (|Algebra| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|LieAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *2 *3))
       (|ofCategory| *2 (|Module| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *2))
       (|ofCategory| *3 (|Module| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|OrdinaryWeightedPolynomials| *2 *3 *4 *5))
   (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|))
   (|ofType| *3 (|List| (|Symbol|)))
   (|ofType| *4 (|List| (|NonNegativeInteger|)))
   (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *4 *2))
       (|ofCategory| *6 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *3))
   (|isDomain| *1 (|WeightedPolynomials| *2 *3 *4 *5 *6 *7 *8))
   (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))
   (|ofType| *7 (|List| (|NonNegativeInteger|)))
   (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|Ring|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FactoringUtilities| *5 *6 *7 *8))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|GradedModule| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|AbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *5 *3))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *3 *4 *5 *6))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PrimitiveArray| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorPolynomialOperationsF| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PrimitiveArray| (|PrimeField| *4)))
       (|ofType| *4 (|PositiveInteger|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorPolynomialOperationsP| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *2 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|OrderedAbelianMonoidSup|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|ofCategory| *7 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|GcdDomain|) (|Comparable|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|ExpressionFactorPolynomial| *5 *6))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Integer|)))
       (|isDomain| *2 (|Factored| (|Complex| (|Integer|))))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|OrderedSet|)
                         (CATEGORY |domain|
                          (SIGNATURE |convert| ((|Symbol|) %)))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
   (|isDomain| *1 (|GeneralizedMultivariateFactorize| *4 *5 *6 *7 *3))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *3 (|PolynomialCategory| *7 *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|MonogenicAlgebra| *5 *6)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|InnerAlgFactor| *5 *6 *7 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *7))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7))
                          (|SparseUnivariatePolynomial| *7)))
   (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|Factored| *3))
   (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *3))
   (|ofCategory| *3 (|PolynomialCategory| *7 *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7))
                              (|SparseUnivariatePolynomial| *7)))
       (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *8 (|PolynomialCategory| *7 *6 *5))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))
                (|List| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|List| (|Expression| (|Integer|)))) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator1|
                 (|Fraction|
                  (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LyndonWord| *4)))
       (|isDomain| *1 (|LyndonWord| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MPolyCatPolyFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|Polynomial| *6) *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4
                                           *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MRationalFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|Fraction| *6) *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|RationalFunctionFactor| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Polynomial| (|Integer|)))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|UniqueFactorizationDomain|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |quotient| (|XDistributedPolynomial| *4 *5))
                             (|:| |remainder|
                                  (|XDistributedPolynomial| *4 *5))))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |g| (|XDistributedPolynomial| *4 *5))
                         (|:| |c1| (|XDistributedPolynomial| *4 *5))
                         (|:| |c2| (|XDistributedPolynomial| *4 *5))
                         (|:| |cu| (|XDistributedPolynomial| *4 *5))
                         (|:| |cv| (|XDistributedPolynomial| *4 *5))))
   (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
   (|isDomain| *1 (|LiePolynomial| *3 *4))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|LiePolynomial| *3 *4))
   (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|CubicalFacet|)))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|CombinatorialOpsCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteCubicalComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|ProductFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|FloatElementaryFunctions|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3
                     (|Join| (|Algebra| (|Fraction| (|Integer|)))
                             (|TranscendentalFunctionCategory|)
                             (|CommutativeRing|)))
       (|isDomain| *1 (|StreamExponentialSeriesTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *4 (|Module| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |coef| (|NonNegativeInteger|))
                              (|:| |logand| *4))))
       (|isDomain| *1 (|FactoredFunctions| *4))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|FloatElementaryFunctions|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3
                     (|Join| (|Algebra| (|Fraction| (|Integer|)))
                             (|TranscendentalFunctionCategory|)
                             (|CommutativeRing|)))
       (|isDomain| *1 (|StreamExponentialSeriesTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *4 (|Module| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|TextFile|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|TextFile|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|XmlElement|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XmlElement|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|XmlElement|)))
       (|isDomain| *4 (|List| (|XmlAttribute|)))
       (|isDomain| *1 (|XmlElement|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|XmlAttribute|)))
       (|isDomain| *1 (|XmlElement|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|XmlAttribute|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XmlElement|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExportXml|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XmlElement|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExportXml|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetVectorField| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|TwoDimensionalArray| (|JetVectorField| *4 *5)))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |key| *3) (|:| |entry| *4))))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *1 (|TableAggregate| *3 *4))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|TableAggregate| *2 *3)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|SingleInteger|) *3))
       (|ofCategory| *3 (|Hashable|)) (|isDomain| *1 (|XHashTable| *3 *4))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |k| (|FreeMonoid| *3)) (|:| |c| *4)))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|))
       (|ofType| *5 (|SquareMatrix| *4 *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|ModuleMonomial| *5 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *6 *7 *8))
       (|ofCategory| *8
                     (|PolynomialCategory| *2 *6 (|OrderedVariableList| *4)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *1 (|XFreeAlgebra| *4 *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LieExponentials| *2 *3 *4))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|BasicType|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|NormRetractPackage| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|ofType| *6 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Finite|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *2)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|Finite|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |alpha| (|Matrix| *5))
                             (|:| |mu| (|List| (|Matrix| *5)))
                             (|:| |var| (|List| *4))
                             (|:| |beta| (|Matrix| *5))))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Matrix| *5)))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *5 *6))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|OutputForm|)))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| (*2 %))
                              (SIGNATURE |fullDisplay| (*2 %)))))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OutputFormatterCategory|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TexmacsFormat|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |rows| (|List| (|FreeMonoid| *4)))
                         (|:| |cols| (|List| (|FreeMonoid| *4)))
                         (|:| H (|Matrix| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2 (|OutputForm|))
   (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |rows| (|List| (|FreeMonoid| *4)))
                             (|:| |cols| (|List| (|FreeMonoid| *4)))
                             (|:| H (|Matrix| *5))))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|FreeMonoid| *4)))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| *6))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| *8))
   (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
   (|isDomain| *4 (|Mapping| *8 *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| *6))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| *8))
   (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
   (|isDomain| *4 (|Mapping| *8 *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *4 *5 *6 *7)))
       (|isDomain| *1 (|WuWenTsunTriangularSet| *4 *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *6 *7 *8 *9)))
       (|isDomain| *1 (|WuWenTsunTriangularSet| *6 *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *4 *5 *6 *7))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|List| *3)) (|ofType| *7 *3)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofType| *8 (|List| *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|WeightedPolynomials| *4 *5 *6 *7 *8 *9 *10))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofType| *9 (|List| *3)) (|ofType| *10 *3)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|WeightedGraph| *4 *5))
   (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |weight| *5))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|)) (|:| |weight| *5)
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
   (|isDomain| *1 (|WeightedGraph| *4 *5))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |weight| *4))))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
   (|isDomain| *1 (|WeightedGraph| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|WeightedGraph| *5 *4))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Union| *5 "disjoint"))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))
       (|isDomain| *1 (|WeightedGraph| *4 *2))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))
       (|isDomain| *1 (|WeightedGraph| *4 *2))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|DirectedGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *1 (|ListPackage| *3))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|MultifunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|UndirectedGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|WeightedGraph| (|Product| *3 *3) *4))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|TwoDimensionalArray| (|Union| *4 "disjoint")))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| %) %)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| (|Integer|)))
                             (|:| |basisDen| (|Integer|))
                             (|:| |basisInv| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                             (|:| |basisInv| (|Matrix| *3))))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *3 *5 *6))
       (|ofCategory| *6 (|MonogenicAlgebra| *3 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                             (|:| |basisInv| (|Matrix| *3))))
       (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *4 *3 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *3 *5))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| %) %)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| (|Integer|)))
                             (|:| |basisDen| (|Integer|))
                             (|:| |basisInv| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4))
       (|ofCategory| *4 (|FramedAlgebra| (|Integer|) *3))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4)
                             (|:| |basisInv| (|Matrix| *4))))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *3 *4 *5 *6))
       (|ofCategory| *6 (|MonogenicAlgebra| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4)
                             (|:| |basisInv| (|Matrix| *4))))
       (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *3 *4 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|TaylorSeries| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|TaylorSeries| *5)))
       (|isDomain| *1 (|WeierstrassPreparation| *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 *2)))
 ((*1 *2)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FramedModule| *3))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Vector| (|List| (|Integer|))))
       (|isDomain| *1 (|HallBasis|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|Vector| (|Vector| *4)))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *6 (|shallowlyMutable|))
       (|ofCategory| *4 (|DivisionRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *9 (|shallowlyMutable|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *10))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *10 (|MatrixCategory| *7 *8 *9))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|isDomain| *2 (|List| *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianSemiGroup|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|Color|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Database| *2))
       (|ofCategory| *2
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) %))
                              (SIGNATURE |fullDisplay| ((|Void|) %)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|AbelianMonoid|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|DivisionRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|OctonionCategory&| *3 *4))
       (|ofCategory| *3 (|OctonionCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|)))
 ((*1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3)
       (|ofType| *5 *3)))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
   (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FramedModule| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Matrix| *5))) (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1) (|isDomain| *1 (|Void|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|SubSpace| 3 *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *4))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1 *3 *4 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Color|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|GraphImage|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *2 *1 *3 *4 *4 *4 *4 *5 *5 *5 *5 *6 *5 *6 *5)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *5 (|Integer|)) (|isDomain| *6 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Vector|
                (|Record| (|:| |scaleX| (|DoubleFloat|))
                          (|:| |scaleY| (|DoubleFloat|))
                          (|:| |deltaX| (|DoubleFloat|))
                          (|:| |deltaY| (|DoubleFloat|))
                          (|:| |points| (|Integer|))
                          (|:| |connect| (|Integer|))
                          (|:| |spline| (|Integer|)) (|:| |axes| (|Integer|))
                          (|:| |axesColor| (|Palette|))
                          (|:| |units| (|Integer|))
                          (|:| |unitsColor| (|Palette|))
                          (|:| |showing| (|Integer|)))))
   (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Vector| (|Union| (|GraphImage|) "undefined")))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *4 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *6 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2 (|GraphImage|)) (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|List|
                (|Vector|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *2
               (|Matrix|
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|VectorHermitePadeSolver|))))) 
(((*1 *1 *1) (|isDomain| *1 (|AlgebraicNumber|)))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *2))))
 ((*1 *2 *3 *1 *2 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *1 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *4))
                             (|:| |deg| (|PositiveInteger|))))
       (|isDomain| *1 (|DegreeReductionPackage| *4 *5))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *6 *2))
       (|isDomain| *4 (|DirectProduct| *5 *6))
       (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *2))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *4 *2 *3 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *3))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Expression| *2)) (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |poly| *3) (|:| |repr| (|Vector| *3))
                             (|:| |mult| *5)))
       (|isDomain| *1 (|ExtendedPolynomialReduction| *5 *6 *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *2 *6))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))
       (|ofCategory| *6 (|Join| (|LinearAggregate| *2) (|finiteAggregate|)))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *2 *6))
       (|ofCategory| *4 (|FiniteSetAggregate| *5))
       (|ofCategory| *6 (|FiniteSetAggregate| *2))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|JetBundleExpression| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|JetBundleXExpression| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListFunctions2| *5 *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *8 (|FiniteLinearAggregate| *2))
       (|ofCategory| *9 (|FiniteLinearAggregate| *2))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *2 *8 *9 *10))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *10 (|MatrixCategory| *2 *8 *9))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *1 (|MonogenicAlgebra| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|isDomain| *4 (|PrimitiveArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *2))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|ofType| *6 (|List| *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *7 *2))
       (|ofCategory| *7 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *8 (|DirectProductCategory| *6 *7))
       (|ofCategory| *9 (|DirectProductCategory| *5 *7))
       (|ofCategory| *10 (|DirectProductCategory| *6 *2))
       (|ofCategory| *11 (|DirectProductCategory| *5 *2))
       (|isDomain| *1
                   (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *2
                                                          *10 *11 *12))
       (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9))
       (|ofCategory| *12 (|RectangularMatrixCategory| *5 *6 *2 *10 *11))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Stream| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|StreamFunctions2| *5 *2))))
 ((*1 *2 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *2))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *5 *6 *7))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|VectorFunctions2| *5 *2))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5))
       (|isDomain| *4 (|OneDimensionalArray| *6)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *5))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *7 *5))
       (|isDomain| *4 (|DirectProduct| *6 *7))
       (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *7 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|DirectProduct| *6 *5))
       (|isDomain| *1 (|DirectProductFunctions2| *6 *7 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *6 *4 *5 *2))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *6) (|finiteAggregate|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|FiniteSetAggregate| *5))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *6 *4 *5 *2))
       (|ofCategory| *4 (|FiniteSetAggregate| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|ListFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5))
       (|isDomain| *4 (|PrimitiveArray| *6)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|PrimitiveArray| *5))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Mapping| *3 *6 *3)) (|isDomain| *5 (|Stream| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamFunctions2| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|VectorFunctions2| *6 *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Complex| (|DoubleFloat|))))
       (|isDomain| *1 (|ComplexDoubleFloatVector|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Vector| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|VectorCategory| *3))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianGroup|)))
 ((*1 *1 *1) (|ofCategory| *1 (|AbelianGroup|)))
 ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|CardinalNumber|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Database| *2))
       (|ofCategory| *2
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) %))
                              (SIGNATURE |fullDisplay| ((|Void|) %)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|AbelianGroup|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiRng|))
       (|ofCategory| *2 (|AbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|)))
       (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianMonoid|)) (|ofCategory| *2 (|SemiRng|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PointCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|RadicalCategory|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *4 *5 *6 *6 *3)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *1 *3 *4 *4 *5)
  (|partial| AND (|isDomain| *4 (|Vector| (|Integer|)))
   (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |nvars| (|Integer|))
                         (|:| |offsetdata| (|Vector| (|Integer|)))
                         (|:| |expdata| (|SortedExponentVector|))
                         (|:| |coeffdata| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Vector| (|Integer|)))
   (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *2 *2 *4)
  (AND (|isDomain| *2 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Vector| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *2 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *3 (|Vector| (|Integer|)))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|U32Vector|)))
                         (|:| |denoms| (|PrimitiveArray| (|U32Vector|)))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|U32Vector|))
                         (|:| |denom| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Integer|))
   (|isDomain| *2 (|Record| (|:| |num| (|Integer|)) (|:| |den| (|Integer|))))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|Integer|)))
                         (|:| |denoms| (|PrimitiveArray| (|Integer|)))))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1) (|isDomain| *1 (|OutputBox|)))
 ((*1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1)
  (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))
 ((*1 *1) (|isDomain| *1 (|SymbolTable|)))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|OrderedVariableList| *3)) (|ofType| *3 (|List| *2))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|QueryEquation|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3))
       (|ofType| *3 *2)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|ILogic|))
       (|ofCategory| *1 (|VarCat|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|String|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|ILogic|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|String|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| *1)
                             (|:| |pout| (|NonNegativeInteger|))))
       (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Reference| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *3 *3)
  (AND (|isDomain| *3 (|Equation| *6)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *5 *6))))
 ((*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| (|Equation| *7)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|Equation| *8)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *8)) (|isDomain| *6 (|List| *8))
       (|ofCategory| *8 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *6 (|List| (|Equation| *8)))
       (|ofCategory| *8 (|FunctionSpace| *7)) (|isDomain| *5 (|Equation| *8))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 ((*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *5)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *5 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *5))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ExpressionSolve| *7 *3 *2 *8))
       (|ofCategory| *8
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *3)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *5)))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *1 (|TaylorSolve| *5 *2 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UTSodetools| *4 *5 *6 *2))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Mapping| *6 (|List| *6)))
       (|isDomain| *1 (|UTSodetools| *4 *5 *3 *6))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|UTSodetools| *5 *2 *6 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UTSodetools| *4 *3 *5 *2))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| (|Mapping| *6 (|List| *6))))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|List| *2))) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *2))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 (|List| *5)))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|List| (|Stream| *4))))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4) (|Stream| *4)))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4)))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|)))
       (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *7 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *7 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerTaylorSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *5))
       (|ofCategory| *5 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3
                   (|Stream|
                    (|Record| (|:| |k| (|Fraction| (|Integer|)))
                              (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Stream|
                (|Record| (|:| |k| (|NonNegativeInteger|)) (|:| |c| *3))))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Stream| *5))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|)))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|)))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4 (|RetractableTo| (|Integer|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|CardinalNumber|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DivisionRing|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *4 *5 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateLaurentSeriesCategory| *4))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *4 *5 *2 *6))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5))
       (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Group|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|MappingPackage1| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|Monoid|)) (|ofCategory| *3 (|SemiRng|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *3 *4))
       (|ofCategory| *4 (|LeftModule| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Operator| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RadicalCategory|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *3 *4))
       (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 *4))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| '|x| *4))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 *4))
       (|isDomain| *1 (|UnivariateTaylorSeries| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialExtension| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|DifferentialExtension| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))
       (|isDomain| *1 (|IntegrationResult| *2)) (|isDomain| *3 (|Symbol|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2))
       (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Union| *1 "0"))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| #1="failed")
                            (|:| |pole| #2="potentialPole")))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3)))
       (|isDomain| *5 (|String|))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| #1#) (|:| |pole| #2#)))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4
                   (|SegmentBinding| (|OrderedCompletion| (|Expression| *5))))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5)))
                            (|:| |f2|
                                 (|List|
                                  (|OrderedCompletion| (|Expression| *5))))
                            (|:| |fail| #3="failed")
                            (|:| |pole| #4="potentialPole")))
       (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
       (|isDomain| *4
                   (|SegmentBinding| (|OrderedCompletion| (|Expression| *6))))
       (|isDomain| *5 (|String|))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6)))
                            (|:| |f2|
                                 (|List|
                                  (|OrderedCompletion| (|Expression| *6))))
                            (|:| |fail| #3#) (|:| |pole| #4#)))
       (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|SegmentBinding|
                (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|ofCategory| *5
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5)))
                        (|:| |f2|
                             (|List| (|OrderedCompletion| (|Expression| *5))))
                        (|:| |fail| #3#) (|:| |pole| #4#)))
   (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|SegmentBinding|
                (|OrderedCompletion| (|Fraction| (|Polynomial| *6)))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6)))
                        (|:| |f2|
                             (|List| (|OrderedCompletion| (|Expression| *6))))
                        (|:| |fail| #3#) (|:| |pole| #4#)))
   (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Union| *3 (|List| *3)))
       (|isDomain| *1 (|FunctionSpaceIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| (|Fraction| *5)))
       (|isDomain| *1 (|RationalIntegration| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Union| (|Expression| *5) (|List| (|Expression| *5))))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Polynomial| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|UnivariateSeriesWithRationalExponents| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
       (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSeriesWithRationalExponents| *2 *3))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4))
       (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|SequenceCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|Segment| (|Integer|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "right")
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "left") (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 (|Integer|))
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *2)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|DataList| (|String|)))
       (|isDomain| *1 (|Database| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % *3))
                              (SIGNATURE |display| ((|Void|) %))
                              (SIGNATURE |fullDisplay| ((|Void|) %)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|QueryEquation|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) %))
                              (SIGNATURE |fullDisplay| ((|Void|) %)))))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "count") (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DataList| *4)) (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "sort") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "unique") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Eltable| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|XDistributedPolynomial| *4 *5))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *1 *2 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|IndexCard|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|Library|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PermutationCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Permutation| *4))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DirectProduct| *4 *2))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|QuadraticForm| *4 *2))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "value") (|ofCategory| *1 (|RecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|Ruleset| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *2))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| *1))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Fraction| *1))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "last") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "first") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5))
   (|ofCategory| *2 (|IntegralDomain|))
   (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *3 *2))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *1 (|shallowlyMutable|)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|Segment| (|Integer|)))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "right") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "left") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *4 *5))
       (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|Library|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "value") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *4 *5)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|TableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "last") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "first") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))
 ((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *1
               (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5
                                                                    *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2
               (|Record|
                (|:| |%term|
                     (|Record|
                      (|:| |%coef| (|UnivariatePuiseuxSeries| *4 *5 *6))
                      (|:| |%expon|
                           (|ExponentialOfUnivariatePuiseuxSeries| *4 *5 *6))
                      (|:| |%expTerms|
                           (|List|
                            (|Record| (|:| |k| (|Fraction| (|Integer|)))
                                      (|:| |c| *4))))))
                (|:| |%type| (|String|))))
   (|isDomain| *1
               (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5
                                                                    *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *5 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *7 (|Fraction| (|Integer|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *7 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *7 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *7))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *3))
       (|ofCategory| *3 (|UnivariateLaurentSeriesCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *2 (|Fraction| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *4)
                             (|LinearlyExplicitOver| *4)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *5)
                             (|LinearlyExplicitOver| *5)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *4 *3))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |flag| (|Union| "nil" "sqfr" "irred" "prime"))
                         (|:| |factor| *4)
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|ofCategory| *4
                 (|Join| (|UnivariatePolynomialCategory| *3) (|IntegralDomain|)
                         (CATEGORY |domain| (SIGNATURE |gcd| (% % %)))))
   (|ofCategory| *3 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|UniqueFactorizationDomain|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *2))
       (|ofCategory| *2
                     (|Join| (|UnivariatePolynomialCategory| *3)
                             (|IntegralDomain|)
                             (CATEGORY |domain| (SIGNATURE |gcd| (% % %)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Stream| (|Record| (|:| |k| *4) (|:| |c| *3))))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|String|)) (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGroup|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *4 *5 *6 *7))
       (|ofCategory| *4 (|Join| (|Finite|) (|Field|)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *7 (|FunctionFieldCategory| *4 *5 *6))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FindOrderFinite| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|FiniteDivisor| *6 *7 *4 *8))
       (|isDomain| *5 (|Mapping| *9 *6)) (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|ofCategory| *8 (|FunctionFieldCategory| *6 *7 *4))
       (|ofCategory| *9 (|Join| (|Finite|) (|Field|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ReducedDivisor| *6 *7 *4 *8 *9))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BalancedPAdicRational| *4)) (|ofType| *4 *3)))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|PAdicRational| *4)) (|ofType| *4 *3)))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofType| *4 *3)
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|PAdicRationalConstructor| *4 *5))
       (|ofCategory| *5 (|PAdicIntegerCategory| *4))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|has| *2 (SIGNATURE ^ (*2 *2 *3)))
       (|has| *2 (SIGNATURE |coerce| (*2 (|Symbol|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|PointCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *3)))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Equation| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Evalable| *2)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|Equation| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|BasicOperator|)))
       (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|BasicOperator|)))
       (|isDomain| *3 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *3)))
       (|ofCategory| *1 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Equation| *3)) (|ofCategory| *1 (|Evalable| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|Integer|)))
       (|isDomain| *4 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|EvaluateCycleIndicators| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FreeLieAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Mapping| *1 *1))
       (|ofCategory| *1 (|FunctionSpace2| *5 *6))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *6 (|KernelCategory| *1))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|FunctionSpace2| *5 *6))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *6 (|KernelCategory| *1))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|FunctionSpace2| *5 *6))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *6 (|KernelCategory| *1))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|FunctionSpace2| *5 *6))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *6 (|KernelCategory| *1))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|BasicOperator|))) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace2| *5 *6))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *6 (|KernelCategory| *1))
       (|ofCategory| *5 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *1 (|FunctionSpace2| *4 *5))
       (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *5 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|InnerEvalable| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *1 (|InnerEvalable| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|MoebiusTransform| *3))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PermutationCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *2 *6 *7))
       (|ofCategory| *1 (|TensorProductProperty| *5 *6 *7 *3 *2))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *6 (|Module| *5))
       (|ofCategory| *7 (|Module| *5))
       (|ofCategory| *3 (|TensorProductCategory| *5 *6 *7))
       (|ofCategory| *2 (|Module| *5))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|has| *3 (SIGNATURE ^ (*3 *3 *4))) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *5))))
   (|isDomain| *3 (|Vector| (|Expression| *5))) (|isDomain| *4 (|Integer|))
   (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|TransSolvePackageService| *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *1 (|ListPackage| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ComplexCategory&| *3 *2))
       (|ofCategory| *3 (|ComplexCategory| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedAlgebra&| *3 *2 *4))
       (|ofCategory| *3 (|FramedAlgebra| *2 *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4))
       (|ofCategory| *4 (|FramedAlgebra| *2 *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| *1))
   (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| *3) (|:| |quotient| *1)
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |polyPart| (|LaurentPolynomial| *4 *5))
                             (|:| |fracPart| (|Fraction| *5))))
       (|isDomain| *1 (|LaurentPolynomial| *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |primePart| *1) (|:| |commonPart| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDivisionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|Field|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *3 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|CommonDenominator| *4 *5 *3))
       (|ofCategory| *3 (|FiniteLinearAggregate| *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *6) (|:| |den| *4)))
       (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *6 *3))
       (|ofCategory| *6 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *4)) (|:| |den| *4)))
       (|isDomain| *1 (|MatrixCommonDenominator| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record| (|:| |eq| *7)
                             (|:| |rh| (|List| (|Fraction| *6)))))
       (|isDomain| *1 (|PrimitiveRatDE| *5 *6 *7 *3))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *3
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|PolynomialCommonDenominator| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|CommonDenominator| *3 *4 *2))
       (|ofCategory| *2 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))
       (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *2 *3))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|MatrixCommonDenominator| *4 *5))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialCommonDenominator| *3 *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *3 *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|CommonDenominator| *2 *4 *3))
       (|ofCategory| *3 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|InnerCommonDenominator| *2 *4 *5 *3))
       (|ofCategory| *5 (|Join| (|LinearAggregate| *2) (|finiteAggregate|)))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|MatrixCommonDenominator| *2 *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PolynomialCommonDenominator| *2 *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *2 *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| *3)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UniversalSegment| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BalancedPAdicRational| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|BalancedPAdicRational| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PAdicRational| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PAdicRational| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|ofType| *3 *2)
       (|isDomain| *1 (|PAdicRationalConstructor| *3 *4))
       (|ofCategory| *4 (|PAdicIntegerCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofType| *2 (|Integer|))
       (|isDomain| *1 (|PAdicRationalConstructor| *2 *3))
       (|ofCategory| *3 (|PAdicIntegerCategory| *2))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *7
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|))) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|)))
       (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|isDomain| *5 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|Vector| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariateFormalPowerSeriesFunctions| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| *5))
       (|isDomain| *4
                   (|Record| (|:| |i_mod| (|Integer|))
                             (|:| |deg| (|Integer|))))
       (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ModularFactorizationK| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ModularFactorization|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ModularFactorizationGeneral| *3 *5 *4 *6 *7))
       (|ofCategory| *7 (|ModularFactorizationOperations| *3 *5 *4 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Record| (|:| |cont| *4)
                             (|:| |factors|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *4))
                                    (|:| |exponent|
                                         (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|UnivariateFiniteFieldFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Integer|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerPrimesPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UniqueFactorizationDomain|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |high| (|List| (|Symbol|)))
                         (|:| |low| (|List| (|Symbol|)))))
   (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2))
       (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))))) 
(((*1 *2)
  (AND
   (|isDomain| *2 (|Record| (|:| |low| (|List| *3)) (|:| |high| (|List| *3))))
   (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UndirectedGraph| *5))
       (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SingleInteger|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|U64Int|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *6)))
   (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *6 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *6))))
   (|isDomain| *1 (|TwoFactorize| *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *2))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|)))
       (|isDomain| *5 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *2 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|DirectProductCategory| *3 *4))
       (|ofCategory| *4 (|Monoid|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5))
                   (|Record| (|:| |index| *2) (|:| |exponent| *5))))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))
 ((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Point| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2 (|TubePlot| *3)) (|isDomain| *1 (|NumericTubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|TubePlot| *2))
       (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|TubePlot| *2))
       (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *9))
   (|isDomain| *4 (|Mapping| (|Boolean|) *9))
   (|isDomain| *5 (|Mapping| (|Boolean|) *9 *9))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *9))))
   (|ofCategory| *1 (|TriangularSetCategory| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| *8))
   (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *8))))
   (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2
                   (|Record| (|:| |close| (|List| *6))
                             (|:| |open| (|List| *6))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1 *4)
  (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *3))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *7 (|List| *7)))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *1 *3 *4)
  (AND (|isDomain| *2 (|List| *8)) (|isDomain| *3 (|Mapping| *8 *8 *8))
       (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *10))
       (|isDomain| *1 (|LazardSetSolvingPackage| *5 *6 *7 *8 *9 *10))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *10
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|SquareFreeRegularTriangularSet| *5
                                                  (|IndexedExponents|
                                                   (|OrderedVariableList| *6))
                                                  (|OrderedVariableList| *6)
                                                  (|NewSparseMultivariatePolynomial|
                                                   *5
                                                   (|OrderedVariableList|
                                                    *6)))))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))
 ((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|RegularChain| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |close| *1) (|:| |open| (|List| *7)))))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|ofType| *6 *3)
       (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
       (|ofType| *5 (|Symbol|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|TaylorSeriesExpansion| *4 *5 *6 *2 *3))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *7 *7))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *4 *5 *6 *2 *7))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *5 *6 *7 *2 *8))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *5 *6 *7))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|List| (|Mapping| *3 *3)))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *7 (|OrderedAbelianMonoid|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *9 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *2 (|PowerSeriesCategory| *3 *7 *8))
       (|isDomain| *1 (|TaylorSeriesExpansion&| *6 *3 *7 *8 *2 *9))
       (|ofCategory| *6 (|TaylorSeriesExpansion| *3 *7 *8 *2 *9))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|PowerSeriesCategory| *6 *7 *8))
       (|ofCategory| *7 (|OrderedAbelianMonoid|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *9 (|UnivariateTaylorSeriesCategory| *6))
       (|isDomain| *1 (|TaylorSeriesExpansion&| *5 *6 *7 *8 *2 *9))
       (|ofCategory| *5 (|TaylorSeriesExpansion| *6 *7 *8 *2 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|List| (|Mapping| *3 *3)))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *3 *6 *7 *2 *8))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *2 (|PowerSeriesCategory| *3 *6 *7))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|List| (|Mapping| *5 *5)))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *5 *6 *7 *2 *8))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *5 *6 *7))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|SquareMatrix| *4 *2))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|PolynomialCategory| *4 (|IndexedExponents| *5) *5))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *5 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Polynomial| *4))
       (|isDomain| *1 (|TaylorSeries| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|SparseMultivariateTaylorSeries| *4 *3 *5)))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *3 *5))
       (|ofCategory| *5 (|PolynomialCategory| *4 (|IndexedExponents| *3) *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|TaylorSeries| *4)))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *3 (|PatternMatchable| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *2 (|PatternMatchable| *3))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |Sys| (|List| *1))
                             (|:| JM (|SparseEchelonMatrix| *5 *1))
                             (|:| |Depend|
                                  (|Union| "failed"
                                           (|List|
                                            (|List|
                                             (|NonNegativeInteger|)))))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CharacteristicZero|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|AlgebraicNumber|))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|SimplifyAlgebraicNumberConvertPackage|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|TrigonometricManipulationsAux| *4 *2))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Complex| (|Expression| *4)))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Complex| *3))
   (|isDomain| *1 (|TrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|TrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Expression| *4))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Expression| *4))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|TrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|TrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|Tree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Tree| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Tree| *2))) (|isDomain| *1 (|Tree| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1) (|isDomain| *1 (|PiDomain|)))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *1) (|ofCategory| *1 (|TranscendentalFunctionCategory|)))) 
(((*1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelThreeSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ToolsForSign| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3)
  (|partial| AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|OrderedCompletion| *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ElementaryFunctionSign| *6 *3))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|ofCategory| *6
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *6 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *4))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *6))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *6))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TexmacsFormat|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *2)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|TimeoutPackage| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))
 ((*1 *2 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *1 (|File| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|LinearMultivariateMatrixPencil| *5))
       (|isDomain| *3 (|List| (|FreeMonoid| *4)))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|Formatter| *2))
       (|ofCategory| *2 (|FormatterCategory|))))
 ((*1 *1) (|isDomain| *1 (|HashState|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OperatorHandlers| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|ListAggregate| *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1) (|isDomain| *1 (|Symbol|))) ((*1 *1) (|isDomain| *1 (|Symbol|)))
 ((*1 *1) (|isDomain| *1 (|TexFormat|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|UnittestAux| *2))
       (|ofCategory| *2 (|RealNumberSystem|)) (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|UnittestAux| *2))
       (|ofCategory| *2 (|RealNumberSystem|)) (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|RealNumberSystem|)) (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestAux| *5))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|RealNumberSystem|)) (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestAux| *5))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4))
       (|ofCategory| *4 (|RealNumberSystem|)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4))
       (|ofCategory| *4 (|RealNumberSystem|)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UnittestAux| *3))
       (|ofCategory| *3 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|TensorProductCategory| *4 *2 *3))
       (|ofCategory| *2 (|Module| *4)) (|ofCategory| *3 (|Module| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|Module| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|TensorPowerCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|TensorPower| *3 *4 *5 *6))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|FreeModuleCategory| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|ofCategory| *6 (|Comparable|))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *5))
       (|isDomain| *1 (|FreeModuleFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|FreeModuleCategory| *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *2 *4))
       (|ofCategory| *1 (|FreeModuleCategory| *2 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|List| *7)))
       (|isDomain| *4 (|TensorPower| *5 *6 *7 *8))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofCategory| *6 (|CommutativeRing|)) (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|FreeModuleCategory| *6 *7))
       (|ofCategory| *2 (|Module| *6))
       (|isDomain| *1 (|TensorPowerFunctions2| *5 *6 *7 *8 *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinarySearchTree| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinaryTournament| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *2 (|SetCategory|))
   (|isDomain| *1 (|TabulatedComputationPackage| *3 *2))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|TangentExpansions| *2))
       (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|TangentExpansions| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|TangentExpansions| *2))
       (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|JetDifferential| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|List| (|JetDifferential| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Tableau| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|List| (|List| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|List| (|List| *5)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|Tableau| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *4))
                             (|:| |f2| (|List| (|List| (|List| *4))))
                             (|:| |f3| (|List| (|List| *4)))
                             (|:| |f4| (|List| (|List| (|List| *4))))))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *4 *5 *4 *4 *4)
  (AND (|isDomain| *4 (|List| (|List| (|List| *6))))
       (|isDomain| *5 (|List| (|List| *6))) (|isDomain| *3 (|List| *6))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *6))
                             (|:| |f2| (|List| (|List| (|List| *6))))
                             (|:| |f3| (|List| (|List| *6)))
                             (|:| |f4| (|List| (|List| (|List| *6))))))
       (|isDomain| *1 (|TableauxBumpers| *6))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|DivisionRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|FiniteLinearAggregate| *4))
   (|ofCategory| *6 (|FiniteLinearAggregate| *4))
   (|ofCategory| *7 (|QuotientFieldCategory| *4))
   (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
   (|isDomain| *1
               (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9 *2))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
   (|ofCategory| *8 (|FiniteLinearAggregate| *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
   (|ofCategory| *2 (|AbelianMonoid|))
   (|ofCategory| *3 (|FiniteLinearAggregate| *2))
   (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|SquareMatrixCategory| *2 *3 *4 *5))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|DirectProductCategory| *2 *3))
   (|ofCategory| *5 (|DirectProductCategory| *2 *3))
   (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Tableau| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Tableau| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6 *6))
       (|isDomain| *5 (|List| (|List| *6))) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *4 (|List| *6))
       (|isDomain| *2
                   (|Record| (|:| |fs| (|Boolean|)) (|:| |sd| (|List| *6))
                             (|:| |td| (|List| (|List| *6)))))
       (|isDomain| *1 (|TableauxBumpers| *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|List| (|Polynomial| *5))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|Equation| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
   (|isDomain| *1 (|FloatingRealPackage| *4))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Symbol|))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|isDomain| *2 (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4))))
   (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *4 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *2 *4 *2 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *2 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1="failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| *7 #1#))
                              (|:| |basis| (|List| *7)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *5) #2="failed"))
                    (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                             (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                              (|:| |basis| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|Vector| *5))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                              (|:| |basis| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *4))))
 ((*1 *2 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|NonLinearFirstOrderODESolver| *5 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
   (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Symbol|))
   (|ofCategory| *6
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2 (|List| (|Vector| *6)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| (|Equation| *7)))
   (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |particular| *7) (|:| |basis| (|List| *7)))
                    *7 #3="failed"))
       (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |particular| *3) (|:| |basis| (|List| *3)))
                    *3 #3#))
       (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Equation| *2))
   (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *4 (|Equation| *2)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|isDomain| *5
               (|Mapping|
                (|Union|
                 (|Record| (|:| |particular| *6) (|:| |basis| (|List| *6)))
                 "failed")
                *7 *6))
   (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *6))
                         (|:| |basis| (|Matrix| *6))))
   (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Vector| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record|
                     (|:| |particular|
                          (|List|
                           (|Record| (|:| |ratpart| *6)
                                     (|:| |coeffs| (|Vector| *6)))))
                     (|:| |basis| (|List| *6)))
                    *7 (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| (|Vector| *6))
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *3 (|Matrix| *7))
   (|isDomain| *5 (|List| (|Vector| *4)))
   (|isDomain| *6
               (|Mapping|
                (|Record|
                 (|:| |particular|
                      (|List|
                       (|Record| (|:| |ratpart| *4)
                                 (|:| |coeffs| (|Vector| *4)))))
                 (|:| |basis| (|List| *4)))
                *7 (|List| *4)))
   (|ofCategory| *4 (|Field|))
   (|ofCategory| *7 (|UnivariateSkewPolynomialCategory| *4))
   (|isDomain| *2
               (|Record|
                (|:| |particular|
                     (|List|
                      (|Record| (|:| |ratpart| (|Vector| *4))
                                (|:| |coeffs| (|Vector| *4)))))
                (|:| |basis| (|List| (|Vector| *4)))))
   (|isDomain| *1 (|OrePolynomialMatrixOperations| *4 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Float|)) (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|TransSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Expression| *4)))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|TransSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Expression| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Kernel| (|Expression| *5))))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Expression| *5)))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))) 
(((*1 *2 *3 *2 *3)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *4 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *3 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|SymbolTable|))))
 ((*1 *2 *3 *2 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|FortranType|))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|FortranScalarType|))
       (|isDomain| *2
                   (|List|
                    (|Union| (|:| |name| (|Symbol|))
                             (|:| |bounds|
                                  (|List|
                                   (|Union| (|:| S (|Symbol|))
                                            (|:| P
                                                 (|Polynomial|
                                                  (|Integer|)))))))))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|List|
                 (|Union| (|:| |name| (|Symbol|))
                          (|:| |bounds|
                               (|List|
                                (|Union| (|:| S (|Symbol|))
                                         (|:| P
                                              (|Polynomial|
                                               (|Integer|))))))))))
   (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |key| (|Symbol|))
                          (|:| |entry| (|FortranType|)))))
   (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Union| (|:| |fst| (|FortranScalarType|))
                        (|:| |void| #1="void")))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| #1#)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| #1#)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| "void")))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SymbolTable|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|SymmetricFunctions| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|SymmetricFunctions| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FunctionCalled| *3))
       (|ofType| *3 *2)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|KernelCategory| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RuleCalled| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |sub| (|List| (|OutputForm|)))
                         (|:| |sup| (|List| (|OutputForm|)))
                         (|:| |presup| (|List| (|OutputForm|)))
                         (|:| |presub| (|List| (|OutputForm|)))
                         (|:| |args| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |sub| (|List| (|OutputForm|)))
                         (|:| |sup| (|List| (|OutputForm|)))
                         (|:| |presup| (|List| (|OutputForm|)))
                         (|:| |presub| (|List| (|OutputForm|)))
                         (|:| |args| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Symbol|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|OutputForm|))))
       (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|StringCategory|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|)))
 ((*1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1) (|ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|JetVectorField| *5 (|JetBundleExpression| *5)))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *5 *6 *7))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *7 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|JetVectorField| *5 (|JetBundleExpression| *5)))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *5 *6 *7))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *7 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
   (|ofCategory| *4 (|JetBundleCategory|))
   (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
   (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
   (|isDomain| *2
               (|List|
                (|JetBundleLinearFunction| (|JetBundleSymAna| *4 *5 *6)
                                           (|JetBundleXExpression|
                                            (|JetBundleSymAna| *4 *5 *6)))))
   (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|JetBundleExpression| *4))
       (|isDomain| *1 (|JetCoordinateTransformation| *3 *4 *5 *6))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleCategory|)) (|ofType| *5 (|Vector| *2))
       (|ofType| *6 (|Vector| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|JetBundleExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|JetBundleExpression| *5))
       (|isDomain| *1 (|JetCoordinateTransformation| *4 *5 *6 *7))
       (|ofCategory| *5 (|JetBundleCategory|)) (|ofType| *6 (|Vector| *2))
       (|ofType| *7 (|Vector| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|JetBundleExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6)))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|JetVectorField| *3 (|JetBundleExpression| *3)))
       (|isDomain| *1 (|SymmetryAnalysis| *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofType| *4 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Switch|)))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|OutputForm|) (|OutputForm|) (|OutputForm|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|ListMonoidOps| *5 *6 *7))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|AbelianMonoid|))
       (|ofType| *7 *6)))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|SparseUnivariateSkewPolynomial| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Automorphism| *3))
       (|ofType| *5 (|Mapping| *3 *3))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Segment| *3))
       (|ofCategory| *3 (|PolynomialCategory| *7 *6 *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|))))
       (|isDomain| *1 (|InnerPolySum| *6 *4 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|))))
       (|isDomain| *1 (|InnerPolySum| *5 *4 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceSum| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|)
                             (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|)
                             (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceSum| *4 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Polynomial| *5)))
       (|isDomain| *3 (|Polynomial| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|Collection| *3))))
 ((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |exponent| (|NonNegativeInteger|))
                          (|:| |center| *4) (|:| |num| *4))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
   (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))
 ((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|Union| (|:| |fst| (|FortranScalarType|))
                        (|:| |void| #1="void")))
   (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
   (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Boolean|))
   (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *1 (|IndexedProductCategory| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InfiniteTuple| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LieAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *3))))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModuleMonomial| *2 *3 *4))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3))
                   (|Record| (|:| |index| *2) (|:| |exponent| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4))))
   (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *1 (|PatternMatchResult| *3 *4))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|Product| *2 *3)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|List| (|SplittingNode| *3 *5)))
       (|isDomain| *1 (|SplittingNode| *3 *5))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Record| (|:| |val| *4) (|:| |tower| *5))))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|List| (|SplittingNode| *4 *5)))
       (|isDomain| *1 (|SplittingNode| *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |tower| *4)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *3 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *2 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|SplittingNode| *2 *3)))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *2 *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|SplittingTree| *2 *3)))
       (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|SuchThat| *2 *3)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *3 *2))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursiveAggregate| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Point| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Point| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *5))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Boolean|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|SubSpaceComponentProperty|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Point| *4)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SubSpaceComponentProperty|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Point| *4))) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|SubResultantPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|PrimitiveArray| *3))
       (|isDomain| *1 (|SubResultantPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatElementaryFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|Float|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |sinh| (|Stream| *4))
                             (|:| |cosh| (|Stream| *4))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |sin| (|Stream| *4))
                             (|:| |cos| (|Stream| *4))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *4))))) 
(((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *4 (|Integer|)))
       (|isDomain| *5 (|Mapping| (|Stream| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| *4 (|Integer|)))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *1 (|ODEIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
   (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
   (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|CommutativeRing|))
   (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
   (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
   (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *3)))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2))
   (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
   (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|ComplexCategory| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|EntireRing|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *3 (|OrderedAbelianMonoid|))
   (|ofCategory| *2 (|EntireRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
   (|ofCategory| *2 (|AbelianMonoid|))
   (|ofCategory| *3 (|FiniteLinearAggregate| *2))
   (|ofCategory| *4 (|FiniteLinearAggregate| *2))
   (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|EntireRing|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *5 (|DirectProductCategory| *4 *2))
   (|ofCategory| *6 (|DirectProductCategory| *3 *2))
   (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *2 *2)
  (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
   (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|String|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SingleInteger|))) (|isDomain| *1 (|String|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Stream| *4))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |cycle?| (|Boolean|))
                             (|:| |prefix| (|NonNegativeInteger|))
                             (|:| |period| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|Stream| *3))) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Stream| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Stream| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Algebra| *2))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|Distribution| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |puiseux| (|Fraction| (|Integer|)))
                         (|:| |laurent| (|Fraction| (|Integer|)))
                         (|:| |coef| (|Sequence| *3))))
   (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Distribution| *3))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Algebra| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
   (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))
   (|isDomain| *2 (|Distribution| *4))
   (|isDomain| *1 (|STransformPackage| *4 *5 *6 *3))
   (|ofCategory| *3 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))
       (|isDomain| *1 (|STransformPackage| *4 *5 *6 *2))
       (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))
       (|isDomain| *1 (|STransformPackage| *4 *5 *6 *2))
       (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateLaurentSeriesConstructorCategory| *4 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|STransformPackage| *4 *2 *5 *6))
       (|ofCategory| *6 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|STransform| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|STransform| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DoubleFloat|)))
       (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| (|List| *4) *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|StreamTensor| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1) (|ofCategory| *1 (|StepThrough|)))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|StepThrough|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Stack| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5))
                   (|Record| (|:| |index| *4) (|:| |exponent| *5))))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *5 (|OrderedVariableList| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|isDomain| *2 (|ModuleMonomial| *5 *6 *7))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *8
                     (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3 *1 *4 *4 *4 *4 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *3)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3 *1 *4 *4 *4 *4 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *3)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |val| (|List| *8))
                             (|:| |towers|
                                  (|List|
                                   (|RegularTriangularSet| *5 *6 *7 *8)))))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |val| (|List| *8))
                             (|:| |towers|
                                  (|List|
                                   (|SquareFreeRegularTriangularSet| *5 *6 *7
                                                                     *8)))))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1
               (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *2 *5 *6)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11))))
   (|isDomain| *5
               (|Record| (|:| |done| (|List| *11))
                         (|:| |todo|
                              (|List|
                               (|Record| (|:| |val| (|List| *10))
                                         (|:| |tower| *11))))))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9))
   (|ofCategory| *11 (|RegularTriangularSetCategory| *7 *8 *9 *10))
   (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|OrderedSet|))
   (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *10 *11))))
 ((*1 *2 *3 *4 *2 *5 *6)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11))))
   (|isDomain| *5
               (|Record| (|:| |done| (|List| *11))
                         (|:| |todo|
                              (|List|
                               (|Record| (|:| |val| (|List| *10))
                                         (|:| |tower| *11))))))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9))
   (|ofCategory| *11 (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *10))
   (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|OrderedSet|))
   (|isDomain| *1
               (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *10 *11))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2
                   (|Record|
                    (|:| |id| (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))
                    (|:| |principalPart| *6)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |poly| *6) (|:| |normal| (|Fraction| *6))
                             (|:| |special| (|Fraction| *6))))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|PartialFractionUtilities| *4 *3))))
 ((*1 *2 *3 *2 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *2 *4 *4 *4 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *2 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))
 ((*1 *2 *3 *2 *4 *4 *4 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *9 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *9 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))
 ((*1 *1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))
 ((*1 *1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Character|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|UniversalSegment| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|CachableSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|CubicalFacet|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *3 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|OrientedFacet|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *3 (|CharacterClass|))))
 ((*1 *2 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |less| (|BinarySearchTree| *3))
                         (|:| |greater| (|BinarySearchTree| *3))))
   (|isDomain| *1 (|BinarySearchTree| *3)) (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|IntegrationResult| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *3
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|IntegrationResultToFunction| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *3))))
       (|ofCategory| *3
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3)))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3)))
       (|isDomain| *1 (|ParallelIntegrationTools| *5 *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5)))
       (|isDomain| *4 (|Vector| (|Vector| *5))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|CharacterClass|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|StringAggregate|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Character|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|StringAggregate|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *2 *4))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SquareMatrix| *2 *3))
       (|ofType| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|SquareMatrix| *3 *4))
       (|ofType| *3 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|not| (|ofCategory| *1 (|arbitraryPrecision|)))
       (|not| (|ofCategory| *1 (|arbitraryExponent|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedMultisetAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|)))
 ((*1 *1) (|isDomain| *1 (|SingleInteger|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|not| (|ofCategory| *1 (|arbitraryPrecision|)))
       (|not| (|ofCategory| *1 (|arbitraryExponent|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1) (|isDomain| *1 (|SingleInteger|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PointCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|List| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|List| (|DoubleFloat|)))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|SplittingTree| *2 *3))
   (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
   (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|SplittingTree| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|SplittingTree| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|SplittingNode| *4 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *4 *5))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|SplittingNode| *5 *6))
       (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *5 *6))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|BasicKeyedAccessFile|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|SplittingNode| *4 *5)))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *4 *5))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SplittingNode| *3 *4)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|HashState|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|QueryEquation|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *3 *2))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
   (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1 *1) (|isDomain| *1 (|BasicOperator|)))
 ((*1 *1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SplittingNode| *3 *2))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1 *1 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *5 *6))))) 
(((*1 *2 *1 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *4 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RetractableTo| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))))
 ((*1 *1 *2 *2 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|SpecialFunctionCategory|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RetractableTo| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|SpecialFunctionCategory|))))) 
(((*1 *2 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *1 *1) (|isDomain| *1 (|Partition|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|OrderedRing|)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FortranProgramCategory|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SubSpace| 3 *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Point| *4)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Point| *3))))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *3))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|List| (|SubSpaceComponentProperty|)))
       (|isDomain| *4 (|SubSpaceComponentProperty|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *5))))
       (|isDomain| *3 (|List| (|SubSpaceComponentProperty|)))
       (|isDomain| *4 (|SubSpaceComponentProperty|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|List| (|NonNegativeInteger|)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|List| (|Point| *3)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|SubSpaceComponentProperty|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|SubSpaceComponentProperty|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |points| (|NonNegativeInteger|))
                             (|:| |curves| (|NonNegativeInteger|))
                             (|:| |polygons| (|NonNegativeInteger|))
                             (|:| |constructs| (|NonNegativeInteger|))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))
 ((*1 *2 *3 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6))
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|ofCategory| *6 (|EuclideanDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|SortPackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *4)
                             (|finiteAggregate|) (|shallowlyMutable|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|SortPackage| *3 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *3)
                             (|finiteAggregate|) (|shallowlyMutable|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|SortPackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *4)
                             (|finiteAggregate|) (|shallowlyMutable|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|SortPackage| *3 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *3)
                             (|finiteAggregate|) (|shallowlyMutable|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SmallOrdinal|))))) 
(((*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *2 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *3))))
   (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|TransSolvePackageService| *3))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|RootUtilities| *4 *5))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))
   (|isDomain| *2 (|List| (|Expression| *4)))
   (|isDomain| *1 (|RadicalSolvePackage| *4))))) 
(((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RadicalSolvePackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Expression| *5))
                               (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Expression| *5))
                               (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4)))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4)))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))) 
(((*1 *2 *2 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Field|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
   (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|ofCategory| *6 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Field|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
   (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| *5))
   (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
   (|isDomain| *2 (|Vector| (|Fraction| *5)))
   (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|ofCategory| *6 (|LinearlyExplicitOver| *5))
   (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
   (|isDomain| *2 (|Vector| (|Fraction| *5)))
   (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *2)
  (|partial| AND (|ofCategory| *4 (|Field|))
   (|ofCategory| *5 (|Join| (|FiniteLinearAggregate| *4) (|shallowlyMutable|)))
   (|ofCategory| *2 (|Join| (|FiniteLinearAggregate| *4) (|shallowlyMutable|)))
   (|isDomain| *1 (|LinearSystemMatrixPackage| *4 *5 *2 *3))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *2))))
 ((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Matrix| *4))
   (|ofCategory| *4 (|Field|))
   (|isDomain| *1 (|LinearSystemMatrixPackage1| *4))))
 ((*1 *2 *3 *2 *4 *5)
  (|partial| AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|Mapping| *2 *2))
   (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|ODETools| *2 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Stream| *7)))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Mapping| (|Stream| *7) *7))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *5 *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| *6 *7))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *6 *8))
       (|isDomain| *1 (|SparsePolynomialCoercionHelpers| *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|SmithNormalForm| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping|
                (|Record| (|:| |Smith| (|Matrix| (|Integer|)))
                          (|:| |leftEqMat| (|Matrix| (|Integer|)))
                          (|:| |rightEqMat| (|Matrix| (|Integer|))))
                (|Matrix| (|Integer|))))
   (|isDomain| *3 (|Matrix| (|Integer|)))
   (|isDomain| *2
               (|Record| (|:| |Smith| (|Matrix| (|Integer|)))
                         (|:| |leftEqMat| (|Matrix| (|Integer|)))
                         (|:| |rightEqMat| (|Matrix| (|Integer|)))))
   (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2
                   (|Record| (|:| |Smith| *3) (|:| |leftEqMat| *3)
                             (|:| |rightEqMat| *3)))
       (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *3 (|Mapping| (|Matrix| (|Integer|)) (|Matrix| (|Integer|))))
   (|isDomain| *2 (|Matrix| (|Integer|)))
   (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |Hermite| *3) (|:| |eqMat| *3)))
       (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixManipulation| *3 *4 *5 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|AbelianMonoid|))
       (|isDomain| *1 (|Matrix| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *3 *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|isDomain| *1 (|IntegralBasisTools| *2 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|DivisionRing|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialExtension| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|DifferentialExtension| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofType| *5 (|Union| *2 *3))
       (|ofType| *6 (|Union| *2 *3)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleSymAna| *4 *5 *6))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundle| *4 *5)) (|ofType| *4 *3) (|ofType| *5 *3)))
 ((*1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|PartialDifferentialOperator| *3 *2))
       (|ofCategory| *3 (|PartialDifferentialRing| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|SparseMultivariateSkewPolynomial| *3 *2 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|ofType| *4 (|Mapping| (|Automorphism| *3) *2))
       (|ofType| *5 (|Mapping| (|Mapping| *3 *3) *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|SparseMultivariateSkewPolynomial| *3 *4 *5 *6))
       (|has| *4 (SIGNATURE |variable| (*4 *2))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofType| *5 (|Mapping| (|Automorphism| *3) *4))
       (|ofType| *6 (|Mapping| (|Mapping| *3 *3) *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|Lambda| *5))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Lambda| *5)) (|ofCategory| *5 (|VarCat|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|SKICombinators| *5))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|SKICombinators| *5)) (|ofCategory| *5 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Lambda| *3))) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SKICombinators| *3)))
       (|isDomain| *1 (|SKICombinators| *3)) (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DirectedGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1 *1) (|ofCategory| *1 (|Logic|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|MultifunctionGraph| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|JoinSemilattice|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|MeetSemilattice|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|DeltaComplex| *4))
       (|isDomain| *1 (|DeltaComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *4))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *4 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *5 (|AbelianGroup|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|DeltaComplex| *3))
   (|ofCategory| *3 (|AbelianGroup|))
   (|isDomain| *1 (|FiniteSimplicialComplex| *3))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *2 (|DeltaComplex| *4))
   (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|AbelianGroup|))
   (|isDomain| *1 (|FiniteSimplicialComplex| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|CubicalFacet|))))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|OrientedFacet|))))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2
                   (|Record| (|:| |under| *1) (|:| |floor| *1)
                             (|:| |upper| *1)))
       (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|CubicalFacet|))))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|OrientedFacet|))))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteCubicalComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|SBoundary| *4))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|NonNegativeInteger|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|DeltaComplex| *4)) (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|)) (|isDomain| *1 (|DeltaComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|CoChainComplex| *3))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|CoChainComplex| *3))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|))) (|isDomain| *1 (|ChainComplex|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *1 (|Homology|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *2 (|Vector| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *5 (|Boolean|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9))))
   (|isDomain| *1
               (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5)
  (|partial| AND (|isDomain| *3 (|List| *9)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4)
                         (|:| |ineq| (|List| *9))))
   (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *4))
   (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5)
  (|partial| AND (|isDomain| *3 (|List| *9)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4)
                         (|:| |ineq| (|List| *9))))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *4))
   (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10)
                              (|:| |ineq| (|List| *9)))))
       (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10)
                              (|:| |ineq| (|List| *9)))))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *10))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7))))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
   (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7))))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
   (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *5 *6 *7 *8 *3))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *5 *6 *7 *8 *3))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|GcdDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
   (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|GcdDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
   (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|FortranScalarType|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|SimpleFortranProgram| *5 *4))
       (|ofCategory| *4 (|FunctionSpace| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4))))
   (|isDomain| *1 (|PatternMatchResult| *3 *4))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|PositiveInteger|))
   (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2)
   (|ofType| *4 *2)))) 
(((*1 *1 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|PositiveInteger|))
   (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2)
   (|ofType| *4 *2)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|Finite|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Vector| (|SetOfMIntegersInOneToN| *3 *4)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3)
       (|ofType| *5 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|SubsetLattice| *3 *4)) (|ofType| *4 *2)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Finite|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|SubsetLattice| *3 *4)) (|ofType| *4 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SubsetLattice| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofType| *3 (|List| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|SetAggregate| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PolynomialIdeal| *3 *4 *5 *6)))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| *4)))
       (|ofCategory| *4 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SBoundary| *3)))
       (|isDomain| *1 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *2 (|LeftModule| *5))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|ApplyUnivariateSkewPolynomial| *5 *2 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *2 (|Distribution| *6))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *6 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|IncidenceAlgebra| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|IncidenceAlgebra| *2 *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2 *2)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *3 *2 *2 *4 *5)
  (AND (|isDomain| *4 (|Automorphism| *2)) (|isDomain| *5 (|Mapping| *2 *2))
       (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *2 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Partition|)) (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|SequenceCategory| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *2 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|IndexedAggregate| *3 *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *2 *7))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *4 *6))
       (|ofCategory| *2 (|DirectProductCategory| *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |Indices| (|List| *4))
                             (|:| |Entries| (|List| *5))))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|IndexedAggregate| *2 *4))
       (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *4 *5)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|Ring|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *6 *7))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|Record| (|:| |Indices| (|List| *5))
                             (|:| |Entries| (|List| *6))))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *5 *6))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |Indices| (|List| *4))
                         (|:| |Entries| (|List| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |Indices| (|List| *4))
                         (|:| |Entries| (|List| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|DivisionRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *2))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|UnivariateSkewPolynomialCategory| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|OrePolynomialMatrixOperations| *3 *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *5 (|List| (|Vector| *4)))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *6 (|UnivariateSkewPolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *4)))))
       (|isDomain| *1 (|OrePolynomialMatrixOperations| *4 *6))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *2 *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *2 *4))
       (|ofCategory| *4 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Lt| (|Matrix| *4)) (|:| |Pivots| (|List| *4))
                         (|:| |Rank| (|NonNegativeInteger|))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Lt| (|Matrix| (|Fraction| *4)))
                         (|:| |Pivots| (|List| *4))
                         (|:| |Rank| (|NonNegativeInteger|))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Record| (|:| |Index| *4) (|:| |Entry| *5)))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Indices| (|List| *3))
                         (|:| |Entries| (|List| *4))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|Dcpo| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Left| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Right| (|SparseEchelonMatrix| *3 *4))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SegmentCategory| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedRing|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|QueryEquation|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Segment| *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|SegmentBinding| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *3)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Matrix| (|Polynomial| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *5))))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|StructuralConstantsPackage| *4))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SConformal| *2)) (|ofType| *2 (|PositiveInteger|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Scene| *4)))
       (|isDomain| *3 (|List| (|String|))) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|String|)))
       (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|SceneNamedPoints| *4)))
       (|isDomain| *3 (|List| (|String|)))
       (|isDomain| *1 (|SceneNamedPoints| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *2))
       (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Scene| *4))
       (|isDomain| *1 (|SceneNamedPoints| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SPointCategory|))
       (|isDomain| *2 (|List| (|List| *6))) (|isDomain| *1 (|SceneIFS| *6))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |source| (|Mapping| *5 (|DoubleFloat|)))
                          (|:| |ranges| (|List| (|Segment| (|DoubleFloat|))))
                          (|:| |knots| (|List| (|DoubleFloat|)))
                          (|:| |points| (|List| *5)))))
   (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|))
   (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|SceneIFS| *5))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SceneIFS| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|SceneIFS| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| *4))) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|SceneIFS| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SubSpace| 3 (|DoubleFloat|)))
       (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Export3D|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Reference| (|List| *8)))
       (|isDomain| *4 (|Reference| (|List| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *5 (|Reference| (|NonNegativeInteger|)))
       (|isDomain| *6 (|STransform| *8)) (|isDomain| *7 (|SBoundary| *8))
       (|ofCategory| *8 (|SPointCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *8))))) 
(((*1 *2 *1 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *6)) (|isDomain| *5 (|SBoundary| *6))
   (|ofCategory| *6 (|SPointCategory|)) (|isDomain| *2 (|XmlElement|))
   (|isDomain| *1 (|Scene| *6))))) 
(((*1 *2 *1 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *9)) (|isDomain| *5 (|SBoundary| *9))
   (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Boolean|))
   (|isDomain| *8 (|SceneNamedPoints| *9)) (|ofCategory| *9 (|SPointCategory|))
   (|isDomain| *2 (|XmlElement|)) (|isDomain| *1 (|Scene| *9))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|STransform| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
       (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
       (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *1 (|Scene| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *1 (|Scene| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|DirectedGraph| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *1 (|Scene| *5)) (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|DirectedGraph| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *1 (|Scene| *5)) (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *4 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *4 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SBoundary| *5)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SBoundary| *5)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|SBoundary| *4))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|SBoundary| *4))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |txt| (|String|))
                         (|:| |siz| (|NonNegativeInteger|)) (|:| |pos| *3)
                         (|:| |np| (|List| (|String|)))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |txt| (|String|))
                         (|:| |siz| (|NonNegativeInteger|)) (|:| |pos| *3)
                         (|:| |np| (|List| (|String|)))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|DoubleFloat|)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|DoubleFloat|)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |shptype| (|Symbol|)) (|:| |centre| *3)
                         (|:| |size| *3) (|:| |fill| (|Boolean|))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |shptype| (|Symbol|)) (|:| |centre| *3)
                         (|:| |size| *3) (|:| |fill| (|Boolean|))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SimpleCell| *5 *6)))
       (|isDomain| *1 (|SimpleCell| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SimpleCell| *5 *3)))
       (|isDomain| *1 (|SimpleCell| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Cell| *4)) (|ofCategory| *4 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SimpleCell| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|RealClosedField|))
       (|isDomain| *1 (|SimpleCell| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|SimpleCell| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ScanningUtilities|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Integer|) *2 *2))
   (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
       (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Integer|) *2 *2))
       (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
   (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SortedCache| *3))
       (|ofCategory| *3 (|CachableSet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SBoundary| *3)))
       (|isDomain| *1 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1) (|isDomain| *1 (|SingletonAsOrderedSet|)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1
                   (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7
                                                                      *8 *3))
       (|ofCategory| *3
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *4 *5))
       (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5)))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|Ruleset| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5)))
       (|isDomain| *1 (|Ruleset| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *4 *5))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Pattern| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Mapping| (|Boolean|) (|List| *6)))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Mapping| (|Boolean|) *5))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|AttachPredicates| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|AttachPredicates| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|Mapping| (|Boolean|) (|List| *6)))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| *2)))
       (|isDomain| *2 (|Pattern| *3)) (|isDomain| *1 (|RewriteRule| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| *2)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|RewriteRule| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|RootSimplification|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|isDomain| *1 (|RootSimplification|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *5 (|Boolean|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9))))
   (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Union| (|Boolean|) (|List| *1)))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Union| *3 (|List| *1)))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *3 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|Ring|)) (|ofCategory| *1 (|ExpressionSpace2| *2))
       (|ofCategory| *2 (|KernelCategory| *1))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2))
       (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1)) (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2))
       (|ofCategory| *2 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5))
       (|isDomain| *1 (|AlgebraicFunction| *5 *2))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|OutputForm|))
   (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
   (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RealClosure| *3))
       (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |coef| *3) (|:| |gap| (|NonNegativeInteger|))
                         (|:| |quotient| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |remainder|
                              (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |polnum| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |polden| *3)
                         (|:| |power| (|NonNegativeInteger|))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |polnum| *1) (|:| |polden| *1)
                             (|:| |power| (|NonNegativeInteger|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Float|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2))
   (|ofType| *4 (|List| *2)) (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| *5))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Float|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Float|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
   (|has| *4 (SIGNATURE |retractIfCan| ((|Union| *4 "failed") *2)))
   (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleXExpression| *3))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|FiniteFieldCategory|))
   (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))
   (|ofType| *7 (|PositiveInteger|))))
 ((*1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|RetractableFrom| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RetractableTo| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Algebra| (|Integer|)))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Float|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2))
       (|ofType| *4 (|List| *2))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *5))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|)))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Float|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|)))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|)))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Expression| (|Float|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
       (|has| *4 (SIGNATURE |retractIfCan| ((|Union| *4 "failed") *2)))
       (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleXExpression| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|RetractableFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Integer|)))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |gcd| *1) (|:| |coef1| *1) (|:| |coef2| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef1| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef2| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *2 *4 *5))
       (|isDomain| *1 (|PolynomialSetCategory&| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|PolynomialSetCategory| *2 *4 *5 *6))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|RecursivePolynomialCategory&| *3 *2 *4 *5))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *2 *4 *5))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| *7)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|PositiveInteger|)))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|RootUtilities| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *3)
                         (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|RootUtilities| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *3)
                         (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |reals| (|List| *4))
                         (|:| |complexes|
                              (|List|
                               (|Record| (|:| |real| *4) (|:| |imag| *4))))))
   (|isDomain| *1 (|RootUtilities| *5 *4))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |reals| (|List| *5))
                         (|:| |complexes|
                              (|List|
                               (|Record| (|:| |real| *5) (|:| |imag| *5))))))
   (|isDomain| *1 (|RootUtilities| *4 *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RomanNumeral|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FramedModule&| *3 *4))
       (|ofCategory| *3 (|FramedModule| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSetAggregate&| *3 *4))
       (|ofCategory| *3 (|FiniteSetAggregate| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))
 ((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))
 ((*1 *2)
  (AND (|ofType| *4 *2) (|ofType| *5 *2)
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *5 *6))
       (|ofCategory| *8 (|DirectProductCategory| *4 *6))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RectangularMatrixCategory&| *3 *4 *5 *6 *7 *8))
       (|ofCategory| *3 (|RectangularMatrixCategory| *4 *5 *6 *7 *8))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Factored| *4) *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *4))
       (|isDomain| *1 (|FactoredFunctionUtilities| *4))))
 ((*1 *1 *1) (|isDomain| *1 (|Plot|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1) (|isDomain| *1 (|Plot3D|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| (|AlgebraicNumber|))))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Kernel| (|AlgebraicNumber|)))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
       (|isDomain| *3 (|List| (|Kernel| (|AlgebraicNumber|))))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
       (|isDomain| *3 (|Kernel| (|AlgebraicNumber|)))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdeal| *3 *2 *4 *5))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *2 *4) (|RetractableTo| *2)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4)) (|ofType| *6 (|Vector| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|MonogenicAlgebra| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|NormInMonogenicAlgebra| *4 *2 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RealNumberSystem|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FloatElementaryFunctions|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Comparable|)) (|ofCategory| *5 (|KernelCategory| %))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionSpace2&| *3 *4 *5))
       (|ofCategory| *3 (|FunctionSpace2| *4 *5))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerNumberSystem&| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|NonAssociativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OctonionCategory&| *3 *4))
       (|ofCategory| *3 (|OctonionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|QuotientFieldCategory&| *3 *4))
       (|ofCategory| *3 (|QuotientFieldCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|QuaternionCategory&| *3 *4))
       (|ofCategory| *3 (|QuaternionCategory| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealClosedField&| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealNumberSystem&| *3))
       (|ofCategory| *3 (|RealNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|RealNormalizationUtilities| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|Rng|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *5 (|Field|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3)) (|isDomain| *1 (|IncidenceAlgebra| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3 (|Mapping| *4 (|Integer|) (|Integer|)))
       (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|OutputForm|))))
       (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4))
       (|isDomain| *1 (|QuadraticForm| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *5)))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|XDistributedPolynomial| *4 *5))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *2))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|IndexedAggregate| *3 *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *7 *2))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *5 *6))
       (|ofCategory| *2 (|DirectProductCategory| *4 *6))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|DivisionRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| *5)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *5))
       (|isDomain| *3 (|List| *5)) (|ofType| *4 (|Symbol|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|PolynomialInterpolation| *4 *5))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *5))
       (|isDomain| *1 (|PolynomialInterpolation| *4 *5))
       (|ofType| *4 (|Symbol|))))
 ((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *6)))
       (|isDomain| *1 (|RationalInterpolation| *5 *6))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputBox|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *4))
       (|isDomain| *1 (|RandomDistributions| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|RetractableTo| *5)
                             (|Comparable|)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RootFSSplit| *6 *3))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |funs| (|List| *6)) (|:| |nroot| *6)
                              (|:| |npow1| (|Integer|))
                              (|:| |npow2| (|Integer|)))))
       (|isDomain| *1 (|RootFSSplit| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|Fraction| (|SparseUnivariatePolynomial| *2))))
   (|isDomain| *4 (|Kernel| *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *5 *2 *6))
   (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *2)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                              (SIGNATURE |numer| (*7 %))
                              (SIGNATURE |denom| (*7 %)))))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *2))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Fraction|
                (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *1 (|RationalFunction| *5))
   (|ofCategory| *5 (|IntegralDomain|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *1 (|FunctionSpace2| *4 *3))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *3 (|KernelCategory| *1))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *1)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|Fraction| (|SparseUnivariatePolynomial| *3))))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *6)) (|isDomain| *4 (|Variable| *5))
       (|ofType| *5 (|Symbol|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 (|Polynomial| *6)))
       (|isDomain| *1 (|PolynomialToUnivariatePolynomial| *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                              (SIGNATURE |numer| (*7 %))
                              (SIGNATURE |denom| (*7 %)))))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                              (SIGNATURE |numer| (*7 %))
                              (SIGNATURE |denom| (*7 %)))))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Fraction|
                    (|SparseUnivariatePolynomial|
                     (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|RationalFunction| *5))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *2))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|PolynomialCategory| *5 *4 *2))
   (|ofCategory| *2 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *2 *5 *6 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *6))
                          (SIGNATURE |numer| (*6 %))
                          (SIGNATURE |denom| (*6 %)))))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeMonoid| *3)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace2| *4 *5))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *5 (|KernelCategory| *1))
       (|isDomain| *2 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|KernelCategory| *1))
       (|isDomain| *2 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                              (SIGNATURE |numer| (*7 %))
                              (SIGNATURE |denom| (*7 %)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|RetractableTo| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *6))))))
       (|isDomain| *1 (|RetractSolvePackage| *5 *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|Fraction| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|GenusZeroIntegration| *5 *6 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3 *4 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|isDomain| *4 (|SparseUnivariatePolynomial| *9))
   (|isDomain| *6 (|List| *11)) (|isDomain| *7 (|List| (|NonNegativeInteger|)))
   (|isDomain| *8 (|List| *9)) (|ofCategory| *11 (|OrderedSet|))
   (|ofCategory| *9 (|EuclideanDomain|))
   (|ofCategory| *5 (|PolynomialCategory| *9 *10 *11))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *1 (|MultivariateSquareFree| *10 *11 *9 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofType| *6 (|List| *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|RepeatedSquaring| *2))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE * (% % %)))))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|RepeatedDoubling| *2))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE + (% % %)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Vector| *5))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|Field|))
       (|ofCategory| *6 (|Finite|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *6))))
       (|isDomain| *1 (|RepresentationPackage2| *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *4))))
       (|isDomain| *1 (|RepresentationPackage2| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Finite|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Matrix| *6))
       (|isDomain| *1 (|RepresentationPackage2| *6))
       (|ofCategory| *6 (|Field|)) (|ofCategory| *6 (|Ring|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|RepresentationPackage2| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Vector| (|Vector| *5)))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Vector| *4))) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Permutation| (|Integer|)))
       (|isDomain| *1 (|FiniteGroupPackage| *3))
       (|ofCategory| *3 (|Join| (|Group|) (|Finite|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Permutation| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|RepresentationPackage1| *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Permutation| (|Integer|))))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|RepresentationPackage1| *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|Polynomial| *4)))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
   (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |radval| (|Expression| (|Integer|)))
                              (|:| |radmult| (|Integer|))
                              (|:| |radvect|
                                   (|List|
                                    (|Matrix| (|Expression| (|Integer|))))))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|ReductionOfOrder| *3 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |eq| *3) (|:| |op| (|List| *5))))
       (|isDomain| *1 (|ReductionOfOrder| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RecurrenceOperator| *4 *3))
   (|ofCategory| *3
                 (|Join| (|FunctionSpace| *4) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))) 
(((*1 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|RecurrenceOperator| *3 *4))
   (|ofCategory| *4
                 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *3 *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Symbol|))
                             (|PartialDifferentialRing| (|Symbol|))
                             (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *1 (|RecurrenceOperator| *3 *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *3 *4 *4 *2 *5 *6)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
       (|isDomain| *6 (|Stream| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *7) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|)) (|RetractableTo| *4)
                             (|PartialDifferentialRing| *4)
                             (|CombinatorialOpsCategory|)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *7 *2))))) 
(((*1 *2 *3 *4 *2 *5 *6)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
       (|isDomain| *6 (|Stream| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *7) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|)) (|RetractableTo| *4)
                             (|PartialDifferentialRing| *4)
                             (|CombinatorialOpsCategory|)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *7 *2))))) 
(((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|RightOpenIntervalRootCharacterization| (|RealClosure| *4)
                                                        (|SparseUnivariatePolynomial|
                                                         (|RealClosure| *4))))
   (|isDomain| *3 (|OutputForm|)) (|isDomain| *1 (|RealClosure| *4))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|RightOpenIntervalRootCharacterization| (|RealClosure| *3)
                                                        (|SparseUnivariatePolynomial|
                                                         (|RealClosure| *3))))
   (|isDomain| *1 (|RealClosure| *3))
   (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |left| (|Fraction| (|Integer|)))
                              (|:| |right| (|Fraction| (|Integer|))))))
       (|isDomain| *1 (|RealZeroPackage| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *5 (|Fraction| (|Integer|)))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |left| (|Fraction| (|Integer|)))
                              (|:| |right| (|Fraction| (|Integer|))))))
       (|isDomain| *1 (|RealZeroPackageQ| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *5 (|Fraction| (|Integer|)))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|RealZeroPackage| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackage| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6))
       (|isDomain| *1 (|RandomDistributions| *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|Record| (|:| |value| *4) (|:| |weight| (|Integer|)))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Mapping| *4))
   (|isDomain| *1 (|RandomDistributions| *4))))) 
(((*1 *2 *3 *4 *2 *2 *5 *6 *7)
  (AND
   (|isDomain| *4 (|LaurentPolynomial| *6 (|SparseUnivariatePolynomial| *6)))
   (|isDomain| *7
               (|Mapping|
                (|Record| (|:| |logands| (|List| *6))
                          (|:| |basis|
                               (|List| (|Vector| (|Fraction| (|Integer|))))))
                (|List| (|Kernel| *6)) (|List| *6)))
   (|ofCategory| *6
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *8)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
   (|isDomain| *5 (|List| (|Kernel| *6)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| *2) (|LinearlyExplicitOver| *2)))
   (|isDomain| *1 (|ParametricRischDE| *8 *6))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *5 (|Symbol|))
       (|isDomain| *7
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *3)
                               (|:| |coeffs| (|Vector| *3))))
                    (|List| (|Kernel| *3)) (|List| *3)))
       (|isDomain| *8
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *3))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *3)) (|List| *3)))
       (|isDomain| *4 (|List| *3)) (|isDomain| *6 (|List| (|Kernel| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *9)))
       (|ofCategory| *9
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *3)
                              (|:| |coeffs| (|Vector| *3)))))
       (|isDomain| *1 (|ParametricRischDE| *9 *3))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *6 (|Symbol|))
       (|isDomain| *8
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *4)
                               (|:| |coeffs| (|Vector| *4))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *9
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *4))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|List| *4))
       (|isDomain| *7 (|List| (|Kernel| *4)))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *10)))
       (|ofCategory| *10
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *4)
                              (|:| |coeffs| (|Vector| *4)))))
       (|isDomain| *1 (|ParametricRischDE| *10 *4))))
 ((*1 *2 *3 *4 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *6 (|Symbol|))
       (|isDomain| *8
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *4)
                               (|:| |coeffs| (|Vector| *4))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *9
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *4))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *10)))
       (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|List| *4))
       (|isDomain| *7 (|List| (|Kernel| *4)))
       (|ofCategory| *10
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *4)
                                    (|:| |coeffs| (|Vector| *4)))
                          "failed"))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *4)
                                    (|:| |coeffs| (|Vector| *4)))))))
       (|isDomain| *1 (|ParametricRischDE| *10 *4))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|List| (|Kernel| *3)))
   (|ofCategory| *3
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *7)))
   (|ofCategory| *7
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeffs| (|Vector| *3))))
   (|isDomain| *1 (|ElementaryRischDEX2| *7 *3))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Kernel| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |ans| *3) (|:| |right| *3)
                             (|:| |primpart| *3) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX2| *6 *3))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| *3) (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record| (|:| |ans| *4) (|:| |right| *4)
                             (|:| |primpart| *4) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX2| *6 *4))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryRischDEX| *3 *2))
   (|ofCategory| *2
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|)
                         (|LiouvillianFunctionCategory|)
                         (|SpecialFunctionCategory|) (|FunctionSpace| *3)))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record| (|:| |ans| *4) (|:| |right| *4)
                             (|:| |primpart| *4) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX| *6 *4))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|)
                             (|FunctionSpace| *6)))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping| (|SparseUnivariatePolynomial| *5)
                          (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |ans| (|SparseUnivariatePolynomial| *5))
                         (|:| |remainder| (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|RDEaux| *5))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *5 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|SparseUnivariatePolynomial| *7)
                              (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|Field|))
       (|isDomain| *2
                   (|Union|
                    (|List|
                     (|Record| (|:| |ans| (|SparseUnivariatePolynomial| *7))
                               (|:| |remainder|
                                    (|SparseUnivariatePolynomial| *7))))
                    (|Record|
                     (|:| |ans| (|List| (|SparseUnivariatePolynomial| *7)))
                     (|:| |acoeff| (|SparseUnivariatePolynomial| *7))
                     (|:| |eegen| (|SparseUnivariatePolynomial| *7))
                     (|:| |bpar| (|SparseUnivariatePolynomial| *7))
                     (|:| |lcpar| (|List| (|SparseUnivariatePolynomial| *7)))
                     (|:| |dpar| (|Integer|)))))
       (|isDomain| *1 (|RDEaux| *7))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerPrimeField| *2))
       (|ofType| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PrimeField| *2)) (|ofType| *2 (|PositiveInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RadicalCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealClosedField|)))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RealClosedField|))
   (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursiveAggregate| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|ComplexCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|OctonionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OnePointCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OrderedCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|QuaternionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RationalRetractions| *3))
   (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RationalRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RationalRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|RadixUtilities|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Factored| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *5) (|:| |radicand| (|List| *5))))
       (|isDomain| *1 (|FactoredFunctions| *5))))
 ((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RadicalCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Queue| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|QuadraticForm| *3 *4))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|KernelCategory| *1))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Algebra| *3)) (|isDomain| *1 (|LocalAlgebra| *2 *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Module| *3)) (|isDomain| *1 (|Localize| *2 *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|QuotientFieldCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|KernelCategory| *1))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *3 *2))
       (|ofCategory| *3 (|Algebra| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *2))
       (|ofCategory| *3 (|Module| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *1 (|FunctionSpace2| *2 *3))
       (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *1 (|FunctionSpace2| *2 *3))
       (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|QuasiAlgebraicSet| (|Fraction| (|Integer|))
                                    (|OrderedVariableList| *3)
                                    (|DirectProduct| (|#| *3)
                                                     (|NonNegativeInteger|))
                                    (|DistributedMultivariatePolynomial| *3
                                                                         (|Fraction|
                                                                          (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|QuasiAlgebraicSet2| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *4 *5 *6 *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|Boolean|) "failed"))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *2))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *2 *3 *5))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|MonogenicAlgebra| *2 *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4
                                           *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %))
                              (SIGNATURE |variable|
                               ((|Union| % "failed") (|Symbol|))))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4
                                           *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %))
                              (SIGNATURE |variable|
                               ((|Union| % "failed") (|Symbol|))))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| C (|Matrix| *5))
                              (|:| |lg| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|Automorphism| *5))
       (|isDomain| *4 (|Mapping| *5 *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *2))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Automorphism| *6))
       (|isDomain| *5 (|Mapping| *6 *6)) (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| R (|Matrix| *6)) (|:| A (|Matrix| *6))
                             (|:| |Ainv| (|Matrix| *6))))
       (|isDomain| *1 (|PseudoLinearNormalForm| *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *8))
       (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
       (|isDomain| *4 (|Mapping| *8 *8 *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|Mapping| (|Boolean|) *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *6 *7 *8 *9))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |bas| (|GeneralTriangularSet| *4 *5 *6 *7))
                         (|:| |top| (|List| *7))))
   (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *2))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *7) (|List| *7)))
       (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |rnum| *4) (|:| |polnum| *3)
                             (|:| |den| *4)))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|CartanKuranishi| *4 *5))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *2 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|EuclideanDomain|))))
 ((*1 *2 *1 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |lm| (|FreeMonoid| *3))
                         (|:| |rm| (|FreeMonoid| *3))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |quotient| (|NonNegativeInteger|))
                         (|:| |remainder| (|NonNegativeInteger|))))
   (|isDomain| *1 (|NonNegativeInteger|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultantReduit| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |resultantReduit| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|GcdDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |discriminant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |discriminant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|RetractableTo| (|Fraction| *2))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BoundIntegerRoots| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|LinearlyExplicitOver| *2)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|PolynomialRationalRoots| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceRationalRoots| *5 *3))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|PolynomialRationalRoots| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|PrintPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|IntegerPrimesPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerPrimesPackage| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerPrimesPackage| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |primelt| *5)
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *5)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *5))))
 ((*1 *2 *3 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |primelt| *3)
                         (|:| |pol1| (|SparseUnivariatePolynomial| *3))
                         (|:| |pol2| (|SparseUnivariatePolynomial| *3))
                         (|:| |prim| (|SparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *3))
   (|ofCategory| *3 (|AlgebraicallyClosedField|))
   (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *3 *4 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef1| (|Integer|))
                             (|:| |coef2| (|Integer|))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|PrimitiveElement| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| (|Integer|)))
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *5)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|PrimitiveElement| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| (|Integer|)))
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *6)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|PrimitiveElement| *6))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|IntegrationResult| *2))
       (|ofCategory| *2 (|RetractableTo| *3)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PrimitiveFunctionCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|PrimitiveFunctionCategory|))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *4 (|List| (|Symbol|)))
   (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |lczlc|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))
                    (|:| |k| (|Integer|))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |lcx0lc|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))
                    (|:| |lcx0m|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|Preorder| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|PositiveInteger|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *5))
   (|isDomain| *1 (|PrecomputedAssociatedEquations| *5 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| (|List| *4)))
       (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|Poset| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|Poset| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|List| (|Boolean|))))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PermutationCategory| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|U32Vector|)))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|)))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PrimitiveArray| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|VectorPolynomialOperationsF| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PrimitiveArray| (|PrimeField| *4)))
       (|ofType| *4 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|VectorPolynomialOperationsP| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|U32Vector|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| *4))
       (|isDomain| *1 (|VectorPolynomialOperationsF| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|PrimitiveArray| (|PrimeField| *4)))
       (|isDomain| *1 (|VectorPolynomialOperationsP| *4))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))))
 ((*1 *2 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PrimitiveArray| (|ModMonic| *3 *4)))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|PrimitiveArray| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|FiniteFieldCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ModularFactorizationTools3| *5))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *3 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *3) (|:| |radicand| (|List| *3))))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *3 *8))
       (|ofCategory| *8
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*3 %))
                              (SIGNATURE |denom| (*3 %))
                              (SIGNATURE |coerce| (% *3)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *3) (|:| |radicand| *3)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*8 %))
                              (SIGNATURE |denom| (*8 %))
                              (SIGNATURE |coerce| (% *8)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *9) (|:| |radicand| *9)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *9))
       (|ofCategory| *9
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*8 %))
                              (SIGNATURE |denom| (*8 %))
                              (SIGNATURE |coerce| (% *8)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *7 (|PolynomialCategory| *3 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *8) (|:| |radicand| *8)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *3 *7 *8))
       (|ofCategory| *8
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*7 %))
                              (SIGNATURE |denom| (*7 %))
                              (SIGNATURE |coerce| (% *7)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|FunctionSpace2| *3 *4)) (|ofCategory| *3 (|Comparable|))
   (|ofCategory| *4 (|KernelCategory| *1))
   (|isDomain| *2 (|Record| (|:| |val| *1) (|:| |exponent| (|Integer|))))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |val| (|Pattern| *3))
                         (|:| |exponent| (|Pattern| *3))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                          (SIGNATURE |numer| (*7 %))
                          (SIGNATURE |denom| (*7 %)))))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *1 (|FunctionSpace2| *4 *5)) (|ofCategory| *4 (|Comparable|))
   (|ofCategory| *5 (|KernelCategory| *1))
   (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|Integer|))))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *1 (|FunctionSpace2| *4 *5)) (|ofCategory| *4 (|Comparable|))
   (|ofCategory| *5 (|KernelCategory| *1))
   (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|Integer|))))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *1 (|FunctionSpace2| *3 *4)) (|ofCategory| *3 (|Comparable|))
   (|ofCategory| *4 (|KernelCategory| *1))
   (|isDomain| *2 (|Record| (|:| |var| *4) (|:| |exponent| (|Integer|))))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |val| (|Pattern| *3))
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|SemiRing|))
   (|isDomain| *2
               (|Record| (|:| |var| *5)
                         (|:| |exponent| (|NonNegativeInteger|))))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                          (SIGNATURE |numer| (*7 %))
                          (SIGNATURE |denom| (*7 %)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *1 (|FunctionSpace2| *3 *4)) (|ofCategory| *3 (|Comparable|))
   (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiRing|))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                          (SIGNATURE |numer| (*7 %))
                          (SIGNATURE |denom| (*7 %)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *1 (|FunctionSpace2| *3 *4)) (|ofCategory| *3 (|Comparable|))
   (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                          (SIGNATURE |numer| (*7 %))
                          (SIGNATURE |denom| (*7 %)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|HeuGcd| *4))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|OrderedRing|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|CyclotomicUtilities|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *4 *2 *5)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|Pattern| *6)))
       (|isDomain| *5
                   (|Mapping| (|PatternMatchResult| *6 *8) *8 (|Pattern| *6)
                              (|PatternMatchResult| *6 *8)))
       (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *6))
                             (|RetractableTo| *7)))
       (|isDomain| *2 (|PatternMatchResult| *6 *8))
       (|ofCategory| *7 (|Join| (|Comparable|) (|Ring|)))
       (|isDomain| *1 (|PatternMatchTools| *6 *7 *8))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|ComplexCategory| *6))
       (|ofCategory| (|Polynomial| *6) (|PatternMatchable| *5))
       (|ofCategory| *6 (|Join| (|PatternMatchable| *5) (|CommutativeRing|)))
       (|isDomain| *1 (|ComplexPatternMatch| *5 *6 *3))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *4 *1))
       (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *1 (|PatternMatchable| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *6))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *3)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|isDomain| *1 (|PatternMatchPushDown| *5 *3 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|ConvertibleTo| *4)
                             (|PatternMatchable| *5)
                             (|RetractableTo| (|Kernel| %))))
       (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchFunctionSpace| *5 *6 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| (|Integer|) *3))
       (|isDomain| *4 (|Pattern| (|Integer|)))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *1 (|PatternMatchIntegerNumberSystem| *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *6))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|RetractableTo| *3)
                             (|ConvertibleTo| *4) (|PatternMatchable| *5)))
       (|isDomain| *3 (|Kernel| *6)) (|isDomain| *4 (|Pattern| *5))
       (|isDomain| *1 (|PatternMatchKernel| *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchListResult| *5 *6 *3))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *3 (|ListAggregate| *6))
       (|isDomain| *1 (|PatternMatchListAggregate| *5 *6 *3))))
 ((*1 *2 *3 *4 *2 *5)
  (AND
   (|isDomain| *5
               (|Mapping| (|PatternMatchResult| *6 *3) *8 (|Pattern| *6)
                          (|PatternMatchResult| *6 *3)))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|PatternMatchResult| *6 *3)) (|isDomain| *4 (|Pattern| *6))
   (|ofCategory| *6 (|SetCategory|))
   (|ofCategory| *3
                 (|Join| (|PolynomialCategory| *9 *7 *8) (|ConvertibleTo| *4)))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *6)))
   (|isDomain| *1 (|PatternMatchPolynomialCategory| *6 *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|PolynomialCategory| *8 *6 *7)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *7 (|PatternMatchable| *5))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchPolynomialCategory| *5 *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|QuotientFieldCategory| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|PatternMatchable| *5)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5))
       (|isDomain| *1 (|PatternMatchQuotientFieldCategory| *5 *6 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 (|Symbol|)))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchSymbol| *5))))
 ((*1 *2 *3 *4 *5 *2 *6)
  (AND (|isDomain| *4 (|List| (|Pattern| *7)))
       (|isDomain| *5 (|Mapping| *9 (|List| *9)))
       (|isDomain| *6
                   (|Mapping| (|PatternMatchResult| *7 *9) *9 (|Pattern| *7)
                              (|PatternMatchResult| *7 *9)))
       (|ofCategory| *7 (|SetCategory|))
       (|ofCategory| *9
                     (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *7))
                             (|RetractableTo| *8)))
       (|isDomain| *2 (|PatternMatchResult| *7 *9)) (|isDomain| *3 (|List| *9))
       (|ofCategory| *8 (|Join| (|Comparable|) (|Ring|)))
       (|isDomain| *1 (|PatternMatchTools| *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *5)))
       (|ofCategory| *5 (|PatternMatchable| *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| (|Boolean|) *5))
       (|isDomain| *1 (|PatternMatchPushDown| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2 (|List| (|Segment| (|DoubleFloat|))))
       (|isDomain| *1 (|PlotTools|))))) 
(((*1 *1 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *2 *2 *2 *3 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Plot|))
       (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))
 ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *2))
   (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |det| *12) (|:| |rows| (|List| (|Integer|)))
                         (|:| |cols| (|List| (|Integer|)))))
   (|isDomain| *4 (|Matrix| *12))
   (|isDomain| *5 (|List| (|Fraction| (|Polynomial| *9))))
   (|isDomain| *6 (|List| (|List| *12))) (|isDomain| *7 (|NonNegativeInteger|))
   (|isDomain| *8 (|Integer|))
   (|ofCategory| *9
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *12 (|PolynomialCategory| *9 *11 *10))
   (|ofCategory| *10 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *11 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |eqzro| (|List| *12)) (|:| |neqzro| (|List| *12))
                         (|:| |wcond| (|List| (|Polynomial| *9)))
                         (|:| |bsoln|
                              (|Record|
                               (|:| |partsol|
                                    (|Vector| (|Fraction| (|Polynomial| *9))))
                               (|:| |basis|
                                    (|List|
                                     (|Vector|
                                      (|Fraction| (|Polynomial| *9)))))))))
   (|isDomain| *1 (|ParametricLinearEquations| *9 *10 *11 *12))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *7)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |det| *8) (|:| |rows| (|List| (|Integer|)))
                              (|:| |cols| (|List| (|Integer|))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *6)))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |rank| (|NonNegativeInteger|))
                          (|:| |eqns|
                               (|List|
                                (|Record| (|:| |det| *7)
                                          (|:| |rows| (|List| (|Integer|)))
                                          (|:| |cols| (|List| (|Integer|))))))
                          (|:| |fgb| (|List| *7)))))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |rank| (|NonNegativeInteger|))
                          (|:| |eqns|
                               (|List|
                                (|Record| (|:| |det| *7)
                                          (|:| |rows| (|List| (|Integer|)))
                                          (|:| |cols| (|List| (|Integer|))))))
                          (|:| |fgb| (|List| *7)))))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3))
   (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |mat| (|Matrix| (|Fraction| (|Polynomial| *4))))
                         (|:| |vec| (|List| (|Fraction| (|Polynomial| *4))))
                         (|:| |rank| (|NonNegativeInteger|))
                         (|:| |rows| (|List| (|Integer|)))
                         (|:| |cols| (|List| (|Integer|)))))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record|
                (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4))))
                (|:| |basis|
                     (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record|
                (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4))))
                (|:| |basis|
                     (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |rank| (|NonNegativeInteger|))
                              (|:| |eqns|
                                   (|List|
                                    (|Record| (|:| |det| *8)
                                              (|:| |rows| (|List| (|Integer|)))
                                              (|:| |cols|
                                                   (|List| (|Integer|))))))
                              (|:| |fgb| (|List| *8)))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |sysok| (|Boolean|)) (|:| |z0| (|List| *7))
                             (|:| |n0| (|List| *7))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *2 (|PolynomialCategory| *4 *6 *5))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *2))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3))
   (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Matrix| *11))
       (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *8))))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|String|))
       (|isDomain| *7 (|Integer|))
       (|ofCategory| *8
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *11 (|PolynomialCategory| *8 *10 *9))
       (|ofCategory| *9 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record|
                    (|:| |rgl|
                         (|List|
                          (|Record| (|:| |eqzro| (|List| *11))
                                    (|:| |neqzro| (|List| *11))
                                    (|:| |wcond| (|List| (|Polynomial| *8)))
                                    (|:| |bsoln|
                                         (|Record|
                                          (|:| |partsol|
                                               (|Vector|
                                                (|Fraction|
                                                 (|Polynomial| *8))))
                                          (|:| |basis|
                                               (|List|
                                                (|Vector|
                                                 (|Fraction|
                                                  (|Polynomial| *8))))))))))
                    (|:| |rgsz| (|Integer|))))
       (|isDomain| *1 (|ParametricLinearEquations| *8 *9 *10 *11))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *7))
                              (|:| |neqzro| (|List| *7))
                              (|:| |wcond| (|List| (|Polynomial| *4)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *4))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *4))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |eqzro| (|List| *8)) (|:| |neqzro| (|List| *8))
                          (|:| |wcond| (|List| (|Polynomial| *5)))
                          (|:| |bsoln|
                               (|Record|
                                (|:| |partsol|
                                     (|Vector| (|Fraction| (|Polynomial| *5))))
                                (|:| |basis|
                                     (|List|
                                      (|Vector|
                                       (|Fraction| (|Polynomial| *5))))))))))
   (|isDomain| *4 (|String|))
   (|ofCategory| *5
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
   (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *7))
                              (|:| |neqzro| (|List| *7))
                              (|:| |wcond| (|List| (|Polynomial| *4)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *4))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *4))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9))
       (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *9))
                              (|:| |neqzro| (|List| *9))
                              (|:| |wcond| (|List| (|Polynomial| *6)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *6))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *6))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *9))
                              (|:| |neqzro| (|List| *9))
                              (|:| |wcond| (|List| (|Polynomial| *6)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *6))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *6))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|String|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|))
       (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8))
       (|ofCategory| *7
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|))
       (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8))
       (|ofCategory| *7
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PolynomialInterpolationAlgorithms| *4 *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|PrincipalIdealDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| *1)) (|:| |generator| *1)))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PrincipalIdealDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PositiveInteger|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Partition|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Factored| (|Polynomial| *6)))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Polynomial| *6))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *6))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |num| *3) (|:| |d_fact| *3)
                          (|:| |d_exp| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|PartialFraction| *3))
   (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |num| *3) (|:| |d_fact| *3)
                          (|:| |d_exp| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|EuclideanDomain|))
   (|isDomain| *1 (|PartialFraction| *3))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|))))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |order| (|NonNegativeInteger|))
                         (|:| |function| *8)))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
   (|isDomain| *2
               (|Record| (|:| |order| (|NonNegativeInteger|))
                         (|:| |function| *6)))
   (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
       (|ofCategory| *4
                     (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6
                     (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record| (|:| |ncurve| *8) (|:| |n_div_numer| (|Vector| *8))
                         (|:| |n_div_denom| *8)
                         (|:| |need_change| (|Boolean|))))
   (|isDomain| *4 (|List| (|Kernel| *6)))
   (|ofCategory| *6 (|AlgebraicallyClosedField|))
   (|ofCategory| *6 (|FunctionSpace| *5))
   (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
   (|ofCategory| *5 (|CharacteristicZero|))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrder| *5 *6 *7 *8 *9))
   (|ofCategory| *9 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |ncurve| *7)
                             (|:| |n_div_numer| (|Vector| *7))
                             (|:| |n_div_denom| *7)
                             (|:| |need_change| (|Boolean|))))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseMultivariatePolynomial| *4 (|Kernel| *5))))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|isDomain| *2 (|SparseMultivariatePolynomial| *4 (|Kernel| *5)))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|GcdDomain|) (|Comparable|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|ExpressionFactorPolynomial| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5 (|ComplexCategory| *4))
   (|ofCategory| *4 (|IntegerNumberSystem|))
   (|isDomain| *1 (|ComplexIntegerSolveLinearPolynomialEquation| *4 *5))))
 ((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldSolveLinearPolynomialEquation| *4 *5 *3))))
 ((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
   (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
   (|isDomain| *1 (|IntegerSolveLinearPolynomialEquation|))))
 ((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *1)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Matrix| *1))
   (|ofCategory| *1 (|CharacteristicNonZero|))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
   (|isDomain| *2 (|Vector| *1))))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|CharacteristicNonZero|)))
 ((*1 *1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|CharacteristicNonZero|))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
   (|ofCategory| *7 (|PolynomialCategory| *5 *6 *4))
   (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialFactorizationByRecursion| *5 *6 *4 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *2 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *2 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
   (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ProductFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |left| (|NonNegativeInteger|))
                              (|:| |right| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|NonNegativeInteger|))
                          (|:| |right| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|NonNegativeInteger|))
                         (|:| |right| (|NonNegativeInteger|))))
   (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Integer|))
   (|ofCategory| *1 (|ModularEvaluationCategory| *4 *2))
   (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|isDomain| *5
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |eval1coeffbuf| (|U32Vector|))
                         (|:| |eval1expbuf| (|SortedExponentVector|))))
   (|ofCategory| *1 (|ModularEvaluationCategory| *6 *2))
   (|ofCategory| *6 (|Type|)) (|ofCategory| *2 (|Type|))
   (|isDomain| *4 (|Integer|))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *5
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *5
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |eval1coeffbuf| (|U32Vector|))
                         (|:| |eval1expbuf| (|SortedExponentVector|))))
   (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *4
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|FinitelyGenerated|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1) (|ofCategory| *1 (|Finite|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1) (|isDomain| *1 (|Integer|)))
 ((*1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Permutation| *3))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Permutation| *4))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PermutationGroup| *3))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|PermutationCategory| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Set| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Set| (|List| *4)))
       (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Set| (|Set| *4)))
       (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| (|Set| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Permutation| *6))
       (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Vector| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SquareMatrix| *4 *2)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *2 (|Join| (|Ring|) (|CommutativeStar|)))
       (|isDomain| *1 (|Permanent| *4 *2))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |preimage| (|List| *3))
                         (|:| |image| (|List| *3))))
   (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Partition|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Finite|))
        (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))
   (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))
        (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Mapping| *4 *4))
       (|isDomain| *1 (|PartialDifferentialOperatorHelper| *4 *3))
       (|ofCategory| *4 (|PartialDifferentialRing| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Automorphism| *4))
       (|isDomain| *1 (|PartialDifferentialOperatorHelper| *4 *3))
       (|ofCategory| *4 (|PartialDifferentialRing| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |adjMat| *3) (|:| |detMat| *4)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|PartialDifferentialOperator| *2 *3))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1) (|ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| (|PoincareBirkhoffWittLyndonBasis| *3))
                          (|:| |c| *4))))
   (|isDomain| *1 (|LieExponentials| *3 *4 *5))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Module| (|Fraction| (|Integer|)))))
   (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LyndonWord| *3)))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Any|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|AnyFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|PatternFunctions1| *4 *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternFunctions1| *4 *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|PatternMatchResult| *4 *5))
   (|ofCategory| *5 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternFunctions1| *5 *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternFunctions1| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| (|Boolean|) *5))
       (|isDomain| *1 (|PatternFunctions1| *4 *5)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |op| (|BasicOperator|))
                         (|:| |arg| (|List| (|Pattern| *3)))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |num| (|Pattern| *3))
                         (|:| |den| (|Pattern| *3))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Any|))
       (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |var| (|List| (|Symbol|))) (|:| |pred| (|Any|))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternMatchResult| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|ListAggregate| *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|isDomain| *3 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
   (|isDomain| *1 (|PatternMatchResult| *4 *2))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *1 *3)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchListResult| *5 *6 (|List| *6)))
       (|isDomain| *1 (|PatternMatch| *5 *6 *4))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|List| (|Equation| *3)))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|ofCategory| *3 (|RetractableTo| (|Symbol|)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *3))))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4)) (|ofCategory| *3 (|Ring|))
       (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|))))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|))))
       (|not| (|ofCategory| *3 (|Ring|)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|KernelCategory| *4))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *1 (|KernelCategory| *4)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatch| *5 *6 *4))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PatternMatchResult| *4 *5))
       (|isDomain| *3 (|PatternMatchResult| *4 *6))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|ListAggregate| *5))
       (|isDomain| *1 (|PatternMatchListResult| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *3 *4))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *3 *5))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|List| *4))) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| *4)) (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| (|List| *4)))
       (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| (|List| *4)))
       (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|ParametricComplexCurve| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|ParametricComplexCurve| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|BalancedPAdicRational| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Integer|)))
       (|isDomain| *1 (|NumericContinuedFraction| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PAdicRational| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|Integer|))
       (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PAdicRationalConstructor| *3 *4))
       (|ofCategory| *4 (|PAdicIntegerCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FloatingPointSystem&| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FloatingPointSystem&| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Stream| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|EuclideanModularRing| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofType| *5 (|Mapping| *4 *4 *2))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *7 (|Mapping| (|Union| *4 "failed") *4 *4 *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularField| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularRing| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|PAdicIntegerCategory| *4))))) 
(((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6))
   (|isDomain| *1 (|PadeApproximants| *5 *4 *6))
   (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7))
   (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5)
   (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5)))
   (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))
 ((*1 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7))
   (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5)
   (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5)))
   (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))) 
(((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|ContinuedFraction| *6))
   (|isDomain| *1 (|PadeApproximants| *5 *4 *6))
   (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputBox|))) (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|OutputBox|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|OutputBox|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3 *4 *2 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *4 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *2))
       (|ofCategory| *2 (|KernelCategory| *1))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputBox|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *1 (|FormatterCategory&| *4))
   (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *2))
       (|ofCategory| *2 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|KernelCategory| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|OutputBox|) (|OutputBox|)))
       (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|OutputBox|) (|OutputBox|)))
       (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Any|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|FloatElementaryFunctions|))))
 ((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|FloatingPointOperations|))))
 ((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Automorphism| *5)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *2))
       (|ofCategory| *2 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                             (|:| |generator| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                             (|:| |generator| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |generator| *1) (|:| |coef1| *1)
                             (|:| |coef2| *1) (|:| |coefu| *1)
                             (|:| |coefv| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Database| (|IndexCard|)))
       (|isDomain| *1 (|OperationsQuery|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OperatorHandlers| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1 *3 *4 *2)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *1 (|OperatorHandlers| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *1 (|OperatorHandlers| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OperatorHandlers| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *2 *2)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|List| *2))
   (|isDomain| *1 (|BasicOperatorFunctions1| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|Mapping| *4 (|List| *4)))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|Mapping| *4 (|List| *4)))
   (|isDomain| *1 (|BasicOperatorFunctions1| *4))
   (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Operator| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Operator| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *4 *2))
       (|ofCategory| *2 (|LeftModule| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *1 (|Operator| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|)))
       (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *2 *4))
       (|ofCategory| *4 (|LeftModule| *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|)))
       (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OnePointCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *4 (|Any|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *2 (|String|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|))
       (|isDomain| *2 (|Void|))))
 ((*1 *2 *3 *1 *4)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4))
       (|ofCategory| *4 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *5))
       (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *6))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *6 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *6))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathErrorKind|))
       (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OpenMathErrorKind|))
       (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |cd| (|String|)) (|:| |name| (|String|))))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|OpenMathEncoding|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|SingleInteger|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathDevice|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathDevice|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|CommonOperators|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *4))
       (|ofCategory| *4 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *4 (|KernelCategory| %))
       (|isDomain| *1 (|ExpressionSpace2&| *3 *4))
       (|ofCategory| *3 (|ExpressionSpace2| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *5 (|KernelCategory| %))
       (|isDomain| *1 (|FunctionSpace2&| *3 *4 *5))
       (|ofCategory| *3 (|FunctionSpace2| *4 *5))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|KernelCategory| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|OrientedFacet|)))
   (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Boolean|))))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Boolean|))))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|List| *4)) (|ofCategory| *4 (|Field|))
   (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|ODETools| *4 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|ODETools| *4 *5))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|ODETools| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *6))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |particular| (|Union| *6 "failed"))
                              (|:| |basis| (|List| *6)))
                    *7 *6))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *6) "failed"))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|List| (|Vector| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record|
                     (|:| |particular|
                          (|List|
                           (|Record| (|:| |ratpart| *6)
                                     (|:| |coeffs| (|Vector| *6)))))
                     (|:| |basis| (|List| *6)))
                    *7 (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| (|Vector| *6))
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| A (|Matrix| *5))
                             (|:| |eqs|
                                  (|List|
                                   (|Record| (|:| C (|Matrix| *5))
                                             (|:| |g| (|Vector| *5))
                                             (|:| |eq| *6) (|:| |rh| *5))))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| A (|Matrix| *5))
                             (|:| |eqs|
                                  (|List|
                                   (|Record| (|:| C (|Matrix| *5))
                                             (|:| |lg| (|List| (|Vector| *5)))
                                             (|:| |eq| *6)
                                             (|:| |lrh| (|List| *5)))))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vec| (|Vector| *5))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Fraction| *6)))
       (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *7)))
       (|isDomain| *4 (|Mapping| (|List| *6) *7))
       (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
       (|ofCategory| *6
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *2 (|List| (|Fraction| *7)))
       (|isDomain| *1 (|RationalRicDE| *6 *7))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|List| *5) *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Fraction| *6)))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *7 (|Fraction| *7)))
   (|isDomain| *4 (|Mapping| (|List| *6) *7))
   (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
   (|ofCategory| *6
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2 (|List| (|Fraction| *7)))
   (|isDomain| *1 (|RationalRicDE| *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Fraction| *5)))
       (|isDomain| *1 (|RationalRicDE| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|AlgebraicallyClosedField|))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Fraction| *6)))
       (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *5 (|Fraction| *5)))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|AlgebraicallyClosedField|))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|List| (|Fraction| *5)))
   (|isDomain| *1 (|RationalRicDE| *4 *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|AlgebraicallyClosedField|))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|List| (|Fraction| *6)))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Record| (|:| |poly| *6) (|:| |eq| *3))))
       (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *7
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|List| *5) *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |poly| *6)
                          (|:| |eq|
                               (|LinearOrdinaryDifferentialOperator2| *6
                                                                      (|Fraction|
                                                                       *6))))))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4 (|Mapping| (|List| *7) *7 (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|ofCategory| *6
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List| (|Record| (|:| |frac| (|Fraction| *7)) (|:| |eq| *3))))
   (|isDomain| *1 (|PrimitiveRatRicDE| *6 *7 *3 *8))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *7))
   (|ofCategory| *8
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *7)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |frac| (|Fraction| *6))
                          (|:| |eq|
                               (|LinearOrdinaryDifferentialOperator2| *6
                                                                      (|Fraction|
                                                                       *6))))))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *4 (|MonogenicAlgebra| *5 *7))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vec| (|Vector| *5))))
       (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *4 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *8)) (|ofCategory| *8 (|MonogenicAlgebra| *5 *7))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *8 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *8))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping|
                (|Record| (|:| |particular| (|Union| *5 "failed"))
                          (|:| |basis| (|List| *5)))
                *3 *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3
                 (|Join| (|UnivariateSkewPolynomialCategory| *5)
                         (CATEGORY |domain| (SIGNATURE |adjoint| (% %)))))
   (|isDomain| *2 (|Record| (|:| |ltilde| *3) (|:| |r| (|Union| *3 "failed"))))
   (|isDomain| *1 (|IntegrateSolutions| *5 *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |ltilde|
                         (|LinearOrdinaryDifferentialOperator1|
                          (|Fraction| *5)))
                    (|:| |r|
                         (|Union|
                          (|LinearOrdinaryDifferentialOperator1|
                           (|Fraction| *5))
                          "failed"))))
       (|isDomain| *1 (|RationalLODE| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|RationalLODE| *4 *2))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *2 (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|RationalLODE| *4 *2))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Fraction| *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Fraction| *6) #1="failed"))
                    (|:| |basis| (|List| (|Fraction| *6)))))
       (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|List| (|Fraction| *6)))
                             (|:| |mat| (|Matrix| *5))))
       (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Fraction| *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Union| (|Fraction| *6) #1#))
                         (|:| |basis| (|List| (|Fraction| *6)))))
   (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|List| (|Fraction| *6)))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|Record| (|:| |basis| (|List| (|Fraction| *6)))
                         (|:| |mat| (|Matrix| *5))))
   (|isDomain| *1 (|RationalLODE| *5 *6))))) 
(((*1 *2 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|PrimitiveRatRicDE| *4 *3 *2 *5))
   (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3))
   (|ofCategory| *5
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *2 *6))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Record| (|:| |constant| *5) (|:| |eq| *3))))
       (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *7
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |eq| *5))))
   (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatRicDE| *4 *2 *3 *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *5
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *3 *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *5
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *5 *3))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *3
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5))))
   (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4))))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5))))
   (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *6 *3))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *3
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4))))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *6 *3))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4))
   (|ofCategory| *3
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *4)))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Fraction| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *6
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *4))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *8))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *8)
                                    (|:| |coeffs| (|Vector| *5)))))
                    (|:| |basis| (|List| *8))))
       (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *8))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *1 (|ODEIntegration| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *1 (|ODEIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|ConstantLODE| *6 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Quaternion| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Octonion| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|DivisionRing|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedAbelianMonoidSup|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedAbelianMonoidSup|)))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *6 *5 *3 *7)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Record| (|:| |to_try| (|Float|)) (|:| |did| (|Float|))
                             (|:| |next| (|Float|))))
       (|isDomain| *7
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))
 ((*1 *2 *3 *4 *5 *6 *5 *3 *7 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Record| (|:| |to_try| (|Float|)) (|:| |did| (|Float|))
                             (|:| |next| (|Float|))))
       (|isDomain| *7
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *5 *5 *5 *4 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))
 ((*1 *2 *3 *4 *5 *5 *6 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
   (|ofCategory| *4 (|CommutativeRing|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|CommutativeRing|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Complex| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *3)) (|ofCategory| *3 (|ConvertibleTo| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|NewSparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| *4) (|:| |outmult| (|Integer|))
                              (|:| |outvect| (|List| (|Matrix| *4))))))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Matrix| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CharacteristicPolynomialPackage| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|CharacteristicPolynomial| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Matrix| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CharacteristicPolynomial| *2))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1
                   (|CharacteristicPolynomialInMonogenicalAlgebra| *4 *2 *3))
       (|ofCategory| *3 (|MonogenicAlgebra| *4 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Polynomial| *5))
       (|isDomain| *1 (|EigenPackage| *5)) (|ofCategory| *5 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *2 (|Polynomial| *4)) (|isDomain| *1 (|EigenPackage| *4))
       (|ofCategory| *4 (|GcdDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerEigenPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *5))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|NumericRealEigenPackage| *5))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *10))
       (|isDomain| *4 (|List| *6)) (|isDomain| *5 (|List| *10))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *9 (|IntegralDomain|))
       (|ofCategory| *10 (|PolynomialCategory| *9 *7 *8))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|Record|
                    (|:| |deter| (|List| (|SparseUnivariatePolynomial| *10)))
                    (|:| |dterm|
                         (|List|
                          (|List|
                           (|Record| (|:| |expt| (|NonNegativeInteger|))
                                     (|:| |pcoef| *10)))))
                    (|:| |nfacts| (|List| *6)) (|:| |nlead| (|List| *10))))
       (|isDomain| *1 (|NPCoef| *6 *7 *8 *9 *10))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))
       (|ofType| *7 (|PositiveInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *4 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NormalizationPackage| *6 *7 *8 *4 *5))
       (|ofCategory| *5 (|RegularTriangularSetCategory| *6 *7 *8 *4))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofCategory| *3
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|)))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *1 (|NormalizationPackage| *4 *5 *6 *2 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *2))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2)
                         (|:| |polj| *2)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *2))
   (|ofCategory| *4 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2)
                         (|:| |polj| *2)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *4 *5))
   (|isDomain| *1 (|NGroebnerPackage| *4 *5 *2))
   (|ofCategory| *4 (|LeftOreRing|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|LeftOreRing|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|NGroebnerPackage| *4 *5 *3))
       (|ofCategory| *3 (|SolvableSkewPolynomialCategory| *4 *5))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                             (|VariablesCommuteWithCoefficients|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|LeftOreRing|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|NGroebnerPackage| *3 *4 *2))
       (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *3 *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *4 *5))
       (|ofCategory| *4 (|LeftOreRing|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|NGroebnerPackage| *4 *5 *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|DistributedJetBundlePolynomial| *3 *4 *5 *6)))
       (|ofType| *5 (|List| *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Polynomial| *3)))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|FGLMIfCanPackage| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|String|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|String|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|JetBundlePolynomial| *3 *4)))
       (|isDomain| *1 (|JetBundlePolynomial| *3 *4))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|JetBundleFunctionCategory| *4)
                             (|PolynomialCategory| *3 (|IndexedExponents| *4)
                                                   *4)))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|ofType| *5 (|List| *4)) (|isDomain| *1 (|JetGroebner| *3 *4 *5 *6 *7))
       (|ofCategory| *7
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *3
                                                   (|OrderedVariableList|
                                                    *4))))
   (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|LexTriangularPackage| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *5))
       (|ofCategory| *5 (|SolvableSkewPolynomialCategory| *3 *4))
       (|ofCategory| *3 (|LeftOreRing|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|NGroebnerPackage| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|NewtonInterpolation| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| (|Complex| *4))
                              (|:| |outmult| (|Integer|))
                              (|:| |outvect|
                                   (|List| (|Matrix| (|Complex| *4)))))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|TwoDimensionalArray| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeSemiRng|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|NonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *3 (|Integer|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|EuclideanDomain|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |factor| *2)
                              (|:| |exponent| (|NonNegativeInteger|)))))
       (|ofCategory| *2 (|PolynomialCategory| *7 *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|EuclideanDomain|))
       (|isDomain| *1 (|MultivariateSquareFree| *5 *6 *7 *2))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8)))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |upol| (|SparseUnivariatePolynomial| *8))
                             (|:| |Lval| (|List| *8))
                             (|:| |Lfact|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *8))
                                    (|:| |exponent| (|NonNegativeInteger|)))))
                             (|:| |ctpol| *8)))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8)))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |unitPart| *9)
                             (|:| |suPart|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *9))
                                    (|:| |exponent|
                                         (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *9))
                             (|:| |polval| (|SparseUnivariatePolynomial| *8))))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *5 *4 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6))
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|ofCategory| *6 (|EuclideanDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|MultiplicativeDependence|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|MergeThing| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|MoreSystemCommands|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Multiset| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|List| (|Kernel| (|Expression| (|Integer|)))))
       (|isDomain| *4 (|List| (|Expression| (|Integer|))))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (|partial| AND (|isDomain| *5 (|List| (|Expression| (|Integer|))))
   (|isDomain| *7
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| *3)))
                         (|:| |atan_kers| (|List| (|Kernel| *3)))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|List| (|Kernel| *3))) (|isDomain| *6 (|Symbol|))
   (|isDomain| *2
               (|Record| (|:| |degree| (|OrderedExpression|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| *3)))
                         (|:| |atan_kers| (|List| (|Kernel| *3)))))
   (|isDomain| *4 (|Kernel| (|Expression| (|Integer|))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|Record| (|:| |degree| (|OrderedExpression|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2
               (|Record|
                (|:| |lk| (|List| (|Kernel| (|Expression| (|Integer|)))))
                (|:| |lc| (|List| (|Expression| (|Integer|))))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Kernel| (|Expression| (|Integer|))))
   (|isDomain| *4 (|Symbol|))
   (|isDomain| *2
               (|Record| (|:| |sign| (|Integer|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| (|Expression| *2))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| *2))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Equation| (|OrderedCompletion| (|Expression| (|Integer|)))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|Union| (|OrderedCompletion| (|Expression| (|Integer|)))
                        (|Record|
                         (|:| |leftHandLimit|
                              (|Union|
                               (|OrderedCompletion| (|Expression| (|Integer|)))
                               #1="failed"))
                         (|:| |rightHandLimit|
                              (|Union|
                               (|OrderedCompletion| (|Expression| (|Integer|)))
                               #1#)))
                        #2="failed"))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|OrderedCompletion| (|Expression| (|Integer|))))
       (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2
                   (|Union| (|OrderedCompletion| (|Expression| (|Integer|)))
                            (|Record|
                             (|:| |leftHandLimit|
                                  (|Union|
                                   (|OrderedCompletion|
                                    (|Expression| (|Integer|)))
                                   #1#))
                             (|:| |rightHandLimit|
                                  (|Union|
                                   (|OrderedCompletion|
                                    (|Expression| (|Integer|)))
                                   #1#)))
                            #2#))
       (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| (|Expression| (|Integer|))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *6)))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5
                                           *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5
                                           *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *6 (|IntegralDomain|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) %)))))
       (|ofCategory| *6 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |sup| (|Polynomial| *6))
                             (|:| |inf| (|Polynomial| *6))))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4
                                           *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *2)) (|isDomain| *4 (|Mapping| *2 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *2))
       (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |normal| (|Factored| *3))
                             (|:| |special| (|Factored| *3))))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|CyclicGroup| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofType| *3 (|Symbol|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *4)
  (|partial| AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|List| *6))
   (|ofCategory| *1 (|FiniteDivisorCategory| *5 *6 *7 *2))
   (|ofCategory| *5 (|Field|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *2 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|Field|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|InfiniteCyclicGroup| *2)) (|ofType| *2 (|Symbol|))))
 ((*1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *1)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *1 (|MonogenicAlgebra| *5 *6))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|Matrix| *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2
                   (|Record| (|:| |puiseux| (|Fraction| (|Integer|)))
                             (|:| |laurent| (|Fraction| (|Integer|)))
                             (|:| |coef| (|Sequence| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Stream| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Sequence| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|MomentPackage| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Sequence| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Stream| (|Record| (|:| |an| *4) (|:| |bn| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| *4))
                             (|:| |bn| (|Stream| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Record| (|:| |an| (|List| *4)) (|:| |bn| (|List| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|CommutativeRing|))
   (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
   (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
   (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CyclicGroup| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InfiniteCyclicGroup| *3))
       (|ofType| *3 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerLocalizedAtPrime| *3))
       (|ofType| *3 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|ModuleMonomial| *3 *2 *4))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *2))
                   (|Record| (|:| |index| *3) (|:| |exponent| *2))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|Finite|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|ModuleMonomial| *2 *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3))
                   (|Record| (|:| |index| *2) (|:| |exponent| *3))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|FiniteFieldCategory|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModMonic| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
       (|ofCategory| *7 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| *7)))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
   (|ofCategory| *8 (|CommutativeRing|))))) 
(((*1 *2 *2 *3 *4 *4 *5 *6)
  (AND
   (|isDomain| *2
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List| (|SparseUnivariatePolynomial| *8))))
   (|isDomain| *3 (|List| (|List| *7))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *6
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|ofCategory| *8 (|CommutativeRing|))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| *9)))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List| (|SparseUnivariatePolynomial| *10))))
       (|ofCategory| *9 (|CommutativeRing|))
       (|ofCategory| *10 (|CommutativeRing|))
       (|isDomain| *2
                   (|Union| (|Matrix| (|SparseUnivariatePolynomial| *10))
                            (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *9 *10))))) 
(((*1 *2 *3 *4 *5 *6 *6)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|SortedExponentVector|))
       (|isDomain| *5 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *6 (|Integer|))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Symbol|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Vector|
                (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|)))))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
   (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Vector| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *6 *6)
  (AND
   (|isDomain| *5
               (|Mapping| (|Vector| *2) (|List| *2) (|Integer|) (|Integer|)))
   (|isDomain| *6 (|Integer|)) (|isDomain| *3 (|Vector| (|U32Vector|)))
   (|isDomain| *4 (|List| (|U32Vector|))) (|isDomain| *2 (|U32Vector|))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *8
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *9
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial| (|Integer|)))))
       (|isDomain| *6 (|Integer|))
       (|isDomain| *2
                   (|Union|
                    (|Matrix| (|SparseUnivariatePolynomial| (|Integer|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND
   (|isDomain| *3
               (|List|
                (|List| (|Fraction| (|Polynomial| (|AlgebraicNumber|))))))
   (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|isDomain| *8
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List|
                           (|SparseUnivariatePolynomial|
                            (|Polynomial| (|AlgebraicNumber|))))))
   (|isDomain| *2
               (|Union|
                (|Matrix|
                 (|SparseUnivariatePolynomial|
                  (|Polynomial| (|AlgebraicNumber|))))
                (|Boolean|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|isDomain| *8
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List|
                           (|SparseUnivariatePolynomial|
                            (|Polynomial| (|Integer|))))))
   (|isDomain| *2
               (|Union|
                (|Matrix|
                 (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
                (|Boolean|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial|
                                (|AlgebraicNumber|)))))
       (|isDomain| *2
                   (|Union|
                    (|Matrix|
                     (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial| (|Integer|)))))
       (|isDomain| *2
                   (|Union|
                    (|Matrix| (|SparseUnivariatePolynomial| (|Integer|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| *5))
       (|isDomain| *4
                   (|Record| (|:| |i_mod| (|Integer|))
                             (|:| |deg| (|Integer|))))
       (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |poly| (|PrimitiveArray| *5))
                              (|:| |degree| (|NonNegativeInteger|))
                              (|:| |separate_factors|
                                   (|Mapping|
                                    (|List| (|PrimitiveArray| *5)))))))
       (|isDomain| *1 (|ModularFactorizationK| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |poly| (|U32Vector|))
                              (|:| |degree| (|NonNegativeInteger|))
                              (|:| |separate_factors|
                                   (|Mapping| (|List| (|U32Vector|)))))))
       (|isDomain| *1 (|ModularFactorization|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |poly| *3)
                              (|:| |degree| (|NonNegativeInteger|))
                              (|:| |separate_factors|
                                   (|Mapping| (|List| *3))))))
       (|isDomain| *1 (|ModularFactorizationGeneral| *3 *5 *4 *6 *7))
       (|ofCategory| *7 (|ModularFactorizationOperations| *3 *5 *4 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| *5))
       (|isDomain| *4
                   (|Record| (|:| |i_mod| (|Integer|))
                             (|:| |deg| (|Integer|))))
       (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *2 (|List| (|PrimitiveArray| *5)))
       (|isDomain| *1 (|ModularFactorizationK| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|U32Vector|)))
       (|isDomain| *1 (|ModularFactorization|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|ModularFactorizationGeneral| *3 *5 *4 *6 *7))
       (|ofCategory| *7 (|ModularFactorizationOperations| *3 *5 *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *13))
   (|isDomain| *4 (|List| *11)) (|isDomain| *6 (|List| *12))
   (|isDomain| *7 (|List| *13)) (|isDomain| *8 (|List| (|NonNegativeInteger|)))
   (|isDomain| *9
               (|Mapping|
                (|Union|
                 (|Mapping|
                  (|Union| (|List| (|SparseUnivariatePolynomial| *12))
                           "failed")
                  (|SparseUnivariatePolynomial| *12))
                 "failed")
                (|List| (|SparseUnivariatePolynomial| *12))))
   (|ofCategory| *11 (|OrderedSet|)) (|ofCategory| *12 (|IntegralDomain|))
   (|ofCategory| *13 (|PolynomialCategory| *12 *10 *11))
   (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *12)))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *13)))
   (|isDomain| *1 (|MultivariateLifting| *10 *11 *12 *13))))
 ((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *12))
   (|isDomain| *4 (|List| *11))
   (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *9)))
   (|isDomain| *6 (|List| *9)) (|isDomain| *7 (|List| *12))
   (|isDomain| *8 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *9 (|EuclideanDomain|)) (|ofCategory| *11 (|OrderedSet|))
   (|ofCategory| *9 (|IntegralDomain|))
   (|ofCategory| *12 (|PolynomialCategory| *9 *10 *11))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *12)))
   (|isDomain| *1 (|MultivariateLifting| *10 *11 *9 *12))))) 
(((*1 *2 *3 *4 *5 *6 *2 *7)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *11)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *11))
   (|isDomain| *4 (|List| *9)) (|isDomain| *5 (|List| *10))
   (|isDomain| *6 (|List| (|NonNegativeInteger|)))
   (|isDomain| *7
               (|Mapping|
                (|Union| (|List| (|SparseUnivariatePolynomial| *10)) "failed")
                (|SparseUnivariatePolynomial| *10)))
   (|ofCategory| *9 (|OrderedSet|)) (|ofCategory| *10 (|IntegralDomain|))
   (|ofCategory| *11 (|PolynomialCategory| *10 *8 *9))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|MultivariateLifting| *8 *9 *10 *11))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6))
       (|isDomain| *1 (|MakeBinaryCompiledFunction| *3 *5 *6 *7))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MakeUnaryCompiledFunction| *3 *5 *6))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MakeUnaryCompiledFunction| *4 *5 *6))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|Record| (|:| |part1| *3) (|:| |part2| *4)))
       (|isDomain| *1 (|MakeRecord| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleExpression| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|JetBundleXExpression| *4)))
       (|isDomain| *1 (|JetBundleXExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6))
       (|isDomain| *1 (|MakeBinaryCompiledFunction| *4 *5 *6 *7))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *6))
       (|ofCategory| *6 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2 *3 *2 *4 *5)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *2 *3 *6 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *3 *6 *7 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Record| (|:| |matr| *6) (|:| |poly| *3)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *4 *2 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *5 *3 *6 *7))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4 *4 *4 *5 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *6 *3 *7 *5))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *6 *3 *7 *5))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *4 *3 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *3 *2 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *2 *5 *4 *6))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *2 *5 *4 *6))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularFactorizationOperations| *2 *5 *6 *4))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *2 *4 *5 *3))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *4 *5 *3 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *4 *5 *3 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *4 *5 *2 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|ModularFactorizationOperations| *3 *5 *4 *2))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |next| (|List| (|NonNegativeInteger|)))
                          (|:| |map|
                               (|List| (|List| (|NonNegativeInteger|)))))))
   (|ofCategory| *3 (|SetCategory|))
   (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))) 
(((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|MultifunctionGraph| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|MultifunctionGraph| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Loop|))
       (|isDomain| *1 (|FunctionGraph| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|OrderedCompletion| *3)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|OrderedCompletion| *3)
                            (|Record|
                             (|:| |leftHandLimit|
                                  (|Union| (|OrderedCompletion| *3)
                                           #1="failed"))
                             (|:| |rightHandLimit|
                                  (|Union| (|OrderedCompletion| *3) #1#)))
                            "failed"))
       (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|String|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|OrderedCompletion| *3))
   (|isDomain| *1 (|PowerSeriesLimitPackage| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Equation| (|OrderedCompletion| (|Polynomial| *5))))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Union|
                    (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                    (|Record|
                     (|:| |leftHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2="failed"))
                     (|:| |rightHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#)))
                    #3="failed"))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Union|
                    (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                    (|Record|
                     (|:| |leftHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#))
                     (|:| |rightHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#)))
                    #3#))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *1 (|RationalFunctionLimitPackage| *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Loop|))
       (|isDomain| *1 (|MultifunctionGraph| *4))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|MultifunctionGraph| (|String|)))
       (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Permutation| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|MultifunctionGraph| (|String|)))
       (|isDomain| *1 (|MultifunctionGraph| *5))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|PermutationGroup| (|NonNegativeInteger|)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Polynomial| (|Integer|))) (|isDomain| *5 (|List| *3))
       (|isDomain| *7 (|List| (|Symbol|)))
       (|ofCategory| *1 (|ModularEvaluationCategory| *8 *3))
       (|ofCategory| *8 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *6 (|Symbol|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *1 (|ModularEvaluationCategory| *3 *2))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *3 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *3 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Union|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                           (|DoubleFloat|))
                "undefined"))
   (|isDomain| *5 (|Segment| (|DoubleFloat|)))
   (|isDomain| *6 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *5 *6)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Union|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                           (|DoubleFloat|))
                "undefined"))
   (|isDomain| *5 (|Segment| (|DoubleFloat|)))
   (|isDomain| *6 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|DoubleFloat|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))
 ((*1 *2 *2 *3 *4 *4 *5)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3
                   (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                              (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|DoubleFloat|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MultiDictionary| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |entry| *3)
                              (|:| |count| (|NonNegativeInteger|)))))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|PartialDifferentialRing| *6))
       (|isDomain| *2 (|Matrix| *7))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *7 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *7))
       (|ofCategory| *4 (|FiniteLinearAggregate| *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Matrix| *6))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *6 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *6))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *6))
       (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *3 *7 *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|PartialDifferentialRing| *4))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *4 *2 *5 *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *3 (|FiniteLinearAggregate| *4))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|PartialDifferentialRing| *5))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Matrix| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|AbelianMonoid|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *2) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|DirichletRing| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MathematicalSymbols|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|SemiRng|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))) 
(((*1 *2 *1 *3 *4 *5 *6 *6 *7)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *5 (|List| *1)) (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7 (|Union| *8 "one"))
       (|ofCategory| *1 (|MatrixCategory| *8 *9 *10))
       (|ofCategory| *8 (|AbelianMonoid|))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5 *4))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))
       (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5 *4)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MappingPackage3| *5 *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *4 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5))
       (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofType| *4 (|List| *3)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *2 *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *4)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *3))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|NonNegativeInteger|) *2))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Mapping| *3 (|NonNegativeInteger|) *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MappingPackage1| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|MappingPackage1| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Mapping| *6 *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks3| *5 *6 *2))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| (|List| *1)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| (|List| *1)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|PositiveInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|FiniteLinearAggregate| *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *6))
       (|isDomain| *2 (|List| (|List| *3)))
       (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3))
       (|ofCategory| *3 (|TwoDimensionalArrayCategory| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|FiniteLinearAggregate| *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *6))
       (|isDomain| *2 (|List| (|List| *3)))
       (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3))
       (|ofCategory| *3 (|TwoDimensionalArrayCategory| *6 *7 *8))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MagmaWithUnit|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))) 
(((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))) 
(((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|))
   (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|isDomain| *1 (|ModularAlgebraicGcdTools3|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|SortedExponentVector|))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ModularAlgebraicGcdTools3|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|U32Vector|)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *7 *3 *6))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *5 *6 *4))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|SortedExponentVector|))))) 
(((*1 *2 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *5 (|List| (|Symbol|)))
   (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *3 *2 *6))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
   (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *6))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|))
   (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *6 *7 *2))
   (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *2 *3))
   (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
   (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *2 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *2 *3 *4 *5 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))
       (|isDomain| *1 (|ModularAlgebraicGcd| *6 *7 *8))
       (|ofCategory| *8 (|ModularAlgebraicGcdOperations| *2 *6 *7))))
 ((*1 *2 *3 *3 *4 *5 *6 *5)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|List| (|Symbol|)))
       (|isDomain| *6 (|Symbol|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|ofCategory| *9 (|Type|)) (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|ModularAlgebraicGcd2| *3 *7 *8 *9 *10 *11))
       (|ofCategory| *10 (|ModularEvaluationCategory| *3 *7))
       (|ofCategory| *11 (|ModularAlgebraicGcdOperations| *7 *8 *9))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|FloatElementaryFunctions|))))
 ((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|FloatingPointOperations|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|ThreeDimensionalMatrix| *2)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Vector| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|FreeMonoid| *3))
   (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|OneDimensionalArray| (|List| (|LyndonWord| *5))))
       (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LyndonWord| *5)))
       (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |Inv| (|Matrix| *4))
                             (|:| |Pivots| (|List| *4))))
       (|isDomain| *1 (|LUDecomposition| *4))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4 (|Vector| (|Integer|))) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|LUDecomposition| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| LU (|Matrix| *4))
                             (|:| |Perm| (|Vector| (|Integer|)))
                             (|:| |Pivots| (|List| *4))))
       (|isDomain| *1 (|LUDecomposition| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| (|Fraction| *8)))
                             (|:| |vec| (|Vector| (|Fraction| *8)))))
       (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| *8)) "failed"))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *8))))))
       (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Matrix| *4))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|LinearSystemMatrixPackage2| *4))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|ListAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *4)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
   (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
   (|isDomain| *1 (|LinearPolynomialEquationByFractions| *4))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |llcm_res| *1) (|:| |coeff1| *1)
                         (|:| |coeff2| *1)))
   (|ofCategory| *1 (|LeftOreRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|Loop|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|Loop|))))) 
(((*1 *1) (|ofCategory| *1 (|Logic|)))) 
(((*1 *1) (|ofCategory| *1 (|Logic|)))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *3))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *5 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |singularity|
                      (|Record|
                       (|:| |point|
                            (|Union| (|Expression| (|Integer|)) "infinity"))
                       (|:| |lpf|
                            (|LinearOrdinaryDifferentialOperator3|
                             (|Expression| (|Integer|))
                             (|UnivariateTaylorSeries|
                              (|Expression| (|Integer|)) *6 *7)
                             (|UnivariateLaurentSeries|
                              (|Expression| (|Integer|)) *6 *7)))
                       (|:| |dxt| (|PositiveInteger|))))
                 (|:| |fos|
                      (|List|
                       (|Record|
                        (|:| |op|
                             (|LinearOrdinaryDifferentialOperator3|
                              (|Expression| (|Integer|))
                              (|UnivariateTaylorSeries|
                               (|Expression| (|Integer|)) *6 *7)
                              (|UnivariateLaurentSeries|
                               (|Expression| (|Integer|)) *6 *7)))
                        (|:| |ram|
                             (|UnivariatePolynomial| *6
                                                     (|Expression|
                                                      (|Integer|))))
                        (|:| |expart|
                             (|UnivariateLaurentSeries|
                              (|Expression| (|Integer|)) *6 *7)))))
                 (|:| |mge|
                      (|List|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Union| (|Expression| (|Integer|)) "infinity"))
   (|isDomain| *5
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))
                (|List| (|Expression| (|Integer|)))))
   (|isDomain| *6 (|List| (|Expression| (|Integer|)))) (|ofType| *7 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |ecs|
                      (|List|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *7
                                                  *8)))
                 (|:| |ecr|
                      (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
                 (|:| |ect|
                      (|Fraction|
                       (|UnivariatePolynomial| *7
                                               (|Expression| (|Integer|))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
   (|ofType| *8 (|Expression| (|Integer|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| (|Expression| (|Integer|)))) (|ofType| *5 *2)
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
       (|ofType| *4 (|Symbol|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))))
   (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
   (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Union| (|Expression| (|Integer|)) "infinity"))
   (|ofType| *5 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *5 *6)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *5 *6)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|ofType| *5 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator1|
                 (|Fraction|
                  (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Union|
                (|List|
                 (|Record|
                  (|:| |op|
                       (|LinearOrdinaryDifferentialOperator3|
                        (|Expression| (|Integer|))
                        (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                  *7)
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *6 *7)))
                  (|:| |ram|
                       (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
                  (|:| |expart|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))
                (|List|
                 (|Union|
                  (|LinearOrdinaryDifferentialOperator3|
                   (|Expression| (|Integer|))
                   (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                   (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                              *7))
                  (|Record|
                   (|:| |ope|
                        (|LinearOrdinaryDifferentialOperator3|
                         (|Expression| (|Integer|))
                         (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                   *6 *7)
                         (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                    *6 *7)))
                   (|:| |dext| (|PositiveInteger|))
                   (|:| |alpha| (|Expression| (|Integer|)))
                   (|:| |rami|
                        (|UnivariatePolynomial| *6
                                                (|Expression|
                                                 (|Integer|)))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Expression| (|Integer|)))
   (|isDomain| *5 (|PositiveInteger|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6 *7)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 *4)))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Union| (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *5 *6)))
   (|isDomain| *4
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *5 *6)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *5 *6)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Union|
                (|List|
                 (|Record|
                  (|:| |op|
                       (|LinearOrdinaryDifferentialOperator3|
                        (|Expression| (|Integer|))
                        (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                  *7)
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *6 *7)))
                  (|:| |ram|
                       (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
                  (|:| |expart|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))
                (|List|
                 (|Union|
                  (|LinearOrdinaryDifferentialOperator3|
                   (|Expression| (|Integer|))
                   (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                   (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                              *7))
                  (|Record|
                   (|:| |ope|
                        (|LinearOrdinaryDifferentialOperator3|
                         (|Expression| (|Integer|))
                         (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                   *6 *7)
                         (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                    *6 *7)))
                   (|:| |dext| (|PositiveInteger|))
                   (|:| |alpha| (|Expression| (|Integer|)))
                   (|:| |rami|
                        (|UnivariatePolynomial| *6
                                                (|Expression|
                                                 (|Integer|)))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))
       (|ofType| *4 (|Symbol|))
       (|isDomain| *2
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *4 *5)
                    (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *4
                                               *5)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
       (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *2 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *5 (|Integer|))
   (|ofType| *6 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *5 (|Integer|))
   (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6 *7)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| *5))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Stream|
                    (|Record|
                     (|:| |Qt|
                          (|LinearOrdinaryDifferentialOperator3|
                           (|Expression| (|Integer|))
                           (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                     *7 *8)
                           (|UnivariateLaurentSeries|
                            (|Expression| (|Integer|)) *7 *8)))
                     (|:| |Rt|
                          (|LinearOrdinaryDifferentialOperator3|
                           (|Expression| (|Integer|))
                           (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                     *7 *8)
                           (|UnivariateLaurentSeries|
                            (|Expression| (|Integer|)) *7 *8))))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |main|
                         (|Record|
                          (|:| |Qt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))
                          (|:| |Rt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))))
                    (|:| |nf|
                         (|Record|
                          (|:| |Qt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))
                          (|:| |Rt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))))
                    (|:| |error|
                         (|LinearOrdinaryDifferentialOperator3|
                          (|Expression| (|Integer|))
                          (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                    *7 *8)
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |llc|
                         (|List|
                          (|Stream|
                           (|Record| (|:| |k| (|Integer|))
                                     (|:| |c| (|Expression| (|Integer|)))))))
                    (|:| |rlc|
                         (|List|
                          (|Stream|
                           (|Record| (|:| |k| (|Integer|))
                                     (|:| |c| (|Expression| (|Integer|)))))))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |laurl|
                         (|List|
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))
                    (|:| |laurr|
                         (|List|
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
   (|isDomain| *5 (|Fraction| (|Integer|))) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Record|
                (|:| |Qt|
                     (|LinearOrdinaryDifferentialOperator3|
                      (|Expression| (|Integer|))
                      (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                *7)
                      (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                 *7)))
                (|:| |Rt|
                     (|LinearOrdinaryDifferentialOperator3|
                      (|Expression| (|Integer|))
                      (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                *7)
                      (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                 *7)))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator3|
                 (|Expression| (|Integer|))
                 (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                 (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                            *7))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *4 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))))
   (|ofType| *4 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |point|
                      (|Record| (|:| |x| (|Integer|)) (|:| |y| (|Integer|))))
                 (|:| |slope| (|Fraction| (|Integer|)))
                 (|:| |npoly|
                      (|UnivariatePolynomial| *4
                                              (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
   (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|AbelianMonoidRing| *3 (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperator3Aux| *3 *4 *2))
       (|ofCategory| *2 (|Join| (|DifferentialRing|) (|LeftModule| *4)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeMonoid| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ListMonoidOps| *4 *2 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofType| *5 *2)))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeMonoid| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|ListMonoidOps| *2 *4 *5))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND
   (|isDomain| *2 (|Mapping| (|NonNegativeInteger|) (|NonNegativeInteger|)))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeGroup| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeMonoid| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ListMultiDictionary| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *2 *1)
  (AND (|isDomain| *1 (|ListMultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Float|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Integer|)))
       (|isDomain| *2
                   (|Record| (|:| |lll| (|Matrix| (|Integer|)))
                             (|:| |trf| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *5)))
       (|isDomain| *4 (|Matrix| (|Fraction| *7))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|LiftLinearDependence| *5 *6 *7))
       (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *5)))
       (|isDomain| *4 (|List| (|Fraction| *7))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|LiftLinearDependence| *5 *6 *7))
       (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *5)))
       (|isDomain| *4 (|List| *7)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|LiftLinearDependence| *5 *6 *7))
       (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *1 (|ListPackage| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|BasicType|)) (|isDomain| *2 (|List| (|List| *5)))
       (|isDomain| *1 (|ListPackage| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2
                   (|Record| (|:| |yes| (|List| *5)) (|:| |no| (|List| *5))))
       (|isDomain| *1 (|ListPackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|ListToMap| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Mapping| *5 *6)) (|isDomain| *1 (|ListToMap| *6 *5))))
 ((*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|isDomain| *6 (|Mapping| *2 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|List| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| (|Equation| (|Polynomial| *6))))
       (|ofCategory| *6 (|Field|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *3 (|Polynomial| *6))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *6)))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))) 
(((*1 *2 *1 *3 *3 *3 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *4 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *5))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Equation| (|Polynomial| *5))))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Matrix| *5)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))) 
(((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3 *4 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|List| (|Matrix| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))) 
(((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))) 
(((*1 *1 *1 *2 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|FreeMonoid| *5))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *6 (|Field|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3 *1 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ComplexDoubleFloatVector|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DoubleFloatVector|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3 (|List| (|FreeMonoid| *4)))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *5 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
       (|isDomain| *5 (|List| (|Mapping| *7 *7)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *7))
                             (|:| |vec| (|Vector| *7))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *7))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|List| (|Mapping| *5 *5)))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|ConstantLinearDependence| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *1)) (|isDomain| *4 (|Vector| *1))
       (|ofCategory| *1 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *5))
                             (|:| |vec| (|Vector| *5))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *1))
       (|ofCategory| *1 (|LinearlyExplicitOver| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *5) #1="failed"))
                    (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|LinearlyExplicitOver| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *5) #1#))
                             (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| *5))
       (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| *5)) #2="failed"))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *5))))))
       (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|LinearlyExplicitOver| *5))
       (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| (|Fraction| *5)) #2#))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *5))))))
       (|isDomain| *1 (|LinearDependence| *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Vector| *5))
   (|ofCategory| *5 (|LinearlyExplicitOver| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *4))
   (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *5))
       (|ofCategory| *5 (|LinearlyExplicitOver| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *2)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *2 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| *2)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *2 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5)) (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|Fraction| *6))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5))
       (|isDomain| *4 (|List| (|LaurentPolynomial| *5 *6)))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|LaurentPolynomial| *5 *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *2))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |ratpart| *4) (|:| |coeffs| (|Vector| *4)))))
   (|ofCategory| *4 (|Field|))
   (|isDomain| *2
               (|Record|
                (|:| |particular|
                     (|Union|
                      (|Record| (|:| |ratpart| *4)
                                (|:| |coeffs| (|Vector| *4)))
                      "failed"))
                (|:| |basis|
                     (|List|
                      (|Record| (|:| |ratpart| *4)
                                (|:| |coeffs| (|Vector| *4)))))))
   (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Equation| (|OnePointCompletion| *3)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|OnePointCompletion| *3))
   (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Equation| (|OnePointCompletion| (|Polynomial| *5))))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|Library|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|KeyedAccessFile| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|BasicFile|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|BasicKeyedAccessFile|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *2 *2)
  (AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *3 (|OrderedVariableList| *4)) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *5 *6))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *3 *4)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|LinGroebnerPackage| *3 *4))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|isDomain| *1 (|LinGroebnerPackage| *5 *6))
   (|ofCategory| *6 (|GcdDomain|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|isDomain| *1 (|LinGroebnerPackage| *5 *6))
   (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |glbase|
                         (|List| (|DistributedMultivariatePolynomial| *4 *5)))
                    (|:| |glval| (|List| (|Integer|)))))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2
               (|Record|
                (|:| |gblist|
                     (|List| (|DistributedMultivariatePolynomial| *4 *5)))
                (|:| |gvlist| (|List| (|Integer|)))))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgebraicFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|CombinatorialFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *5))
       (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *5 (|KernelCategory| %))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ExpressionSpace2&| *4 *5))
       (|ofCategory| *4 (|ExpressionSpace2| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *6 (|KernelCategory| %)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionSpace2&| *4 *5 *6))
       (|ofCategory| *4 (|FunctionSpace2| *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LiouvillianFunction| *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|SquareFreeRegularTriangularSet| *5
                                                  (|IndexedExponents|
                                                   (|OrderedVariableList| *6))
                                                  (|OrderedVariableList| *6)
                                                  (|NewSparseMultivariatePolynomial|
                                                   *5
                                                   (|OrderedVariableList|
                                                    *6)))))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|List| (|Polynomial| *3)))
   (|ofCategory| *3 (|GcdDomain|)) (|isDomain| *1 (|FGLMIfCanPackage| *3 *4))
   (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *3
                                                   (|OrderedVariableList|
                                                    *4))))
   (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|LexTriangularPackage| *3 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FGLMIfCanPackage| *4 *5))
       (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *4
                                                   (|OrderedVariableList|
                                                    *5))))
   (|ofCategory| *4 (|GcdDomain|)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LexTriangularPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LiePolynomial| *4 *5)))
       (|isDomain| *1 (|LieExponentials| *4 *5 *6))
       (|ofCategory| *5
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *6 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |k| (|LyndonWord| *3)) (|:| |c| *4))))
   (|isDomain| *1 (|LieExponentials| *3 *4 *5))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Module| (|Fraction| (|Integer|)))))
   (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *4)))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *6)
  (|partial| AND (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *3)))
   (|isDomain| *5
               (|Record| (|:| |contp| *3)
                         (|:| |factors|
                              (|List|
                               (|Record| (|:| |irr| *10)
                                         (|:| |pow|
                                              (|NonNegativeInteger|)))))))
   (|isDomain| *6 (|List| *3)) (|isDomain| *7 (|List| *8))
   (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *10 (|PolynomialCategory| *3 *9 *8))
   (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |polfac| (|List| *10)) (|:| |correct| *3)
                         (|:| |corrfact|
                              (|List| (|SparseUnivariatePolynomial| *3)))))
   (|isDomain| *1 (|LeadingCoefDetermination| *8 *9 *3 *10))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|List| *3))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LeadingCoefDetermination| *6 *7 *3 *8))
       (|ofCategory| *8 (|PolynomialCategory| *3 *7 *6))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|LazardSetSolvingPackage| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *2
                     (|SquareFreeRegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| |const| (|Record| (|:| |val| (|Symbol|))))
                        (|:| |var| (|Record| (|:| |str| (|String|))))))
   (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|CoDcpo| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| |const| (|Record| (|:| |val| (|Symbol|))))
                        (|:| |var| (|Record| (|:| |str| (|String|))))))
   (|isDomain| *1 (|LatticeJoinOfMeets|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|LaplaceTransform| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *1)))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Equation| *1))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1 *1 *1)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|Lambda| *4)) (|ofCategory| *4 (|VarCat|))))) 
(((*1 *2 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4
                 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *5)))
   (|isDomain| *1 (|Kovacic| *4 *5))))
 ((*1 *2 *3 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| *6))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *6)))
   (|isDomain| *1 (|Kovacic| *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))
   (|ofCategory| *2 (|Comparable|))
   (|isDomain| *1 (|KernelFunctions2| *2 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Kernel| *4)) (|isDomain| *1 (|KernelFunctions2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|Comparable|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|TranscendentalFunctionCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|KernelCategory| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|KernelCategory| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *1 (|KernelCategory| *5))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|KernelCategory| *3))
   (|ofCategory| *3 (|Comparable|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|BasicKeyedAccessFile|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|JetVectorField| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *4 *5))
                             (|:| IC (|List| *5))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|KernelCategory| *1))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputFormatterCategory|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FormattedOutput|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Type|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JFriCASSupport|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Type|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JFriCASSupport|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|isDomain| *3 (|List| (|OrderedVariableList| *4)))
   (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Rank| (|NonNegativeInteger|))
                         (|:| |NumMultVar| (|NonNegativeInteger|))
                         (|:| |Betas| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
   (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |Rank| (|NonNegativeInteger|))
                             (|:| |NumMultVar| (|NonNegativeInteger|))
                             (|:| |Betas| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|List| (|List| *5)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *5 *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *1))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|SparseEchelonMatrix| *3 *4)))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace2| *2 *3))
       (|ofCategory| *3 (|KernelCategory| *1))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleBaseFunctionCategory| *2))))) 
(((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *4 *5))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|SparseEchelonMatrix| *6 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *6))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |DSys| (|List| *1))
                             (|:| |JVars| (|List| (|List| *6)))))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|Record| (|:| |DPhi| *1) (|:| |JVars| (|List| *5))))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
   (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *2 *3 *4 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |Sys| (|List| *1))
                             (|:| JM (|SparseEchelonMatrix| *5 *1))
                             (|:| |Depend|
                                  (|Union| "failed"
                                           (|List|
                                            (|List|
                                             (|NonNegativeInteger|)))))))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Expression| (|Integer|)) *3))
   (|isDomain| *1 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|PositiveInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|PositiveInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|List| (|PositiveInteger|))))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|List| (|PositiveInteger|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|JetBundleCategory|))
   (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OneDimensionalArray| *4))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|IndexedAggregate| *4 *3)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *4 (|List| (|Complex| *6)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Complex| *6))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *5 *6 *7))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Complex| *5))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Complex| *5))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *3))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *3 *2))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *2 *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
   (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *6))))
       (|isDomain| *4 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *6))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Algebra| *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1
                   (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7
                                                                      *8 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *4 (|Permutation| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *4 (|List| (|Permutation| (|Integer|))))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Expression| *5))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|IntegrationResultToFunction| *4 *2))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Expression| *4))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerRoots| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerRoots| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRoots| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerRoots| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *1 (|IntegerRoots| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |base| *3)
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|isDomain| *1 (|IntegerRoots| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerRoots| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |scalar| (|Fraction| (|Integer|)))
                          (|:| |coeff| (|SparseUnivariatePolynomial| *2))
                          (|:| |logand| (|SparseUnivariatePolynomial| *2)))))
   (|isDomain| *4 (|List| (|Record| (|:| |integrand| *2) (|:| |intvar| *2))))
   (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|IntegrationResult| *2))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |scalar| (|Fraction| (|Integer|)))
                          (|:| |coeff| (|SparseUnivariatePolynomial| *3))
                          (|:| |logand| (|SparseUnivariatePolynomial| *3)))))
   (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |integrand| *3) (|:| |intvar| *3))))
   (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegrationResult| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InternalPrintPackage|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|InnerPrimeField| *2))
       (|ofType| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|Comparable|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *1 (|IndexedProductCategory| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Record| (|:| |k| *4) (|:| |c| *3)))))) 
(((*1 *2 *2 *3 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|InverseLaplaceTransform| *4 *2))
   (|ofCategory| *2
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)
                         (|SpecialFunctionCategory|)
                         (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |polypart| *3)))
       (|isDomain| *1 (|TranscendentalIntegration| *5 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |ir| (|IntegrationResult| (|Fraction| *6)))
                             (|:| |specpart| (|Fraction| *6))
                             (|:| |polypart| *6)))
       (|isDomain| *1 (|TranscendentalIntegration| *5 *6))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Fraction| *9)) (|isDomain| *5 (|Mapping| *4 *4))
       (|isDomain| *6 (|Mapping| *9 *9))
       (|isDomain| *7
                   (|Mapping|
                    (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4))
                             "failed")
                    *4))
       (|isDomain| *8 (|Mapping| (|IntegrationResult| *4) *4))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *9)))
                    (|:| |a0| (|IntegrationResult| *4))))
       (|isDomain| *1 (|TranscendentalIntegration| *4 *9))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |answer| (|Fraction| *8))
                              (|:| |logpart| (|Fraction| *8))
                              (|:| |ir| (|IntegrationResult| (|Fraction| *8))))
                    (|Fraction| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Record| (|:| |ans| *7) (|:| |right| *7)
                              (|:| |primpart| *7) (|:| |sol?| (|Boolean|)))
                    (|Integer|) *7))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *3 (|Fraction| *8))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *8)))
                    (|:| |a0| *7)))
       (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |answer| (|Fraction| *8))
                              (|:| |logpart| (|Fraction| *8))
                              (|:| |ir| (|IntegrationResult| (|Fraction| *8))))
                    (|Fraction| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Union|
                     (|Record| (|:| |ratpart| *7) (|:| |coeff| *7)
                               (|:| |prim| *7))
                     "failed")
                    *7 (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *3 (|Fraction| *8))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *8)))
                    (|:| |a0| *7)))
       (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *2))
       (|ofCategory| *2 (|ElementaryFunctionCategory|))
       (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *2 (|List| (|Kernel| *6)))
       (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Kernel| *6))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Kernel| *6)) (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *5))) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Kernel| *5)) (|isDomain| *1 (|IntegrationTools| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Kernel| *5))) (|isDomain| *3 (|Symbol|))
       (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *5))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
   (|isDomain| *3 (|Symbol|))
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|RationalFunctionIntegration| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegrationAux| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionIntegration| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|IntegerRetractions| *3))
   (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|RationalIntegration| *3 *4))))) 
(((*1 *2 *2 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|isDomain| *4 (|OrderedCompletion| *2))
   (|ofCategory| *2 (|SpecialFunctionCategory|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                             (|GcdDomain|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Record| (|:| |const| *3) (|:| |nconst| *3)))
       (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *9 *9))
       (|isDomain| *4 (|Mapping| (|Factored| *9) *9))
       (|isDomain| *5
                   (|Mapping| (|List| (|Vector| (|Fraction| (|Integer|))))
                              (|Matrix| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| (|Fraction| *9)))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| *9)))
       (|isDomain| *7 (|List| (|Fraction| *9))) (|ofCategory| *8 (|Field|))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *8))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| (|Fraction| *9)))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Kernel| *7)))
       (|isDomain| *5 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| *7))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Kernel| *7)))
       (|isDomain| *5 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *7)
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricIntegration| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Kernel| *3)))
       (|isDomain| *6 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))
                          #1="failed"))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))))
       (|isDomain| *1 (|ParametricIntegration| *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))
                          #1#))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))))
       (|isDomain| *1 (|ParametricIntegration| *6 *3))))) 
(((*1 *2 *3 *4 *5 *6 *7 *3)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7 (|List| (|Kernel| *3))) (|isDomain| *5 (|Kernel| *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *8)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |ratpart| *3) (|:| |coeff| *3) (|:| |prim| *3)))
   (|isDomain| *1 (|ParametricIntegration| *8 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| (|List| (|Vector| (|Fraction| (|Integer|))))
                              (|Matrix| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *6))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| (|Fraction| *7)))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping|
                (|List|
                 (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6))))
                (|List| *6)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *6)))
   (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6)))))
   (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping|
                (|List|
                 (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6))))
                (|List| *7)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *6)))
   (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6)))))
   (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *7)
                               (|:| |coeffs| (|Vector| *7))))
                    (|Integer|) (|List| *7)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| (|Fraction| *8))
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *7)
                               (|:| |coeffs| (|Vector| *7))))
                    (|List| *7)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| (|Fraction| *8))
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *5 (|Kernel| *4)) (|isDomain| *6 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *6)
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| *6))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *5 *6 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|Kernel| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))
                    (|:| |basis| (|List| *3))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2 *2 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 "failed") *2 *2 (|Symbol|)))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|PureAlgebraicIntegration| *5 *2 *6))
   (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|PureAlgebraicIntegration| *5 *3 *6))
       (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerLocalizedAtPrime| *3))
       (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3)))
       (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3 *4 *3)
  (AND (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3)))
       (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |answer| (|Fraction| *6))
                             (|:| |logpart| (|Fraction| *6))
                             (|:| |specpart| (|Fraction| *6))
                             (|:| |polypart| *6)))
       (|isDomain| *1 (|TranscendentalHermiteIntegration| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| *5)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |answer| (|Fraction| *5))
                             (|:| |logpart| (|Fraction| *5))
                             (|:| |specpart| (|Fraction| *5))
                             (|:| |polypart| *5)))
       (|isDomain| *1 (|TranscendentalHermiteIntegration| *6 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|CRApackage| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7)
                              (|:| |basisInv| (|Matrix| *7)))))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7)
                             (|:| |basisInv| (|Matrix| *7))))
       (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *6 *7 *8))))
 ((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *1 (|GenerateEllipticIntegrals| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|Field|)
                             (|MonogenicAlgebra| (|Fraction| *3) *4)))))) 
(((*1 *2 *3 *4 *5 *5)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|isDomain| *2
               (|Record| (|:| |result1| (|Fraction| *4)) (|:| |result2| *3)))
   (|isDomain| *1 (|GenerateEllipticIntegrals| *3 *4 *6 *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|MonogenicAlgebra| (|Fraction| *4) *6)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |f_form| *7) (|:| |e_form| *7)
                              (|:| |f_var| *4) (|:| |f_pol| *5))))
       (|isDomain| *1 (|GenerateEllipticIntegrals| *4 *5 *6 *7))
       (|ofCategory| *7
                     (|Join| (|Field|)
                             (|MonogenicAlgebra| (|Fraction| *5) *6)))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6)
  (AND (|isDomain| *5 (|Kernel| *4))
       (|isDomain| *6 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1="failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4 *5 *5 *5 *4 *6 *4)
  (AND (|isDomain| *5 (|Kernel| *4))
       (|isDomain| *6 (|Fraction| (|SparseUnivariatePolynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1#))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|IntegrationResult| *5)) (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|GenusZeroIntegration| *4 *5 *6))
       (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *2 *2 *3 *3 *4 *2 *5)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 #1="failed") *2 *2 (|Symbol|)))
   (|isDomain| *5 (|SparseUnivariatePolynomial| *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7))
   (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *2 *2 *3 *3 *4 *3 *2 *5 *2)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 #1#) *2 *2 (|Symbol|)))
   (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7))
   (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4 *3 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *3 *4 *4 *4 *3 *5 *3)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerFactorizationPackage| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|ElementaryIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *3)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeff| *3)))
   (|isDomain| *1 (|ElementaryIntegration| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| (|List| *3)))
   (|isDomain| *1 (|DenominatorIntegration| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|LiouvillianFunctionCategory|)
                         (|SpecialFunctionCategory|) (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *4 (|Kernel| *7)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|) (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |logpart|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |ir|
                         (|IntegrationResult|
                          (|Fraction| (|SparseUnivariatePolynomial| *7))))))
       (|isDomain| *1 (|DenominatorIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *4 (|Kernel| *7)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|) (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |logpart|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |ir|
                         (|IntegrationResult|
                          (|Fraction| (|SparseUnivariatePolynomial| *7))))))
       (|isDomain| *1 (|DenominatorIntegration| *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Kernel| *8))
       (|isDomain| *4
                   (|Mapping| (|SparseUnivariatePolynomial| *8)
                              (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *8)) (|Matrix| *8)))
       (|isDomain| *6 (|List| *8))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *8)
                              (|:| |coeffs| (|Vector| *8)))))
       (|isDomain| *1 (|AlgebraicIntegration| *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *5 (|List| *10))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *10 (|FunctionFieldCategory| *7 *8 *9))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *10)
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|AlgebraicIntegrate2| *6 *7 *8 *9 *10))))) 
(((*1 *2 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Kernel| *10))
       (|isDomain| *4
                   (|Mapping| (|SparseUnivariatePolynomial| *10)
                              (|SparseUnivariatePolynomial| *10)))
       (|isDomain| *5
                   (|Mapping|
                    (|List|
                     (|Record|
                      (|:| |ratpart|
                           (|Fraction| (|SparseUnivariatePolynomial| *10)))
                      (|:| |coeffs| (|Vector| *10))))
                    (|List| (|Fraction| (|SparseUnivariatePolynomial| *10)))))
       (|isDomain| *6
                   (|Mapping|
                    (|List|
                     (|Record|
                      (|:| |ratpart|
                           (|Fraction| (|SparseUnivariatePolynomial| *10)))
                      (|:| |coeffs| (|Vector| *10))))
                    (|Fraction| (|SparseUnivariatePolynomial| *10))
                    (|List| (|Fraction| (|SparseUnivariatePolynomial| *10)))))
       (|isDomain| *7 (|Mapping| (|List| (|Vector| *10)) (|Matrix| *10)))
       (|isDomain| *8 (|List| *10))
       (|ofCategory| *10
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *9)))
       (|ofCategory| *9 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *10)
                              (|:| |coeffs| (|Vector| *10)))))
       (|isDomain| *1 (|AlgebraicIntegration| *9 *10))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *10 *10))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| (|Fraction| *10))
                               (|:| |coeffs| (|Vector| *9))))
                    (|List| (|Fraction| *10))))
       (|isDomain| *5
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| (|Fraction| *10))
                               (|:| |coeffs| (|Vector| *9))))
                    (|Fraction| *10) (|List| (|Fraction| *10))))
       (|isDomain| *6 (|Mapping| (|List| (|Vector| *9)) (|Matrix| *9)))
       (|isDomain| *7 (|List| *12))
       (|ofCategory| *9
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *8)))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *12 (|FunctionFieldCategory| *9 *10 *11))
       (|ofCategory| *8
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| (|Fraction| *10)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *12)
                              (|:| |coeffs| (|Vector| *9)))))
       (|isDomain| *1 (|AlgebraicIntegrate2| *8 *9 *10 *11 *12))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Mapping| *7 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|isDomain| *2
                   (|Record| (|:| |result1| (|IntegrationResult| *3))
                             (|:| |result2| *4)))
       (|isDomain| *1 (|AlgebraicIntegrate| *6 *4 *7 *8 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *7 *8))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5 (|Mapping| (|IntegrationResult| *7) *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegrate| *6 *7 *8 *9 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *7 *8 *9))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5
                   (|Mapping| (|SparseUnivariatePolynomial| *3)
                              (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *6 (|Mapping| (|IntegrationResult| *3) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegration| *7 *3))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Integer|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *3 *2 *4)
  (|partial| AND
   (|isDomain| *4 (|Mapping| (|Union| (|Integer|) #1="failed") *5))
   (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *5 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4 *2 *5)
  (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) #1#) *4))
   (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) #1#) *4))
   (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|GenExEuclid| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|GeneralHenselPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofType| *4 *3)
       (|ofType| *5 (|Mapping| *3 *3 (|NonNegativeInteger|)))
       (|isDomain| *1 (|InnerModularGcd| *3 *2 *4 *5))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|InnerModularGcd| *4 *2 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|)) (|ofType| *5 *4)
       (|ofType| *6 (|Mapping| *4 *4 (|NonNegativeInteger|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *6))))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *7 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *6 *7 *5))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *4 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|InputForm|))
       (|isDomain| *1 (|InputFormFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|InputForm|)))
       (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|FormatterCategory&| *3))
   (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|InputForm|))) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|DirectedGraph| *1))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|InputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|InputForm|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|InputForm|)))
       (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6))
       (|isDomain| *5
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *6))
                              (|SparseUnivariatePolynomial| *6)))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| *7) (|:| |outmult| (|Integer|))
                              (|:| |outvect| (|List| (|Matrix| *7))))))
       (|isDomain| *1 (|InnerNumericEigenPackage| *6 *7 *4))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericEigenPackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNumericEigenPackage| *4 *5 *6))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|isDomain| *1 (|IncrementingMaps| *3))
       (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|isDomain| *1 (|IncrementingMaps| *3))
       (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|OneDimensionalArray| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|SingleInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SingleInteger|))
       (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4 *4 *5 *6 *5 *6)
  (AND (|isDomain| *4 (|List| (|Integer|)))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|isDomain| *6 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *4 *5)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *8 *9)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4
                   (|List|
                    (|PrimitiveArray|
                     (|Fraction| (|Polynomial| (|Integer|))))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|isDomain| *6 (|NonNegativeInteger|)) (|isDomain| *8 (|Symbol|))
       (|isDomain| *9
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *7 (|U32Vector|))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |defects| (|Vector| (|Integer|)))
                              (|:| |cinds| (|Vector| (|Integer|)))
                              (|:| |rowlen| (|Integer|))
                              (|:| |offsetdata| (|Vector| (|Integer|)))
                              (|:| |expdata| (|SortedExponentVector|))
                              (|:| |coeffdata| (|PrimitiveArray| (|Integer|))))
                    "no_solution"))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|U32Vector|))
       (|isDomain| *7 (|Integer|)) (|isDomain| *8 (|Symbol|))
       (|isDomain| *2
                   (|Union|
                    (|Record|
                     (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                     (|:| |defects| (|Vector| (|Integer|)))
                     (|:| |cinds| (|Vector| (|Integer|))))
                    "no_solution"))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|DivisionRing|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|DivisionRing|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|DivisionRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|ILogic|))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ILogic|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|ILogic|))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ILogic|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|FlexibleArray| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofType| *4 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FlexibleArray| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FlexibleArray| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FlexibleArray| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FlexibleArray| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|IndexedFlexibleArray| *2 *3))
       (|ofCategory| *2 (|Type|)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| (|Fraction| (|Polynomial| *4))
                                   (|SuchThat| (|Symbol|) (|Polynomial| *4))))
                     (|:| |geneigvec|
                          (|List|
                           (|Matrix| (|Fraction| (|Polynomial| *4))))))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                     (|:| |geneigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *5)))))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *4 (|SparseUnivariatePolynomial| *4)))
                     (|:| |geneigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *4)))))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| (|Fraction| (|Polynomial| *4))
                                   (|SuchThat| (|Symbol|) (|Polynomial| *4))))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Matrix| (|Fraction| (|Polynomial| *4))))))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *5)))))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *4 (|SparseUnivariatePolynomial| *4)))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *4)))))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Union| (|Fraction| (|Polynomial| *4))
                             (|SuchThat| (|Symbol|) (|Polynomial| *4)))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Union| *5 (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|List| (|Union| *4 (|SparseUnivariatePolynomial| *4))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND
   (|isDomain| *3
               (|Union| (|Fraction| (|Polynomial| *6))
                        (|SuchThat| (|Symbol|) (|Polynomial| *6))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *6)))))
   (|isDomain| *1 (|EigenPackage| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record|
                (|:| |eigval|
                     (|Union| (|Fraction| (|Polynomial| *5))
                              (|SuchThat| (|Symbol|) (|Polynomial| *5))))
                (|:| |eigmult| (|NonNegativeInteger|))
                (|:| |eigvec|
                     (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *1 (|EigenPackage| *5))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|Union| *6 (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *4 (|Matrix| *6)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|InnerEigenPackage| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record|
                (|:| |eigval| (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                (|:| |eigmult| (|NonNegativeInteger|))
                (|:| |eigvec|
                     (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))))
   (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|InnerEigenPackage| *5))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Union| (|Fraction| (|Polynomial| *5))
                        (|SuchThat| (|Symbol|) (|Polynomial| *5))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *1 (|EigenPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Union| *5 (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|PolynomialIdeal| (|Fraction| (|Integer|))
                                   (|DirectProduct| (|#| *4)
                                                    (|NonNegativeInteger|))
                                   (|OrderedVariableList| *4)
                                   (|DistributedMultivariatePolynomial| *4
                                                                        (|Fraction|
                                                                         (|Integer|))))))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *3)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *3)
                                  (|DistributedMultivariatePolynomial| *3
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|IdealDecompositionPackage| *3))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|FloatElementaryFunctions|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |mval| (|Matrix| *4))
                             (|:| |invmval| (|Matrix| *4))
                             (|:| |genIdeal| (|PolynomialIdeal| *4 *5 *6 *7))))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mval| (|Matrix| *3))
                         (|:| |invmval| (|Matrix| *3))
                         (|:| |genIdeal| (|PolynomialIdeal| *3 *4 *5 *6))))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
   (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6))
       (|ofCategory| *6 (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *6 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Polynomial| *4))
                               (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Database| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| (*2 %))
                              (SIGNATURE |fullDisplay| (*2 %)))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) % (|Symbol|)))
                              (SIGNATURE |display| (*2 %))
                              (SIGNATURE |fullDisplay| (*2 %)))))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *7 (|Ring|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *4 *7))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *8))
   (|isDomain| *4 (|Matrix| (|SparseUnivariatePolynomial| *8)))
   (|ofCategory| *5 (|Ring|)) (|ofCategory| *8 (|Ring|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|Matrix| *6))
   (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *7 *8))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *7))
   (|isDomain| *4 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *7 (|Ring|))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *7))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *7 (|Ring|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *7 (|Ring|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *4 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| %) %)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *3 *3 *2 *4)
  (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| %) %)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6)
                         (|:| |basisInv| (|Matrix| *6))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6)
                          (|:| |basisInv| (|Matrix| *6)))))
   (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *5 *6 *7))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |flag| (|Union| "nil" "sqfr" "irred" "prime"))
                          (|:| |factor| *3)
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *3 *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|HopfAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|Module| *2))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|))) (|isDomain| *1 (|Homology|))))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Homology|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|HeuGcd| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|Heap| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|DistributedMultivariatePolynomial| *3 *4))
       (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|ofType| *3 (|List| (|Symbol|)))
       (|isDomain| *1 (|GeneralDistributedMultivariatePolynomial| *3 *4 *5))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|HomogeneousDistributedMultivariatePolynomial| *3 *4))
       (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|HallBasis|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|HallBasis|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|HashState|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Hashable|)) (|isDomain| *2 (|SingleInteger|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|Hashable|)) (|isDomain| *2 (|HashState|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|HankelPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *5 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *5)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                     (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|AlgebraicNumber|)))
                           (|UnivariateFormalPowerSeries|
                            (|AlgebraicNumber|))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|AlgebraicNumber|) (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|AlgebraicNumber|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|AlgebraicNumber|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *4 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *4)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Integer|))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Integer|))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Integer|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Integer|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Polynomial| *4))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Polynomial| *4))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Polynomial| *4))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Polynomial| *4))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping|
                (|Record|
                 (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                 (|:| |guessStream|
                      (|Mapping|
                       (|Stream|
                        (|UnivariateFormalPowerSeries|
                         (|Fraction| (|Polynomial| (|Integer|)))))
                       (|UnivariateFormalPowerSeries|
                        (|Fraction| (|Polynomial| (|Integer|))))))
                 (|:| |guessModGen|
                      (|Mapping|
                       (|Mapping| (|Vector| (|U32Vector|))
                                  (|List| (|U32Vector|)) (|Integer|)
                                  (|Integer|))
                       (|NonNegativeInteger|)))
                 (|:| |testGen|
                      (|Mapping|
                       (|Mapping|
                        (|Vector|
                         (|UnivariateFormalPowerSeries|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))))
                        (|UnivariateFormalPowerSeries|
                         (|SparseMultivariatePolynomial|
                          (|Fraction| (|Polynomial| (|Integer|)))
                          (|NonNegativeInteger|))))
                       (|List| (|PositiveInteger|))))
                 (|:| |exprStream|
                      (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                 (|Expression| (|Integer|)) (|Symbol|)))
                 (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                 (|:| A
                      (|Mapping| (|Polynomial| (|Integer|))
                                 (|NonNegativeInteger|) (|NonNegativeInteger|)
                                 (|SparseUnivariatePolynomial|
                                  (|Polynomial| (|Integer|)))))
                 (|:| AF
                      (|Mapping|
                       (|SparseMultivariatePolynomial|
                        (|Fraction| (|Polynomial| (|Integer|)))
                        (|NonNegativeInteger|))
                       (|NonNegativeInteger|) (|NonNegativeInteger|)
                       (|UnivariateFormalPowerSeries|
                        (|SparseMultivariatePolynomial|
                         (|Fraction| (|Polynomial| (|Integer|)))
                         (|NonNegativeInteger|)))))
                 (|:| AX
                      (|Mapping| (|Expression| (|Integer|))
                                 (|NonNegativeInteger|) (|Symbol|)
                                 (|Expression| (|Integer|))))
                 (|:| C
                      (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|))))
                (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *5 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *5)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                     (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|AlgebraicNumber|)))
                           (|UnivariateFormalPowerSeries|
                            (|AlgebraicNumber|))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|AlgebraicNumber|) (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|AlgebraicNumber|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|AlgebraicNumber|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *4 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *4)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Integer|))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Integer|))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Integer|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Integer|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Polynomial| *4))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Polynomial| *4))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Polynomial| *4))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Polynomial| *4))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping|
                (|Record|
                 (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                 (|:| |guessStream|
                      (|Mapping|
                       (|Stream|
                        (|UnivariateFormalPowerSeries|
                         (|Fraction| (|Polynomial| (|Integer|)))))
                       (|UnivariateFormalPowerSeries|
                        (|Fraction| (|Polynomial| (|Integer|))))))
                 (|:| |guessModGen|
                      (|Mapping|
                       (|Mapping| (|Vector| (|U32Vector|))
                                  (|List| (|U32Vector|)) (|Integer|)
                                  (|Integer|))
                       (|NonNegativeInteger|)))
                 (|:| |testGen|
                      (|Mapping|
                       (|Mapping|
                        (|Vector|
                         (|UnivariateFormalPowerSeries|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))))
                        (|UnivariateFormalPowerSeries|
                         (|SparseMultivariatePolynomial|
                          (|Fraction| (|Polynomial| (|Integer|)))
                          (|NonNegativeInteger|))))
                       (|List| (|PositiveInteger|))))
                 (|:| |exprStream|
                      (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                 (|Expression| (|Integer|)) (|Symbol|)))
                 (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                 (|:| A
                      (|Mapping| (|Polynomial| (|Integer|))
                                 (|NonNegativeInteger|) (|NonNegativeInteger|)
                                 (|SparseUnivariatePolynomial|
                                  (|Polynomial| (|Integer|)))))
                 (|:| AF
                      (|Mapping|
                       (|SparseMultivariatePolynomial|
                        (|Fraction| (|Polynomial| (|Integer|)))
                        (|NonNegativeInteger|))
                       (|NonNegativeInteger|) (|NonNegativeInteger|)
                       (|UnivariateFormalPowerSeries|
                        (|SparseMultivariatePolynomial|
                         (|Fraction| (|Polynomial| (|Integer|)))
                         (|NonNegativeInteger|)))))
                 (|:| AX
                      (|Mapping| (|Expression| (|Integer|))
                                 (|NonNegativeInteger|) (|Symbol|)
                                 (|Expression| (|Integer|))))
                 (|:| C
                      (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|))))
                (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *5))
                          (|UnivariateFormalPowerSeries| *5)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *5
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *5
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *7) *7 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *6 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *6)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *5
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *5
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *7 (|NonNegativeInteger|) (|Symbol|) *7))
                    (|:| C (|Mapping| (|List| *6) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *5))
                          (|UnivariateFormalPowerSeries| *5)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *5
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *5
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *5
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *5
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *5))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *5)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *5))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *5))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *5) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *5))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *5))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *5))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *5))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|GuessOption|)))
   (|isDomain| *2
               (|Record| (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                         (|:| |guessStream|
                              (|Mapping|
                               (|Stream|
                                (|UnivariateFormalPowerSeries|
                                 (|Fraction| (|Polynomial| (|Integer|)))))
                               (|UnivariateFormalPowerSeries|
                                (|Fraction| (|Polynomial| (|Integer|))))))
                         (|:| |guessModGen|
                              (|Mapping|
                               (|Mapping| (|Vector| (|U32Vector|))
                                          (|List| (|U32Vector|)) (|Integer|)
                                          (|Integer|))
                               (|NonNegativeInteger|)))
                         (|:| |testGen|
                              (|Mapping|
                               (|Mapping|
                                (|Vector|
                                 (|UnivariateFormalPowerSeries|
                                  (|SparseMultivariatePolynomial|
                                   (|Fraction| (|Polynomial| (|Integer|)))
                                   (|NonNegativeInteger|))))
                                (|UnivariateFormalPowerSeries|
                                 (|SparseMultivariatePolynomial|
                                  (|Fraction| (|Polynomial| (|Integer|)))
                                  (|NonNegativeInteger|))))
                               (|List| (|PositiveInteger|))))
                         (|:| |exprStream|
                              (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                         (|Expression| (|Integer|))
                                         (|Symbol|)))
                         (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                         (|:| A
                              (|Mapping| (|Polynomial| (|Integer|))
                                         (|NonNegativeInteger|)
                                         (|NonNegativeInteger|)
                                         (|SparseUnivariatePolynomial|
                                          (|Polynomial| (|Integer|)))))
                         (|:| AF
                              (|Mapping|
                               (|SparseMultivariatePolynomial|
                                (|Fraction| (|Polynomial| (|Integer|)))
                                (|NonNegativeInteger|))
                               (|NonNegativeInteger|) (|NonNegativeInteger|)
                               (|UnivariateFormalPowerSeries|
                                (|SparseMultivariatePolynomial|
                                 (|Fraction| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|)))))
                         (|:| AX
                              (|Mapping| (|Expression| (|Integer|))
                                         (|NonNegativeInteger|) (|Symbol|)
                                         (|Expression| (|Integer|))))
                         (|:| C
                              (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                         (|NonNegativeInteger|)))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4)))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4)))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|GuessOption|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * (% % %))
                              (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                              (SIGNATURE |numerator| (% %))
                              (SIGNATURE |denominator| (% %))
                              (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| *8) (|List| *6) (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6))
   (|ofCategory| *6 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
   (|ofType| *9 (|Mapping| *6 *8)) (|ofType| *10 (|Mapping| *8 *6))
   (|isDomain| *2 (|List| *8)) (|isDomain| *1 (|Guess| *6 *7 *8 *9 *10))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8
                 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                         (|RetractableTo| (|Symbol|))
                         (|RetractableTo| (|Integer|))
                         (|CombinatorialOpsCategory|)
                         (|PartialDifferentialRing| (|Symbol|))
                         (CATEGORY |domain| (SIGNATURE * (% % %))
                          (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                          (SIGNATURE |numerator| (% %))
                          (SIGNATURE |denominator| (% %))
                          (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| *9) (|List| *7) (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *7 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
   (|ofType| *10 (|Mapping| *7 *9)) (|ofType| *11 (|Mapping| *9 *7))
   (|isDomain| *2 (|List| *9)) (|isDomain| *1 (|Guess| *7 *8 *9 *10 *11))
   (|ofCategory| *8 (|GcdDomain|))
   (|ofCategory| *9
                 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                         (|RetractableTo| (|Symbol|))
                         (|RetractableTo| (|Integer|))
                         (|CombinatorialOpsCategory|)
                         (|PartialDifferentialRing| (|Symbol|))
                         (CATEGORY |domain| (SIGNATURE * (% % %))
                          (SIGNATURE / (% % %)) (SIGNATURE ^ (% % %))
                          (SIGNATURE |numerator| (% %))
                          (SIGNATURE |denominator| (% %))
                          (SIGNATURE |ground?| ((|Boolean|) %)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|AlgebraicNumber|))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|AlgebraicNumber|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|AlgebraicNumber|))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|AlgebraicNumber|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *6)
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6))
   (|ofCategory| *6
                 (|Join| (|FiniteFieldCategory|)
                         (|ConvertibleTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessFinite| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *7)
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *7
                 (|Join| (|FiniteFieldCategory|)
                         (|ConvertibleTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessFinite| *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Integer|)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Integer|)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| *6)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *6))))
   (|ofCategory| *6 (|Ring|))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomial| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| *7)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *7))))
   (|ofCategory| *7 (|Ring|))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomial| *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| (|Integer|))))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| (|Integer|))))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| (|Expression| (|Integer|))))
       (|isDomain| *2 (|Polynomial| *4))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessFiniteFunctions| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessFiniteFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))))) 
(((*1 *1) (|isDomain| *1 (|GroupPresentation|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|GroupPresentation|))))) 
(((*1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *4)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *1 (|DirectProductCategory| *3 *4))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))) 
(((*1 *2 *1 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| (|Integer|))))
   (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Boolean|))
   (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|isDomain| *4 (|List| (|OrderedVariableList| *5)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |dpolys|
                         (|List| (|DistributedMultivariatePolynomial| *5 *6)))
                    (|:| |coords| (|List| (|Integer|)))))
       (|isDomain| *1 (|GroebnerSolve| *5 *6 *7))
       (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *3 (|List| (|OrderedVariableList| *4)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerSolve| *4 *5 *6)) (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|isDomain| *4 (|List| (|OrderedVariableList| *5)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|DistributedMultivariatePolynomial| *5 *6))))
       (|isDomain| *1 (|GroebnerSolve| *5 *6 *7))
       (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *1) (|isDomain| *1 (|GraphImage|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|))) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|Vector| (|Vector| (|Integer|))))
       (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Vector| (|Integer|))))
       (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|FreeModuleCategory| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SemiRing|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Mapping| *3))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *5 *3))
   (|isDomain| *1 (|GosperSummationMethod| *5 *3 *6 *7 *2))
   (|ofCategory| *2
                 (|Join| (|RetractableTo| (|Fraction| (|Integer|))) (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| (% *7))
                          (SIGNATURE |numer| (*7 %))
                          (SIGNATURE |denom| (*7 %)))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|DrawOptionFunctions1| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|GuessOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *2))
                   (|Record| (|:| |index| *5) (|:| |exponent| *2))))
       (|ofCategory| *2
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *2 (|OrderedVariableList| *3)))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5))
                   (|Record| (|:| |index| *2) (|:| |exponent| *5))))
       (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))) 
(((*1 *1 *2 *3 *4)
  (AND (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *4
                     (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *4))
                   (|Record| (|:| |index| *3) (|:| |exponent| *4))))
       (|isDomain| *1 (|GeneralModulePolynomial| *5 *2 *3 *4 *6 *7))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *4 (|OrderedVariableList| *5)))))) 
(((*1 *1 *2 *3 *1)
  (AND (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3
                     (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *3))
                   (|Record| (|:| |index| *5) (|:| |exponent| *3))))
       (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *3 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *3 (|OrderedVariableList| *4)))))) 
(((*1 *2 *3 *2 *4 *5)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *1 (|GeneralHenselPackage| *4 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *6 (|PositiveInteger|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *2 (|Record| (|:| |plist| (|List| *3)) (|:| |modulo| *5)))
       (|isDomain| *1 (|GeneralHenselPackage| *5 *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2 (|Stream| (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6)))
   (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *3)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *2 *4 *5))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Mapping| *5 *4 *4))
       (|ofCategory| *4 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GenExEuclid| *3 *5))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Vector| (|List| *3)))
   (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|GenExEuclid| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *5 (|List| *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|Vector| (|List| *6)))
   (|isDomain| *1 (|GenExEuclid| *4 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GenExEuclid| *5 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|String|))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1))))
   (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))
 ((*1 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record|
                (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
                (|:| |basis|
                     (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1))))
   (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))
 ((*1 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record|
                (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
                (|:| |basis|
                     (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Symbol|)))
       (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| (|Symbol|)))
       (|ofType| *7 (|Vector| (|Matrix| *4)))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| *2)) (|ofType| *7 (|Vector| (|Matrix| *4)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Symbol|)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| *2)) (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|GenericNonAssociativeAlgebra| *2 *3 *4 *5))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofType| *3 (|PositiveInteger|))
       (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|Vector| (|Matrix| *2)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *3)))))
 ((*1 *2)
  (AND (|isDomain| *2 (|List| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| (|Symbol|)))
       (|ofType| *7 (|Vector| (|Matrix| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Vector| *4))
                             (|:| |transform| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|GcdBasis| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Fraction| *4)))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Vector| *4))
                             (|:| |transform| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|GcdBasis| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|GcdBasis| *3))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |totdeg| (|NonNegativeInteger|)) (|:| |pol| *4)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *4
                 (|Join| (|FiniteAbelianMonoidRing| *6 *7)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |lcmfij| *7)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *4)
                         (|:| |polj| *4)))
   (|isDomain| *1 (|GroebnerInternalPackage| *6 *7 *4))))) 
(((*1 *2 *3 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                         (|:| |polj| *6)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|Record| (|:| |lcmfij| *6)
                             (|:| |totdeg| (|NonNegativeInteger|))
                             (|:| |poli| *4) (|:| |polj| *4)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *4))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|Record| (|:| |lcmfij| *6)
                             (|:| |totdeg| (|NonNegativeInteger|))
                             (|:| |poli| *4) (|:| |polj| *4)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5))))) 
(((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *4)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *5)
                          (|:| |polj| *5))))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5
                 (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *3 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |totdeg| (|NonNegativeInteger|))
                          (|:| |pol| *3))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *3
                 (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Record| (|:| |poly| *3) (|:| |mult| *5)))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *3))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *3)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *5)
                          (|:| |polj| *5))))
   (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5
                 (|Join| (|FiniteAbelianMonoidRing| *4 *3)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *4)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *5)
                          (|:| |polj| *5))))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5
                 (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *3 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *5)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *3)
                          (|:| |polj| *3))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *3
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *4 *3)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *4 *3)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                         (|:| |polj| *6)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *2))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|GaloisGroupUtilities| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *6))))) 
(((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4 *5)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4 *5 *6)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *2))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|Multiset| (|NonNegativeInteger|)))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Multiset| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *6
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Set| (|NonNegativeInteger|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |contp| (|Integer|))
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow|
                                                  (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *2
                   (|Record| (|:| |contp| (|Integer|))
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow|
                                                  (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Set| (|NonNegativeInteger|)))
       (|isDomain| *2
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |factors| (|List| *3))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |flag| (|Union| "nil" "sqfr" "irred" "prime"))
                          (|:| |factor| *2)
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|Factored| *2))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |contp| (|Integer|))
                         (|:| |factors|
                              (|List|
                               (|Record| (|:| |irr| *4)
                                         (|:| |pow|
                                              (|NonNegativeInteger|)))))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|Factored| *4))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Mapping| (|List| (|PrimitiveArray| (|PrimeField| *5))))))
   (|ofType| *5 (|PositiveInteger|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2 (|List| *6))
   (|isDomain| *1 (|GaloisGroupFactorizerSeparate| *5 *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranType|))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| *3)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FunctionSpaceReduce| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|FunctionSpaceReduce| *4 *3))
   (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceReduce| *5 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|FunctionalSpecialFunction| *4 *3))
   (|ofCategory| *3 (|FunctionSpace| *4))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|DoubleFloat|)))
       (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FunctionSpace2| *4 *5))
       (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *5 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *4 (|KernelCategory| *1))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *1 (|FunctionSpace2| *3 *4)) (|ofCategory| *3 (|Comparable|))
   (|ofCategory| *4 (|KernelCategory| *1))
   (|isDomain| *2 (|Record| (|:| |coef| (|Integer|)) (|:| |var| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace2| *4 *5))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *5 (|KernelCategory| *1))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *1 (|FunctionSpace2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|KernelCategory| *1))
       (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2)) (|ofCategory| *2 (|Finite|))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *5
                 (|Join| (|UnivariatePowerSeriesCategory| *2 *4) (|Field|)
                         (|PowerSeriesCategory| *2 *4
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *2))
   (|ofType| *9 (|Mapping| *2 *4))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *2 *4 *5 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *2 *4 (|SingletonAsOrderedSet|) *5
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Record| (|:| |pos_Check?| (|Boolean|))
                             (|:| |atan_Flag|
                                  (|Union| "complex" "real: two sides"
                                           "real: left side" "real: right side"
                                           "just do it"))
                             (|:| |coeff_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6)
                                           #1="none"))
                             (|:| |inv_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6) #1#))
                             (|:| |zero_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6) #1#))
                             (|:| |log_x_replace| (|Boolean|))
                             (|:| |log_x_val| *6)
                             (|:| |cache|
                                  (|List|
                                   (|Record| (|:| |ker| (|Kernel| *6))
                                             (|:| |ser|
                                                  (|Union| (|:| |%series| *8)
                                                           (|:| |%problem|
                                                                (|Record|
                                                                 (|:| |func|
                                                                      (|String|))
                                                                 (|:| |prob|
                                                                      (|String|)))))))))))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *6 *7) (|Field|)
                             (|PowerSeriesCategory| *6 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *6))
       (|ofType| *12 (|Mapping| *6 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *5 *6 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *6 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *6
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *6 *7 *2 *8 *9
                                                        *10))
   (|ofCategory| *7 (|PartialTranscendentalFunctions| *6))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *6
                                          *2))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *3 *2 *4 *5))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *4 (|Symbol|)) (|ofType| *5 *2)))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *5
                 (|Join| (|UnivariatePowerSeriesCategory| *2 *4) (|Field|)
                         (|PowerSeriesCategory| *2 *4
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *2))
   (|ofType| *9 (|Mapping| *2 *4))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *2 *4 *5 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *2 *4 (|SingletonAsOrderedSet|) *5
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *3 *4 *5 *4 *3)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| #1="complex" #2="real: two sides"
                            #3="real: left side" #4="real: right side"
                            #5="just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3 *6 *6 *6)
  (AND (|isDomain| *5 (|Union| #1# #2# #3# #4# #5#))
       (|isDomain| *6 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *7)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *8)))))
       (|ofCategory| *8 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *9
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *8) (|Field|)
                             (|PowerSeriesCategory| *3 *8
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *11 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *9)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *7 *3 *8 *9 *10 *11
                                                           *12 *13))
       (|ofCategory| *10 (|PartialTranscendentalFunctions| *9))
       (|ofCategory| *12
                     (|TaylorSeriesExpansion| *3 *8 (|SingletonAsOrderedSet|)
                                              *9 *11))
       (|ofType| *13 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| #6="complex" #7="real: two sides"
                            #8="real: left side" #9="real: right side"
                            #10="just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3 *6 *6 *6)
  (AND (|isDomain| *5 (|Union| #6# #7# #8# #9# #10#))
       (|isDomain| *6 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *8 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *9
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *8) (|Field|)
                             (|PowerSeriesCategory| *3 *8
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *11 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *13 (|Mapping| *3 *8))
       (|isDomain| *2
                   (|Union| (|:| |%series| *9)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *7 *3 *8 *9 *10 *11
                                                            *12 *13 *14))
       (|ofCategory| *10 (|PartialTranscendentalFunctions| *9))
       (|ofCategory| *12
                     (|TaylorSeriesExpansion| *3 *8 (|SingletonAsOrderedSet|)
                                              *9 *11))
       (|ofType| *14 (|Symbol|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union|
                    (|:| |%expansion| (|ExponentialExpansion| *5 *3 *6 *7))
                    (|:| |%problem|
                         (|Record| (|:| |func| (|String|))
                                   (|:| |prob| (|String|))))))
       (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *5 *3 *6 *7))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofType| *6 (|Symbol|)) (|ofType| *7 *3)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|FramedModule| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|RetractableTo| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6)) (|ofCategory| *6 (|FramedAlgebra| *4 *5))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofType| *7 *2)))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|EuclideanDomain|))
       (|ofCategory| *3 (|QuotientFieldCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Vector| *2))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|QuotientFieldCategory| *5))
       (|ofCategory| *2 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6)))
       (|isDomain| *1 (|FractionalIdeal| *5 *6 *7 *2))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedAlgebra&| *3 *4 *5))
       (|ofCategory| *3 (|FramedAlgebra| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|FiniteGroupPackage| *3))
       (|ofCategory| *3 (|Join| (|Group|) (|Finite|)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Factored| *3)))
       (|isDomain| *1 (|Fraction| *3))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Factored| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *6))
       (|isDomain| *1 (|FactoredFunctions2| *5 *6))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| (|Integer|)))))
   (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |gen| *3) (|:| |exp| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |factor| *3)
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Union| "nil" "sqfr" "irred" "prime"))
       (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))
 ((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Bits|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|FieldOfPrimeCharacteristic|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |exponent| (|NonNegativeInteger|))
                              (|:| |center| *4) (|:| |num| *4))))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FloatingPointConvertion|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *5
               (|Record| (|:| |default?| (|Boolean|))
                         (|:| |trim_trailing_zeros?| (|Boolean|))
                         (|:| |out_mode| (|String|))
                         (|:| |spacing| (|Integer|))
                         (|:| |separator| (|Character|))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|String|))
   (|isDomain| *1 (|FloatingPointConvertion|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *5
               (|Record| (|:| |default?| (|Boolean|))
                         (|:| |trim_trailing_zeros?| (|Boolean|))
                         (|:| |out_mode| (|String|))
                         (|:| |spacing| (|Integer|))
                         (|:| |separator| (|Character|))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|String|))
   (|isDomain| *1 (|FloatingPointConvertion|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *5
               (|Record| (|:| |default?| (|Boolean|))
                         (|:| |trim_trailing_zeros?| (|Boolean|))
                         (|:| |out_mode| (|String|))
                         (|:| |spacing| (|Integer|))
                         (|:| |separator| (|Character|))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|String|))
   (|isDomain| *1 (|FloatingPointConvertion|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *5
               (|Record| (|:| |default?| (|Boolean|))
                         (|:| |trim_trailing_zeros?| (|Boolean|))
                         (|:| |out_mode| (|String|))
                         (|:| |spacing| (|Integer|))
                         (|:| |separator| (|Character|))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|String|))
   (|isDomain| *1 (|FloatingPointConvertion|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Mapping| (|OutputBox|) (|String|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |prolog| (|Mapping| (|OutputBox|) (|String|)))
                    (|:| |epilog| (|Mapping| (|OutputBox|) (|String|)))))
       (|isDomain| *1 (|Formatter| *4))
       (|ofCategory| *4 (|FormatterCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|OperatorHandlers|
                    (|Mapping| (|OutputBox|) (|Integer|)
                               (|List| (|OutputForm|)))))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|OperatorHandlers|
                (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Formatter| *3)) (|ofCategory| *3 (|FormatterCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|Formatter| *4))
       (|ofCategory| *4 (|FormatterCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FileName|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Stack| (|String|)))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Stack| (|String|)))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |next| (|NonNegativeInteger|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FunctionGraph| *3))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *1 (|FormatLaTeX|))))
 ((*1 *2 *3 *3 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *1 (|FormatMathJax|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FormatterCategory&| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FormatterCategory&| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|FormatterCategory&| *5))
       (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|OutputForm|))
       (|isDomain| *2 (|OutputBox|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|OutputForm|))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputBox|))) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *3 (|List| (|OutputBox|))) (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *3 (|String|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *3 (|Boolean|))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|FormatterCategory&| *3))
   (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FormatterCategory&| *4))
   (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))) 
(((*1 *2 *3 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *3 *4 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|OutputForm|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lm| (|FreeMonoid| *3))
                         (|:| |mm| (|FreeMonoid| *3))
                         (|:| |rm| (|FreeMonoid| *3))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|isDomain| *1 (|FiniteMoebiusFunction| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|FloatElementaryFunctions|))))
 ((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|FloatingPointOperations|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|List| *5)))
       (|isDomain| *1 (|FloatingRealPackage| *5))
       (|ofCategory| *5 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|FloatingComplexPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *4 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|List| (|Complex| *5))))
   (|isDomain| *1 (|FloatingComplexPackage| *5))
   (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4))))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Equation|
                 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4))))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4)))))
       (|isDomain| *1 (|FloatingComplexPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Equation|
                (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4)))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2
                   (|Record| (|:| |mantissa| (|Integer|))
                             (|:| |exponent| (|Integer|))))
       (|isDomain| *1 (|FloatElementaryFunctions|))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2
                   (|Record| (|:| |mantissa| (|Integer|))
                             (|:| |exponent| (|Integer|))))
       (|isDomain| *1 (|FloatElementaryFunctions|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2
                   (|Record| (|:| |mantissa| (|Integer|))
                             (|:| |exponent| (|Integer|))))
       (|isDomain| *1 (|FloatElementaryFunctions|))))
 ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2)
  (AND
   (|isDomain| *2 (|Record| (|:| |mode| (|String|)) (|:| |prec| (|Integer|))))
   (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|FiniteLattice| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofType| *3 (|FiniteBiCPO| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteLattice| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 (|FiniteBiCPO| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Vector| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|FileSerialization|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|FileSerialization|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|BasicFile|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|BasicKeyedAccessFile|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *1 (|FileCategory| *2 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|None|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|BasicFile|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|None|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|BasicKeyedAccessFile|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|BasicFile|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                         (|:| |posY| (|NonNegativeInteger|))))
   (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FiniteGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *3 (|NonNegativeInteger|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |name| (|String|))
                         (|:| |arrType| (|NonNegativeInteger|))
                         (|:| |fromOb| (|NonNegativeInteger|))
                         (|:| |toOb| (|NonNegativeInteger|))
                         (|:| |xOffset| (|Integer|))
                         (|:| |yOffset| (|Integer|))
                         (|:| |map| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |value| *3)
                              (|:| |posX| (|NonNegativeInteger|))
                              (|:| |posY| (|NonNegativeInteger|)))))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |name| (|String|))
                              (|:| |arrType| (|NonNegativeInteger|))
                              (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|))
                              (|:| |xOffset| (|Integer|))
                              (|:| |yOffset| (|Integer|))
                              (|:| |map| (|List| (|NonNegativeInteger|))))))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Tree| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Tree| (|Integer|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Tree| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Tree| (|Integer|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1 *4 *4)
  (AND (|isDomain| *3 (|Scene| (|SCartesian| 2))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| *1))
       (|isDomain| *5 (|Boolean|)) (|ofCategory| *1 (|FiniteGraph| *6))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2
                     (|Join| (|FieldOfPrimeCharacteristic|)
                             (CATEGORY |domain| (SIGNATURE |coerce| (% *4))
                              (SIGNATURE |lookup| ((|PositiveInteger|) %))
                              (SIGNATURE |basis|
                               ((|Vector| %) (|PositiveInteger|)))
                              (SIGNATURE |Frobenius| (% %)))))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage2| *2 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| (|PrimeField| *3))
                           (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
   (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|ofType| *4 (|Union| (|SparseUnivariatePolynomial| *3) *2))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Matrix| (|PrimeField| *3)))
       (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4
        (|Union| (|SparseUnivariatePolynomial| *3)
                 (|Vector|
                  (|List|
                   (|Record| (|:| |value| *3)
                             (|:| |index| (|SingleInteger|)))))))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4
        (|Union| (|SparseUnivariatePolynomial| *3)
                 (|Vector|
                  (|List|
                   (|Record| (|:| |value| *3)
                             (|:| |index| (|SingleInteger|)))))))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factor| (|Integer|))
                              (|:| |exponent| (|NonNegativeInteger|)))))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Table| (|PositiveInteger|) (|NonNegativeInteger|)))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Union| "prime" "polynomial" "normal" "cyclic"))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *8))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|Mapping| *8 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *9))
       (|isDomain| *5 (|Vector| *9)) (|isDomain| *6 (|Vector| (|Integer|)))
       (|ofCategory| *8 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *9 (|AbelianMonoidRing| *8 *7))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *8 *9))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *9))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|FiniteAbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|ofCategory| *9
                     (|FiniteAbelianMonoidRing| (|Fraction| *7)
                                                (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussianFractions| *7 *8 *9))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|FractionFreeFastGaussian| *3 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *3 *4))))) 
(((*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Mapping| *2 (|NonNegativeInteger|) (|NonNegativeInteger|) *7))
   (|isDomain| *4 (|Vector| *7))
   (|isDomain| *6 (|Vector| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *7 (|AbelianMonoidRing| *2 *5))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
   (|isDomain| *1 (|FractionFreeFastGaussian| *2 *7))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *7))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Mapping| *6 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *6 *7))
       (|ofCategory| *7 (|AbelianMonoidRing| *6 (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2
                   (|Union| (|SparseUnivariatePolynomial| *4)
                            (|Vector|
                             (|List|
                              (|Record| (|:| |value| *4)
                                        (|:| |index| (|SingleInteger|)))))))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Matrix| *4))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Vector|
                    (|List|
                     (|Record| (|:| |value| *4)
                               (|:| |index| (|SingleInteger|))))))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroup| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroupExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroupExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionFieldCategory&| *4 *3 *5 *6))
       (|ofCategory| *4 (|FunctionFieldCategory| *3 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *5)) (|:| |den| *5)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5))
   (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4))
   (|ofCategory| *3 (|UniqueFactorizationDomain|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5))
   (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4))
   (|ofCategory| *3 (|UniqueFactorizationDomain|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2
                   (|Record| (|:| |num| *1) (|:| |den| *5) (|:| |derivden| *5)
                             (|:| |gd| *5)))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FunctionFieldCategory&| *4 *5 *6 *7))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| (|Polynomial| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *3 (|Finite|)) (|isDomain| *2 (|List| (|List| *3)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Complex| (|Float|))))
       (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Complex| (|Float|))))
       (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *2 *3)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *4 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|FloatElementaryFunctions|))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mantissa| (|Integer|))
                         (|:| |exponent| (|Integer|))))
   (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|FloatElementaryFunctions|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2
                   (|Record| (|:| |mantissa| (|Integer|))
                             (|:| |exponent| (|Integer|))))
       (|isDomain| *1 (|FloatElementaryFunctions|))))) 
(((*1 *1 *2 *3 *3 *3 *4)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *4 *3 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *4 *3 *5))))
 ((*1 *1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *4 *3 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *4 *3 *5))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *2 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *2 *4 *5))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5))
       (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FreeMonoid| *3)))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|LinearMultivariateMatrixPencil| *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Matrix| (|XDistributedPolynomial| *3 *4))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Matrix| (|XDistributedPolynomial| *3 *4))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Matrix| (|XDistributedPolynomial| *3 *4))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *4 *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|Equation| (|Polynomial| *6))))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|List| (|Matrix| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|Equation| (|Polynomial| *6))))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|List| (|Matrix| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *1 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|Polynomial| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *1 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|Polynomial| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *1 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *6)))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Symbol|))) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FourierComponent| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |Null| "null") (|:| |Assignment| "assignment")
                        (|:| |Conditional| "conditional")
                        (|:| |Return| "return") (|:| |Block| "block")
                        (|:| |Comment| "comment") (|:| |Call| "call")
                        (|:| |For| "for") (|:| |While| "while")
                        (|:| |Repeat| "repeat") (|:| |Goto| "goto")
                        (|:| |Continue| "continue")
                        (|:| |ArrayAssignment| "arrayAssignment")
                        (|:| |Save| "save") (|:| |Stop| "stop")
                        (|:| |Common| "common") (|:| |Print| "print")))
   (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |nullBranch| "null")
                        (|:| |assignmentBranch|
                             (|Record| (|:| |var| (|Symbol|))
                                       (|:| |arrayIndex|
                                            (|List|
                                             (|Polynomial| (|Integer|))))
                                       (|:| |rand|
                                            (|Record|
                                             (|:| |ints2Floats?| (|Boolean|))
                                             (|:| |expr| (|OutputForm|))))))
                        (|:| |arrayAssignmentBranch|
                             (|Record| (|:| |var| (|Symbol|))
                                       (|:| |rand| (|OutputForm|))
                                       (|:| |ints2Floats?| (|Boolean|))))
                        (|:| |conditionalBranch|
                             (|Record| (|:| |switch| (|Switch|))
                                       (|:| |thenClause| (|FortranCode|))
                                       (|:| |elseClause| (|FortranCode|))))
                        (|:| |returnBranch|
                             (|Record| (|:| |empty?| (|Boolean|))
                                       (|:| |value|
                                            (|Record|
                                             (|:| |ints2Floats?| (|Boolean|))
                                             (|:| |expr| (|OutputForm|))))))
                        (|:| |blockBranch| (|List| (|FortranCode|)))
                        (|:| |commentBranch| (|List| (|String|)))
                        (|:| |callBranch| (|String|))
                        (|:| |forBranch|
                             (|Record|
                              (|:| |range|
                                   (|SegmentBinding|
                                    (|Polynomial| (|Integer|))))
                              (|:| |span| (|Polynomial| (|Integer|)))
                              (|:| |body| (|FortranCode|))))
                        (|:| |labelBranch| (|SingleInteger|))
                        (|:| |loopBranch|
                             (|Record| (|:| |switch| (|Switch|))
                                       (|:| |body| (|FortranCode|))))
                        (|:| |commonBranch|
                             (|Record| (|:| |name| (|Symbol|))
                                       (|:| |contents| (|List| (|Symbol|)))))
                        (|:| |printBranch| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Finite|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
   (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|FakePolynomial|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial|
                (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|FakePolynomial|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *2 *6))
       (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|Ring|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *1 (|FactoringUtilities| *6 *7 *8 *9))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *3 *3 *4 *5 *4 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *4 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *7 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *8 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|ofCategory| *2 (|FunctionSpace| *5))
       (|isDomain| *1 (|ExpressionSolve| *5 *2 *6 *7))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *7
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *2)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|EuclideanDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1 *1)
  (|partial| AND (|isDomain| *2 (|Record| (|:| |coef1| *1) (|:| |coef2| *1)))
   (|ofCategory| *1 (|EuclideanDomain|))))
 ((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                         (|:| |generator| *1)))
   (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *2))
       (|ofCategory| *2 (|KernelCategory| *1))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *2))
       (|ofCategory| *2 (|KernelCategory| *1))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *2 (|KernelCategory| *1))
   (|ofCategory| *1 (|ExpressionSpace2| *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|List| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace2| *4))
       (|ofCategory| *4 (|KernelCategory| *1)) (|isDomain| *2 (|List| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))
       (|isDomain| *2 (|List| (|BasicOperator|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|RetractableTo| (|Integer|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *5))
       (|isDomain| *1 (|AlgebraicFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|Ring|)) (|ofCategory| *1 (|ExpressionSpace2| *3))
       (|ofCategory| *3 (|KernelCategory| *1))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Exit|)) (|isDomain| *1 (|ErrorFunctions|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|CommuteUnivariatePolynomialCategory| *3 *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *3))) (|isDomain| *1 (|Equation| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |unit| *1) (|:| |canonical| *1)
                         (|:| |associate| *1)))
   (|ofCategory| *1 (|EntireRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|EntireRing|)))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| *5))
   (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ExpressionLinearSolve| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|List| (|Stream| *4)))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *4 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |vec| (|Vector| (|Fraction| (|Integer|))))
                            (|:| |func| *5) (|:| |fail| (|Boolean|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Kernel| *2)))
   (|isDomain| *4 (|Symbol|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *2))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |funcs| (|List| *6))
                             (|:| |kers| (|List| (|Kernel| *6)))
                             (|:| |vals| (|List| *6))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *6))))) 
(((*1 *2 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *4 (|OrderedAbelianMonoid|))
   (|isDomain| *1
               (|ElementaryFunctionsGeneralizedUnivariatePowerSeries| *3 *4
                                                                      *2))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *3 *4)
                         (CATEGORY |domain| (SIGNATURE |removeZeros| (% % *4))
                          (SIGNATURE |apply_taylor| (% (|Stream| *3) %)))))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseMultivariatePolynomial| *4 (|Kernel| *5))))
   (|ofCategory| *4 (|Join| (|GcdDomain|) (|Comparable|)))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseMultivariatePolynomial| *4 (|Kernel| *5)))))
   (|isDomain| *1 (|ExpressionFactorPolynomial| *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *3))
       (|ofCategory| *3 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))) 
(((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|List| (|Record| (|:| |func| *2) (|:| |pole| (|Boolean|)))))
   (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))
   (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|ElementaryFunction| *4 *2))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|DifferentialRing|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|isDomain| *4 (|UnivariatePolynomial| *6 *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofType| *6 (|Symbol|))
       (|isDomain| *2 (|ContinuedFraction| (|UnivariatePolynomial| *6 *5)))
       (|isDomain| *1 (|DistributionContinuedFractionPackage| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|isDomain| *4 (|UnivariatePolynomial| *6 (|Fraction| *5)))
       (|ofCategory| *5 (|IntegralDomain|)) (|not| (|ofCategory| *5 (|Field|)))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofType| *6 (|Symbol|))
       (|isDomain| *2
                   (|ContinuedFraction|
                    (|UnivariatePolynomial| *6 (|Fraction| *5))))
       (|isDomain| *1 (|DistributionContinuedFractionPackage| *5 *6))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Plot|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricComplexCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricComplexCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|ParametricSurface| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|ParametricSurface| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|TwoDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|TwoDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|DoubleFloat|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|DoubleFloat|))) (|isDomain| *5 (|Boolean|))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricComplexCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|ParametricSurface| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|ParametricSurface| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *3
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|DifferentialVariableCategory| *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3 *3 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|DiscreteLogarithmPackage| *3))
   (|ofCategory| *3
                 (|Join| (|Monoid|) (|Finite|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ (% % (|Integer|))))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|DistributionFunctions2| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|isDomain| *2 (|Distribution| *6))
       (|isDomain| *1 (|DistributionFunctions2| *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Sequence| *2))
       (|isDomain| *1 (|Distribution| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Distribution| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|)) (|not| (|ofCategory| *3 (|Field|)))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| (|Fraction| *3)))
                             (|:| |bn| (|Stream| (|Fraction| *3)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| *3))
                             (|:| |bn| (|Stream| *3))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|)) (|not| (|ofCategory| *3 (|Field|)))
       (|isDomain| *2
                   (|Stream| (|SparseUnivariatePolynomial| (|Fraction| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Stream| (|SparseUnivariatePolynomial| *3)))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Polynomial| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |varOrder| (|List| (|Symbol|)))
                             (|:| |inhom|
                                  (|Union|
                                   (|List| (|Vector| (|NonNegativeInteger|)))
                                   "failed"))
                             (|:| |hom|
                                  (|List| (|Vector| (|NonNegativeInteger|))))))
       (|isDomain| *1 (|DiophantineSolutionPackage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|DictionaryOperations| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|DictionaryOperations| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|IntegerMod| *3))
       (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|IntegerMod| 2))
       (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DoubleFloat|))))) 
(((*1 *2 *3 *4 *5 *5 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|Polynomial| *6))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *7))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *7
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|isDomain| *1 (|DefiniteIntegrationTools| *6 *7))))
 ((*1 *2 *3 *4 *4 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
   (|isDomain| *4 (|OrderedCompletion| *6))
   (|ofCategory| *6
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|DefiniteIntegrationTools| *5 *6))))) 
(((*1 *2 *3 *4 *2 *2 *5)
  (|partial| AND (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *3 (|Kernel| *4)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *4
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|DefiniteIntegrationTools| *6 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DefiniteIntegrationTools| *4 *5))
       (|ofCategory| *5
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatElementaryFunctions|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *3))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Dequeue| *3))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|DeltaComplex| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|List| (|List| (|Integer|)))))
       (|ofCategory| *5 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *5))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|DeltaComplex| *4)) (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|DegreeReductionPackage| *4 *5))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *3))
       (|isDomain| *6 (|Boolean|))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| "failed")
                            (|:| |pole| "potentialPole")))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *7 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|DoubleResultantPackage| *5 *2 *6 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *2 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *1 (|CyclotomicUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *1 (|CyclotomicUtilities|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CyclotomicUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|CyclotomicUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *1 (|CyclotomicUtilities|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Matrix| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|List| (|Integer|)))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Segment| (|Integer|)))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|CubicalFacet|)))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|CubicalFacet|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|CyclicStreamTools| *3 *2))
       (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CyclicStreamTools| *4 *3))
       (|ofCategory| *3 (|LazyStreamAggregate| *4))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Type|))
   (|isDomain| *1 (|CyclicStreamTools| *3 *2))
   (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|Record| (|:| |start| *3) (|:| |factors| (|Factored| *3))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| *4))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *2)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factors| (|List| *3)) (|:| |error| *5))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *5)))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factors| (|List| *3)) (|:| |error| *4))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootPackage| *3 *4))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory| (|Complex| (|Integer|))))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *2))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Fraction| *3)))
       (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Fraction| *3)))
       (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Lambda| (|Typed|)))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|ILogic|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|RealNumberSystem|))
       (|ofCategory| *3 (|TranscendentalFunctionCategory|))
       (|isDomain| *2 (|Record| (|:| |r| *3) (|:| |phi| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|Comparable|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Commutator|)))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Commutator|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1) (|ofCategory| *1 (|CombinatorialOpsCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|CombinatorialOpsCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))
       (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))))) 
(((*1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|ChainComplex|)) (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ChainComplex|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|CoChainComplex| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Coalgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Coalgebra| *2 *3)) (|ofCategory| *3 (|Module| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Plot|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Vector| *6)))
       (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |transform| (|Matrix| *6))
                             (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Vector| *4)) (|isDomain| *5 (|List| (|Mapping| *4 *4)))
       (|ofCategory| *4 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *4) #1="failed"))
                    (|:| |basis| (|List| (|Vector| *4)))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
       (|isDomain| *5 (|List| (|Mapping| *7 *7)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *7) #1#))
                             (|:| |basis| (|List| (|Vector| *7)))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *7))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|Vector| *3))
   (|isDomain| *4 (|List| (|Mapping| *3 *3)))
   (|ofCategory| *3 (|FunctionSpace| *5))
   (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *5 *3))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *2 (|Vector| *6)) (|isDomain| *3 (|Matrix| *6))
   (|isDomain| *4 (|List| (|Mapping| *6 *6)))
   (|ofCategory| *6 (|FunctionSpace| *5))
   (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Vector| *5))
   (|isDomain| *3 (|List| (|Mapping| *5 *5)))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5)) (|ofType| *3 *2)
       (|ofCategory| *4 (|Field|)) (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Mapping| (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *2 (|Matrix| (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
   (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
   (|ofType| *6 (|SquareMatrix| *4 *5))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Mapping| (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *2 (|Matrix| (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
   (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
   (|ofType| *6 (|SquareMatrix| *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofType| *6 (|SquareMatrix| *4 *5))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
   (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |IDe| (|JetDifferentialEquation| *4 *5))
                             (|:| |ISys| (|List| *5))
                             (|:| |Order| (|NonNegativeInteger|))
                             (|:| |NumProj| (|NonNegativeInteger|))
                             (|:| |Dim| (|NonNegativeInteger|))
                             (|:| |CarChar| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CartanKuranishi| *5 *6))
       (|ofCategory| *6 (|JetBundleFunctionCategory| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartanKuranishi| *6 *7))
       (|ofCategory| *7 (|JetBundleFunctionCategory| *6))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartanKuranishi| *6 *7))
       (|ofCategory| *7 (|JetBundleFunctionCategory| *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |func| *3) (|:| |poly| *3)
                             (|:| |c1| (|Fraction| *5))
                             (|:| |c2| (|Fraction| *5))
                             (|:| |deg| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|isDomain| *2
                   (|Record| (|:| |func| (|List| *4)) (|:| |poly| *4)
                             (|:| |c1| (|Fraction| *6))
                             (|:| |c2| (|Fraction| *6))
                             (|:| |deg| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ChangeOfVariable| *5 *6 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|isDomain| *1 (|ChangeOfVariable| *2 *5 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *3 (|Fraction| *6))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| (|Fraction| *6)) (|:| |radicand| *6)))
       (|isDomain| *1 (|ChangeOfVariable| *5 *6 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2
               (|Record| (|:| |radicand| (|Fraction| *5))
                         (|:| |deg| (|NonNegativeInteger|))))
   (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Record| (|:| |coef| (|Fraction| *5)) (|:| |poly| *3)))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|CharacteristicPolynomial4| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| *4)))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *4)))
       (|isDomain| *1 (|CharacteristicPolynomial3| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| *4)))
       (|isDomain| *2 (|Fraction| *4))
       (|isDomain| *1 (|CharacteristicPolynomial3| *4))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|CharacteristicPolynomial3| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|CharacteristicPolynomial2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |matrix| (|Matrix| *4))
                             (|:| |block_list| (|List| (|Integer|)))))
       (|isDomain| *1 (|CharacteristicPolynomial2| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Character|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|ChainComplex|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|ChainComplex|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))))
   (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Cell| *2))
   (|ofCategory| *2 (|RealClosedField|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|Cell| *3)) (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Character|)))
       (|isDomain| *1 (|CharacterClass|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|CharacterClass|))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|CartesianTensor| *5 *6 *7))
       (|ofType| *5 (|Integer|)) (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *7 (|CommutativeRing|))
       (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|CartesianTensor| *5 *6 *8))
       (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Cell| *5))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Cell| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Cell| *5)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|CachableSet|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|CancellationAbelianMonoid|)))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|BinaryTournament| *3))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|BinaryTreeCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|BinarySearchTree| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinarySearchTree| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *1 (|BasicOperatorFunctions1| *2))
   (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|List| (|Mapping| *4 (|List| *4))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|List| (|Mapping| *4 (|List| *4))))
   (|isDomain| *1 (|BasicOperatorFunctions1| *4))
   (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|None|))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *1) (|ofCategory| *1 (|BoundedMeetSemilattice|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|BasicFile|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|None|))
       (|isDomain| *1 (|BasicKeyedAccessFile|))))) 
(((*1 *1) (|ofCategory| *1 (|BoundedJoinSemilattice|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|BitStreamFrame|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Boolean|)))
       (|isDomain| *1 (|BitStreamFrame|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *6 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *6 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|IndexedVector| *3 0))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *5 *6 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|IndexedVector| *3 0))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|BezoutMatrixWrapper| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|BezoutMatrixWrapper| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3 *3 *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|isDomain| *1 (|BalancedBinaryTree| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *2) *2 *2 *2))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *2))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|BasicFile|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|BalancedFactorisation| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Join| (|GcdDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|BalancedFactorisation| *5 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ArrayStack| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |minor| (|List| (|PositiveInteger|)))
                             (|:| |eq| *3)
                             (|:| |minors|
                                  (|List| (|List| (|PositiveInteger|))))
                             (|:| |ops| (|List| *3))))
       (|isDomain| *1 (|AssociatedEquations| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|AssociatedEquations| *4 *5))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *5))
                             (|:| |vec|
                                  (|Vector| (|List| (|PositiveInteger|))))))
       (|isDomain| *1 (|AssociatedEquations| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OneDimensionalArray| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|OneDimensionalArray| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|Segment| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|Segment| (|Integer|)))))) 
(((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *3 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *1))) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|RewriteRule| *4 *5 *2)))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|ApplyRules| *4 *5 *2))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| (|RewriteRule| *5 *6 *2)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6
                     (|Join| (|Ring|) (|PatternMatchable| *5) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *5))))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *6) (|PatternMatchable| *5)
                             (|ConvertibleTo| (|Pattern| *5))))
       (|isDomain| *1 (|ApplyRules| *5 *6 *2))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgebraicNumber|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *5 *2))
       (|ofCategory| *2 (|FunctionSpace| *5))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *5
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *5
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *5
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 %)))))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 %)))))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| %))
                                %))
                              (SIGNATURE |coerce|
                               (%
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 %)))))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|AlgebraicFunctionField| *4 *5 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofType| *7 *6)))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|AssociationListAggregate| *3 *4))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Type|))
   (|isDomain| *2 (|Record| (|:| |key| *3) (|:| |entry| *4)))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *2 (|FunctionSpace| *3))
       (|isDomain| *1 (|AlgebraicFunction| *3 *2))
       (|ofCategory| *3 (|RetractableTo| *4))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|AlgebraicFunction| *4 *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *4 *2))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *5 *2))))) 
(((*1 *1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|Segment| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2))
       (|ofCategory| *2 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))) 
((|opposite?| . 2097695) (|zerosOf| . 2096786) (|zeroOf| . 2096052)
 (|rootsOf| . 2095143) (|makeSketch| . 2094926) (|rootSum| . 2094409)
 (|inrootof| . 2094167) (|droot| . 2093919) (|iroot| . 2093660)
 (|size?| . 2093527) (|eq?| . 2093440) (|assoc| . 2093224)
 (|doublyTransitive?| . 2093061) (|knownInfBasis| . 2092717)
 (|rootSplit| . 2091710) (|ratDenom| . 2087598) (|ratPoly| . 2086534)
 (|rootFactor| . 2085299) (|rootPower| . 2084119) (|rootProduct| . 2082939)
 (|rootSimp| . 2081759) (|rootKerSimp| . 2080493) (|leftRank| . 2080278)
 (|rightRank| . 2080063) (|doubleRank| . 2079848) (|weakBiRank| . 2079633)
 (|biRank| . 2079418) (|basisOfCommutingElements| . 2079224)
 (|basisOfLeftAnnihilator| . 2079027) (|basisOfRightAnnihilator| . 2078830)
 (|basisOfLeftNucleus| . 2078636) (|basisOfRightNucleus| . 2078442)
 (|basisOfMiddleNucleus| . 2078248) (|basisOfNucleus| . 2078054)
 (|basisOfCenter| . 2077860) (|basisOfLeftNucloid| . 2077648)
 (|basisOfRightNucloid| . 2077436) (|basisOfCentroid| . 2077224)
 (|radicalOfLeftTraceForm| . 2077030) (|trueEqual| . 2076939)
 (|showTypeInOutput| . 2076829) (|obj| . 2076758) (|dom| . 2076680)
 (|objectOf| . 2076603) (|domainOf| . 2076526) (|any| . 2076411)
 (|applyRules| . 2075390) (|vertSplit| . 2074747) (|blockConcat| . 2074471)
 (|vertConcat| . 2073964) (|horizConcat| . 2073457) (|squareTop| . 2073218)
 (|setColumn!| . 2072963) (|colSlice| . 2072677) (|rowSlice| . 2072391)
 (|array2| . 2072115) (|oneDimensionalArray| . 2071845)
 (|associatedSystem| . 2071423) (|uncouplingMatrices| . 2071156)
 (|associatedEquations| . 2070585) (|arrayStack| . 2070458)
 (|morphism| . 2070063) (|balancedFactorisation| . 2069538)
 (|readIfCan| . 2069449) (|mapDown!| . 2069132) (|mapUp!| . 2068817)
 (|setleaves!| . 2068679) (|balancedBinaryTree| . 2068523)
 (|sylvesterMatrix| . 2068003) (|subSylvesterMatrix| . 2066789)
 (|bezoutMatrix| . 2066269) (|subresultants| . 2065604)
 (|bezoutResultant| . 2065031) (|bezoutDiscriminant| . 2064464)
 (|inspect| . 2064375) (|extract!| . 2064286) (|starts| . 2064099)
 (|_\|_| . 2064041) (|read| . 2063839) (T$ . 2063781) (|test| . 2063737)
 (|setProperties| . 2063613) (|setProperty| . 2063490) (|property| . 2063364)
 (|deleteProperty!| . 2063276) (|assert| . 2063188) (|has?| . 2063065)
 (|input| . 2062795) (|comparison| . 2062652) (|equality| . 2062509)
 (|nary?| . 2062423) (|unary?| . 2062337) (|nullary?| . 2062251)
 (|arity| . 2062141) (|properties| . 2062020) (|derivative| . 2061409)
 (|constantOperator| . 2061256) (|constantOpIfCan| . 2061101)
 (|setright!| . 2060944) (|setleft!| . 2060787)
 (|brillhartIrreducible?| . 2060466) (|brillhartTrials| . 2060115)
 (|noLinearFactor?| . 2059955) (|insertRoot!| . 2059848)
 (|binarySearchTree| . 2059716) (|nor| . 2059617) (|nand| . 2059518)
 (|node| . 2059403) (|binaryTournament| . 2059271) (|binaryTree| . 2059083)
 (|subtractIfCan| . 2059006) (|setPosition| . 2058874)
 (|cylindricalDecomposition| . 2058376) (|projectionSet| . 2058121)
 (|coefficientSet| . 2057866) (|discriminantSet| . 2057611)
 (|resultantSet| . 2057356) (|principalSubResultantSet| . 2057098)
 (|specialise| . 2056818) (|squareFreeBasis| . 2056590)
 (|generalizedContinuumHypothesisAssumed| . 2056503)
 (|generalizedContinuumHypothesisAssumed?| . 2056421) (|countable?| . 2056334)
 (|Aleph| . 2056229) (|unravel| . 2056017) (|ravel| . 2055805)
 (|leviCivitaSymbol| . 2055624) (|kroneckerDelta| . 2055443)
 (|reshape| . 2055066) (|alphanumeric| . 2055018) (|alphabetic| . 2054970)
 (|hexDigit| . 2054922) (|digit| . 2054874) (|charClass| . 2054685)
 (|simpleCells| . 2054512) (|projection| . 2054409) (|variablesOf| . 2054276)
 (|mainVariableOf| . 2054152) (|makeCell| . 2053813) (|setMult| . 2053725)
 (|getIntervals| . 2053612) (|cubicalFacet| . 2053243)
 (|transition_matrices| . 2053131) (|chainComplex| . 2053019)
 (|alphanumeric?| . 2052939) (|lowerCase?| . 2052859) (|upperCase?| . 2052779)
 (|alphabetic?| . 2052699) (|hexDigit?| . 2052619) (|digit?| . 2052539)
 (|newline| . 2052496) (|underscore| . 2052453) (|char| . 2052296)
 (|ord| . 2052216) (|danilewski| . 2051927) (|char_pol| . 2051732)
 (|char_pol_via_interpolation| . 2051528)
 (|det_via_common_denominator| . 2051290)
 (|char_pol_via_den_interpolation| . 2051021)
 (|char_pol_via_berkovitz| . 2050827) (|mkIntegral| . 2050488)
 (|radPoly| . 2050092) (|rootPoly| . 2049593) (|goodPoint| . 2049295)
 (|chvar| . 2048205) (|setOutMode| . 2047988) (|setRedMode| . 2047771)
 (|stirling| . 2047548) (|hilbert| . 2047243) (|alphaHilbert| . 2046938)
 (|arbFunctions| . 2046581) (|gauge| . 2046224) (|gaugeHilbert| . 2045870)
 (|bound| . 2045647) (|complete2| . 2044991) (|removeDuplicates| . 2044820)
 (|find| . 2044674) (|setMode| . 2044427) (|conj| . 2044245)
 (|gradeInvolution| . 2044063) (|rc| . 2043878) (|lc| . 2043693)
 (|toTable| . 2042908) (|ePseudoscalar| . 2042729) (|eFromBinaryMap| . 2042501)
 (|multivector| . 2042284) (|ee| . 2042050) (|e| . 2041849)
 (|linearlyDependentOverConstants?| . 2041542)
 (|linearDependenceOverConstants| . 2041269)
 (|particularSolutionOverConstants| . 2040689)
 (|solveLinearOverConstants| . 2039753) (|nullSpaceOverConstants| . 2039435)
 (|constant_subspace| . 2038996) (|clipParametric| . 2038227)
 (|clipWithRanges| . 2037779) (|counit| . 2037640) (|coproduct| . 2037501)
 (|coboundary| . 2037317) (|validate| . 2037102) (|coChainComplex| . 2036808)
 (|numberOfHues| . 2036727) (|blue| . 2036688) (|green| . 2036649)
 (|yellow| . 2036610) (|red| . 2036571) (|iifact| . 2036385)
 (|iibinom| . 2036171) (|iiperm| . 2035957) (|iipow| . 2035743)
 (|iidsum| . 2035529) (|iidprod| . 2035315) (|ipow| . 2035101)
 (|factorial| . 2034726) (|multinomial| . 2034570)
 (|distinct_partition| . 2034445) (|permutation| . 2034061)
 (|stirling1| . 2033933) (|stirling2| . 2033805) (|catalan| . 2033680)
 (|summation| . 2033002) (|factorials| . 2032428) (|mkcomm| . 2032299)
 (|smaller?| . 2032211) (|polarCoordinates| . 2031933) (|complex| . 2031820)
 (|imaginary| . 2031713) (|writeCategory| . 2031556) (|writePackage| . 2031386)
 (|solid| . 2031278) (|solid?| . 2031173) (|denominators| . 2031033)
 (|numerators| . 2030893) (|convergents| . 2030733) (|approximants| . 2030573)
 (|reducedForm| . 2030463) (|partialQuotients| . 2030323)
 (|partialDenominators| . 2030183) (|partialNumerators| . 2030043)
 (|reducedContinuedFraction| . 2029900) (|polar| . 2029650)
 (|cylindrical| . 2029400) (|spherical| . 2029150) (|parabolic| . 2028900)
 (|parabolicCylindrical| . 2028650) (|paraboloidal| . 2028400)
 (|ellipticCylindrical| . 2028125) (|prolateSpheroidal| . 2027850)
 (|oblateSpheroidal| . 2027575) (|bipolar| . 2027300)
 (|bipolarCylindrical| . 2027025) (|toroidal| . 2026750) (|conical| . 2026472)
 (|modTree| . 2026338) (|multiEuclideanTree| . 2026204)
 (|complexZeros| . 2025411) (|divisorCascade| . 2024697) (|graeffe| . 2024488)
 (|pleskenSplit| . 2023950) (|reciprocalPolynomial| . 2023741)
 (|rootRadius| . 2023322) (|schwerpunkt| . 2023087) (|setErrorBound| . 2022878)
 (|startPolynomial| . 2022567) (|cycleElt| . 2022411)
 (|computeCycleLength| . 2022218) (|computeCycleEntry| . 2022068)
 (|addCube| . 2021915) (|cubicalComplex| . 2021170) (|coerceP| . 2020941)
 (|powerSum| . 2020774) (|elementary| . 2020607) (|alternating| . 2020440)
 (|cyclic| . 2020273) (|dihedral| . 2020106) (|cap| . 2019923)
 (|cup| . 2019788) (|wreath| . 2019653) (|SFunction| . 2019477)
 (|skewSFunction| . 2019298) (|cyclotomic_array| . 2019145)
 (|inverse_cyclotomic| . 2018980) (|cyclotomic?| . 2018816)
 (|cyclotomic_decomposition| . 2018642)
 (|cocyclotomic_decomposition| . 2018468) (|doubleResultant| . 2018122)
 (|decimal| . 2018013) (|innerint| . 2017034) (|cyclotomic_roots| . 2016766)
 (|faceMap| . 2016569) (|triangle| . 2016422) (|deltaComplex| . 2015709)
 (|circle| . 2015560) (|dequeue| . 2015436) (|exteriorDifferential| . 2015273)
 (|totalDifferential| . 2015069) (|homogeneous?| . 2014725)
 (|leadingBasisTerm| . 2014437) (|log_plus_1| . 2014323) (|ignore?| . 2013772)
 (|computeInt| . 2013220) (|checkForZero| . 2012067)
 (|doubleFloatFormat| . 2011986) (|qsqrt| . 2011938) (|qlog| . 2011890)
 (|hypergeometric0F1| . 2011650) (|directedGraph| . 2009701)
 (|rotatez| . 2009530) (|rotatey| . 2009359) (|rotatex| . 2009188)
 (|exponentb| . 2008995) (|exponenta| . 2008802) (|expb| . 2008597)
 (|expa| . 2008391) (|dictionary| . 2008160) (|dioSolve| . 2007609)
 (|additive?| . 2007447) (|multiplicative?| . 2007285) (|newLine| . 2007204)
 (|copies| . 2007080) (|say| . 2006837) (|sayLength| . 2006588)
 (|subordinationConvolution| . 2006470) (|orthogonalConvolution| . 2006352)
 (|monotoneConvolution| . 2006234) (|booleanConvolution| . 2006116)
 (|freeConvolution| . 2005998) (|classicalConvolution| . 2005880)
 (|orthogonalPolynomials| . 2005376) (|jacobiParameters| . 2004750)
 (|monotoneCumulants| . 2004534) (|hankelDeterminants| . 2004389)
 (|booleanCumulants| . 2004242) (|freeCumulants| . 2004095)
 (|classicalCumulants| . 2003948) (|moments| . 2003801)
 (|booleanCumulant| . 2003640) (|freeCumulant| . 2003479)
 (|classicalCumulant| . 2003318) (|moment| . 2003154)
 (|gaussianDistribution| . 2002999) (|poissonDistribution| . 2002844)
 (|wignerDistribution| . 2002689) (|freePoissonDistribution| . 2002534)
 (|bernoulliDistribution01| . 2002379) (|arcsineDistribution| . 2002162)
 (|freeMultiplicativeConvolution| . 2001992)
 (|distributionByMonotoneCumulants| . 2001584)
 (|booleanCumulantFromJacobi| . 2001406)
 (|distributionByJacobiParameters| . 2001130)
 (|distributionByBooleanCumulants| . 2000860)
 (|distributionByFreeCumulants| . 2000590)
 (|distributionByClassicalCumulants| . 2000320)
 (|distributionByEvenMoments| . 2000050) (|distributionByMoments| . 1999780)
 (|mapall| . 1999494) (|R1_to_R2_coercion| . 1999331) (|setnext!| . 1999177)
 (|setprevious!| . 1999023) (|next| . 1998918) (|previous| . 1998813)
 (|datalist| . 1998689) (|shanksDiscLogAlgorithm| . 1998387)
 (|separant| . 1998117) (|leader| . 1997847) (|isobaric?| . 1997542)
 (|weights| . 1996891) (|differentialVariables| . 1996586)
 (|extractBottom!| . 1996493) (|extractTop!| . 1996400)
 (|insertBottom!| . 1996304) (|insertTop!| . 1996208) (|recolor| . 1995850)
 (|makeObject| . 1988496) (|drawComplex| . 1988177)
 (|drawComplexVectorField| . 1987889) (|setRealSteps| . 1987807)
 (|setImagSteps| . 1987725) (|setClipValue| . 1987637) (|draw| . 1977505)
 (|option?| . 1977345) (|range| . 1977114) (|colorFunction| . 1976665)
 (|curveColor| . 1976507) (|pointColor| . 1976349) (|clip| . 1974613)
 (|clipBoolean| . 1974470) (|style| . 1974250) (|toScale| . 1974028)
 (|pointColorPalette| . 1973885) (|curveColorPalette| . 1973742)
 (|var1Steps| . 1973495) (|var2Steps| . 1973248) (|space| . 1972934)
 (|tubePoints| . 1972687) (|tubeRadius| . 1972469)
 (|JContinuedFraction| . 1971625) (|makeVariable| . 1970754) (|Nul| . 1970659)
 (|exponents| . 1970566) (|iisqrt2| . 1970357) (|iisqrt3| . 1970148)
 (|iiexp| . 1969936) (|iilog| . 1969724) (|iisin| . 1969512)
 (|iicos| . 1969300) (|iitan| . 1969088) (|iicot| . 1968876)
 (|iisec| . 1968664) (|iicsc| . 1968452) (|iiasin| . 1968240)
 (|iiacos| . 1968028) (|iiatan| . 1967816) (|iiacot| . 1967604)
 (|iiasec| . 1967392) (|iiacsc| . 1967180) (|iisinh| . 1966968)
 (|iicosh| . 1966756) (|iitanh| . 1966544) (|iicoth| . 1966332)
 (|iisech| . 1966120) (|iicsch| . 1965908) (|iiasinh| . 1965696)
 (|iiacosh| . 1965484) (|iiatanh| . 1965272) (|iiacoth| . 1965060)
 (|iiasech| . 1964848) (|iiacsch| . 1964636) (|specialTrigs| . 1964336)
 (|localReal?| . 1964096) (|poly_factor| . 1963623) (|do_quo| . 1963076)
 (|rischNormalize| . 1960858) (|realLiouvillian| . 1959858)
 (|realElementary| . 1958858) (|validExponential| . 1958305)
 (|rootNormalize| . 1957768) (|rmap| . 1957216) (|tanQ| . 1956668)
 (|irootDep| . 1955965) (|select!| . 1955603) (|delete!| . 1955290)
 (|sncndn| . 1955023) (|lin_sol| . 1954765) (|ellipticRC| . 1954525)
 (|ellipticRD| . 1954279) (|ellipticRF| . 1954033) (|ellipticRJ| . 1953781)
 (|unit?| . 1953696) (|associates?| . 1953608) (|unitCanonical| . 1953559)
 (|unitNormal| . 1953371) (|factorAndSplit| . 1953203) (|rightOne| . 1953078)
 (|leftOne| . 1952953) (|rightZero| . 1952828) (|leftZero| . 1952703)
 (|swap| . 1952379) (|error| . 1951862) (|minPoly| . 1951343)
 (|operators| . 1951180) (|tower| . 1950872) (|kernels| . 1950564)
 (|mainKernel| . 1950445) (|distribute| . 1950218) (|multiEuclidean| . 1950112)
 (|extendedEuclidean| . 1949779) (|euclideanSize| . 1949671)
 (|sizeLess?| . 1949578) (|getSimplifyDenomsFlag| . 1949418)
 (|setSimplifyDenomsFlag| . 1949255) (|number?| . 1949092)
 (|replaceDiffs| . 1948537) (|constantToUnaryFunction| . 1948368)
 (|tubePlot| . 1946940) (|exponentialOrder| . 1946694) (|getMult| . 1946606)
 (|completeEval| . 1946171) (|lowerPolynomial| . 1945805)
 (|raisePolynomial| . 1945439) (|normalDeriv| . 1945092) (|ran| . 1944805)
 (|to_UP| . 1944622) (|subst_var| . 1944521) (|binomThmExpt| . 1944234)
 (|fmecg| . 1944008) (|pomopo!| . 1943809) (|mapExponents| . 1943575)
 (|linearAssociatedLog| . 1943172) (|linearAssociatedOrder| . 1942972)
 (|linearAssociatedExp| . 1942762) (|createNormalElement| . 1942622)
 (|setLabelValue| . 1942532) (|getCode| . 1942440) (|printCode| . 1942361)
 (|code| . 1939735) (|operation| . 1938998) (|common| . 1938869)
 (|printStatement| . 1938766) (|save| . 1938721) (|stop| . 1938676)
 (|block| . 1938572) (|cond| . 1938399) (|returns| . 1937703)
 (|call| . 1937622) (|comment| . 1937451) (|continue| . 1937361)
 (|gotoJump| . 1937271) (|repeatUntilLoop| . 1937185) (|whileLoop| . 1937099)
 (|forLoop| . 1936792) (|sin?| . 1936660) (|zeroVector| . 1936477)
 (|zeroSquareMatrix| . 1936294) (|identitySquareMatrix| . 1936111)
 (|fort_clean_lines| . 1936007) (|do_with_error_env3| . 1935810)
 (|do_with_error_env2| . 1935613) (|do_with_error_env1| . 1935454)
 (|expression2Fortran1| . 1935239) (|statement2Fortran| . 1935104)
 (|expression2Fortran| . 1934969) (|getStatement| . 1934796)
 (|changeExprLength| . 1934675) (|displayLines| . 1934546)
 (|dispStatement| . 1934422) (|fortFormatHead| . 1934163)
 (|fortFormatTypeLines| . 1934004) (|fort_format_types| . 1933841)
 (|indentFortLevel| . 1933720) (|checkType| . 1933632)
 (|newFortranTempVar| . 1933547) (|clear_used_intrinsics| . 1933466)
 (|get_used_intrinsics| . 1933365) (|get_fort_indent| . 1933279)
 (|refinementSolve| . 1932980) (|refinementGroebner| . 1932703)
 (|refinementEquations| . 1932426) (|refinementTransformations| . 1932124)
 (|refine!| . 1931812) (|setRefined!| . 1931625) (|invertMIN| . 1931487)
 (|multiplyMIN| . 1931346) (|addMIN| . 1931205) (|rightMinimization| . 1931015)
 (|leftMinimization| . 1930825) (|normalALS| . 1930687)
 (|extendedALS| . 1930549) (|refineUR!| . 1930226)
 (|factorizationSolve| . 1929964) (|factorizationGroebner| . 1929724)
 (|factorizationEquations| . 1929484)
 (|factorizationTransformations| . 1929182) (|factorize| . 1928933)
 (|rightFactor| . 1928746) (|leftFactor| . 1928559) (|ratexpr| . 1928383)
 (|ratexprInverse| . 1928176) (|rightFamily| . 1927991)
 (|leftFamily| . 1927806) (|summands| . 1927606) (|invertSTD| . 1927468)
 (|invertALS| . 1927330) (|multiplyALS| . 1927189) (|addALS| . 1927048)
 (|scaleALS| . 1926907) (|rowSpan| . 1926691) (|columnSpan| . 1926475)
 (|solutionVector| . 1926018) (|normalize!| . 1925880)
 (|normalizeDIAG!| . 1925742) (|normalizePLS!| . 1925604)
 (|normalizeRHS!| . 1925466) (|transformationMatrix| . 1925291)
 (|representation| . 1925077) (|linearization| . 1924672)
 (|admissibleLinearSystem| . 1924496) (|refined?| . 1924323)
 (|blockStructure| . 1924128) (|addColumnsRows!| . 1923935)
 (|addRowsColumns!| . 1923742) (|swapRowsColumns!| . 1923552)
 (|pencil| . 1923353) (|appendSupport!| . 1923155) (|polynomial?| . 1922982)
 (|regular?| . 1922809) (|scalar?| . 1922420) (|qregular?| . 1922202)
 (|mutable?| . 1922029) (|minimal?| . 1921856)
 (|toggleAlternativeOutput| . 1921718) (|disableAlternativeOutput| . 1921580)
 (|enableAlternativeOutput| . 1921442) (|toggleDebugOutput| . 1921304)
 (|disableDebugOutput| . 1921166) (|enableDebugOutput| . 1921028)
 (|lSpaceBasis| . 1920691) (|finiteBasis| . 1920354) (|principal?| . 1920009)
 (|divisor| . 1918036) (|exp_frac| . 1917750) (|exp_series| . 1917508)
 (|log_series| . 1917266) (|weierstrassHalfPeriods| . 1917097)
 (|weierstrassInvariants| . 1916928) (|modularInvariantJ| . 1916816)
 (|landen1| . 1916511) (|landen2| . 1916174) (|landen| . 1915843)
 (|kprod| . 1915544) (|sn2| . 1915239) (|rationalPoints| . 1914534)
 (|nonSingularModel| . 1913744) (|algSplitSimple| . 1913287)
 (|hyperelliptic| . 1912707) (|elliptic| . 1911854)
 (|integralDerivationMatrix| . 1911471) (|integralRepresents| . 1911164)
 (|integralCoordinates| . 1910822) (|yCoordinates| . 1910480)
 (|inverseIntegralMatrixAtInfinity| . 1910166)
 (|integralMatrixAtInfinity| . 1909852) (|inverseIntegralMatrix| . 1909538)
 (|integralMatrix| . 1909224) (|reduceBasisAtInfinity| . 1908920)
 (|normalizeAtInfinity| . 1908616) (|complementaryBasis| . 1908312)
 (|integral?| . 1907404) (|special_order| . 1907064)
 (|integralAtInfinity?| . 1906762) (|integralBasisAtInfinity| . 1906461)
 (|ramified?| . 1905859) (|ramifiedAtInfinity?| . 1905560)
 (|singular?| . 1904958) (|singularAtInfinity?| . 1904659)
 (|branchPoint?| . 1904057) (|branchPointAtInfinity?| . 1903758)
 (|rationalPoint?| . 1903088) (|absolutelyIrreducible?| . 1902430)
 (|genus| . 1901750) (|getZechTable| . 1901065) (|createZechTable| . 1900831)
 (|createMultiplicationTable| . 1900463)
 (|createMultiplicationMatrix| . 1900170)
 (|createLowComplexityTable| . 1899861)
 (|createLowComplexityNormalBasis| . 1899408) (|fffg| . 1898322)
 (|generalCoefficient| . 1897886) (|ShiftAction| . 1897639)
 (|ShiftC| . 1897363) (|DiffAction| . 1897116) (|DiffC| . 1896840)
 (|qShiftAction| . 1896590) (|qShiftC| . 1896311) (|genVectorStream| . 1895998)
 (|genVectorStream2| . 1895685) (|generalInterpolation| . 1893832)
 (|representationType| . 1893697) (|createPrimitiveElement| . 1893642)
 (|tableForDiscreteLogarithm| . 1893472) (|factorsOfCyclicGroupSize| . 1893230)
 (|sizeMultiplication| . 1892103) (|getMultiplicationMatrix| . 1891291)
 (|getMultiplicationTable| . 1890301) (|primitive?| . 1889999)
 (|numberOfIrreduciblePoly| . 1889831) (|numberOfPrimitivePoly| . 1889663)
 (|numberOfNormalPoly| . 1889495) (|createIrreduciblePoly| . 1889270)
 (|createPrimitivePoly| . 1889045) (|createNormalPoly| . 1888820)
 (|createNormalPrimitivePoly| . 1888595)
 (|createPrimitiveNormalPoly| . 1888370) (|lexSmaller?| . 1888157)
 (|clexSmaller?| . 1887944) (|nlexSmaller?| . 1887731)
 (|cnlexSmaller?| . 1887518) (|nextIrreduciblePoly| . 1887334)
 (|nextPrimitivePoly| . 1887150) (|nextNormalPoly| . 1886966)
 (|nextNormalPrimitivePoly| . 1886782) (|nextPrimitiveNormalPoly| . 1886598)
 (|leastAffineMultiple| . 1886416) (|reducedQPowers| . 1886158)
 (|rootOfIrreduciblePoly| . 1885558) (|mapContra| . 1885333)
 (|looseEquals| . 1885200) (|diagramHeight| . 1885059)
 (|diagramWidth| . 1884918) (|deepDiagramSvg| . 1884723)
 (|diagramsSvg| . 1884500) (|diagramSvg| . 1884305) (|subdiagramSvg| . 1884091)
 (|isFunctional?| . 1883961) (|distanceMatrix| . 1883820)
 (|laplacianMatrix| . 1883679) (|adjacencyMatrix| . 1883527)
 (|incidenceMatrix| . 1883386) (|isAcyclic?| . 1883256)
 (|loopsArrows| . 1883120) (|loopsAtNode| . 1882935) (|loopsNodes| . 1882799)
 (|spanningForestNode| . 1882651) (|spanningTreeNode| . 1882463)
 (|spanningForestArrow| . 1882315) (|spanningTreeArrow| . 1882127)
 (|routeArrows| . 1881925) (|routeNodes| . 1881723) (|arrowsToArrow| . 1881524)
 (|arrowsFromArrow| . 1881325) (|nodeToArrow| . 1881126)
 (|nodeFromArrow| . 1880927) (|arrowsToNode| . 1880728)
 (|arrowsFromNode| . 1880529) (|nodeToNode| . 1880330)
 (|nodeFromNode| . 1880131) (|outDegree| . 1879987) (|inDegree| . 1879843)
 (|getArrowIndex| . 1879696) (|arrowName| . 1879515) (|isFixPoint?| . 1879336)
 (|isGreaterThan?| . 1879154) (|isDirectSuccessor?| . 1878972)
 (|kgraph| . 1878812) (|cycleClosed| . 1878652) (|cycleOpen| . 1878492)
 (|terminal| . 1878397) (|initial| . 1878037) (|getArrows| . 1877443)
 (|getVertexIndex| . 1877299) (|getVertices| . 1876973) (|addArrow!| . 1875889)
 (|addObject!| . 1875533) (|flush| . 1875286) (|write!| . 1874878)
 (|read!| . 1874738) (|iomode| . 1874564) (|reopen!| . 1874394)
 (|open| . 1873839) (|serialize| . 1873752) (|deserialize| . 1873665)
 (|rightUnit| . 1873499) (|leftUnit| . 1873333)
 (|rightMinimalPolynomial| . 1873106) (|leftMinimalPolynomial| . 1872879)
 (|associatorDependence| . 1872433) (|lieAlgebra?| . 1872067)
 (|jordanAlgebra?| . 1871701) (|noncommutativeJordanAlgebra?| . 1871335)
 (|jordanAdmissible?| . 1870969) (|lieAdmissible?| . 1870603)
 (|jacobiIdentity?| . 1870237) (|powerAssociative?| . 1870086)
 (|alternative?| . 1869720) (|flexible?| . 1869354)
 (|rightAlternative?| . 1868988) (|leftAlternative?| . 1868622)
 (|antiAssociative?| . 1868256) (|associative?| . 1867890)
 (|antiCommutative?| . 1867524) (|commutative?| . 1867158)
 (|rightCharacteristicPolynomial| . 1866975)
 (|leftCharacteristicPolynomial| . 1866792) (|rightNorm| . 1866666)
 (|leftNorm| . 1866540) (|rightTrace| . 1866414) (|leftTrace| . 1866288)
 (|someBasis| . 1866135) (|finiteLattice| . 1865815) (|LiePoly| . 1865629)
 (|quickSort| . 1865336) (|heapSort| . 1865043) (|shellSort| . 1864750)
 (|set_output_mode| . 1864610) (|get_output_mode| . 1864481)
 (|outputSpacing| . 1864392) (|outputGeneral| . 1864203)
 (|outputFixed| . 1864014) (|outputFloating| . 1863825) (|exp1| . 1863493)
 (|log10| . 1862919) (|log2| . 1862545) (|rationalApproximation| . 1861959)
 (|relerror| . 1861914) (|complexSolve| . 1860674) (|complexRoots| . 1860115)
 (|realRoots| . 1859611) (|minus| . 1859166) (|support| . 1858962)
 (|moebiusFunction| . 1858791) (|overlap| . 1858511) (|hcrf| . 1858416)
 (|hclf| . 1858321) (|fraction| . 1858082) (|numberOfPrimes| . 1857775)
 (|altsupersub| . 1857549) (|theMap| . 1857377) (|naryPlus| . 1856835)
 (|nary| . 1856299) (|precedence| . 1855826) (|formatConstant| . 1855322)
 (|nothing| . 1854924) (|parenthesizeIf| . 1854613) (|parenthesize| . 1854479)
 (|formatFunction| . 1854146) (|formatFunctionSymbol| . 1853843)
 (|formatSymbol| . 1853540) (|formatString| . 1853237)
 (|formatFloat| . 1852934) (|formatInteger| . 1852629)
 (|formatExpression| . 1851443) (|maxPrecedence| . 1851218)
 (|minPrecedence| . 1850993) (|defaultEpilogue| . 1850865)
 (|defaultPrologue| . 1850737) (|environment| . 1850355)
 (|writable?| . 1850264) (|readable?| . 1850173) (|exists?| . 1850082)
 (|extension| . 1849992) (|directory| . 1849902) (|filename| . 1849806)
 (|functionGraph| . 1848372) (|shallowExpand| . 1848131)
 (|deepExpand| . 1847890) (|clearFortranOutputStack| . 1847779)
 (|showFortranOutputStack| . 1847668) (|popFortranOutputStack| . 1847576)
 (|pushFortranOutputStack| . 1847318) (|topFortranOutputStack| . 1847217)
 (|formatStep| . 1847044) (|operatorHandlers| . 1846579)
 (|setDefault!| . 1846215) (|format| . 1845948) (|fixed_mr| . 1845382)
 (|floating_mr| . 1844816) (|general_mr| . 1844250) (|convert_mr| . 1843684)
 (|convert_to_decimal| . 1843454) (|fracPart| . 1843062) (|polyPart| . 1842855)
 (|fullPartialFraction| . 1842609) (|primeFrobenius| . 1842424)
 (|discreteLog| . 1842186) (|decreasePrecision| . 1842001)
 (|increasePrecision| . 1841816) (|bits| . 1841431) (|mergeFactors| . 1841335)
 (|unitNormalize| . 1841242) (|unit| . 1840739) (|flagFactor| . 1840532)
 (|sqfrFactor| . 1840390) (|primeFactor| . 1840248)
 (|irreducibleFactor| . 1840106) (|factors| . 1839275) (|nilFactor| . 1839133)
 (|map_preserving| . 1838868) (|factorFraction| . 1838661)
 (|regularRepresentation| . 1838036) (|traceMatrix| . 1837327)
 (|randomLC| . 1836937) (|minimize| . 1836469) (|module| . 1835704)
 (|represents| . 1834798) (|rightRegularRepresentation| . 1834452)
 (|leftRegularRepresentation| . 1834106) (|rightTraceMatrix| . 1833557)
 (|leftTraceMatrix| . 1833008) (|rightDiscriminant| . 1832549)
 (|leftDiscriminant| . 1832090) (|exprToXXP| . 1831220) (|exprToUPS| . 1827483)
 (|exprToGenUPS| . 1823746) (|exprToPS| . 1816250) (|localAbs| . 1814433)
 (|atan1| . 1813129) (|integ| . 1811825) (|integt| . 1810521)
 (|integ_df| . 1809214) (|powToUPS| . 1805885) (|my_digamma| . 1804581)
 (|universe| . 1804446) (|cardinality| . 1804291) (|algtower| . 1803820)
 (|isMult| . 1803555) (|applyQuote| . 1802590) (|internalIntegrate0| . 1801938)
 (|makeCos| . 1801664) (|makeSin| . 1801390) (|logGamma| . 1800957)
 (|li2| . 1800846) (|rabs| . 1800135) (|lambert_via_newton1| . 1799627)
 (|lambert_via_newton2| . 1799119) (|lambert_inverse_series| . 1798688)
 (|iiGamma| . 1798498) (|iiabs| . 1798308) (|iiconjugate| . 1798118)
 (|iiBeta| . 1797900) (|iidigamma| . 1797710) (|iipolygamma| . 1797492)
 (|iiBesselJ| . 1797274) (|iiBesselY| . 1797056) (|iiBesselI| . 1796838)
 (|iiBesselK| . 1796620) (|iiAiryAi| . 1796430) (|iiAiryAiPrime| . 1796240)
 (|iiAiryBi| . 1796050) (|iiAiryBiPrime| . 1795860) (|iAiryAi| . 1795670)
 (|iAiryAiPrime| . 1795480) (|iAiryBi| . 1795290) (|iAiryBiPrime| . 1795100)
 (|iiHypergeometricF| . 1794882) (|iiPolylog| . 1794689)
 (|iLambertW| . 1794499) (|retract_Q| . 1794263) (|coerce_Q| . 1794025)
 (|bringDown| . 1793356) (|newReduc| . 1793041) (|logical?| . 1792951)
 (|character?| . 1792861) (|doubleComplex?| . 1792771) (|complex?| . 1792681)
 (|double?| . 1792591) (|fortranCharacter| . 1792546)
 (|fortranDoubleComplex| . 1792501) (|fortranComplex| . 1792456)
 (|fortranLogical| . 1792411) (|fortranInteger| . 1792366)
 (|fortranDouble| . 1792321) (|fortranReal| . 1792276) (|external?| . 1792194)
 (|dimensionsOf| . 1792079) (|scalarTypeOf| . 1791922)
 (|fortranCarriageReturn| . 1791842) (|fortranLiteral| . 1791723)
 (|fortranLiteralLine| . 1791604) (|processTemplate| . 1791425)
 (|separate_factors| . 1791069) (|makeFR| . 1790237) (|musserTrials| . 1789878)
 (|stopMusserTrials| . 1789519) (|numberOfFactors| . 1789087)
 (|modularFactor| . 1788755) (|useSingleFactorBound?| . 1788591)
 (|useSingleFactorBound| . 1788424) (|useEisensteinCriterion?| . 1788260)
 (|useEisensteinCriterion| . 1788093) (|eisensteinIrreducible?| . 1787926)
 (|tryFunctionalDecomposition?| . 1787762)
 (|tryFunctionalDecomposition| . 1787595) (|henselFact| . 1787060)
 (|btwFact| . 1786419) (|beauzamyBound| . 1785975) (|bombieriNorm| . 1785106)
 (|rootBound| . 1784662) (|singleFactorBound| . 1783727)
 (|quadraticNorm| . 1783311) (|infinityNorm| . 1782895)
 (|scaleRoots| . 1782716) (|shiftRoots| . 1782537)
 (|degreePartition| . 1781957) (|factorOfDegree| . 1780450)
 (|factorsOfDegree| . 1780168) (|pascalTriangle| . 1779996)
 (|rangePascalTriangle| . 1779719) (|sizePascalTriangle| . 1779581)
 (|fillPascalTriangle| . 1779457) (|safeCeiling| . 1779285)
 (|safeFloor| . 1779113) (|safetyMargin| . 1778738) (|sumSquares| . 1778593)
 (|euclideanNormalForm| . 1778274) (|euclideanGroebner| . 1777267)
 (|factorGroebnerBasis| . 1776338) (|groebnerFactorize| . 1774476)
 (|credPol| . 1774114) (|gbasis| . 1773721) (|gbasisExtend| . 1773325)
 (|critT| . 1772807) (|critM| . 1772445) (|critB| . 1772077)
 (|critBonD| . 1771557) (|critMTonD1| . 1771040) (|critMonD1| . 1770520)
 (|redPo| . 1770092) (|updatF| . 1769588) (|updatD| . 1769068)
 (|minGbasis| . 1768709) (|lepol| . 1768350) (|prinshINFO| . 1768001)
 (|prindINFO| . 1767428) (|fprindINFO| . 1766852) (|prinpolINFO| . 1766468)
 (|prinb| . 1766091) (|critpOrder| . 1765570) (|makeCrit| . 1764934)
 (|gcdBasis| . 1764583) (|gcdDecomposition| . 1764013)
 (|conditionsForIdempotents| . 1762642) (|genericRightDiscriminant| . 1762296)
 (|genericRightTraceForm| . 1761944) (|genericLeftDiscriminant| . 1761598)
 (|genericLeftTraceForm| . 1761246) (|genericRightNorm| . 1760897)
 (|genericRightTrace| . 1760548) (|genericRightMinimalPolynomial| . 1760173)
 (|rightRankPolynomial| . 1759333) (|genericLeftNorm| . 1758984)
 (|genericLeftTrace| . 1758635) (|genericLeftMinimalPolynomial| . 1758260)
 (|leftRankPolynomial| . 1757420) (|generic| . 1755556)
 (|rightUnits| . 1754835) (|leftUnits| . 1754114) (|gnuDraw| . 1752812)
 (|compBound| . 1752560) (|tablePow| . 1752272) (|solveid| . 1752026)
 (|testModulus| . 1751792) (|generalizedMoebiusFunction| . 1751532)
 (|canonicalMoebiusFunction| . 1751312) (|moebiusMatrix| . 1750910)
 (|removeZeros| . 1750663) (|infsum| . 1750349) (|HenselLift| . 1750014)
 (|completeHensel| . 1749757) (|multMonom| . 1749172) (|build| . 1748587)
 (|leadingIndex| . 1748008) (|leadingExponent| . 1747429) (|option| . 1746920)
 (|checkOptions| . 1746781) (|displayKind| . 1746561) (|indexName| . 1746341)
 (|variableName| . 1746121) (|functionNames| . 1745874)
 (|functionName| . 1745654) (|one| . 1745432) (|checkExtraValues| . 1745210)
 (|safety| . 1744957) (|allDegrees| . 1744735) (|maxMixedDegree| . 1744482)
 (|maxDegree| . 1744178) (|maxLevel| . 1743874) (|Somos| . 1743576)
 (|homogeneous| . 1743278) (|maxPower| . 1742980) (|maxSubst| . 1742682)
 (|maxShift| . 1742378) (|maxDerivative| . 1742074) (|GospersMethod| . 1741486)
 (|primitiveMonomials| . 1741180) (|totalDegreeSorted| . 1740856)
 (|totalDegree| . 1740248) (|monomials| . 1739778) (|nextSubsetGray| . 1739629)
 (|firstSubsetGray| . 1739476) (|clipPointsDefault| . 1739303)
 (|drawToScale| . 1739130) (|adaptive| . 1738737) (|putColorInfo| . 1738575)
 (|appendPoint| . 1738443) (|component| . 1737882) (|ranges| . 1737389)
 (|pointLists| . 1737267) (|makeGraphImage| . 1736652)
 (|sendGraphImage| . 1736574) (|graphImage| . 1736530) (|groebSolve| . 1736089)
 (|testDim| . 1735752) (|genericPosition| . 1735213)
 (|toPermutationIfCan| . 1734728) (|directProduct| . 1734535)
 (|refactor| . 1734481) (|groupPresentation| . 1734144) (F2EXPRR . 1733687)
 (EXPRR2F . 1733223) (|iim2| . 1733067) (|iiretractVar| . 1732859)
 (|guess| . 1721410) (|guessExpRat| . 1711527) (|guessBinRat| . 1701644)
 (|guessAlgDep| . 1697159) (|guessFE| . 1692782) (|guessAlg| . 1688405)
 (|guessPade| . 1684028) (|algDepHP| . 1665371) (|substHP| . 1647366)
 (|shiftHP| . 1610309) (|diffHP| . 1573252) (|guessRec| . 1565579)
 (|guessPRec| . 1557906) (|guessRat| . 1550233) (|guessADE| . 1542560)
 (|guessHolo| . 1534887) (|HankelMatrix| . 1534734) (|hashUpdate!| . 1534646)
 (|hash| . 1534557) (|update!| . 1534466) (|lfunc| . 1534381)
 (|inHallBasis?| . 1534255) (|reorder| . 1533491) (|heap| . 1533371)
 (|gcdprim| . 1533219) (|gcdcofact| . 1533060) (|gcdcofactprim| . 1532901)
 (|lintgcd| . 1532714) (|hex| . 1532601) (|members| . 1532044)
 (|parts| . 1531595) (|count| . 1531133) (|every?| . 1530903)
 (|any?| . 1530673) (|map!| . 1530205) (|dispGenerators| . 1530123)
 (|homologyzc2| . 1530081) (|homologyc2| . 1530039) (|homologyzz| . 1529997)
 (|homologyz| . 1529955) (|homology0| . 1529913) (|homologyGroup| . 1529818)
 (|antipode| . 1529677) (|exprex| . 1529557) (|factorList| . 1528848)
 (|listConjugateBases| . 1528223) (|matrixGcd| . 1527761)
 (|divideIfCan!| . 1527307) (|leastPower| . 1526878) (|idealiser| . 1526037)
 (|idealiserMatrix| . 1525617) (|moduleSum| . 1525106)
 (|mapUnivariate| . 1524370) (|mapUnivariateIfCan| . 1523992)
 (|mapMatrixIfCan| . 1523570) (|mapBivariate| . 1523131)
 (|fullDisplay| . 1522217) (|relationsIdeal| . 1521718) (|saturate| . 1521169)
 (|groebner?| . 1520884) (|groebnerIdeal| . 1520592) (|ideal| . 1519578)
 (|leadingIdeal| . 1519321) (|backOldPos| . 1518879)
 (|generalPosition| . 1518374) (|quotient| . 1517379) (|zeroDim?| . 1516773)
 (|inRadical?| . 1516485) (|in?| . 1516197) (|element?| . 1515909)
 (|zeroDimPrime?| . 1515250) (|zeroDimPrimary?| . 1514591)
 (|radical| . 1513960) (|primaryDecomp| . 1512780)
 (|numberOfMonomials| . 1512578) (|eigenvector| . 1511927)
 (|generalizedEigenvector| . 1510094) (|eigenvalues| . 1509029)
 (|eigenvectors| . 1507055) (|generalizedEigenvectors| . 1505252)
 (|removeRepeats!| . 1505035) (|shrinkable| . 1504748)
 (|physicalLength!| . 1504464) (|physicalLength| . 1504155)
 (|flexibleArray| . 1503868) (|parseILTerm| . 1503600) (|parseIL2| . 1503332)
 (|parseIL| . 1503256) (|proposition| . 1503180)
 (|generalizedInverse| . 1502859) (|row_operation_base| . 1502498)
 (|row_operation_modular| . 1502134) (|do_modular_solve| . 1501511)
 (|do_poly_integer| . 1500414) (|merge_exponents| . 1500159)
 (|merge2| . 1499742) (|setFieldInfo| . 1499441) (|pol| . 1499227)
 (|xn| . 1498997) (|dAndcExp| . 1498747) (|repSq| . 1498541)
 (|expPot| . 1498337) (|qPot| . 1498142) (|lookup| . 1497855)
 (|normal?| . 1497279) (|normalElement| . 1496941)
 (|minimalPolynomial| . 1496281) (|incidenceAlgebra| . 1495862)
 (|increment| . 1495694) (|incrementBy| . 1495523) (|charpol| . 1495228)
 (|solve1| . 1494932) (|innerEigenvectors| . 1494319) (|compile| . 1494189)
 (|declare| . 1494062) (|parse| . 1493983) (|unparse| . 1493904)
 (|flatten| . 1493721) (|binary| . 1493111) (|interpret_in_new_env| . 1493035)
 (|packageCall| . 1492672) (|coerceToType| . 1492541) (|atType| . 1492410)
 (|pretendOfType| . 1492279) (|interpret| . 1492074)
 (|infiniteProduct| . 1491904) (|evenInfiniteProduct| . 1491734)
 (|oddInfiniteProduct| . 1491564) (|generalInfiniteProduct| . 1491360)
 (|innerSolve1| . 1490768) (|innerSolve| . 1490412) (|makeEq| . 1490058)
 (|modularGcdPrimitive| . 1489766) (|reduction| . 1489159)
 (|signAround| . 1488384) (|invmod| . 1488323) (|powmod| . 1488259)
 (|mulmod| . 1488195) (|submod| . 1488131) (|addmod| . 1488067)
 (|mask| . 1488009) (|dec| . 1487951) (|inc| . 1487893)
 (|symmetricRemainder| . 1487832) (|positiveRemainder| . 1487771)
 (|bit?| . 1487674) (|seedRandom| . 1487602) (|algint| . 1487017)
 (|algintegrate| . 1486309) (|palgintegrate| . 1485570) (|algextint| . 1482619)
 (|algextint_base| . 1481006) (|bitCoef| . 1480873) (|bitTruth| . 1480712)
 (|contains?| . 1480465) (|qinterval| . 1480253) (|interval| . 1479339)
 (|li_int| . 1478159) (|poly_int| . 1476979) (|solve_u| . 1476337)
 (|lfextendedint| . 1475694) (|lfintegrate| . 1475013)
 (|BasicMethod| . 1474850) (|PollardSmallFactor| . 1474720)
 (|palgint0| . 1473363) (|palgRDE0| . 1472012) (|rationalize_ir| . 1471415)
 (|palgLODE0| . 1469702) (|get_elliptics| . 1469090) (|gen_ef| . 1468638)
 (|fsqrt| . 1468252) (|carmichaelLambda| . 1468144)
 (|chineseRemainder| . 1467020) (|divisors| . 1466875) (|eulerPhi| . 1466767)
 (|fibonacci| . 1466659) (|harmonic| . 1466510) (|jacobi| . 1466399)
 (|moebiusMu| . 1466123) (|numberOfDivisors| . 1466015)
 (|sumOfDivisors| . 1465907) (|sumOfKthPowerDivisors| . 1465757)
 (|HermiteIntegrate| . 1463877) (|unitPart| . 1463717) (|palgint| . 1463106)
 (|palgRDE| . 1462490) (|param_RDE| . 1461603) (|param_LODE| . 1460716)
 (|palgLODE| . 1459896) (|primextint| . 1459152) (|expextint| . 1458396)
 (|diffextint| . 1457811) (|unkextint| . 1457226) (|monologextint| . 1456304)
 (|polylog_int| . 1455568) (|extendedint| . 1452578) (|logextint| . 1450655)
 (|splitConstant| . 1450068) (|pmintegrate| . 1449385) (|infieldint| . 1449078)
 (|integerIfCan| . 1448929) (|internalIntegrate| . 1447228)
 (|infieldIntegrate| . 1446916) (|varselect| . 1446694) (|kmax| . 1446472)
 (|ksec| . 1446210) (|vark| . 1445953) (|removeConstantTerm| . 1445726)
 (|mkPrim| . 1445448) (|primintegrate| . 1444459) (|expintegrate| . 1443518)
 (|lambintegrate| . 1442780) (|monomialIntegrate| . 1442319)
 (|monomialIntPoly| . 1442031) (|inverseLaplace| . 1441434)
 (|leadingTerm| . 1441184) (|constructOrdered| . 1440925)
 (|leadingSupport| . 1440735) (|quadraticNonResidue| . 1440634)
 (|iprint| . 1440510) (|elem?| . 1440382) (|notelem| . 1440208)
 (|logpart| . 1439853) (|ratpart| . 1439760) (|mkAnswer| . 1439321)
 (|perfectNthPower?| . 1439135) (|perfectNthRoot| . 1438743)
 (|approxNthRoot| . 1438585) (|perfectSquare?| . 1438448)
 (|perfectSqrt| . 1438333) (|approxSqrt| . 1438224) (|complexExpand| . 1437329)
 (|complexIntegrate| . 1436268)
 (|dimensionOfIrreducibleRepresentation| . 1436114)
 (|irreducibleRepresentation| . 1435521) (|checkRur| . 1434870)
 (|cAcsch| . 1434694) (|cAsech| . 1434518) (|cAcoth| . 1434342)
 (|cAtanh| . 1434166) (|cAcosh| . 1433990) (|cAsinh| . 1433814)
 (|cCsch| . 1433638) (|cSech| . 1433462) (|cCoth| . 1433286)
 (|cTanh| . 1433110) (|cCosh| . 1432934) (|cSinh| . 1432758)
 (|cAcsc| . 1432582) (|cAsec| . 1432406) (|cAcot| . 1432230)
 (|cAtan| . 1432054) (|cAcos| . 1431878) (|cAsin| . 1431702) (|cCsc| . 1431526)
 (|cSec| . 1431350) (|cCot| . 1431174) (|cTan| . 1430998) (|cCos| . 1430822)
 (|cSin| . 1430646) (|cLog| . 1430470) (|cExp| . 1430294)
 (|cRationalPower| . 1430096) (|cPower| . 1429917)
 (|seriesToOutputForm| . 1429534) (|iCompose| . 1429417)
 (|taylorQuoByVar| . 1429303) (|iExquo| . 1429146) (|getStream| . 1428952)
 (|getRef| . 1428767) (|makeSeries| . 1428499) (GF2FG . 1427947)
 (FG2F . 1427433) (F2FG . 1426919) (|explogs2trigs| . 1426367)
 (|do_liou| . 1425724) (|swap!| . 1425517) (|fill!| . 1425098)
 (|entry?| . 1424853) (|indices| . 1424512) (|index?| . 1424351)
 (|dimS| . 1424084) (|dimJ| . 1423817) (|Pr| . 1423655) (|Pm| . 1423490)
 (|integrateIfCan| . 1423374) (|derivativeOf?| . 1423252) (|weight| . 1422142)
 (|type| . 1422051) (|allRepeated| . 1421644) (|m2r| . 1421255)
 (|r2m| . 1420866) (|repeatedIndex| . 1420750) (|multiIndex| . 1420631)
 (|numerJP| . 1420421) (|autoReduce| . 1420264) (|reduceMod| . 1420104)
 (|simpMod| . 1419315) (|simpOne| . 1419193) (|dSubst| . 1419065)
 (|solveFor| . 1418934) (|sortLD| . 1418777) (|leadingDer| . 1418655)
 (|freeOf?| . 1418191) (|orderDim| . 1417936) (|formalDiff2| . 1417244)
 (|formalDiff| . 1416704) (|class| . 1416053) (|const?| . 1415903)
 (|jetVariables| . 1415753) (|numDepVar| . 1415269) (|numIndVar| . 1414785)
 (|getNotation| . 1414349) (|setNotation| . 1413840) (P . 1412522)
 (U . 1412084) (X . 1411646) (|ground| . 1410911) (|printSys| . 1410666)
 (|jacobiMatrix| . 1409969) (|makeSystem| . 1409755) (|setSimpMode| . 1409315)
 (|extractSymbol| . 1408879) (|analyseSymbol| . 1408412)
 (|prolongSymbol| . 1408180) (|prolongMV| . 1407787) (|project| . 1407559)
 (|contract| . 1406233) (|differentials| . 1406034) (|dP| . 1405762)
 (|dU| . 1405548) (|dX| . 1405334) (|d| . 1404994) (|setFormat!| . 1404743)
 (|setFormats!| . 1404475) (|eqRep?| . 1404273) (|ground?| . 1403469)
 (|prolong| . 1402549) (|lie| . 1402156) (|directions| . 1401958)
 (|diffP| . 1401687) (|diffU| . 1401474) (|diffX| . 1401261)
 (|search| . 1401123) (|keys| . 1400860) (|key?| . 1400700)
 (|symbolIfCan| . 1400563) (|kernel| . 1399878) (|argument| . 1399476)
 (|constantKernel| . 1399306) (|constantIfCan| . 1399127) (|kovacic| . 1398168)
 (|toStringConven| . 1398012) (|unbind| . 1397931) (|bind| . 1397850)
 (|subst| . 1397011) (|free?| . 1396893) (|getBoundValue| . 1396764)
 (|isFreeNode?| . 1396646) (|isBoundNode?| . 1396528) (|isLambda?| . 1396410)
 (|isCompound?| . 1396292) (|parseLambda| . 1396175) (|laplace| . 1395567)
 (|latticeJoinOfMeets| . 1395339) (|toStringUnwrapped| . 1395087)
 (|opType| . 1394835) (|deductions| . 1394516) (|meet| . 1394142)
 (|emptyLattice| . 1394040) (|latticeMeetOfJoins| . 1393812)
 (|logicF| . 1393672) (|logicT| . 1393532) (|trailingCoefficient| . 1393359)
 (|normalizeIfCan| . 1392904) (|polCase| . 1392526) (|distFact| . 1391598)
 (|identification| . 1391257) (|LyndonCoordinates| . 1390904)
 (|LyndonBasis| . 1390530) (|zeroDimensional?| . 1389908)
 (|fglmIfCan| . 1389337) (|lexTriangular| . 1388881)
 (|squareFreeLexTriangular| . 1387883) (|belong?| . 1385789)
 (|fresnelC| . 1385112) (|fresnelS| . 1384435) (|erfi| . 1383758)
 (|erf| . 1383081) (|dilog| . 1382610) (|li| . 1381933) (|Shi| . 1381256)
 (|Ci| . 1380579) (|Si| . 1379902) (|Ei| . 1379225) (|linGenPos| . 1378784)
 (|groebgen| . 1378345) (|totolex| . 1378034) (|minPol| . 1377309)
 (|computeBasis| . 1377070) (|coord| . 1376360) (|anticoord| . 1376027)
 (|intcompBasis| . 1375736) (|choosemon| . 1375448) (|close!| . 1375103)
 (|pack!| . 1374957) (|library| . 1374878) (|complexLimit| . 1373675)
 (|dehomogenize| . 1372961) (|lin_comb!| . 1372706) (|lin_comb| . 1370803)
 (|linearlyDependent?| . 1370574) (|linearDependence| . 1370345)
 (|solveLinear| . 1368557) (|reducedSystem| . 1367373) (|qnew| . 1366316)
 (|append!| . 1366155) (|equal?| . 1365944) (|qequal?| . 1365691)
 (|nelem| . 1365533) (|qzero?| . 1364233) (|qsemizero?| . 1364032)
 (|qdiagonal?| . 1363837) (|qdiagonal| . 1363642)
 (|uppertriangular?| . 1363453) (|quppertriangular?| . 1363258)
 (|qnilpotent?| . 1363063) (|qcolumnIndices| . 1362392)
 (|qrowIndices| . 1361721) (|subPencil| . 1361380)
 (|removeRowsColumns| . 1361010) (|insertRowsColumns| . 1360640)
 (|swapRows!| . 1360035) (|qswapRows!| . 1359683) (|addRows!| . 1359325)
 (|qaddRows!| . 1358967) (|qmultiplyRow!| . 1358803) (|multiplyRow!| . 1358451)
 (|qswapColumns!| . 1358099) (|swapColumns!| . 1357494)
 (|addColumns!| . 1357136) (|qaddColumns!| . 1356778)
 (|multiplyColumn!| . 1356426) (|qmultiplyColumn!| . 1356262)
 (|qscaleBlock!| . 1356086) (|transformRows!| . 1355765)
 (|transformColumns!| . 1355444) (|leftIdentity| . 1355295)
 (|rightIdentity| . 1355146) (|qsetelt!| . 1354347) (|setsubMatrix!| . 1353891)
 (|setsubPencil!| . 1353724) (|blockElimination| . 1352933)
 (|eliminationTransformations| . 1352042) (|eliminationEquations| . 1351211)
 (|eliminationGroebner| . 1350936) (|eliminationSolve| . 1349458)
 (|setDifference| . 1349337) (|setIntersection| . 1349216)
 (|setUnion| . 1349095) (|tails| . 1348972) (|append| . 1348733)
 (|match| . 1347422) (|splitList| . 1347143) (|topologicalSort!| . 1346961)
 (|topologicalSort| . 1346599) (|cartesianPower| . 1346387)
 (|minShift| . 1346228) (|csolve_pol| . 1345874) (|csolve_rf| . 1345507)
 (|csolve_rmat| . 1345138) (LLL . 1345035) (|extendedLLL!| . 1344883)
 (|extendedLLL| . 1344628) (|find_relation| . 1344443) (|substitute| . 1344329)
 (|duplicates?| . 1344193) (|mapGen| . 1343721) (|mapExpon| . 1343192)
 (|leftMult| . 1343021) (|rightMult| . 1342850) (|makeUnit| . 1342685)
 (|nthFactor| . 1342231) (|nthExpon| . 1341738) (|makeMulti| . 1341504)
 (|makeTerm| . 1341333) (|listOfMonoms| . 1341092) (|sort!| . 1340632)
 (|reverse!| . 1340192) (|copyInto!| . 1339975) (|sorted?| . 1339544)
 (|insert| . 1339065) (|delete| . 1338786) (|delta_deriv| . 1338514)
 (|symmetricSquare| . 1338360) (|factor1| . 1337725) (|testnp| . 1336877)
 (|testfn| . 1335818) (|testf2| . 1334394) (|testll| . 1333276)
 (|testlc| . 1332100) (|testln| . 1329160) (|testlw| . 1327611)
 (|testcp| . 1326812) (|testco| . 1326255) (|testcx| . 1325677)
 (|testpd| . 1325086) (|testfr| . 1322453) (|testsb| . 1321488)
 (|testro| . 1320694) (|testfo| . 1318061) (|testsc| . 1317343)
 (|testfg| . 1316568) (|testlp| . 1315882) (|testis| . 1315508)
 (|testgt| . 1315249) (|gen_exp| . 1313940) (|ge_minimal| . 1311553)
 (|symmetricProduct| . 1311159) (|symmetricPower| . 1310673)
 (|directSum| . 1310279) (|false| . 1310238) (|true| . 1310197)
 (|entries| . 1309937) (|loop| . 1309833) (|lcmCoef| . 1309643)
 (|solveLinearPolynomialEquationByFractions| . 1309375) (|list| . 1309285)
 (|hasSolution?| . 1308604) (|solveUniquely| . 1308414) (|linSolve| . 1307835)
 (|intoMatrix| . 1307329) (|LUDecomp| . 1307004) (|LUSolve| . 1306794)
 (|LUInverse| . 1306531) (|LyndonWordsList| . 1306309)
 (|LyndonWordsList1| . 1306063) (|lyndonIfCan| . 1305925) (|lyndon| . 1305793)
 (|lyndon?| . 1305633) (|lexico| . 1305217)
 (|numberOfComputedEntries| . 1305075) (|rst| . 1304972) (|frst| . 1304869)
 (|lazyEvaluate| . 1304766) (|lazy?| . 1304635) (|explicitlyEmpty?| . 1304504)
 (|explicitEntries?| . 1304373) (|matrixDimensions| . 1304205)
 (|matrixConcat3D| . 1304061) (|plus| . 1303477) (|identityMatrix| . 1303293)
 (|zeroMatrix| . 1302709) (|algebraicGcd| . 1301814) (|pseudoRem| . 1301628)
 (|canonicalIfCan| . 1301443) (|pack_modulus| . 1301157) (|MPtoMPT| . 1300900)
 (|pack_exps| . 1300638) (|repack1| . 1300359) (|pack_exps0| . 1300135)
 (|m_inverse| . 1299878) (|rightRecip| . 1299649) (|leftRecip| . 1299420)
 (|leftPower| . 1299222) (|rightPower| . 1299024) (|one?| . 1298563)
 (|element| . 1298246) (|rowMatrix| . 1297932) (|rows| . 1297285)
 (|columnMatrix| . 1296971) (|columns| . 1296324) (|subMatrix| . 1295211)
 (|bandMatrix| . 1294478) (|blockSplit| . 1292960) (|iter| . 1292757)
 (|arg1| . 1292600) (|arg2| . 1292443) (|comp| . 1292164) (|nullary| . 1292029)
 (|id| . 1291925) (|recur| . 1291533) (|const| . 1291009) (|curry| . 1290793)
 (|diag| . 1290574) (|curryRight| . 1290308) (|curryLeft| . 1290042)
 (|constantRight| . 1289779) (|constantLeft| . 1289516) (|twist| . 1289250)
 (|kronecker_prod1| . 1288762) (|positivePower| . 1288466)
 (|kroneckerSum| . 1287995) (|kroneckerProduct| . 1287450)
 (|newGreek| . 1287362) (|resetNewGreek| . 1287276) (|partial| . 1287188)
 (|alpha| . 1286827) (|beta| . 1286739) (|gamma| . 1286542)
 (|epsilon| . 1286454) (|zeta| . 1286283) (|eta| . 1286195) (|theta| . 1286107)
 (|iota| . 1286019) (|kappa| . 1285931) (|lambda| . 1285378) (|mu| . 1285290)
 (|nu| . 1285202) (|xi| . 1285114) (|omicron| . 1285026) (|rho| . 1284938)
 (|sigma| . 1284850) (|tau| . 1284762) (|upsilon| . 1284674) (|phi| . 1284586)
 (|chi| . 1284498) (|psi| . 1284410) (|Alpha| . 1284322) (|Epsilon| . 1284234)
 (|Zeta| . 1284146) (|Eta| . 1284058) (|Theta| . 1283970) (|Iota| . 1283882)
 (|Kappa| . 1283794) (|Lambda| . 1283706) (|Mu| . 1283618) (|Nu| . 1283530)
 (|Xi| . 1283442) (|Omicron| . 1283354) (|Pi| . 1283266) (|Rho| . 1283178)
 (|Sigma| . 1283090) (|Tau| . 1283002) (|Upsilon| . 1282914) (|Phi| . 1282826)
 (|Chi| . 1282063) (|Psi| . 1281975) (|Omega| . 1281887) (|elRow1!| . 1281562)
 (|elRow2!| . 1281234) (|elColumn2!| . 1280906)
 (|fractionFreeGauss!| . 1280571) (|invertIfCan| . 1280108) (|copy!| . 1279961)
 (|plus!| . 1279811) (|minus!| . 1279516) (|leftScalarTimes!| . 1279366)
 (|rightScalarTimes!| . 1279216) (|times!| . 1279066) (|power!| . 1278864)
 (|gradient| . 1278532) (|divergence| . 1278237) (|laplacian| . 1277942)
 (|hessian| . 1277610) (|bandedHessian| . 1277236) (|jacobian| . 1276904)
 (|bandedJacobian| . 1276527) (|duplicates| . 1276255)
 (|removeDuplicates!| . 1276010) (|meshPar2Var| . 1274746)
 (|meshFun2Var| . 1274238) (|meshPar1Var| . 1273871) (|ptFunc| . 1273431)
 (|ldegree| . 1273209) (|subst_vars| . 1273021) (|trial_division| . 1272687)
 (|toPermutation| . 1272513) (|toCayleyGraph| . 1272058) (|limit| . 1268184)
 (|contraAdjoint| . 1267860) (|coAdjoint| . 1267536)
 (|multifunctionGraph| . 1265813) (|minimumExponent| . 1265650)
 (|maximumExponent| . 1265487) (|precision| . 1265047) (|mantissa| . 1264870)
 (|ini_rdata| . 1264656) (|get_mod| . 1264445) (|get_char| . 1264199)
 (|get_extension_degree| . 1263953) (|red_pol!| . 1263739)
 (|mod_exp| . 1263487) (|monomial1| . 1263276) (|copy_poly| . 1263024)
 (|sub1!| . 1262810) (|add_poly| . 1262593) (|sub_poly| . 1262376)
 (|random_poly| . 1262127) (|empty_poly| . 1261919) (|empty_mat| . 1261711)
 (|empty_mat?| . 1261465) (|trim_mat!| . 1261178) (|split_mat!| . 1260885)
 (|shift_mat!| . 1260601) (|copy_mat_part| . 1260352)
 (|power_matrix| . 1260023) (|modular_compose| . 1259754) (|rowEch| . 1259603)
 (|rowEchLocal| . 1259449) (|rowEchelonLocal| . 1259292)
 (|normalizedDivide| . 1258681) (|maxint| . 1258496)
 (|binaryFunction| . 1258190) (|makeFloatFunction| . 1257686)
 (|make_real_part_function| . 1257452)
 (|make_imaginary_part_function| . 1257218) (|function| . 1255452)
 (|makeRecord| . 1255259) (|unaryFunction| . 1254994)
 (|compiledFunction| . 1254416) (|corrPoly| . 1253731) (|lifting| . 1252124)
 (|coerceS| . 1251884) (|mfactor| . 1251038) (|ddfact| . 1249391)
 (|HP_solve_I| . 1248609) (|HP_solve_A| . 1247763) (|HP_solve_P| . 1246941)
 (|HP_solve_PA| . 1246046) (|HP_solve_M| . 1245239) (|check_sol1a| . 1244918)
 (|VSUPI_to_VPA| . 1244699) (|VSUPPI_to_VPA| . 1244357)
 (|LLFI_to_LPA| . 1244146) (|LLFPI_to_LPA| . 1243835)
 (|get_variables| . 1243620) (|unpack_poly| . 1243265) (|HP_solve| . 1242457)
 (|gen_Monte_Carlo_check| . 1241877) (|LLF_to_LPA| . 1241512)
 (|VSUPS_to_VPA| . 1241114) (|frobenius| . 1240918) (|UnVectorise| . 1240734)
 (|Vectorise| . 1240550) (|setPoly| . 1240403) (|index| . 1239693)
 (|exponent| . 1238510) (|exQuo| . 1237496) (|cumulant2moment| . 1237358)
 (|moment2cumulant| . 1237220) (|moment2nthJacobi| . 1236971)
 (|moment2jacobi| . 1236666) (|moment2jacobi2| . 1236420)
 (|freeCumulant2moment| . 1236282) (|moment2freeCumulant| . 1236144)
 (|booleanCumulant2moment| . 1236006) (|moment2booleanCumulant| . 1235868)
 (|monotoneCumulant2moment| . 1235730)
 (|monotoneCumulant2momentPoly| . 1235522) (|hankelDeterminant| . 1235335)
 (|jacobi2poly| . 1235128) (|moment2Stransform| . 1234699)
 (|moment2monotoneCumulant| . 1234356) (|derivationCoordinates| . 1234042)
 (|generator| . 1232282) (|splitSquarefree| . 1231924)
 (|normalDenom| . 1231679) (|totalfract| . 1231014) (|pushdterm| . 1230431)
 (|pushucoef| . 1229833) (|pushuconst| . 1229345) (|mrv_normalize| . 1228819)
 (|mrv_limit| . 1226009) (|mrv_limit1| . 1225792) (|mrv_sign| . 1225276)
 (|mrv_cmp| . 1224587) (|mrv_set| . 1223869) (|expr_to_series| . 1223263)
 (|mrv_rewrite| . 1222587) (|mrv_rewrite0| . 1222339) (|multiset| . 1222041)
 (|systemCommand| . 1221919) (|mergeDifference| . 1221790)
 (|logDependenceQ| . 1221556) (|compdegd| . 1221082) (|univcase| . 1220773)
 (|consnewpol| . 1220174) (|nsqfree| . 1219323) (|intChoose| . 1218387)
 (|coefChoose| . 1217909) (|myDegree| . 1217443) (|normDeriv2| . 1217081)
 (|plenaryPower| . 1216919) (|commutator| . 1216644) (|associator| . 1216582)
 (|antiCommutator| . 1216519) (|naiveBeckermannLabahn| . 1215912)
 (|naiveBeckermannLabahnMultipoint| . 1215337)
 (|naiveBeckermannLabahn1| . 1214392) (|naiveBeckermannLabahn0| . 1213938)
 (|reduceBasis0| . 1213480) (|reduceBasis| . 1213035)
 (|complexEigenvalues| . 1212780) (|complexEigenvectors| . 1212286)
 (|newton| . 1212090) (|groebner| . 1208613) (|redPol| . 1207985)
 (|hMonic| . 1207433) (|virtualDegree| . 1206789) (|sPol| . 1205897)
 (|shift| . 1205484) (|normalizedAssociate| . 1205133) (|normalize| . 1202570)
 (|outputArgs| . 1202154) (|normInvertible?| . 1201680)
 (|normFactors| . 1201293) (|npcoef| . 1200405)
 (|characteristicPolynomial| . 1197712) (|realEigenvalues| . 1197484)
 (|realEigenvectors| . 1197094) (|halfExtendedResultant2| . 1196802)
 (|halfExtendedResultant1| . 1196510) (|extendedResultant| . 1196142)
 (|subResultantsChain| . 1195922) (|lazyPseudoQuotient| . 1195808)
 (|lazyPseudoRemainder| . 1195694) (|bernoulliB| . 1195456)
 (|eulerE| . 1195218) (|numeric| . 1193499) (|complexNumeric| . 1189457)
 (|numericIfCan| . 1188024) (|complexNumericIfCan| . 1184823)
 (|FormatArabic| . 1184695) (|ScanArabic| . 1184567) (|FormatRoman| . 1184439)
 (|ScanRoman| . 1184311) (|ScanFloatIgnoreSpaces| . 1184193)
 (|ScanFloatIgnoreSpacesIfCan| . 1184069) (|FormatRadix| . 1183946)
 (|rk4| . 1183196) (|rk4a| . 1182817) (|rk4qc| . 1181742) (|rk4f| . 1181369)
 (|aromberg| . 1180961) (|asimpson| . 1180553) (|atrapezoidal| . 1180145)
 (|romberg| . 1179740) (|simpson| . 1179335) (|trapezoidal| . 1178930)
 (|rombergo| . 1178525) (|simpsono| . 1178120) (|trapezoidalo| . 1177715)
 (|inf| . 1177443) (|sup| . 1177171) (|inv| . 1175850) (|imagE| . 1175739)
 (|imagk| . 1175628) (|imagj| . 1175517) (|imagi| . 1175406)
 (|octon| . 1175138) (|constDsolve| . 1174355) (|expint| . 1173752)
 (|diff| . 1172943) (|algDsolve| . 1171354) (|denomLODE| . 1170341)
 (|indicialEquations| . 1168157) (|indicialEquation| . 1167157)
 (|denomRicDE| . 1166656) (|leadingCoefficientRicDE| . 1166065)
 (|constantCoefficientRicDE| . 1165434) (|changeVar| . 1164474)
 (|ratDsolve| . 1162021) (|indicialEquationAtInfinity| . 1161197)
 (|integrate_sols| . 1159667) (|reduceLODE| . 1158621) (|singRicDE| . 1157093)
 (|polyRicDE| . 1155660) (|ricDsolve| . 1151362) (|triangulate| . 1149285)
 (|solveInField| . 1147101) (|wronskianMatrix| . 1146600)
 (|variationOfParameters| . 1146365) (|addVertex| . 1146258)
 (|boolWordPermute| . 1145937) (|reindex| . 1145658) (|subtract| . 1145605)
 (|sameFace?| . 1145430) (|isSubsetOf?| . 1145341) (|allSubsets| . 1144717)
 (|getIndexesSigned| . 1144622) (|getIndexes| . 1144509)
 (|orientedFacetIfCan| . 1144395) (|orientedFacetSigned| . 1144300)
 (|orientedFacetUnsigned| . 1144205) (|orientedFacet| . 1143967)
 (|atom_to_string| . 1143842) (|operator| . 1141427) (|arguments| . 1141289)
 (|has_op?| . 1141133) (|is_symbol?| . 1140977) (|precondition| . 1140886)
 (|OMmakeConn| . 1140782) (|OMcloseConn| . 1140694)
 (|OMconnInDevice| . 1140589) (|OMconnOutDevice| . 1140484)
 (|OMconnectTCP| . 1140319) (|OMbindTCP| . 1140184) (|OMopenFile| . 1140048)
 (|OMopenString| . 1139915) (|OMclose| . 1139833) (|OMsetEncoding| . 1139702)
 (|OMputApp| . 1139620) (|OMputAtp| . 1139538) (|OMputAttr| . 1139456)
 (|OMputBind| . 1139374) (|OMputBVar| . 1139292) (|OMputError| . 1139210)
 (|OMputObject| . 1139128) (|OMputEndApp| . 1139046) (|OMputEndAtp| . 1138964)
 (|OMputEndAttr| . 1138882) (|OMputEndBind| . 1138800)
 (|OMputEndBVar| . 1138718) (|OMputEndError| . 1138636)
 (|OMputEndObject| . 1138554) (|OMputInteger| . 1138432)
 (|OMputFloat| . 1138306) (|OMputVariable| . 1138185) (|OMputString| . 1138064)
 (|OMputSymbol| . 1137940) (|OMgetApp| . 1137858) (|OMgetAtp| . 1137776)
 (|OMgetAttr| . 1137694) (|OMgetBind| . 1137612) (|OMgetBVar| . 1137530)
 (|OMgetError| . 1137448) (|OMgetObject| . 1137366) (|OMgetEndApp| . 1137284)
 (|OMgetEndAtp| . 1137202) (|OMgetEndAttr| . 1137120)
 (|OMgetEndBind| . 1137038) (|OMgetEndBVar| . 1136956)
 (|OMgetEndError| . 1136874) (|OMgetEndObject| . 1136792)
 (|OMgetInteger| . 1136705) (|OMgetFloat| . 1136614)
 (|OMgetVariable| . 1136528) (|OMgetString| . 1136442)
 (|OMgetSymbol| . 1136303) (|OMgetType| . 1136217)
 (|OMencodingBinary| . 1136167) (|OMencodingSGML| . 1136117)
 (|OMencodingXML| . 1136067) (|OMencodingUnknown| . 1136017)
 (|omError| . 1135875) (|errorInfo| . 1135781) (|errorKind| . 1135678)
 (|OMReadError?| . 1135588) (|OMUnknownSymbol?| . 1135498)
 (|OMUnknownCD?| . 1135408) (|OMParseError?| . 1135318) (|OMwrite| . 1133882)
 (|OMread| . 1133756) (|OMreadFile| . 1133638) (|OMreadStr| . 1133520)
 (|OMlistCDs| . 1133420) (|OMlistSymbols| . 1133290)
 (|OMsupportsCD?| . 1133168) (|OMsupportsSymbol?| . 1133043)
 (|OMunhandledSymbol| . 1132921) (|OMreceive| . 1132785) (|OMsend| . 1132621)
 (|OMserve| . 1132486) (|infinity| . 1132276) (|makeop| . 1131944)
 (|opeval| . 1131640) (|evaluateInverse| . 1131343) (|evaluate| . 1130271)
 (|conjug| . 1129965) (|knownHandler?| . 1129771) (|handler| . 1129612)
 (|setHandler!| . 1129450) (|removeHandler!| . 1129259)
 (|getDatabase| . 1129122) (|whatInfinity| . 1128975) (|infinite?| . 1128708)
 (|finite?| . 1128356) (|minusInfinity| . 1128148) (|plusInfinity| . 1127940)
 (|pureLex| . 1127717) (|totalLex| . 1127494) (|reverseLex| . 1127271)
 (|leftLcm| . 1127124) (|right_ext_ext_GCD| . 1126777)
 (|rightExtendedGcd| . 1126493) (|rightGcd| . 1126346)
 (|rightExactQuotient| . 1126193) (|rightRemainder| . 1126046)
 (|rightQuotient| . 1125899) (|rightLcm| . 1125752)
 (|leftExtendedGcd| . 1125468) (|leftGcd| . 1125321)
 (|leftExactQuotient| . 1125168) (|leftRemainder| . 1125021)
 (|leftQuotient| . 1124874) (|times| . 1124160) (|monicLeftDivide| . 1123585)
 (|monicRightDivide| . 1123010) (|leftDivide| . 1122453)
 (|rightDivide| . 1121896) (|output| . 1121511) (|outputList| . 1121388)
 (|hcenter| . 1121225) (|pad| . 1121053) (|lines| . 1120963)
 (|width| . 1120663) (|height| . 1119858) (|or| . 1119711) (|and| . 1119564)
 (|quo| . 1119403) (|rem| . 1119242) (~= . 1119107) (|blankSeparate| . 1119012)
 (|semicolonSeparate| . 1118917) (|commaSeparate| . 1118822) (|pile| . 1118531)
 (|paren| . 1118280) (|bracket| . 1117665) (|brace| . 1117525)
 (|prod| . 1117379) (|overlabel| . 1117329) (|overbar| . 1117048)
 (|prime| . 1116682) (|quote| . 1116594) (|supersub| . 1116496)
 (|presuper| . 1116446) (|presub| . 1116396) (|super| . 1116346)
 (|sub| . 1116296) (|rarrow| . 1116246) (|assign| . 1111278)
 (|slash| . 1110991) (|over| . 1110941) (|zag| . 1110721) (|box| . 1110290)
 (|label| . 1110240) (|infix?| . 1110159) (|postfix| . 1110109)
 (|infix| . 1109420) (|prefix| . 1108788) (|vconcat| . 1108131)
 (|hconcat| . 1107897) (|rspace| . 1107811) (|vspace| . 1107730)
 (|hspace| . 1107649) (|messagePrint| . 1107535) (|message| . 1107455)
 (|padecf| . 1107136) (|pade| . 1106177) (|root| . 1105910)
 (|quotientByP| . 1105848) (|moduloP| . 1105743) (|modulus| . 1104467)
 (|digits| . 1103779) (|continuedFraction| . 1102770) (|light| . 1102694)
 (|pastel| . 1102618) (|bright| . 1102322) (|dim| . 1102246) (|dark| . 1102170)
 (|complex_curve| . 1102066) (|get_value| . 1101962)
 (|motzkinPathArray| . 1101782) (|jacobiPathArray| . 1101605)
 (|bottom| . 1101347) (|surface| . 1101249) (|coordinate| . 1100824)
 (|partitions| . 1100339) (|odd_partitions| . 1100015)
 (|distinct_partitions| . 1099691) (|conjugates| . 1099566)
 (|shuffle| . 1099394) (|shufflein| . 1099222) (|sequences| . 1098883)
 (|permutations| . 1098723) (|lists| . 1098467) (|atoms| . 1098211)
 (|makeResult| . 1097907) (|is?| . 1096584) (|Is| . 1095216)
 (|addMatchRestricted| . 1095025) (|insertMatch| . 1094837)
 (|addMatch| . 1094649) (|getMatch| . 1094462) (|failed| . 1094122)
 (|failed?| . 1093720) (|optpair| . 1093578) (|getBadValues| . 1093449)
 (|resetBadValues| . 1093360) (|hasTopPredicate?| . 1093236)
 (|topPredicate| . 1093046) (|setTopPredicate| . 1092884)
 (|patternVariable| . 1092724) (|withPredicates| . 1092592)
 (|setPredicates| . 1092460) (|predicates| . 1092331)
 (|hasPredicate?| . 1092207) (|optional?| . 1092083) (|multiple?| . 1091959)
 (|generic?| . 1091835) (|quoted?| . 1091711) (|inR?| . 1091587)
 (|depth| . 1091361) (|isList| . 1091219) (|isQuotient| . 1090993)
 (|isOp| . 1090576) (|predicate| . 1090359) (|satisfy?| . 1089700)
 (|addBadValue| . 1089409) (|badValues| . 1089207) (|retractable?| . 1088319)
 (|listOfTerms| . 1087498) (|One| . 1087010) (|adjoint| . 1085695)
 (|id_map| . 1085479) (|diff_map| . 1085265) (|ptree| . 1085078)
 (|coerceImages| . 1084756) (|fixedPoints| . 1084600) (|odd?| . 1084186)
 (|even?| . 1083772) (|numberOfCycles| . 1083633) (|cyclePartition| . 1083503)
 (|coerceListOfPairs| . 1083366) (|coercePreimagesImages| . 1083229)
 (|listRepresentation| . 1083008) (|permanent| . 1082805) (|cycles| . 1082658)
 (|cycle| . 1082520) (|perm_to_vec| . 1082243)
 (|relationsInGenerators| . 1082085) (|relationsInStrongGenerators| . 1081927)
 (|initializeGroupForWordProblem| . 1081628) (|movedPoints| . 1081371)
 (|wordInGenerators| . 1081173) (|wordInStrongGenerators| . 1080975)
 (|orbits| . 1080828) (|orbit| . 1080203) (|permutationGroup| . 1080047)
 (|wordsForStrongGenerators| . 1079878) (|strongGenerators| . 1079722)
 (|base| . 1079253) (|random| . 1078092) (|generators| . 1077566)
 (|eval1a| . 1077183) (|eval1| . 1075677) (|modpreduction| . 1075018)
 (|modpeval| . 1074770) (|addVertex2| . 1074564) (|setMult!| . 1074389)
 (|getMaxRight| . 1074286) (|getMaxLeft| . 1074183) (|getIndexs| . 1073954)
 (|productFacet| . 1073588)
 (|solveLinearPolynomialEquationByRecursion| . 1073174)
 (|factorByRecursion| . 1072745) (|factorSquareFreeByRecursion| . 1072316)
 (|randomR| . 1071689) (|bivariateSLPEBR| . 1071272) (|charthRoot| . 1071013)
 (|conditionP| . 1070812) (|solveLinearPolynomialEquation| . 1069774)
 (|factorSquareFreePolynomial| . 1069569) (|factorPolynomial| . 1069053)
 (|squareFreePolynomial| . 1068848) (|gcdPolynomial| . 1068243)
 (|cmult| . 1067653) (|possibleOrder| . 1067086) (|handle_imaginary| . 1066318)
 (|simplifyCoeffs| . 1065492) (|torsion?| . 1064466) (|torsionIfCan| . 1063323)
 (|getGoodPrime| . 1063022) (|badNum| . 1062443) (|mix| . 1062073)
 (|doubleDisc| . 1061815) (|polyred| . 1061588) (|group_terms| . 1061315)
 (|padicFraction| . 1061207) (|padicallyExpand| . 1061039)
 (|fractionalTerms| . 1060766) (|numberOfFractionalTerms| . 1060630)
 (|compactFraction| . 1060522) (|partialFraction| . 1059392)
 (|gcdPrimitive| . 1058503) (|symmetricGroup| . 1058065)
 (|alternatingGroup| . 1057730) (|abelianGroup| . 1057553)
 (|cyclicGroup| . 1057115) (|dihedralGroup| . 1056677) (|mathieu11| . 1056388)
 (|mathieu12| . 1056099) (|mathieu22| . 1055810) (|mathieu23| . 1055521)
 (|mathieu24| . 1055232) (|janko2| . 1054943) (|rubiksGroup| . 1054821)
 (|youngGroup| . 1054492) (|lexGroebner| . 1054304) (|totalGroebner| . 1054116)
 (|qcoerce| . 1053939) (|expressIdealMember| . 1053828)
 (|principalIdeal| . 1053634) (|LagrangeInterpolation| . 1053423)
 (|psolve| . 1041853) (|wrregime| . 1040745) (|rdregime| . 1039475)
 (|bsolve| . 1037771) (|dmp2rfi| . 1036164) (|se2rfi| . 1035596)
 (|pr2dmp| . 1035093) (|hasoln| . 1034439) (|ParCondList| . 1033366)
 (|redpps| . 1032674) (|B1solve| . 1031661) (|factorset| . 1031196)
 (|maxrank| . 1030272) (|minrank| . 1029348) (|minset| . 1028842)
 (|nextSublist| . 1028289) (|overset?| . 1027717) (|ParCond| . 1026981)
 (|redmat| . 1026451) (|regime| . 1025052) (|sqfree| . 1024615)
 (|inconsistent?| . 1023538) (|debug| . 1023243) (|numFunEvals| . 1023171)
 (|setAdaptive| . 1023096) (|adaptive?| . 1023024)
 (|setScreenResolution| . 1022949) (|screenResolution| . 1022706)
 (|setMaxPoints| . 1022631) (|maxPoints| . 1022388) (|setMinPoints| . 1022313)
 (|minPoints| . 1022070) (|parametric?| . 1021995) (|plotPolar| . 1021313)
 (|debug3D| . 1021236) (|numFunEvals3D| . 1021162) (|setAdaptive3D| . 1021085)
 (|adaptive3D?| . 1021011) (|setScreenResolution3D| . 1020934)
 (|screenResolution3D| . 1020860) (|setMaxPoints3D| . 1020783)
 (|maxPoints3D| . 1020709) (|setMinPoints3D| . 1020632)
 (|minPoints3D| . 1020558) (|tValues| . 1020450) (|tRange| . 1020264)
 (|plot| . 1018262) (|pointPlot| . 1017557) (|calcRanges| . 1017376)
 (|optional| . 1017074) (|multiple| . 1016772) (|fixPredicate| . 1016437)
 (|patternMatch| . 1011463) (|patternMatchTimes| . 1010850)
 (|bernoulli| . 1010513) (|chebyshevT| . 1010167) (|chebyshevU| . 1009821)
 (|cyclotomic| . 1009307) (|euler| . 1009011) (|fixedDivisor| . 1008834)
 (|laguerre| . 1008657) (|legendre| . 1008358) (|dmpToHdmp| . 1008086)
 (|hdmpToDmp| . 1007814) (|pToHdmp| . 1007575) (|hdmpToP| . 1007336)
 (|dmpToP| . 1007108) (|pToDmp| . 1006880) (|sylvesterSequence| . 1006672)
 (|sturmSequence| . 1006467) (|boundOfCauchy| . 1006256)
 (|sturmVariationsOf| . 1005971) (|lazyVariations| . 1005645)
 (|content| . 1004958) (|minimumDegree| . 1004168) (|isPlus| . 1003015)
 (|isTimes| . 1001835) (|isExpt| . 999798) (|isPower| . 998734)
 (|rroot| . 998009) (|qroot| . 997236) (|froot| . 996479) (|nthr| . 995745)
 (|copy_first| . 995568) (|copy_slice| . 995388) (|eval_at| . 995240)
 (|vector_add_mul| . 995054) (|mul_by_binomial| . 994699)
 (|mul_by_scalar| . 994294) (|mul| . 994149)
 (|truncated_multiplication| . 994001) (|truncated_mul_add| . 993818)
 (|truncated_mul_add2| . 993632) (|pow| . 993192) (|divide!| . 992797)
 (|remainder!| . 992620) (|vector_combination| . 992431) (|to_mod_pa| . 991759)
 (|pa_to_sup| . 991118) (|lcm| . 990785) (|extended_gcd| . 990594) (< . 990183)
 (> . 989952) (>= . 989814) (<= . 989542) (|createY| . 989041)
 (|createX| . 988540) (|createWidth| . 988048) (|isDirected?| . 987598)
 (|coverMatrix| . 987450) (|zetaMatrix| . 987302) (|moebius| . 987055)
 (|isAntiChain?| . 986931) (|isChain?| . 986807) (|objectToIndex| . 986669)
 (|indexToObject| . 986531) (|lowerSet| . 986442) (|upperSet| . 986353)
 (|lub| . 986158) (|glb| . 985963) (|joinIfCan| . 985623)
 (|meetIfCan| . 985283) (|implies| . 985025) (|opposite| . 984936)
 (|addArrow| . 984841) (|addObject| . 984749) (|getArr| . 984607)
 (|getVert| . 984483) (|finitePoset| . 984125) (|powerset| . 983945)
 (|completelyOrderedSet| . 983781) (|posetN5| . 983617) (|posetM5| . 983453)
 (|posetO6| . 983289) (|posetP6| . 983125) (|posetL7| . 982961)
 (|firstUncouplingMatrix| . 982687) (|le| . 982554) (|lcx0| . 981979)
 (|lcz| . 981544) (|coeffs0| . 981257) (|coeffs1| . 980953)
 (|alg_reduce0| . 980743) (|alg_reduce| . 980450)
 (|alg_trial_division| . 980126) (|integral| . 978737)
 (|primitiveElement| . 976077) (|nextPrime| . 975960) (|prevPrime| . 975843)
 (|primes| . 975695) (|print| . 975499) (|merge!| . 975075)
 (|get_rational_roots| . 974283) (|integerBound| . 973808)
 (|resultantEuclidean| . 973489) (|semiResultantEuclidean2| . 973235)
 (|semiResultantEuclidean1| . 972981) (|indiceSubResultant| . 972750)
 (|indiceSubResultantEuclidean| . 972379)
 (|semiIndiceSubResultantEuclidean| . 972073) (|degreeSubResultant| . 971842)
 (|degreeSubResultantEuclidean| . 971471)
 (|semiDegreeSubResultantEuclidean| . 971165)
 (|lastSubResultantEuclidean| . 970843)
 (|semiLastSubResultantEuclidean| . 970586)
 (|subResultantGcdEuclidean| . 970302)
 (|semiSubResultantGcdEuclidean2| . 970054)
 (|semiSubResultantGcdEuclidean1| . 969806) (|discriminantEuclidean| . 969487)
 (|semiDiscriminantEuclidean| . 969233) (|chainSubResultants| . 969023)
 (|schema| . 968786) (|resultantReduit| . 968572)
 (|resultantReduitEuclidean| . 968215)
 (|semiResultantReduitEuclidean| . 967923) (|divide| . 967076)
 (|next_sousResultant2| . 966888) (|pdct| . 966808) (|powers| . 966657)
 (|partition| . 966443) (|complete| . 965566) (|pole?| . 965221)
 (|zRange| . 965096) (|yRange| . 964848) (|xRange| . 964600)
 (|listBranches| . 964320) (|triangular?| . 963982)
 (|rewriteIdealWithRemainder| . 963634)
 (|rewriteIdealWithHeadRemainder| . 963286) (|remainder| . 962842)
 (|headRemainder| . 962465) (|roughUnitIdeal?| . 962127)
 (|roughEqualIdeals?| . 961786) (|roughSubIdeal?| . 961445)
 (|roughBase?| . 961107) (|trivialIdeal?| . 960806) (|collectUpper| . 960537)
 (|collect| . 960099) (|collectUnder| . 959830) (|mainVariable?| . 959526)
 (|mainVariables| . 959225) (|removeSquaresIfCan| . 958901)
 (|unprotectedRemoveRedundantFactors| . 958581)
 (|removeRedundantFactors| . 956902) (|certainlySubVariety?| . 956547)
 (|possiblyNewVariety?| . 956155) (|probablyZeroDim?| . 955803)
 (|selectPolynomials| . 955294) (|selectOrPolynomials| . 954769)
 (|selectAndPolynomials| . 954244) (|quasiMonicPolynomials| . 953781)
 (|univariate?| . 953464) (|univariatePolynomials| . 953001)
 (|linear?| . 952684) (|linearPolynomials| . 952221) (|bivariate?| . 951904)
 (|bivariatePolynomials| . 951441)
 (|removeRoughlyRedundantFactorsInPols| . 950758)
 (|removeRoughlyRedundantFactorsInPol| . 950431) (|interReduce| . 950107)
 (|roughBasicSet| . 949650) (|crushedSet| . 949326)
 (|rewriteSetByReducingWithParticularGenerators| . 948853)
 (|rewriteIdealWithQuasiMonicGenerators| . 948426)
 (|squareFreeFactors| . 948077) (|univariatePolynomialsGcds| . 947336)
 (|removeRoughlyRedundantFactorsInContents| . 946977)
 (|removeRedundantFactorsInContents| . 946618)
 (|removeRedundantFactorsInPols| . 946259) (|irreducibleFactors| . 945826)
 (|lazyIrreducibleFactors| . 945393)
 (|removeIrreducibleRedundantFactors| . 944957) (|normalForm| . 944206)
 (|changeBase| . 943853) (|companionBlocks| . 943501) (|xCoord| . 943378)
 (|yCoord| . 943255) (|zCoord| . 943132) (|rCoord| . 943009)
 (|thetaCoord| . 942886) (|phiCoord| . 942763) (|color| . 942566)
 (|hue| . 942295) (|shade| . 942096) (|nthRootIfCan| . 941931)
 (|expIfCan| . 941811) (|logIfCan| . 941691) (|sinIfCan| . 941571)
 (|cosIfCan| . 941451) (|tanIfCan| . 941331) (|cotIfCan| . 941211)
 (|secIfCan| . 941091) (|cscIfCan| . 940971) (|asinIfCan| . 940851)
 (|acosIfCan| . 940731) (|atanIfCan| . 940611) (|acotIfCan| . 940491)
 (|asecIfCan| . 940371) (|acscIfCan| . 940251) (|sinhIfCan| . 940131)
 (|coshIfCan| . 940011) (|tanhIfCan| . 939891) (|cothIfCan| . 939771)
 (|sechIfCan| . 939651) (|cschIfCan| . 939531) (|asinhIfCan| . 939411)
 (|acoshIfCan| . 939291) (|atanhIfCan| . 939171) (|acothIfCan| . 939051)
 (|asechIfCan| . 938931) (|acschIfCan| . 938811) (|pushdown| . 937723)
 (|pushup| . 936635) (|reducedDiscriminant| . 936320)
 (|idealSimplify| . 936064) (|definingInequation| . 935808)
 (|definingEquations| . 935517) (|setStatus| . 935204)
 (|quasiAlgebraicSet| . 934910) (|radicalSimplify| . 934272)
 (|denominator| . 933841) (|numerator| . 933427) (|denom| . 932233)
 (|numer| . 931026) (|quadraticForm| . 930854) (|back| . 930763)
 (|front| . 930672) (|rotate!| . 930581) (|dequeue!| . 930490)
 (|enqueue!| . 930396) (|quatern| . 930274) (|imagK| . 930052)
 (|imagJ| . 929830) (|imagI| . 929608) (|queue| . 929486) (|nthRoot| . 928801)
 (|fractRadix| . 928666) (|wholeRadix| . 928534) (|cycleRagits| . 928402)
 (|prefixRagits| . 928270) (|fractRagits| . 928136) (|wholeRagits| . 928004)
 (|radix| . 927842) (|randnum| . 927665) (|reseed| . 927542) (|seed| . 927454)
 (|rational| . 925971) (|rational?| . 924619) (|rationalIfCan| . 923136)
 (|setvalue!| . 922992) (|setchildren!| . 922820) (|node?| . 922655)
 (|child?| . 922490) (|leaves| . 922360) (|cyclic?| . 922230)
 (|nodes| . 922100) (|rename| . 922004) (|rename!| . 921908)
 (|mainValue| . 921783) (|mainDefiningPolynomial| . 921658)
 (|mainForm| . 921552) (|sqrt| . 920646) (|multi_SPDE| . 919519)
 (SPDE1 . 919064) (|ei_int| . 918213) (|mk_erf| . 917633)
 (|risch_de_ext| . 916856) (|do_risch_DE| . 916021) (|do_param_RDE| . 915317)
 (|param_rde| . 912242) (|param_rde2| . 910855) (|exp_lower_bound| . 909964)
 (|weighted| . 909728) (|rdHack1| . 909472) (|midpoint| . 909149)
 (|midpoints| . 908791) (|realZeros| . 905489)
 (|mainCharacterization| . 905086) (|algebraicOf| . 904659)
 (|makeRec| . 903996) (|makeFEq| . 903330) (|getEq| . 902807)
 (|values| . 901645) (|eltable?| . 901094) (|ReduceOrder| . 900644)
 (|setref| . 900557) (|deref| . 900475) (|ref| . 900393)
 (|radicalEigenvectors| . 899909) (|radicalEigenvector| . 899648)
 (|radicalEigenvalues| . 899451) (|eigenMatrix| . 899247)
 (|normalise| . 899122) (|gramschmidt| . 898988) (|orthonormalBasis| . 898780)
 (|antisymmetricTensors| . 898330) (|createGenericMatrix| . 898128)
 (|symmetricTensors| . 897761) (|tensorProduct| . 897207)
 (|permutationRepresentation| . 896148) (|completeEchelonBasis| . 895966)
 (|createRandomElement| . 895783) (|cyclicSubmodule| . 895514)
 (|standardBasisOfCyclicSubmodule| . 895256) (|areEquivalent?| . 894520)
 (|isAbsolutelyIrreducible?| . 894072) (|meatAxe| . 892874)
 (|scanOneDimSubspaces| . 892592) (|double| . 892340) (|expt| . 892088)
 (|lift| . 890168) (|showArrayValues| . 890091) (|showScalarValues| . 890014)
 (|solveRetract| . 889606) (|variables| . 886696) (|mainVariable| . 885765)
 (|univariate| . 882348) (|multivariate| . 880207) (|uniform01| . 880115)
 (|normal01| . 880023) (|exponential1| . 879931) (|chiSquare1| . 879790)
 (|normal| . 879647) (|exponential| . 879251) (|chiSquare| . 879091)
 (F . 878928) (|t| . 878768) (|alg_split_roots| . 878205)
 (|alg_split_root0| . 877859) (|uniform| . 877382) (|binomial| . 876585)
 (|poisson| . 876419) (|geometric| . 876253) (|ridHack1| . 876138)
 (|interpolate| . 874695) (|nullity| . 873315) (|column| . 872762)
 (|qelt| . 871473) (|maxColIndex| . 870926) (|minColIndex| . 870379)
 (|maxRowIndex| . 869832) (|minRowIndex| . 869285) (|antisymmetric?| . 868696)
 (|symmetric?| . 868142) (|diagonal?| . 867401) (|square?| . 866847)
 (|matrix| . 864665) (|rectangularMatrix| . 864405) (|annihilate?| . 864326)
 (|try_real| . 863668) (|characteristic| . 861590) (|round| . 861309)
 (|wholePart| . 860846) (|norm| . 857677) (|mightHaveRoots| . 857430)
 (|refine| . 855376) (|middle| . 855167) (|size| . 853036) (|right| . 852415)
 (|left| . 851794) (|roman| . 851629) (|complex_roots| . 850960)
 (|quartic2| . 850288) (|my_sqrt| . 849906) (|my_root3| . 849524)
 (|mainSquareFreePart| . 849289) (|mainPrimitivePart| . 849054)
 (|mainContent| . 848819) (|primitivePart!| . 848584) (|gcd| . 845913)
 (|iexactQuo| . 844755) (|next_subResultant2| . 844506)
 (|LazardQuotient2| . 843979) (|LazardQuotient| . 843458)
 (|subResultantChain| . 843180) (|halfExtendedSubResultantGcd2| . 842546)
 (|halfExtendedSubResultantGcd1| . 841912) (|extendedSubResultantGcd| . 841166)
 (|exactQuotient!| . 840682) (|exactQuotient| . 840198)
 (|primPartElseUnitCanonical!| . 839958) (|primPartElseUnitCanonical| . 839718)
 (|retract| . 833029) (|retractIfCan| . 826011) (|lazyResidueClass| . 825337)
 (|monicModulo| . 825019) (|lazyPseudoDivide| . 823862)
 (|lazyPremWithDefault| . 823141) (|lazyPquo| . 822728) (|lazyPrem| . 822315)
 (|pquo| . 821902) (|prem| . 821489) (|supRittWu?| . 821255)
 (|RittWuCompare| . 821019) (|mainMonomials| . 820788)
 (|mainCoefficients| . 820557) (|leastMonomial| . 820354)
 (|mainMonomial| . 820151) (|quasiMonic?| . 819920) (|monic?| . 819487)
 (|deepestInitial| . 819284) (|iteratedInitials| . 819053)
 (|deepestTail| . 818850) (|head| . 818544) (|mdeg| . 818295) (|mvar| . 817828)
 (|relativeApprox| . 817218) (|rootOf| . 815608) (|allRootsOf| . 814483)
 (|definingPolynomial| . 813356) (|positive?| . 812786) (|negative?| . 812216)
 (|augment| . 810874) (|lastSubResultant| . 809938)
 (|lastSubResultantElseSplit| . 809599) (|invertibleSet| . 809276)
 (|invertible?| . 808544) (|invertibleElseSplit?| . 808199)
 (|purelyAlgebraicLeadingMonomial?| . 807876)
 (|algebraicCoefficients?| . 807553) (|purelyTranscendental?| . 807230)
 (|purelyAlgebraic?| . 806589) (|prepareSubResAlgo| . 806102)
 (|internalLastSubResultant| . 805102) (|integralLastSubResultant| . 804663)
 (|toseLastSubResultant| . 804224) (|toseInvertible?| . 803346)
 (|toseInvertibleSet| . 802950) (|toseSquareFreePart| . 802514)
 (|rsimp| . 802395) (|rsimp1| . 802245) (|quotedOperators| . 801769)
 (|pattern| . 801329) (|suchThat| . 799099) (|rule| . 798190)
 (|rules| . 797704) (|ruleset| . 797218) (|rur| . 794837) (|create| . 794782)
 (|nullBoundary| . 794691) (|boxBoundary| . 794594)
 (|ellipseBoundary| . 794497) (|intersection| . 794354) (|sunion| . 794257)
 (|extendToPoint| . 794160) (|containsPoint?| . 794028)
 (|lineIntersect| . 793931) (|isNull?| . 793802) (|isEllipse?| . 793673)
 (|isBox?| . 793544) (|getMin| . 793450) (|getMax| . 793356)
 (|getCentre| . 793262) (|clearCache| . 793140) (|linearSearch| . 792988)
 (|enterInCache| . 792695) (|binarySearch| . 792540) (|parse_integer| . 792416)
 (|variableOf| . 792222) (|samplePoint| . 791932) (|hasDimension?| . 791584)
 (|allSimpleCells| . 791051) (|createSceneRoot| . 790704)
 (|createSceneGroup| . 790617) (|addSceneGroup| . 790527)
 (|createSceneLine| . 790105) (|addSceneLine| . 789674)
 (|createSceneLines| . 789540) (|addSceneLines| . 789403)
 (|createSceneShape| . 789026) (|addSceneShape| . 788643)
 (|createSceneDef| . 788516) (|addSceneDef| . 788386)
 (|createSceneUse| . 788262) (|addSceneUse| . 788135)
 (|createSceneArrows| . 787929) (|addSceneArrows| . 787720)
 (|createSceneArrow| . 787349) (|addSceneArrow| . 786972)
 (|createSceneNamedPoints| . 786835) (|addSceneNamedPoints| . 786695)
 (|createSceneIFS| . 786376) (|addSceneIFS| . 786051)
 (|createSceneBox| . 785922) (|addSceneBox| . 785790)
 (|createSceneText| . 785148) (|addSceneText| . 784497)
 (|createSceneClip| . 784367) (|addSceneClip| . 784234)
 (|createSceneGrid| . 783941) (|addSceneGrid| . 783642)
 (|createScenePattern| . 783433) (|addScenePattern| . 783221)
 (|createSceneRuler| . 783058) (|addSceneRuler| . 782892)
 (|createSceneGraph| . 782667) (|addSceneGraph| . 782439)
 (|createSceneMaterial| . 781968) (|addSceneMaterial| . 781491)
 (|createSceneTransform| . 781360) (|addSceneTransform| . 781226)
 (|createPlot1Din2D| . 780721) (|addPlot1Din2D| . 780210)
 (|createPlot1Din2Dparametric| . 779903) (|addPlot1Din2Dparametric| . 779593)
 (|createPlot1Din3Dparametric| . 779041) (|addPlot1Din3Dparametric| . 778483)
 (|createPlot2Din3D| . 777949) (|addPlot2Din3D| . 777676)
 (|createPlot2Din3Dparametric| . 777089) (|addPlot2Din3Dparametric| . 776496)
 (|createArrows2Din2D| . 776259) (|addArrows2Din2D| . 776019)
 (|addChild!| . 775894) (|removeChild!| . 775769) (|setTransform!| . 775610)
 (|toSVG| . 775071) (|toX3D| . 774647) (|toObj| . 774249) (|writeSvg| . 774097)
 (|writeSvgQuantised| . 773945) (|writeX3d| . 773793) (|writeObj| . 773474)
 (|smesh| . 773306) (|singleFace| . 773178) (|subdivide| . 773085)
 (|sierpinskiDivide| . 772943) (|stube| . 772466) (|curveLoops| . 772228)
 (|indexes| . 772071) (|pointList| . 771812) (|findNode| . 771638)
 (|addNode!| . 771461) (|addPoints!| . 771320) (|findPoint| . 771182)
 (|getNames| . 771031) (|isNodeBranch?| . 770895) (|isNodeLeaf?| . 770759)
 (|isPointLeaf?| . 770623) (|namedBranch| . 770413) (|namedPoints| . 770041)
 (|normalisePoint| . 769949) (|structuralConstants| . 768556)
 (|equation| . 768195) (|reverse| . 767407) (|incr| . 767280) (|high| . 767188)
 (|low| . 767096) (BY . 766966) (|horizSplit| . 766029) (|horizJoin| . 765889)
 (|join| . 765148) (|pivots| . 764886) (|pivot| . 764643)
 (|primitiveRowEchelon| . 764209) (|setGcdMode| . 764006)
 (|rowEchelon| . 761082) (|extract| . 760904) (|appendRow!| . 760614)
 (|consRow!| . 760324) (|deleteRow!| . 760124) (|setRow!| . 759263)
 (|row| . 758399) (|sortedPurge!| . 758177) (|purge!| . 757955)
 (|elimZeroCols!| . 757793) (|allIndices| . 757621) (|nrows| . 756690)
 (|ncols| . 755759) (|dilate| . 755645) (|firstn| . 755457)
 (|sequence| . 755170) (|apply| . 752898) (|union| . 752105)
 (|subset?| . 751971) (|symmetricDifference| . 751865) (|difference| . 751655)
 (|intersect| . 749632) (|set| . 749403) (|latex| . 749318)
 (|complement| . 748900) (|subsetLattice| . 748750) (|delta| . 748455)
 (|enumerate| . 748169) (|setOfMinN| . 747969) (|elements| . 747769)
 (|replaceKthElement| . 747604) (|incrementKthElement| . 747442)
 (|cdr| . 747214) (|car| . 746986) (|float| . 746522) (|integer| . 746032)
 (|symbol| . 745473) (|destruct| . 744990) (|float?| . 744727)
 (|integer?| . 744105) (|symbol?| . 743596) (|string?| . 743209)
 (|list?| . 742946) (|pair?| . 742683) (|null?| . 742420) (|eq| . 742154)
 (|fortran| . 741919) (|startTable!| . 741083) (|stopTable!| . 740319)
 (|supDimElseRittWu?| . 739537) (|algebraicSort| . 738761)
 (|moreAlgebraic?| . 737979) (|subTriSet?| . 737197) (|subPolSet?| . 736359)
 (|internalSubPolSet?| . 735521) (|internalInfRittWu?| . 734683)
 (|internalSubQuasiComponent?| . 733929) (|subQuasiComponent?| . 732297)
 (|removeSuperfluousQuasiComponents| . 731521) (|subCase?| . 730603)
 (|removeSuperfluousCases| . 729771) (|prepareDecompose| . 728489)
 (|branchIfCan| . 727373) (|startTableGcd!| . 726500)
 (|stopTableGcd!| . 725699) (|startTableInvSet!| . 724826)
 (|stopTableInvSet!| . 724025) (|stosePrepareSubResAlgo| . 723509)
 (|stoseInternalLastSubResultant| . 722455)
 (|stoseIntegralLastSubResultant| . 721987) (|stoseLastSubResultant| . 721519)
 (|stoseInvertible?_sqfreg| . 721006) (|stoseInvertibleSet_sqfreg| . 720581)
 (|stoseInvertible?_reg| . 720068) (|stoseInvertibleSet_reg| . 719643)
 (|stoseInvertible?| . 718707) (|stoseInvertibleSet| . 718282)
 (|stoseSquareFreePart| . 717817) (|coleman| . 717641)
 (|inverseColeman| . 717465) (|listYoungTableaus| . 717286)
 (|makeYoungTableau| . 717113) (|nextColeman| . 716937)
 (|nextLatticePermutation| . 716779) (|nextPartition| . 716417)
 (|numberOfImproperPartitions| . 716299) (|subSet| . 716141)
 (|unrankImproperPartitions0| . 715983) (|unrankImproperPartitions1| . 715825)
 (|SturmHabichtSequence| . 715612) (|SturmHabichtCoefficients| . 715399)
 (|SturmHabicht| . 715186) (|countRealRoots| . 714976)
 (|SturmHabichtMultiple| . 714724) (|countRealRootsMultiple| . 714475)
 (|coHomology| . 714032) (|homology| . 713343) (|coChain| . 713047)
 (|chain| . 712613) (|fundamentalGroup| . 711615) (|oneSkeleton| . 711279)
 (|simplicialJoin| . 711125) (|makeDisjoint| . 711009)
 (|refactorIndexes| . 710742) (|cone| . 710580) (|link| . 710151)
 (|star| . 709994) (|boundary| . 709400) (|addImpliedFaces| . 709062)
 (|sort| . 708041) (|grade| . 707477) (|minIndex| . 707055)
 (|maxIndex| . 706479) (|addSimplex| . 706322)
 (|simplicialComplexIfCan| . 705977) (|simplicialComplex| . 705361)
 (|sphereSolid| . 704977) (|sphereSurface| . 704593) (|line| . 704428)
 (|torusSurface| . 703995) (|band| . 703709) (|moebiusBand| . 703423)
 (|projectiveSpace| . 702872) (|kleinBottle| . 702439) (|dunceHat| . 702127)
 (|Or| . 701988) (|And| . 701849) (|Not| . 701716) (|xor| . 701566)
 (|not| . 701380) (|/\\| . 701089) (|\\/| . 700798) (~ . 700287)
 (|top| . 700196) (|pop!| . 700105) (|push!| . 700011) (|redux| . 699694)
 (|freeVariable?| . 699565) (|getVariable| . 699395) (|isS?| . 699269)
 (|isK?| . 699143) (|isI?| . 699017) (|variable?| . 698891) (|atom?| . 698011)
 (|getChildren| . 697422) (|parseTerm| . 696802) (|parseSki| . 696677)
 (S . 696589) (K . 696501) (I . 696413) (|ski| . 696230) (|Delta| . 695795)
 (D . 693222) (|Pfaffian| . 692656) (|minordet| . 691801)
 (|determinant| . 690627) (|diagonalProduct| . 689955) (|trace| . 689136)
 (|diagonal| . 688692) (|diagonalMatrix| . 687109) (|scalarMatrix| . 686584)
 (|hermite| . 686131) (|completeHermite| . 685783) (|smith| . 685204)
 (|completeSmith| . 684172) (|diophantineSystem| . 683742)
 (|remap_variables| . 683357) (|csubst| . 682999)
 (|particularSolution| . 680649) (|linear| . 679670) (|quadratic| . 678688)
 (|cubic| . 677703) (|quartic| . 676715) (|aLinear| . 676254)
 (|aQuadratic| . 675790) (|aCubic| . 675323) (|aQuartic| . 674853)
 (|radicalSolve| . 671841) (|radicalRoots| . 671084) (|contractSolve| . 670135)
 (|cyclotomic_case?| . 669813) (|radical_solve| . 669005)
 (|decomposeFunc| . 668764) (|limitPart| . 668715) (|integerPart| . 668612)
 (|ordinalPower| . 668560) (|ordinalMul| . 668508) (|ordinalAdd| . 668456)
 (|omegapower| . 668407) (|omega| . 668275) (|bubbleSort!| . 667681)
 (|insertionSort!| . 667087) (|check| . 666213) (|objects| . 665820)
 (|lprop| . 665663) (|llprop| . 665497) (|lllp| . 665339) (|lllip| . 665171)
 (|lp| . 665031) (|mesh?| . 664901) (|mesh| . 663495) (|polygon?| . 663365)
 (|polygon| . 662806) (|closedCurve?| . 662676) (|closedCurve| . 662117)
 (|curve?| . 661987) (|curve| . 661233) (|point?| . 661103)
 (|enterPointData| . 660914) (|composites| . 660784) (|components| . 660654)
 (|numberOfComposites| . 660513) (|numberOfComponents| . 659694)
 (|create3Space| . 659468) (|outputAsFortran| . 658957)
 (|outputAsMathML| . 658694) (|outputAsTex| . 658431) (|abs| . 657467)
 (|unitStep| . 657217) (|ceiling| . 656752) (|floor| . 656287)
 (|fractionPart| . 655368) (|diracDelta| . 655118) (|conjugate| . 654339)
 (|Beta| . 653133) (|digamma| . 652452) (|polygamma| . 651873)
 (|Gamma| . 650852) (|besselJ| . 650360) (|besselY| . 649868)
 (|besselI| . 649376) (|besselK| . 648884) (|airyAi| . 648402)
 (|airyAiPrime| . 647920) (|airyBi| . 647438) (|airyBiPrime| . 646956)
 (|lambertW| . 646289) (|polylog| . 646033) (|weierstrassP| . 645558)
 (|weierstrassPPrime| . 645083) (|weierstrassSigma| . 644821)
 (|weierstrassZeta| . 644559) (|weierstrassPInverse| . 644297)
 (|whittakerM| . 644035) (|whittakerW| . 643773) (|angerJ| . 643517)
 (|weberE| . 643261) (|struveH| . 643005) (|struveL| . 642749)
 (|hankelH1| . 642493) (|hankelH2| . 642237) (|lommelS1| . 641975)
 (|lommelS2| . 641713) (|kummerM| . 641451) (|kummerU| . 641189)
 (|legendreP| . 640696) (|legendreQ| . 640434) (|kelvinBei| . 640178)
 (|kelvinBer| . 639922) (|kelvinKei| . 639666) (|kelvinKer| . 639410)
 (|ellipticK| . 638727) (|ellipticE| . 637094) (|ellipticF| . 636142)
 (|ellipticPi| . 635169) (|jacobiSn| . 634517) (|jacobiCn| . 633865)
 (|jacobiDn| . 633213) (|jacobiZeta| . 632863) (|jacobiTheta| . 632607)
 (|lerchPhi| . 632345) (|riemannZeta| . 631986) (|charlierC| . 631724)
 (|hahn_p| . 631450) (|hahnQ| . 631176) (|hahnR| . 630902) (|hahnS| . 630628)
 (|hermiteH| . 630203) (|jacobiP| . 629935) (|krawtchoukK| . 629667)
 (|laguerreL| . 629064) (|meixnerM| . 628796) (|meixnerP| . 628528)
 (|racahR| . 628248) (|wilsonW| . 627968) (|hypergeometricF| . 627518)
 (|meijerG| . 627056) (|lambertW0| . 626870) (|weierstrassP0| . 626678)
 (|weierstrassPPrime0| . 626486) (|weierstrassZeta0| . 626294)
 (|weierstrassSigma0| . 626102) (|subNode?| . 625823) (|infLex?| . 625488)
 (|setEmpty!| . 625296) (|setStatus!| . 625073) (|setCondition!| . 624878)
 (|setValue!| . 624683) (|copy| . 623067) (|status| . 622564)
 (|condition| . 622372) (|value| . 621589) (|splitNodeOf!| . 621027)
 (|remove!| . 619539) (|remove| . 618487) (|subNodeOf?| . 618161)
 (|nodeOf?| . 617891) (|result| . 617624) (|conditions| . 617404)
 (|updateStatus!| . 617212) (|extractSplittingLeaf| . 617018)
 (|extendedCoords| . 616909) (|screenCoords| . 616800)
 (|screenCoordZ| . 616707) (|screenCoordY| . 616614) (|screenCoordX| . 616521)
 (|inBounds?| . 616426) (|isVector?| . 616337) (|isPoint?| . 616248)
 (|toVector| . 616195) (|toPoint| . 616142) (|perpendicular| . 616086)
 (|colinearity| . 615990) (|parallel| . 615894) (|distance| . 615487)
 (|distanceSquared| . 615391) (|Pnan?| . 615302) (|dimension| . 613478)
 (|max| . 612326) (|min| . 611375) (|sivec| . 611190) (|svec| . 610997)
 (|sipnt| . 610812) (|spnt| . 610619) (|squareMatrix| . 610411)
 (|transpose| . 609395) (|rightTrim| . 609111) (|leftTrim| . 608827)
 (|trim| . 608543) (|split| . 605850) (|position| . 604608)
 (|replace| . 604484) (|match?| . 604351) (|substring?| . 604220)
 (|suffix?| . 604127) (|prefix?| . 604034) (|upperCase!| . 603980)
 (|upperCase| . 603836) (|lowerCase!| . 603782) (|lowerCase| . 603638)
 (|KrullNumber| . 602612) (|numberOfVariables| . 601586)
 (|algebraicDecompose| . 600185) (|transcendentalDecompose| . 597363)
 (|internalDecompose| . 593013) (|decompose| . 589844)
 (|upDateBranches| . 588147) (|printInfo| . 587132) (|pre_process| . 585885)
 (|internalZeroSetSplit| . 585035) (|internalAugment| . 583630)
 (|leadingMonomial| . 582454) (|leadingCoefficient| . 580620)
 (|stack| . 580498) (|possiblyInfinite?| . 580371)
 (|explicitlyFinite?| . 580244) (|nextItem| . 580184) (|init| . 579936)
 (|exp0| . 579780) (|log1| . 579624) (|tensorMap| . 579454)
 (|stransform| . 578803) (|stranslate| . 578654) (|identity| . 578396)
 (|xform| . 578298) (|compound| . 578200) (|STransform1| . 577723)
 (|STransform2| . 577246) (|STransform| . 576769)
 (|distributionBySTransform| . 575725) (|filterUntil| . 575452)
 (|filterWhile| . 575179) (|stream| . 574668) (|showAll?| . 574521)
 (|showAllElements| . 574368) (|showElements| . 574166) (|cons| . 573894)
 (|delay| . 573764) (|findCycle| . 573420) (|repeating?| . 573232)
 (|repeating| . 573116) (|uentries| . 573022) (|ucodeToString| . 572945)
 (|exquo| . 571519) (|recip| . 569474) (|monom| . 569296) (|integers| . 569112)
 (|oddintegers| . 568928) (|int| . 568036) (|mapmult| . 567893)
 (|deriv| . 567599) (|gderiv| . 567406) (|compose| . 567263)
 (|addiag| . 567075) (|prodiag| . 566887) (|general_Lambert_product| . 566706)
 (|lazyIntegrate| . 566246) (|nlde| . 565996) (|powern| . 565772)
 (|mapdiv| . 565594) (|lazyGintegrate| . 565321) (|power| . 564906)
 (|sincos| . 564596) (|sinhcosh| . 564284) (|asin| . 562761) (|acos| . 561238)
 (|atan| . 559623) (|acot| . 558300) (|asec| . 556977) (|acsc| . 555654)
 (|sinh| . 554137) (|cosh| . 552620) (|tanh| . 551103) (|coth| . 549786)
 (|sech| . 548469) (|csch| . 547152) (|asinh| . 545832) (|acosh| . 544512)
 (|atanh| . 543068) (|acoth| . 541748) (|asech| . 540428) (|acsch| . 539108)
 (|subresultantVector| . 538885) (|primitivePart| . 537645)
 (|pointData| . 537480) (|parent| . 537353) (|level| . 537180)
 (|extractProperty| . 537000) (|extractClosed| . 536845)
 (|extractIndex| . 536672) (|extractPoint| . 536516) (|traverse| . 536331)
 (|defineProperty| . 536090) (|closeComponent| . 535874)
 (|modifyPoint| . 535219) (|addPointLast| . 535008) (|addPoint2| . 534849)
 (|addPoint| . 534197) (|merge| . 532972) (|deepCopy| . 532845)
 (|shallowCopy| . 532718) (|numberOfChildren| . 532545) (|children| . 532239)
 (|child| . 532063) (|birth| . 531936) (|internal?| . 531781)
 (|root?| . 531626) (|leaf?| . 531343) (|rhs| . 530699) (|lhs| . 530055)
 (|construct| . 524584) (|sum| . 520858) (|outputForm| . 519893) (NOT . 519542)
 (AND . 519229) (EQ . 518916) (OR . 518603) (GE . 518290) (LE . 517977)
 (GT . 517664) (LT . 517351) (|ansatz| . 517041) (|transform| . 515761)
 (|linearize| . 515176) (|detSys| . 513968) (|ncDetSys| . 512760)
 (|detSysNS| . 511963) (|sample| . 511607) (|string| . 511095)
 (|argscript| . 511001) (|superscript| . 510907) (|subscript| . 510589)
 (|script| . 510092) (|scripts| . 509386) (|scripted?| . 509309)
 (|name| . 508521) (|resetNew| . 508450) (|symFunc| . 508118)
 (|symbolTableOf| . 507990) (|argumentListOf| . 507858)
 (|returnTypeOf| . 507628) (|printHeader| . 507314) (|returnType!| . 506599)
 (|argumentList!| . 506159) (|endSubProgram| . 506078)
 (|currentSubProgram| . 505997) (|newSubProgram| . 505879)
 (|clearTheSymbolTable| . 505684) (|showTheSymbolTable| . 505636)
 (|symbolTable| . 505428) (|printTypes| . 505233) (|newTypeLists| . 505145)
 (|typeLists| . 504656) (|externalList| . 504564) (|typeList| . 504026)
 (|parametersOf| . 503934) (|fortranTypeOf| . 503809) (|declare!| . 502991)
 (|solve| . 481398) (|triangularSystems| . 481127) (|bumprow| . 480733)
 (|bumptab| . 480490) (|bumptab1| . 480303) (|untab| . 480107)
 (|bat1| . 479907) (|bat| . 479720) (|tab1| . 479527) (|tab| . 479349)
 (|lex| . 479209) (|slex| . 479034) (|inverse| . 477126) (|maxrow| . 476606)
 (|mr| . 476173) (|listOfLists| . 475452) (|tableau| . 474746)
 (|tanSum| . 474618) (|tanAn| . 474422) (|tanNa| . 474291)
 (|initTable!| . 474109) (|printInfo!| . 473894) (|startStats!| . 473682)
 (|printStats!| . 473500) (|clearTable!| . 473318) (|usingTable?| . 473133)
 (|printingInfo?| . 472948) (|makingStats?| . 472763) (|extractIfCan| . 472601)
 (|insert!| . 471661) (|interpretString| . 471541)
 (|stripCommentsAndBlanks| . 471452) (|linearExtend| . 470506)
 (|tensor| . 469800) (|testEqualsAux| . 469644) (|xftestEqualsAux| . 469488)
 (|testNotEqualsAux| . 469332) (|xftestNotEqualsAux| . 469176)
 (|testTrueAux| . 469023) (|xftestTrueAux| . 468870)
 (|testLibraryErrorAux| . 468717) (|xftestLibraryErrorAux| . 468564)
 (|testEqualsAuxCmp| . 468435) (|testRealEqualsAux| . 468233)
 (|xftestRealEqualsAux| . 468031) (|testComplexEqualsAux| . 467798)
 (|xftestComplexEqualsAux| . 467565) (|testAbsolutePrecision| . 467428)
 (|testRelativePrecision| . 467291) (|testsuite| . 467174)
 (|testsuiteNoClear| . 467057) (|testcase| . 466940)
 (|testcaseNoClear| . 466823) (|statistics| . 466554) (|incTest| . 466476)
 (|incPass| . 466398) (|incFail| . 466238) (|incXfPass| . 466078)
 (|incXfFail| . 466000) (|incLibraryError| . 465840)
 (|incXfLibraryError| . 465680) (|incFatal| . 465563) (|incXfFatal| . 465446)
 (|addWarning| . 465325) (|testEquals| . 465210) (|xftestEquals| . 465095)
 (|testRealEquals| . 464980) (|xftestRealEquals| . 464865)
 (|testComplexEquals| . 464750) (|xftestComplexEquals| . 464635)
 (|testNotEquals| . 464520) (|xftestNotEquals| . 464405) (|testTrue| . 464293)
 (|xftestTrue| . 464181) (|testLibraryError| . 464069)
 (|xftestLibraryError| . 463957) (|setPrologue!| . 463729) (|setTex!| . 463636)
 (|setEpilogue!| . 463408) (|setDialect| . 463329) (|getDialect| . 463253)
 (|prologue| . 463031) (|new| . 460878) (|tex| . 460788) (|epilogue| . 460566)
 (|endOfFile?| . 460487) (|readIfCan!| . 460300) (|readLineIfCan!| . 460210)
 (|readLine!| . 460132) (|writeLine!| . 459975) (|eval_with_timeout| . 459811)
 (|coerceL| . 459450) (|sign| . 456349) (|nonQsign| . 456221)
 (|direction| . 456072) (|createThreeSpace| . 455958) (|pi| . 455362)
 (|tree| . 455026) (|cos| . 453404) (|cot| . 452084) (|csc| . 450764)
 (|sec| . 449444) (|sin| . 447822) (|tan| . 446302)
 (|complexNormalize| . 444436) (|complexElementary| . 442570)
 (|trigs| . 441700) (|real| . 440465) (|imag| . 439450) (|real?| . 438430)
 (|complexForm| . 437477) (|trigs2explogs| . 436559)
 (|UpTriBddDenomInv| . 436268) (|LowTriBddDenomInv| . 435977)
 (|simplify| . 434065) (|htrigs| . 433784) (|simplifyExp| . 433503)
 (|simplifyLog| . 433222) (|expandPower| . 432941) (|expandLog| . 432660)
 (|cos2sec| . 432379) (|cosh2sech| . 432098) (|cot2trig| . 431817)
 (|coth2trigh| . 431536) (|csc2sin| . 431255) (|csch2sinh| . 430974)
 (|sec2cos| . 430693) (|sech2cosh| . 430412) (|sin2csc| . 430131)
 (|sinh2csch| . 429850) (|tan2trig| . 429569) (|tanh2trigh| . 429288)
 (|tan2cot| . 429007) (|tanh2coth| . 428726) (|cot2tan| . 428445)
 (|coth2tanh| . 428164) (|removeCosSq| . 427883) (|removeSinSq| . 427602)
 (|removeCoshSq| . 427321) (|removeSinhSq| . 427040)
 (|expandTrigProducts| . 426545) (|fintegrate| . 425927)
 (|coefficient| . 422941) (|taylor_via_deriv| . 421051)
 (|taylor_via_lode| . 420626) (|applyTaylor| . 420226)
 (|apply_taylor| . 419585) (|coHeight| . 419227) (|extendIfCan| . 418947)
 (|algebraicVariables| . 418629) (|zeroSetSplitIntoTriangularSystems| . 418187)
 (|zeroSetSplit| . 413319) (|reduceByQuasiMonic| . 413033)
 (|collectQuasiMonic| . 412750) (|removeZero| . 412464)
 (|initiallyReduce| . 411974) (|headReduce| . 411484)
 (|stronglyReduce| . 411198) (|rewriteSetWithReduction| . 410781)
 (|autoReduced?| . 410398) (|initiallyReduced?| . 409262)
 (|headReduced?| . 408126) (|stronglyReduced?| . 407489) (|reduced?| . 406613)
 (|normalized?| . 405477) (|quasiComponent| . 405061) (|initials| . 404743)
 (|basicSet| . 403838) (|infRittWu?| . 402449) (|getCurve| . 402336)
 (|listLoops| . 402156) (|closed?| . 401912) (|open?| . 401771)
 (|setClosed| . 401627) (|tube| . 401190) (|point| . 400088)
 (|unitVector| . 399132) (|cosSinInfo| . 398982) (|loopPoints| . 398709)
 (|select| . 397826) (|generalTwoFactor| . 397458) (|tryTwoFactor| . 397090)
 (|doFactor| . 396657) (|qconvert| . 396496) (|diagramSvg2| . 396299)
 (|undirectedGraph| . 394468) (|setOrder| . 394117) (|getOrder| . 393927)
 (|less?| . 393441) (|userOrdered?| . 393294) (|largest| . 392907)
 (|more?| . 392590) (|setVariableOrder| . 392309) (|getVariableOrder| . 392102)
 (|resetVariableOrder| . 392001) (|prime?| . 390948)
 (|factorSquareFree| . 389372) (|sufactor| . 388678)
 (|sufactor_square_free| . 388364) (|su_irreducible?| . 388088)
 (|irreducible?| . 387069) (|hadamard| . 386890) (|pre_gauss| . 386776)
 (|pre_smith| . 386662) (|pre_lr| . 386496) (|rationalFunction| . 386007)
 (|taylorIfCan| . 385810) (|taylor| . 378250) (|removeZeroes| . 377076)
 (|taylorRep| . 376884) (|hasHi| . 376758) (|segment| . 376449)
 (SEGMENT . 376172) (|commonDenominator| . 374839)
 (|clearDenominator| . 373469) (|splitDenominator| . 371119)
 (|monicRightFactorIfCan| . 370876) (|rightFactorIfCan| . 370630)
 (|leftFactorIfCan| . 370429) (|monicDecomposeIfCan| . 370168)
 (|monicCompleteDecompose| . 369944) (|decomposeIfCan| . 369652)
 (|completeDecompose| . 369393) (|divideIfCan| . 369126)
 (|noKaratsuba| . 368936) (|karatsubaOnce| . 368746) (|karatsuba| . 368511)
 (|separate| . 367676) (|pseudoDivide| . 367069) (|pseudoQuotient| . 366880)
 (|composite| . 366337) (|subResultantGcd| . 365727) (|resultant| . 364700)
 (|discriminant| . 363100) (|pseudoRemainder| . 362921) (|shiftRight| . 362696)
 (|karatsubaDivide| . 362403) (|monicDivide| . 361805) (|shiftLeft| . 361490)
 (|divideExponents| . 361297) (|unmakeSUP| . 361098) (|makeSUP| . 360899)
 (|unvectorise| . 360405) (|vectorise| . 360177) (|eval| . 351707)
 (|extend| . 349219) (|approximate| . 347978) (|truncate| . 347600)
 (|order| . 342073) (|center| . 341499) (|terms| . 341068)
 (|squareFreePart| . 340045) (|BumInSepFFE| . 339543)
 (|multiplyExponents| . 338985) (|laurentIfCan| . 338787) (|laurent| . 333109)
 (|laurentRep| . 332916) (|rationalPower| . 332675) (|puiseux| . 326908)
 (|dominantTerm| . 325775) (|limitPlus| . 324607) (|split!| . 324405)
 (|setlast!| . 324249) (|qsetrest!| . 324093) (|setrest!| . 323817)
 (|setelt!| . 317129) (|qsetfirst!| . 316973) (|setfirst!| . 316817)
 (|cycleSplit!| . 316664) (|concat!| . 315803) (|cycleTail| . 315696)
 (|cycleLength| . 315550) (|cycleEntry| . 315443) (|third| . 315336)
 (|second| . 315098) (|tail| . 314687) (|last| . 314048) (|rest| . 313217)
 (|elt| . 298015) (|first| . 296554) (|concat| . 295765) (|integrate| . 284426)
 (|invmultisect| . 283906) (|multisect| . 283386) (|revert| . 282989)
 (|generalLambert| . 282469) (|evenlambert| . 282072) (|oddlambert| . 281675)
 (|lambert| . 281278) (|lagrange| . 280881) (|differentiate| . 275950)
 (|univariatePolynomial| . 275224) (^ . 269278) (|polynomial| . 268208)
 (|multiplyCoefficients| . 267717) (|quoByVar| . 267603)
 (|coefficients| . 266473) (|series| . 255734) (|stFunc1| . 255423)
 (|stFunc2| . 255095) (|stFuncN| . 254766) (|fixedPointExquo| . 254556)
 (|ode1| . 254305) (|ode2| . 254048) (|ode| . 253760) (|mpsode| . 253421)
 (UP2UTS . 253120) (UTS2UP . 252777) (LODO2FUN . 252426) (RF2UTS . 252049)
 (|seriesSolve| . 246933) (= . 245767) (|parseVarTerm| . 245505)
 (|parseVar| . 245427) (|toString| . 244497) (|getType| . 244293)
 (|getName| . 244215) (|var| . 244022) (|variable| . 243100)
 (|add_slots| . 242957) (|repack_polys| . 242411) (|empty| . 241545)
 (|chinese_update| . 241199) (|hensel_update| . 241025)
 (|rational_reconstruction| . 240059) (|remove_denoms| . 239674)
 (|reconstruct| . 238479) (|length| . 237284) (|cross| . 236957)
 (|outerProduct| . 236799) (|dot| . 236170) (- . 233188) (|zero?| . 231549)
 (|zero| . 231101) (|vector| . 230482) (|scan| . 228237) (|reduce| . 220348)
 (|hp_solve| . 219914) (|graphCurves| . 219264) (|drawCurves| . 218732)
 (|update| . 218560) (|show| . 218392) (|scale| . 217864) (|connect| . 217696)
 (|region| . 217528) (|points| . 217360) (|units| . 216691)
 (|getGraph| . 216547) (|putGraph| . 216375) (|graphs| . 216072)
 (|graphStates| . 215324) (|graphState| . 215055) (|makeViewport2D| . 214850)
 (|viewport2D| . 214794) (|getPickedPoints| . 214669) (|key| . 214393)
 (|close| . 214103) (|write| . 213413) (|colorDef| . 213280) (|reset| . 213096)
 (|intensity| . 212966) (|lighting| . 212830) (|clipSurface| . 212699)
 (|showClipRegion| . 212568) (|showRegion| . 212437) (|hitherPlane| . 212307)
 (|eyeDistance| . 212177) (|perspective| . 212046) (|translate| . 211570)
 (|zoom| . 211013) (|rotate| . 210747) (|drawStyle| . 210616)
 (|outlineRender| . 210485) (|diagonals| . 210354) (|axes| . 209890)
 (|controlPanel| . 209632) (|viewpoint| . 206869) (|dimensions| . 206483)
 (|title| . 206007) (|resize| . 205725) (|move| . 205437) (|options| . 204977)
 (|modifyPointData| . 204608) (|subspace| . 204105) (|makeViewport3D| . 203715)
 (|viewport3D| . 203657) (|viewDeltaYDefault| . 203472)
 (|viewDeltaXDefault| . 203287) (|viewZoomDefault| . 203102)
 (|viewPhiDefault| . 202917) (|viewThetaDefault| . 202732)
 (|pointColorDefault| . 202553) (|lineColorDefault| . 202374)
 (|axesColorDefault| . 202195) (|unitsColorDefault| . 202016)
 (|pointSizeDefault| . 201807) (|viewPosDefault| . 201574)
 (|viewSizeDefault| . 201347) (|viewDefaults| . 201261)
 (|viewWriteDefault| . 201052) (|viewWriteAvailable| . 200948)
 (|var1StepsDefault| . 200739) (|var2StepsDefault| . 200530)
 (|tubePointsDefault| . 200321) (|tubeRadiusDefault| . 200094)
 (|void| . 200056) (|coordinates| . 198303) (|coordinatesIfCan| . 198165)
 (|member?| . 197440) (|complementSpace| . 196888) (|canonicalBasis| . 196750)
 (|Zero| . 196231) (|subspace?| . 196101) (|isBasis?| . 195935)
 (|rank| . 192213) (|intBasis| . 191688) (+ . 188451) (|sumBasis| . 187926)
 (|columnSpace| . 187169) (|nullSpace| . 184996) (|basis| . 183161)
 (|weierstrass| . 182938) (|integralBasis| . 180777)
 (|localIntegralBasis| . 178886) (|weightedDistanceMatrix| . 178660)
 (|closedCartesian| . 178026) (|closedTensor| . 177249) (|cartesian| . 176155)
 (|routeArrowWeight| . 175942) (|routeNodeWeight| . 175729)
 (|distanceWeighted| . 175475) (|addWArrow!| . 175235)
 (|weightedGraph| . 172269) (|changeWeightLevel| . 171580)
 (|characteristicSerie| . 170703) (|characteristicSet| . 169996)
 (|medialSet| . 169289) (|hankelIndices| . 169033) (|hankelMatrix| . 168546)
 (|hankelSystem| . 168127) (|display| . 165666) (|minimalMatrix| . 165430)
 (|findNonZeroEntry| . 165136) (|transformationMatrices| . 164903)
 (|minimalRepresentation| . 164444) (|Hausdorff| . 164149)
 (|Frobenius| . 163496) (|transcendenceDegree| . 163149)
 (|extensionDegree| . 162401) (|inGroundField?| . 162274)
 (|transcendent?| . 162147) (|algebraic?| . 161701) (|varList| . 160484)
 (|sh| . 160080) (|mirror| . 159339) (|monomial?| . 158643)
 (|monomial| . 156012) (|rquo| . 155158) (|lquo| . 154304)
 (|mindegTerm| . 154097) (|table| . 153294) (|writeXml| . 153147)
 (|writeVRML| . 152850) (|xmlAttribute| . 152635) (|xmlElement| . 152316)
 (|empty?| . 151182) (|outputVRML| . 150944) (|log| . 147672) (|exp| . 144550)
 (|product| . 142732) (|LiePolyIfCan| . 142342) (|homo_fact| . 142085)
 (|top_split| . 141828) (|left_ext_GCD| . 141267) (|ldivide| . 140855)
 (|factor| . 128063) (|trunc| . 127687) (|degree| . 121910) (/ . 117799)
 (|quasiRegular| . 117533) (|quasiRegular?| . 117204) (|constant| . 116420)
 (|constant?| . 115969) (|coef| . 115323) (|reductum| . 113593)
 (|mindeg| . 113286) (|maxdeg| . 112976) (|coerce| . 71430) (|#| . 70725)
 (|map| . 40358) (* . 29111) (|RemainderList| . 28617) (|unexpand| . 28275)
 (|expand| . 25893) (Y . 25418) (|triangSolve| . 23959)
 (|univariateSolve| . 20677) (|realSolve| . 17916) (|positiveSolve| . 15918)
 (|squareFree| . 12829) (|convert| . 1895) (|linearlyDependentOverZ?| . 1690)
 (|linearDependenceOverZ| . 1476) (|particularSolutionOverQ| . 988)
 (|solveLinearlyOverQ| . 30)) 