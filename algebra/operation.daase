
(2072490 . 3865821192)       
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| (|Integer|)))
                                  #1="failed"))
                    (|:| |basis|
                         (|List| (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|IntegerLinearDependence| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| (|Integer|))) #1#))
                    (|:| |basis|
                         (|List| (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|IntegerLinearDependence| *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|IntegerLinearDependence| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
   (|ofCategory| *5 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|IntegerLinearDependence| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Integer|)))
   (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *5 (|Join| (|ConvertibleTo| *2) (|CommutativeRing|)))
       (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *1 (|ComplexPattern| *4 *5 *3))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *3 (|ComplexCategory| *5))))
 ((*1 *2 *1)
  (AND (|ofType| *5 (|List| *4)) (|isDomain| *2 (|JetBundlePolynomial| *3 *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundlePolynomial| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|)) (|ofType| *5 (|List| *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|OutputFormatterCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|FramedModule| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Factored| *1)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GeneralPolynomialSet| *3 *4 *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|FreeGroup| *5)))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|GroupPresentationFunctions1| *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|ConvertibleFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ConvertibleTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *6))
       (|ofCategory| *6 (|Join| (|DifferentialRing|) (|LeftModule| *5)))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|LinearOrdinaryDifferentialOperator3| *4 *5 *6))
       (|isDomain| *1 (|LODOConvertions| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator3| *4 *5 *6))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|DifferentialRing|) (|LeftModule| *5)))
       (|isDomain| *2 (|LinearOrdinaryDifferentialOperator1| *6))
       (|isDomain| *1 (|LODOConvertions| *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|LieSquareMatrix| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Integer|)))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *4 *5 *6 *7 *8))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SingletonAsOrderedSet|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|SquareFreeRegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *4 *5 *6 *7
                                                               *8))))
 ((*1 *1 *2 *3 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *5)))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *6)))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *6)))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4))))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|RealClosure| (|Fraction| *4))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SquareFreeRegularTriangularSet| *4
                                                 (|IndexedExponents|
                                                  (|OrderedVariableList| *6))
                                                 (|OrderedVariableList| *6)
                                                 (|NewSparseMultivariatePolynomial|
                                                  *4
                                                  (|OrderedVariableList| *6))))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *4
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *5 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|PolynomialSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|UniqueFactorizationDomain|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|UnivariatePolynomialSquareFree| *4 *3))
       (|ofCategory| *3
                     (|Join| (|UnivariatePolynomialCategory| *4)
                             (|IntegralDomain|)
                             (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|SquareFreeRegularTriangularSet| *4
                                                      (|IndexedExponents|
                                                       (|OrderedVariableList|
                                                        *6))
                                                      (|OrderedVariableList|
                                                       *6)
                                                      (|NewSparseMultivariatePolynomial|
                                                       *4
                                                       (|OrderedVariableList|
                                                        *6)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Float|))
       (|isDomain| *2 (|List| (|List| (|Float|))))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *4 *5)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Stream| *4) (|Stream| *4)))
       (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *4))
       (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|List| (|Stream| *5)) (|List| (|Stream| *5))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|Stream| *5)))
   (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *5))
   (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *6)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *6 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| (|Expression| *6)))
       (|isDomain| *1 (|DegreeReductionPackage| *5 *6))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|IntegrationResult| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|IntegrationResultToFunction| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentExpansionCategory| *3 *2))
       (|ofCategory| *3 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2))
       (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3))
       (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|XPolynomial| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|XRecursivePolynomial| *3 *4))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| (|Symbol|)) (|:| |c| (|XPolynomial| *3)))))
   (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| *3)
                          (|:| |c| (|XRecursivePolynomial| *3 *4)))))
   (|isDomain| *1 (|XRecursivePolynomial| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianGroup|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianSemiGroup|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Color|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|DirectedGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|DenavitHartenbergMatrix| *3))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FreeModule| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FreeModule| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|FunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2
                     (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3)))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Permutation| (|Integer|)))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|LeftModule| *2)) (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Magma|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6)) (|isDomain| *4 (|Mapping| *6 *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Mapping| *7 *5))
       (|isDomain| *1 (|MappingPackage3| *5 *6 *7))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *2 *4))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *2))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|MultifunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RightModule| *2)) (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|UndirectedGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|VectorCategory| *3))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|WeightedGraph| (|Product| *3 *3) *4))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2 *1 *1 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *6))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *8 (|Type|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *8 *9 *10))
       (|isDomain| *1
                   (|TwoDimensionalArrayFunctions| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|TwoDimensionalArrayCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *7))
       (|isDomain| *4 (|CartesianTensor| *5 *6 *7)) (|ofType| *5 (|Integer|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *7 (|CommutativeRing|))
       (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|CartesianTensor| *5 *6 *8))
       (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Complex| *6))
       (|isDomain| *1 (|ComplexFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Expression| *3) (|Expression| *3)))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6))
       (|isDomain| *4 (|DirectProduct| *5 *6))
       (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|isDomain| *2 (|DirectProduct| *5 *7))
       (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Equation| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Equation| *6))
       (|isDomain| *1 (|EquationFunctions2| *5 *6))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *1 *1)) (|isDomain| *3 (|Kernel| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|Kernel| *6)) (|ofCategory| *6 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ExpressionSpaceFunctions1| *6 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *5)) (|isDomain| *4 (|Kernel| *5))
       (|ofCategory| *5 (|ExpressionSpace|))
       (|ofCategory| *2 (|ExpressionSpace|))
       (|isDomain| *1 (|ExpressionSpaceFunctions2| *5 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Expression| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *2 (|Expression| *6))
       (|isDomain| *1 (|ExpressionFunctions2| *5 *6))))
 ((*1 *2 *3 *1)
  (|partial| AND
   (|isDomain| *3
               (|Mapping| (|Union| (|Polynomial| (|Integer|)) "failed")
                          (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                                    (|:| |denom| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|Mapping| (|Polynomial| (|Integer|))
                          (|Polynomial| (|Integer|))))
   (|isDomain| *3
               (|Record| (|:| |var| (|Symbol|))
                         (|:| |coef|
                              (|SparseUnivariatePolynomial|
                               (|Fraction| (|Polynomial| (|Integer|)))))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Mapping| (|Polynomial| (|Integer|))
                          (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|FiniteAbelianMonoidRing| *7 *5))
       (|isDomain| *1 (|FiniteAbelianMonoidRingFunctions2| *5 *6 *4 *7 *2))
       (|ofCategory| *4 (|FiniteAbelianMonoidRing| *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *5))
       (|isDomain| *4 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *9 (|Field|))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| (|Fraction| *10)))
       (|isDomain| *2 (|FiniteDivisor| *9 *10 *11 *12))
       (|isDomain| *1 (|FiniteDivisorFunctions2| *5 *6 *7 *8 *9 *10 *11 *12))
       (|ofCategory| *12 (|FunctionFieldCategory| *9 *10 *11))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|FullyEvalableOver| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *8 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *8))
       (|ofCategory| *2 (|FunctionFieldCategory| *8 *9 *10))
       (|isDomain| *1
                   (|FunctionFieldCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10
                                                      *2))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| (|Fraction| *9)))))
 ((*1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *6) (|finiteAggregate|)))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|Comparable|))
       (|ofCategory| *2 (|FreeModuleCategory| *6 *7))
       (|isDomain| *1 (|FreeModuleCoefficientFunctions2| *5 *6 *7 *4 *2))
       (|ofCategory| *4 (|FreeModuleCategory| *5 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|Factored| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Factored| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *6))
       (|isDomain| *1 (|FactoredFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Fraction| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|FractionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *5))
       (|isDomain| *4 (|FractionalIdeal| *5 *6 *7 *8))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|QuotientFieldCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *8 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6)))
       (|ofCategory| *9 (|EuclideanDomain|))
       (|ofCategory| *10 (|QuotientFieldCategory| *9))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| *10))
       (|isDomain| *2 (|FractionalIdeal| *9 *10 *11 *12))
       (|isDomain| *1 (|FractionalIdealFunctions2| *5 *6 *7 *8 *9 *10 *11 *12))
       (|ofCategory| *12
                     (|Join| (|FramedAlgebra| *10 *11)
                             (|RetractableTo| *10)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|FramedNonAssociativeAlgebra| *6))
       (|isDomain| *1 (|FramedNonAssociativeAlgebraFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *2 (|FunctionSpace| *6))
       (|isDomain| *1 (|FunctionSpaceFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|FunctionSpace| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *2 (|FiniteSetAggregate| *6))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|FiniteSetAggregate| *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|HomogeneousAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|IndexedProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|IntegrationResult| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|IntegrationResult| *6))
       (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *6 *5))
   (|isDomain| *4
               (|Union| (|Record| (|:| |ratpart| *5) (|:| |coeff| *5))
                        "failed"))
   (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|))
   (|isDomain| *2 (|Record| (|:| |ratpart| *6) (|:| |coeff| *6)))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *2 *5))
   (|isDomain| *4 (|Union| *5 "failed")) (|ofCategory| *5 (|Field|))
   (|ofCategory| *2 (|Field|))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *2))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *6 *5))
   (|isDomain| *4
               (|Union|
                (|Record| (|:| |mainpart| *5)
                          (|:| |limitedlogs|
                               (|List|
                                (|Record| (|:| |coeff| *5)
                                          (|:| |logand| *5)))))
                "failed"))
   (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |mainpart| *6)
                         (|:| |limitedlogs|
                              (|List|
                               (|Record| (|:| |coeff| *6)
                                         (|:| |logand| *6))))))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|InfiniteTuple| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|InfiniteTuple| *6))
       (|isDomain| *1 (|InfiniteTupleFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7))
       (|isDomain| *4 (|InfiniteTuple| *6))
       (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|InfiniteTuple| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6))
       (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7))
       (|isDomain| *4 (|InfiniteTuple| *6)) (|isDomain| *5 (|Stream| *7))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
       (|ofCategory| *8 (|Type|)) (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|ListFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|List| *8))
       (|isDomain| *1 (|ListFunctions3| *6 *7 *8))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *8 "failed") *5))
   (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *6 (|FiniteLinearAggregate| *5))
   (|ofCategory| *7 (|FiniteLinearAggregate| *5))
   (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
   (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
   (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *8))
   (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *1 (|MultipleMap| *5 *6 *4 *7 *8 *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *8)) (|ofCategory| *8 (|Ring|))
       (|ofCategory| *9 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|PolynomialCategory| *9 *7 *5))
       (|isDomain| *1 (|MPolyCatFunctions2| *5 *6 *7 *8 *9 *4 *2))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *8 *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|Ring|))
       (|ofCategory| *2 (|PolynomialCategory| *9 *8 *6))
       (|isDomain| *1 (|MPolyCatFunctions3| *5 *6 *7 *8 *9 *4 *2))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *9 *7 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|MonoidRing| *5 *7))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|Monoid|)) (|isDomain| *2 (|MonoidRing| *6 *7))
       (|isDomain| *1 (|MonoidRingFunctions2| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|NewSparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|NewSparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|NewSparseUnivariatePolynomialFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|OctonionCategory| *6))
       (|isDomain| *1 (|OctonionCategoryFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|OctonionCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OnePointCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|OnePointCompletion| *6))
       (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| *6))
       (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OnePointCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OrderedCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|OrderedCompletion| *6))
       (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *2 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| *6))
       (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OrderedCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricPlaneCurve| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricPlaneCurve| *6))
       (|isDomain| *1 (|ParametricPlaneCurveFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricSpaceCurve| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSpaceCurve| *6))
       (|isDomain| *1 (|ParametricSpaceCurveFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricSurface| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSurface| *6))
       (|isDomain| *1 (|ParametricSurfaceFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6))
       (|isDomain| *4 (|PatternMatchResult| *5 *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *5 *7))
       (|isDomain| *1 (|PatternMatchResultFunctions2| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Pattern| *6))
       (|isDomain| *1 (|PatternFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Polynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Polynomial| *6))
       (|isDomain| *1 (|PolynomialFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *7)) (|isDomain| *4 (|Mapping| *2 *8))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2
                     (CATEGORY |domain| (SIGNATURE + ($ $ $))
                      (SIGNATURE * ($ $ $))
                      (SIGNATURE ^ ($ $ (|NonNegativeInteger|)))))
       (|isDomain| *1 (|PolynomialCategoryLifting| *6 *7 *8 *5 *2))
       (|ofCategory| *5 (|PolynomialCategory| *8 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|PrimitiveArray| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|PrimitiveArray| *6))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Point| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Point| *6)) (|isDomain| *1 (|PointFunctions2| *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Polynomial| *4)))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ "failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2 (|QuotientFieldCategory| *6))
       (|isDomain| *1 (|QuotientFieldCategoryFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|QuotientFieldCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|QuaternionCategory| *6))
       (|isDomain| *1 (|QuaternionCategoryFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|QuaternionCategory| *5))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *5 *5 *5))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *10 *7))
       (|ofCategory| *7 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *10 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *8 (|DirectProductCategory| *6 *7))
       (|ofCategory| *9 (|DirectProductCategory| *5 *7))
       (|ofCategory| *2 (|RectangularMatrixCategory| *5 *6 *10 *11 *12))
       (|isDomain| *1
                   (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *10
                                                          *11 *12 *2))
       (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9))
       (|ofCategory| *11 (|DirectProductCategory| *6 *10))
       (|ofCategory| *12 (|DirectProductCategory| *5 *10))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Segment| *6))
       (|isDomain| *1 (|SegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|SegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|SegmentBinding| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|SegmentBinding| *6))
       (|isDomain| *1 (|SegmentBindingFunctions2| *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2))
       (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Sequence| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *6))
       (|isDomain| *1 (|SequenceFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Stream| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Stream| *6))
       (|isDomain| *1 (|StreamFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6))
       (|isDomain| *5 (|Stream| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|StreamFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|SparseUnivariatePolynomialFunctions2| *5 *6))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4 *4))
       (|ofCategory| *1 (|TableAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UnivariateLaurentSeries| *5 *7 *9))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6)
       (|isDomain| *2 (|UnivariateLaurentSeries| *6 *8 *10))
       (|isDomain| *1 (|UnivariateLaurentSeriesFunctions2| *5 *6 *7 *8 *9 *10))
       (|ofType| *8 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UniversalSegment| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|UniversalSegment| *6))
       (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UniversalSegment| *5))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Stream| *6))
       (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *6))
       (|isDomain| *4 (|UnivariatePolynomial| *5 *6)) (|ofType| *5 (|Symbol|))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *8 (|Ring|))
       (|isDomain| *2 (|UnivariatePolynomial| *7 *8))
       (|isDomain| *1 (|UnivariatePolynomialFunctions2| *5 *6 *7 *8))
       (|ofType| *7 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *1 (|UnivariatePolynomialCategoryFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UnivariatePuiseuxSeries| *5 *7 *9))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6)
       (|isDomain| *2 (|UnivariatePuiseuxSeries| *6 *8 *10))
       (|isDomain| *1 (|UnivariatePuiseuxSeriesFunctions2| *5 *6 *7 *8 *9 *10))
       (|ofType| *8 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *6 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *6))
       (|isDomain| *1 (|UnivariateTaylorSeriesFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|VectorFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *6 "failed") *5))
   (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Type|))
   (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Vector| *6))
   (|isDomain| *1 (|VectorFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|)) (|ofCategory| *1 (|Aggregate|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPolynomialRing| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|Algebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|ofType| *6 (|Vector| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 2))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|CartesianTensor| *3 *4 *5)))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|DirectProduct| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SKICombinators| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|Lambda| *4)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Lambda| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|SKICombinators| *4)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SKICombinators| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|ILogic|)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Matrix| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))
       (|isDomain| *1 (|Database| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 10))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|DirichletRing| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|DirichletRing| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|)))
       (|isDomain| *1 (|DirichletRing| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|)))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|DirichletRing| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Distribution| *5))
       (|isDomain| *1 (|DistributionFunctions2| *4 *5))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| (|Expression| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|) (|IntegralDomain|)
                             (|ConvertibleTo| (|Float|))))
       (|isDomain| *2 (|SegmentBinding| (|Float|)))
       (|isDomain| *1 (|DrawNumericHack| *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)
       (|ofCategory| *3
                     (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|GcdDomain|)))
       (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *5))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4))
       (|isDomain| *1 (|FiniteFieldHomomorphisms| *3 *4 *2))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4))
       (|isDomain| *1 (|FiniteFieldHomomorphisms| *2 *4 *3))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|XRecursivePolynomial| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|XDistributedPolynomial| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|MachineFloat|)))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1="void")))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
   (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Fraction| *3))))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| *3)))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FourierComponent| *4))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|AbelianGroup|)))
       (|isDomain| *1 (|FourierSeries| *3 *4))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierSeries| *2 *3))
       (|ofCategory| *2
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|Join| (|OrderedSet|) (|AbelianGroup|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranScalarType|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|MachineFloat|)))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| *3))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofType| *6 (|Vector| (|Matrix| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 16))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|IndexCard|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Expression| (|Integer|)) *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleExpression| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|JetBundleExpression| *3))))
   (|isDomain| *1 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleBaseFunctionCategory| *4))
       (|isDomain| *2 (|List| (|JetBundleLinearFunction| *4 *5)))
       (|isDomain| *1 (|JetBundleLinearFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleLinearFunction| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetBundleLinearFunction| *4 *5))
       (|ofCategory| *5 (|JetBundleBaseFunctionCategory| *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|JetBundleSymAna| *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofType| *4 (|Union| *2 (|List| *2)))
       (|ofType| *5 (|Union| *2 (|List| *2)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|JetBundle| *3 *4))
       (|ofType| *3 (|List| *2)) (|ofType| *4 (|List| *2))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleXExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleXExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|AssociatedJordanAlgebra| *3 *2))
       (|ofCategory| *2 (|NonAssociativeAlgebra| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|CoercibleTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|CoercibleFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|LeftAlgebra| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LatticeMeetOfJoins|))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LatticeMeetOfJoins|))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XPBWPolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|AssociatedLieAlgebra| *3 *2))
       (|ofCategory| *2 (|NonAssociativeAlgebra| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMagma| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3))))
   (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3))))
   (|ofCategory| *3 (|SetCategory|))
   (|isDomain| *1 (|ThreeDimensionalMatrix| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|MachineInteger|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|MachineFloat|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|Integer|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|MachineInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|MachineInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MakeCachableSet| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4)))
       (|isDomain| *1 (|ModuleMonomial| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|))
       (|ofType| *5 (|Mapping| (|Boolean|) *2 *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4)))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|ModuleMonomial| *3 *4 *5))
       (|ofType| *5 (|Mapping| (|Boolean|) *2 *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|ofCategory| *1 (|MonoidRingCategory| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|NonAssociativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|NoneFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PartialDifferentialRing| *3))
       (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3)
       (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathErrorKind|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|))
       (|isDomain| *1 (|UnivariateSkewPolynomial| *3 *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Automorphism| *4))
       (|ofType| *6 (|Mapping| *4 *4))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6))
       (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|List| (|NonNegativeInteger|)))
       (|ofType| *6 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Polynomial| *3))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|List| (|NonNegativeInteger|)))
       (|ofType| *6 (|NonNegativeInteger|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|AlgebraicNumber|)))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PolynomialAN2Expression|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|AlgebraicNumber|))))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PolynomialAN2Expression|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Tree| *3)) (|isDomain| *1 (|PendantTree| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PermutationGroup| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Factored| *3)))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| *3)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Pi|)) (|isDomain| *2 (|Expression| *4))
       (|isDomain| *1 (|PiCoercions| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ResolveLatticeCompletion| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Exit|)) (|isDomain| *1 (|ResolveLatticeCompletion| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|ofType| *6 (|List| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|RationalFunction| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|SArgand|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|SArgand|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4))
       (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|SquareMatrix| *3 *4))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Character|)) (|ofCategory| *1 (|StringAggregate|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|STransform| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Switch|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Table| (|Symbol|) (|FortranType|)))
       (|isDomain| *1 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|TexFormat|)) (|isDomain| *1 (|TexFormat1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TexmacsFormat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|TaylorSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Tuple| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| '|x| *3))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Segment| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|UniversalSegment| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|))
       (|isDomain| *1 (|UnivariatePolynomial| *3 *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3))
       (|ofType| *3 *2)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|GraphImage|))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Void|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Vector| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4))
       (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|ofType| *7 (|List| (|NonNegativeInteger|)))
       (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4))
       (|ofType| *7 (|List| (|NonNegativeInteger|)))
       (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|XAlgebra| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|XmlElement|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|FreeMonoid| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedMonoid|))
       (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|FreeMonoid| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedMonoid|))
       (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|ofType| *2 (|List| (|Symbol|))) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *2) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5))
                   (|Record| (|:| |index| *4) (|:| |exponent| *5))))
       (|isDomain| *1 (|GeneralModulePolynomial| *2 *3 *4 *5 *6 *7))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *3 *5 (|OrderedVariableList| *2)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|XRecursivePolynomial| *4 *2))
       (|ofCategory| *1 (|FreeLieAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4))
       (|ofCategory| *1 (|XFreeAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *5 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *5))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Field|)))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *2 *3))
       (|ofCategory| *2 (|Algebra| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *3 *2))
       (|ofCategory| *3 (|Algebra| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|LieAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *2 *3))
       (|ofCategory| *2 (|Module| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *2))
       (|ofCategory| *3 (|Module| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|OrdinaryWeightedPolynomials| *2 *3 *4 *5))
   (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|))
   (|ofType| *3 (|List| (|Symbol|)))
   (|ofType| *4 (|List| (|NonNegativeInteger|)))
   (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *4 *2))
       (|ofCategory| *6 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *3))
   (|isDomain| *1 (|WeightedPolynomials| *2 *3 *4 *5 *6 *7 *8))
   (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))
   (|ofType| *7 (|List| (|NonNegativeInteger|)))
   (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|Ring|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FactoringUtilities| *5 *6 *7 *8))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|GradedModule| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|AbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *5 *3))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *2 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|OrderedAbelianMonoidSup|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|ofCategory| *7 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|GcdDomain|) (|Comparable|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|ExpressionFactorPolynomial| *5 *6))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Integer|)))
       (|isDomain| *2 (|Factored| (|Complex| (|Integer|))))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|OrderedSet|)
                         (CATEGORY |domain|
                          (SIGNATURE |convert| ((|Symbol|) $))
                          (SIGNATURE |variable|
                           ((|Union| $ "failed") (|Symbol|))))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
   (|isDomain| *1 (|GeneralizedMultivariateFactorize| *4 *5 *6 *7 *3))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *3 (|PolynomialCategory| *7 *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|MonogenicAlgebra| *5 *6)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|InnerAlgFactor| *5 *6 *7 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *7))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7))
                          (|SparseUnivariatePolynomial| *7)))
   (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|Factored| *3))
   (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *3))
   (|ofCategory| *3 (|PolynomialCategory| *7 *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7))
                              (|SparseUnivariatePolynomial| *7)))
       (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *8 (|PolynomialCategory| *7 *6 *5))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))
                (|List| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|List| (|Expression| (|Integer|)))) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator1|
                 (|Fraction|
                  (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LyndonWord| *4)))
       (|isDomain| *1 (|LyndonWord| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ "failed") (|Symbol|))))))
       (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MPolyCatPolyFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|Polynomial| *6) *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4
                                           *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MRationalFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|Fraction| *6) *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|RationalFunctionFactor| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Polynomial| (|Integer|)))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|UniqueFactorizationDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3 *4 *5 *3 *4 *5 *6 *4 *7)
  (AND (|isDomain| *3 (|FreeMonoid| *8))
       (|isDomain| *4 (|XDistributedPolynomial| *8 (|Polynomial| *6)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *7 (|Boolean|))
       (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record|
                    (|:| |l_fac|
                         (|XDistributedPolynomial| *8 (|Polynomial| *6)))
                    (|:| |r_fac|
                         (|XDistributedPolynomial| *8 (|Polynomial| *6)))
                    (|:| |residual|
                         (|XDistributedPolynomial| *8 (|Polynomial| *6)))
                    (|:| |nsym| (|Union| (|Symbol|) "none"))))
       (|isDomain| *1 (|XPolynomialFactor| *8 *6))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |quotient| (|XDistributedPolynomial| *4 *5))
                             (|:| |remainder|
                                  (|XDistributedPolynomial| *4 *5))))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |g| (|XDistributedPolynomial| *4 *5))
                         (|:| |c1| (|XDistributedPolynomial| *4 *5))
                         (|:| |c2| (|XDistributedPolynomial| *4 *5))
                         (|:| |cu| (|XDistributedPolynomial| *4 *5))
                         (|:| |cv| (|XDistributedPolynomial| *4 *5))))
   (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|XPolynomialFactor| *4 *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
   (|isDomain| *1 (|LiePolynomial| *3 *4))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|LiePolynomial| *3 *4))
   (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|CubicalFacet|)))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|CombinatorialOpsCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteCubicalComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|ProductFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3
                     (|Join| (|Algebra| (|Fraction| (|Integer|)))
                             (|TranscendentalFunctionCategory|)
                             (|CommutativeRing|)))
       (|isDomain| *1 (|StreamExponentialSeriesTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *4 (|Module| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |coef| (|NonNegativeInteger|))
                              (|:| |logand| *4))))
       (|isDomain| *1 (|FactoredFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3
                     (|Join| (|Algebra| (|Fraction| (|Integer|)))
                             (|TranscendentalFunctionCategory|)
                             (|CommutativeRing|)))
       (|isDomain| *1 (|StreamExponentialSeriesTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *4 (|Module| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|TextFile|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|TextFile|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|XmlElement|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XmlElement|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|XmlElement|)))
       (|isDomain| *4 (|List| (|XmlAttribute|)))
       (|isDomain| *1 (|XmlElement|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|XmlAttribute|)))
       (|isDomain| *1 (|XmlElement|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|XmlAttribute|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XmlElement|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExportXml|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XmlElement|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExportXml|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetVectorField| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|TwoDimensionalArray| (|JetVectorField| *4 *5)))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |key| *3) (|:| |entry| *4))))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *1 (|TableAggregate| *3 *4))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|TableAggregate| *2 *3)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|SingleInteger|) *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|XHashTable| *3 *4))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |k| (|FreeMonoid| *3)) (|:| |c| *4)))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *1 (|XFreeAlgebra| *4 *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LieExponentials| *2 *3 *4))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|BasicType|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|NormRetractPackage| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|ofType| *6 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Finite|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *2)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|Finite|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |alpha| (|Matrix| *5))
                             (|:| |mu| (|List| (|Matrix| *5)))
                             (|:| |var| (|List| *4))
                             (|:| |beta| (|Matrix| *5))))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Matrix| *5)))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *5 *6))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|OutputForm|)))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| (*2 $))
                              (SIGNATURE |fullDisplay| (*2 $)))))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OutputFormatterCategory|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TexmacsFormat|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |rows| (|List| (|FreeMonoid| *4)))
                         (|:| |cols| (|List| (|FreeMonoid| *4)))
                         (|:| H (|Matrix| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2 (|OutputForm|))
   (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |rows| (|List| (|FreeMonoid| *4)))
                             (|:| |cols| (|List| (|FreeMonoid| *4)))
                             (|:| H (|Matrix| *5))))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|XDistributedPolynomial| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|FreeMonoid| *4)))
       (|isDomain| *1 (|XDistributedPolynomialFunctions| *4 *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| *6))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| *8))
   (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
   (|isDomain| *4 (|Mapping| *8 *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| *6))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| *8))
   (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
   (|isDomain| *4 (|Mapping| *8 *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *4 *5 *6 *7)))
       (|isDomain| *1 (|WuWenTsunTriangularSet| *4 *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *6 *7 *8 *9)))
       (|isDomain| *1 (|WuWenTsunTriangularSet| *6 *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *4 *5 *6 *7))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|List| *3)) (|ofType| *7 *3)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofType| *8 (|List| *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|WeightedPolynomials| *4 *5 *6 *7 *8 *9 *10))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofType| *9 (|List| *3)) (|ofType| *10 *3)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|WeightedGraph| *4 *5))
   (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |weight| *5))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|)) (|:| |weight| *5)
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
   (|isDomain| *1 (|WeightedGraph| *4 *5))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |weight| *4))))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
   (|isDomain| *1 (|WeightedGraph| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|WeightedGraph| *5 *4))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Union| *5 "disjoint"))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))
       (|isDomain| *1 (|WeightedGraph| *4 *2))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))
       (|isDomain| *1 (|WeightedGraph| *4 *2))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|DirectedGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *1 (|ListPackage| *3))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|MultifunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|UndirectedGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|WeightedGraph| (|Product| *3 *3) *4))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|TwoDimensionalArray| (|Union| *4 "disjoint")))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| $) $)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| (|Integer|)))
                             (|:| |basisDen| (|Integer|))
                             (|:| |basisInv| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                             (|:| |basisInv| (|Matrix| *3))))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *3 *5 *6))
       (|ofCategory| *6 (|MonogenicAlgebra| *3 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                             (|:| |basisInv| (|Matrix| *3))))
       (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *4 *3 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *3 *5))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| $) $)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| (|Integer|)))
                             (|:| |basisDen| (|Integer|))
                             (|:| |basisInv| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4))
       (|ofCategory| *4 (|FramedAlgebra| (|Integer|) *3))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4)
                             (|:| |basisInv| (|Matrix| *4))))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *3 *4 *5 *6))
       (|ofCategory| *6 (|MonogenicAlgebra| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4)
                             (|:| |basisInv| (|Matrix| *4))))
       (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *3 *4 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|TaylorSeries| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|TaylorSeries| *5)))
       (|isDomain| *1 (|WeierstrassPreparation| *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 *2)))
 ((*1 *2)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FramedModule| *3))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Vector| (|List| (|Integer|))))
       (|isDomain| *1 (|HallBasis|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|Vector| (|Vector| *4)))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *6 (|shallowlyMutable|))
       (|ofCategory| *4 (|DivisionRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *9 (|shallowlyMutable|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *10))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *10 (|MatrixCategory| *7 *8 *9))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|isDomain| *2 (|List| *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianSemiGroup|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|Color|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Database| *2))
       (|ofCategory| *2
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|AbelianMonoid|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|DivisionRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|OctonionCategory&| *3 *4))
       (|ofCategory| *3 (|OctonionCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|)))
 ((*1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3)
       (|ofType| *5 *3)))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
   (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FramedModule| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Matrix| *5))) (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1) (|isDomain| *1 (|Void|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|SubSpace| 3 *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *4))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1 *3 *4 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Color|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|GraphImage|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *2 *1 *3 *4 *4 *4 *4 *5 *5 *5 *5 *6 *5 *6 *5)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *5 (|Integer|)) (|isDomain| *6 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Vector|
                (|Record| (|:| |scaleX| (|DoubleFloat|))
                          (|:| |scaleY| (|DoubleFloat|))
                          (|:| |deltaX| (|DoubleFloat|))
                          (|:| |deltaY| (|DoubleFloat|))
                          (|:| |points| (|Integer|))
                          (|:| |connect| (|Integer|))
                          (|:| |spline| (|Integer|)) (|:| |axes| (|Integer|))
                          (|:| |axesColor| (|Palette|))
                          (|:| |units| (|Integer|))
                          (|:| |unitsColor| (|Palette|))
                          (|:| |showing| (|Integer|)))))
   (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Vector| (|Union| (|GraphImage|) "undefined")))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *4 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *6 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2 (|GraphImage|)) (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|List|
                (|Vector|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *2
               (|Matrix|
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|VectorHermitePadeSolver|))))) 
(((*1 *1 *1) (|isDomain| *1 (|AlgebraicNumber|)))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *2))))
 ((*1 *2 *3 *1 *2 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *1 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *4))
                             (|:| |deg| (|PositiveInteger|))))
       (|isDomain| *1 (|DegreeReductionPackage| *4 *5))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *6 *2))
       (|isDomain| *4 (|DirectProduct| *5 *6))
       (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *2))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *4 *2 *3 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *3))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Expression| *2)) (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |poly| *3) (|:| |repr| (|Vector| *3))
                             (|:| |mult| *5)))
       (|isDomain| *1 (|ExtendedPolynomialReduction| *5 *6 *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *2 *6))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))
       (|ofCategory| *6 (|Join| (|LinearAggregate| *2) (|finiteAggregate|)))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *2 *6))
       (|ofCategory| *4 (|FiniteSetAggregate| *5))
       (|ofCategory| *6 (|FiniteSetAggregate| *2))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|JetBundleExpression| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|JetBundleXExpression| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListFunctions2| *5 *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *8 (|FiniteLinearAggregate| *2))
       (|ofCategory| *9 (|FiniteLinearAggregate| *2))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *2 *8 *9 *10))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *10 (|MatrixCategory| *2 *8 *9))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *1 (|MonogenicAlgebra| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|isDomain| *4 (|PrimitiveArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *2))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|ofType| *6 (|List| *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *7 *2))
       (|ofCategory| *7 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *8 (|DirectProductCategory| *6 *7))
       (|ofCategory| *9 (|DirectProductCategory| *5 *7))
       (|ofCategory| *10 (|DirectProductCategory| *6 *2))
       (|ofCategory| *11 (|DirectProductCategory| *5 *2))
       (|isDomain| *1
                   (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *2
                                                          *10 *11 *12))
       (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9))
       (|ofCategory| *12 (|RectangularMatrixCategory| *5 *6 *2 *10 *11))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Stream| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|StreamFunctions2| *5 *2))))
 ((*1 *2 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *2))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *5 *6 *7))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|VectorFunctions2| *5 *2))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5))
       (|isDomain| *4 (|OneDimensionalArray| *6)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *5))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *7 *5))
       (|isDomain| *4 (|DirectProduct| *6 *7))
       (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *7 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|DirectProduct| *6 *5))
       (|isDomain| *1 (|DirectProductFunctions2| *6 *7 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *6 *4 *5 *2))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *6) (|finiteAggregate|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|FiniteSetAggregate| *5))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *6 *4 *5 *2))
       (|ofCategory| *4 (|FiniteSetAggregate| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|ListFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5))
       (|isDomain| *4 (|PrimitiveArray| *6)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|PrimitiveArray| *5))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Mapping| *3 *6 *3)) (|isDomain| *5 (|Stream| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamFunctions2| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|VectorFunctions2| *6 *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Complex| (|DoubleFloat|))))
       (|isDomain| *1 (|ComplexDoubleFloatVector|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Vector| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|VectorCategory| *3))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianGroup|)))
 ((*1 *1 *1) (|ofCategory| *1 (|AbelianGroup|)))
 ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|CardinalNumber|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Database| *2))
       (|ofCategory| *2
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|AbelianGroup|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiRng|))
       (|ofCategory| *2 (|AbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|)))
       (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianMonoid|)) (|ofCategory| *2 (|SemiRng|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PointCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|RadicalCategory|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *4 *5 *6 *6 *3)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *1 *3 *4 *4 *5)
  (|partial| AND (|isDomain| *4 (|Vector| (|Integer|)))
   (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |nvars| (|Integer|))
                         (|:| |offsetdata| (|Vector| (|Integer|)))
                         (|:| |expdata| (|SortedExponentVector|))
                         (|:| |coeffdata| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Vector| (|Integer|)))
   (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *2 *2 *4)
  (AND (|isDomain| *2 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Vector| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *2 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *3 (|Vector| (|Integer|)))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|U32Vector|)))
                         (|:| |denoms| (|PrimitiveArray| (|U32Vector|)))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|U32Vector|))
                         (|:| |denom| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Integer|))
   (|isDomain| *2 (|Record| (|:| |num| (|Integer|)) (|:| |den| (|Integer|))))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|Integer|)))
                         (|:| |denoms| (|PrimitiveArray| (|Integer|)))))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1) (|isDomain| *1 (|OutputBox|)))
 ((*1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1)
  (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))
 ((*1 *1) (|isDomain| *1 (|SymbolTable|)))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|OrderedVariableList| *3)) (|ofType| *3 (|List| *2))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|QueryEquation|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3))
       (|ofType| *3 *2)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|ILogic|))
       (|ofCategory| *1 (|VarCat|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|String|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|ILogic|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|String|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| *1)
                             (|:| |pout| (|NonNegativeInteger|))))
       (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Reference| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *3 *3)
  (AND (|isDomain| *3 (|Equation| *6)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *5 *6))))
 ((*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| (|Equation| *7)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|Equation| *8)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *8)) (|isDomain| *6 (|List| *8))
       (|ofCategory| *8 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *6 (|List| (|Equation| *8)))
       (|ofCategory| *8 (|FunctionSpace| *7)) (|isDomain| *5 (|Equation| *8))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 ((*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *5)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *5 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *5))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ExpressionSolve| *7 *3 *2 *8))
       (|ofCategory| *8
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *3)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *5)))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *1 (|TaylorSolve| *5 *2 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UTSodetools| *4 *5 *6 *2))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Mapping| *6 (|List| *6)))
       (|isDomain| *1 (|UTSodetools| *4 *5 *3 *6))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|UTSodetools| *5 *2 *6 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UTSodetools| *4 *3 *5 *2))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| (|Mapping| *6 (|List| *6))))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|List| *2))) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *2))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 (|List| *5)))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|List| (|Stream| *4))))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4) (|Stream| *4)))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4)))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|)))
       (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *7 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *7 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerTaylorSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *5))
       (|ofCategory| *5 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3
                   (|Stream|
                    (|Record| (|:| |k| (|Fraction| (|Integer|)))
                              (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Stream|
                (|Record| (|:| |k| (|NonNegativeInteger|)) (|:| |c| *3))))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Stream| *5))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|)))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|)))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4 (|RetractableTo| (|Integer|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|CardinalNumber|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DivisionRing|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *4 *5 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateLaurentSeriesCategory| *4))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *4 *5 *2 *6))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5))
       (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Group|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|MappingPackage1| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|Monoid|)) (|ofCategory| *3 (|SemiRng|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *3 *4))
       (|ofCategory| *4 (|LeftModule| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Operator| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RadicalCategory|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *3 *4))
       (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| #1="failed")
                            (|:| |pole| #2="potentialPole")))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3)))
       (|isDomain| *5 (|String|))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| #1#) (|:| |pole| #2#)))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4
                   (|SegmentBinding| (|OrderedCompletion| (|Expression| *5))))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5)))
                            (|:| |f2|
                                 (|List|
                                  (|OrderedCompletion| (|Expression| *5))))
                            (|:| |fail| #3="failed")
                            (|:| |pole| #4="potentialPole")))
       (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
       (|isDomain| *4
                   (|SegmentBinding| (|OrderedCompletion| (|Expression| *6))))
       (|isDomain| *5 (|String|))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6)))
                            (|:| |f2|
                                 (|List|
                                  (|OrderedCompletion| (|Expression| *6))))
                            (|:| |fail| #3#) (|:| |pole| #4#)))
       (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|SegmentBinding|
                (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|ofCategory| *5
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5)))
                        (|:| |f2|
                             (|List| (|OrderedCompletion| (|Expression| *5))))
                        (|:| |fail| #3#) (|:| |pole| #4#)))
   (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|SegmentBinding|
                (|OrderedCompletion| (|Fraction| (|Polynomial| *6)))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6)))
                        (|:| |f2|
                             (|List| (|OrderedCompletion| (|Expression| *6))))
                        (|:| |fail| #3#) (|:| |pole| #4#)))
   (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Union| *3 (|List| *3)))
       (|isDomain| *1 (|FunctionSpaceIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| (|Fraction| *5)))
       (|isDomain| *1 (|RationalIntegration| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Union| (|Expression| *5) (|List| (|Expression| *5))))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Polynomial| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4))
       (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|)))
             (|ofCategory| *3 (|PrimitiveFunctionCategory|))
             (|ofCategory| *3 (|TranscendentalFunctionCategory|))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
             (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|)))
             (|ofCategory| *3 (|PrimitiveFunctionCategory|))
             (|ofCategory| *3 (|TranscendentalFunctionCategory|))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
             (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|)))
             (|ofCategory| *3 (|PrimitiveFunctionCategory|))
             (|ofCategory| *3 (|TranscendentalFunctionCategory|))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
             (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 *4))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| '|x| *4))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 *4))
       (|isDomain| *1 (|UnivariateTaylorSeries| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialExtension| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|DifferentialExtension| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))
       (|isDomain| *1 (|IntegrationResult| *2)) (|isDomain| *3 (|Symbol|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2))
       (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Union| *1 "0"))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|SequenceCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|Segment| (|Integer|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "right")
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "left") (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 (|Integer|))
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *2)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|DataList| (|String|)))
       (|isDomain| *1 (|Database| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ *3))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|QueryEquation|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "count") (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DataList| *4)) (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "sort") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "unique") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Eltable| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|XDistributedPolynomial| *4 *5))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *1 *2 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|IndexCard|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|Library|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PermutationCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Permutation| *4))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DirectProduct| *4 *2))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|QuadraticForm| *4 *2))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "value") (|ofCategory| *1 (|RecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|Ruleset| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *2))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| *1))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Fraction| *1))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "last") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "first") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5))
   (|ofCategory| *2 (|IntegralDomain|))
   (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *3 *2))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *1 (|shallowlyMutable|)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|Segment| (|Integer|)))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "right") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "left") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *4 *5))
       (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|Library|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "value") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *4 *5)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|TableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "last") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "first") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))
 ((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *1
               (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5
                                                                    *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2
               (|Record|
                (|:| |%term|
                     (|Record|
                      (|:| |%coef| (|UnivariatePuiseuxSeries| *4 *5 *6))
                      (|:| |%expon|
                           (|ExponentialOfUnivariatePuiseuxSeries| *4 *5 *6))
                      (|:| |%expTerms|
                           (|List|
                            (|Record| (|:| |k| (|Fraction| (|Integer|)))
                                      (|:| |c| *4))))))
                (|:| |%type| (|String|))))
   (|isDomain| *1
               (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5
                                                                    *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *5 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *7 (|Fraction| (|Integer|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *7 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *7 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *7))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|RetractableTo| *7))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *3))
       (|ofCategory| *3 (|UnivariateLaurentSeriesCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *2 (|Fraction| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *4)
                             (|LinearlyExplicitOver| *4)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *5)
                             (|LinearlyExplicitOver| *5)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *4 *3))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |flag| (|Union| "nil" "sqfr" "irred" "prime"))
                         (|:| |factor| *4)
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|ofCategory| *4
                 (|Join| (|UnivariatePolynomialCategory| *3) (|IntegralDomain|)
                         (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $)))))
   (|ofCategory| *3 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|UniqueFactorizationDomain|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *2))
       (|ofCategory| *2
                     (|Join| (|UnivariatePolynomialCategory| *3)
                             (|IntegralDomain|)
                             (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Stream| (|Record| (|:| |k| *4) (|:| |c| *3))))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|String|)) (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGroup|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *4 *5 *6 *7))
       (|ofCategory| *4 (|Join| (|Finite|) (|Field|)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *7 (|FunctionFieldCategory| *4 *5 *6))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FindOrderFinite| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|FiniteDivisor| *6 *7 *4 *8))
       (|isDomain| *5 (|Mapping| *9 *6)) (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|ofCategory| *8 (|FunctionFieldCategory| *6 *7 *4))
       (|ofCategory| *9 (|Join| (|Finite|) (|Field|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ReducedDivisor| *6 *7 *4 *8 *9))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BalancedPAdicRational| *4)) (|ofType| *4 *3)))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|PAdicRational| *4)) (|ofType| *4 *3)))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofType| *4 *3)
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|PAdicRationalConstructor| *4 *5))
       (|ofCategory| *5 (|PAdicIntegerCategory| *4))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|has| *2 (SIGNATURE ^ (*2 *2 *3)))
       (|has| *2 (SIGNATURE |coerce| (*2 (|Symbol|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|PointCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *3)))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Equation| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Evalable| *2)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|Equation| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|BasicOperator|)))
       (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|BasicOperator|)))
       (|isDomain| *3 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *3)))
       (|ofCategory| *1 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Equation| *3)) (|ofCategory| *1 (|Evalable| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|Integer|)))
       (|isDomain| *4 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|EvaluateCycleIndicators| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FreeLieAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Mapping| *1 *1)) (|ofCategory| *1 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|BasicOperator|))) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|FunctionSpace| *4)) (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|InnerEvalable| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *1 (|InnerEvalable| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|MoebiusTransform| *3))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PermutationCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *2 *6 *7))
       (|ofCategory| *1 (|TensorProductProperty| *5 *6 *7 *3 *2))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *6 (|Module| *5))
       (|ofCategory| *7 (|Module| *5))
       (|ofCategory| *3 (|TensorProductCategory| *5 *6 *7))
       (|ofCategory| *2 (|Module| *5))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|has| *3 (SIGNATURE ^ (*3 *3 *4))) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *5))))
   (|isDomain| *3 (|Vector| (|Expression| *5))) (|isDomain| *4 (|Integer|))
   (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|TransSolvePackageService| *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *1 (|ListPackage| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ComplexCategory&| *3 *2))
       (|ofCategory| *3 (|ComplexCategory| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedAlgebra&| *3 *2 *4))
       (|ofCategory| *3 (|FramedAlgebra| *2 *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4))
       (|ofCategory| *4 (|FramedAlgebra| *2 *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| *1))
   (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| *3) (|:| |quotient| *1)
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |polyPart| (|LaurentPolynomial| *4 *5))
                             (|:| |fracPart| (|Fraction| *5))))
       (|isDomain| *1 (|LaurentPolynomial| *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |primePart| *1) (|:| |commonPart| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDivisionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|Field|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *3 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|CommonDenominator| *4 *5 *3))
       (|ofCategory| *3 (|FiniteLinearAggregate| *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *6) (|:| |den| *4)))
       (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *6 *3))
       (|ofCategory| *6 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *4)) (|:| |den| *4)))
       (|isDomain| *1 (|MatrixCommonDenominator| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record| (|:| |eq| *7)
                             (|:| |rh| (|List| (|Fraction| *6)))))
       (|isDomain| *1 (|PrimitiveRatDE| *5 *6 *7 *3))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *3
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|PolynomialCommonDenominator| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|CommonDenominator| *3 *4 *2))
       (|ofCategory| *2 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))
       (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *2 *3))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|MatrixCommonDenominator| *4 *5))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialCommonDenominator| *3 *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *3 *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|CommonDenominator| *2 *4 *3))
       (|ofCategory| *3 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|InnerCommonDenominator| *2 *4 *5 *3))
       (|ofCategory| *5 (|Join| (|LinearAggregate| *2) (|finiteAggregate|)))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|MatrixCommonDenominator| *2 *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PolynomialCommonDenominator| *2 *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *2 *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| *3)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UniversalSegment| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BalancedPAdicRational| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|BalancedPAdicRational| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PAdicRational| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PAdicRational| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|ofType| *3 *2)
       (|isDomain| *1 (|PAdicRationalConstructor| *3 *4))
       (|ofCategory| *4 (|PAdicIntegerCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofType| *2 (|Integer|))
       (|isDomain| *1 (|PAdicRationalConstructor| *2 *3))
       (|ofCategory| *3 (|PAdicIntegerCategory| *2))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *7
                     (|Join| (|RetractableTo| (|Symbol|))
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|RetractableTo| *4)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|))) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 (|Integer|)))
       (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|isDomain| *5 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|RetractableTo| (|Symbol|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Equation| *3)) (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *3 (|Evalable| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Ring|) (|RetractableTo| *4)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries2| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|Vector| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariateFormalPowerSeriesFunctions| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Integer|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerPrimesPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UniqueFactorizationDomain|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |high| (|List| (|Symbol|)))
                         (|:| |low| (|List| (|Symbol|)))))
   (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2))
       (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))))) 
(((*1 *2)
  (AND
   (|isDomain| *2 (|Record| (|:| |low| (|List| *3)) (|:| |high| (|List| *3))))
   (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UndirectedGraph| *5))
       (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *6)))
   (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *6 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *6))))
   (|isDomain| *1 (|TwoFactorize| *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|TwoFactorize| *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *2))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|)))
       (|isDomain| *5 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *2 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|DirectProductCategory| *3 *4))
       (|ofCategory| *4 (|Monoid|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5))
                   (|Record| (|:| |index| *2) (|:| |exponent| *5))))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))
 ((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Point| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2 (|TubePlot| *3)) (|isDomain| *1 (|NumericTubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|TubePlot| *2))
       (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|TubePlot| *2))
       (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *9))
   (|isDomain| *4 (|Mapping| (|Boolean|) *9))
   (|isDomain| *5 (|Mapping| (|Boolean|) *9 *9))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *9))))
   (|ofCategory| *1 (|TriangularSetCategory| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| *8))
   (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *8))))
   (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2
                   (|Record| (|:| |close| (|List| *6))
                             (|:| |open| (|List| *6))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1 *4)
  (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *3))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *7 (|List| *7)))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *1 *3 *4)
  (AND (|isDomain| *2 (|List| *8)) (|isDomain| *3 (|Mapping| *8 *8 *8))
       (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *10))
       (|isDomain| *1 (|LazardSetSolvingPackage| *5 *6 *7 *8 *9 *10))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *10
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|SquareFreeRegularTriangularSet| *5
                                                  (|IndexedExponents|
                                                   (|OrderedVariableList| *6))
                                                  (|OrderedVariableList| *6)
                                                  (|NewSparseMultivariatePolynomial|
                                                   *5
                                                   (|OrderedVariableList|
                                                    *6)))))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))
 ((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|RegularChain| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |close| *1) (|:| |open| (|List| *7)))))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|ofType| *6 *3)
       (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
       (|ofType| *5 (|Symbol|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|TaylorSeriesExpansion| *4 *5 *6 *2 *3))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *7 *7))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *4 *5 *6 *2 *7))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *5 *6 *7 *2 *8))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *5 *6 *7))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|List| (|Mapping| *3 *3)))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *7 (|OrderedAbelianMonoid|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *9 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *2 (|PowerSeriesCategory| *3 *7 *8))
       (|isDomain| *1 (|TaylorSeriesExpansion&| *6 *3 *7 *8 *2 *9))
       (|ofCategory| *6 (|TaylorSeriesExpansion| *3 *7 *8 *2 *9))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|PowerSeriesCategory| *6 *7 *8))
       (|ofCategory| *7 (|OrderedAbelianMonoid|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *9 (|UnivariateTaylorSeriesCategory| *6))
       (|isDomain| *1 (|TaylorSeriesExpansion&| *5 *6 *7 *8 *2 *9))
       (|ofCategory| *5 (|TaylorSeriesExpansion| *6 *7 *8 *2 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|List| (|Mapping| *3 *3)))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *3 *6 *7 *2 *8))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *2 (|PowerSeriesCategory| *3 *6 *7))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|List| (|Mapping| *5 *5)))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *5 *6 *7 *2 *8))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *5 *6 *7))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|SquareMatrix| *4 *2))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|PolynomialCategory| *4 (|IndexedExponents| *5) *5))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *5 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Polynomial| *4))
       (|isDomain| *1 (|TaylorSeries| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|SparseMultivariateTaylorSeries| *4 *3 *5)))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *3 *5))
       (|ofCategory| *5 (|PolynomialCategory| *4 (|IndexedExponents| *3) *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|TaylorSeries| *4)))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *3 (|PatternMatchable| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *2 (|PatternMatchable| *3))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |Sys| (|List| *1))
                             (|:| JM (|SparseEchelonMatrix| *5 *1))
                             (|:| |Depend|
                                  (|Union| "failed"
                                           (|List|
                                            (|List|
                                             (|NonNegativeInteger|)))))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CharacteristicZero|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|AlgebraicNumber|))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|SimplifyAlgebraicNumberConvertPackage|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|TrigonometricManipulationsAux| *4 *2))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Complex| (|Expression| *4)))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Complex| *3))
   (|isDomain| *1 (|TrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|TrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Expression| *4))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Expression| *4))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|TrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|TrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|Tree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Tree| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Tree| *2))) (|isDomain| *1 (|Tree| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1) (|isDomain| *1 (|Pi|)))
 ((*1 *1) (|ofCategory| *1 (|TranscendentalFunctionCategory|)))) 
(((*1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelThreeSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ToolsForSign| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3)
  (|partial| AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|OrderedCompletion| *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ElementaryFunctionSign| *6 *3))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|ofCategory| *6
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *6 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *4))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *6))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *6))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TexmacsFormat|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))
 ((*1 *2 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SingleInteger|))
   (|isDomain| *1 (|BinaryFile|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *1 (|File| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|LinearMultivariateMatrixPencil| *5))
       (|isDomain| *3 (|List| (|FreeMonoid| *4)))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|Formatter| *2))
       (|ofCategory| *2 (|FormatterCategory|))))
 ((*1 *1) (|isDomain| *1 (|HashState|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OperatorHandlers| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|ListAggregate| *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1) (|isDomain| *1 (|Symbol|))) ((*1 *1) (|isDomain| *1 (|Symbol|)))
 ((*1 *1) (|isDomain| *1 (|TexFormat|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|UnittestAux| *2))
       (|ofCategory| *2 (|RealNumberSystem|)) (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|UnittestAux| *2))
       (|ofCategory| *2 (|RealNumberSystem|)) (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|RealNumberSystem|)) (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestAux| *5))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|RealNumberSystem|)) (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestAux| *5))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4))
       (|ofCategory| *4 (|RealNumberSystem|)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4))
       (|ofCategory| *4 (|RealNumberSystem|)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UnittestAux| *3))
       (|ofCategory| *3 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|TensorProductCategory| *4 *2 *3))
       (|ofCategory| *2 (|Module| *4)) (|ofCategory| *3 (|Module| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|Module| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|TensorPowerCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|TensorPower| *3 *4 *5 *6))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|FreeModuleCategory| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|ofCategory| *6 (|Comparable|))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *5))
       (|isDomain| *1 (|FreeModuleFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|FreeModuleCategory| *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *2 *4))
       (|ofCategory| *1 (|FreeModuleCategory| *2 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|List| *7)))
       (|isDomain| *4 (|TensorPower| *5 *6 *7 *8))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofCategory| *6 (|CommutativeRing|)) (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|FreeModuleCategory| *6 *7))
       (|ofCategory| *2 (|Module| *6))
       (|isDomain| *1 (|TensorPowerFunctions2| *5 *6 *7 *8 *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinarySearchTree| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinaryTournament| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *2 (|SetCategory|))
   (|isDomain| *1 (|TabulatedComputationPackage| *3 *2))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|TangentExpansions| *2))
       (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|TangentExpansions| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|TangentExpansions| *2))
       (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|JetDifferential| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|List| (|JetDifferential| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Tableau| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|List| (|List| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|List| (|List| *5)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|Tableau| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *4))
                             (|:| |f2| (|List| (|List| (|List| *4))))
                             (|:| |f3| (|List| (|List| *4)))
                             (|:| |f4| (|List| (|List| (|List| *4))))))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *4 *5 *4 *4 *4)
  (AND (|isDomain| *4 (|List| (|List| (|List| *6))))
       (|isDomain| *5 (|List| (|List| *6))) (|isDomain| *3 (|List| *6))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *6))
                             (|:| |f2| (|List| (|List| (|List| *6))))
                             (|:| |f3| (|List| (|List| *6)))
                             (|:| |f4| (|List| (|List| (|List| *6))))))
       (|isDomain| *1 (|TableauxBumpers| *6))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|DivisionRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|FiniteLinearAggregate| *4))
   (|ofCategory| *6 (|FiniteLinearAggregate| *4))
   (|ofCategory| *7 (|QuotientFieldCategory| *4))
   (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
   (|isDomain| *1
               (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9 *2))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
   (|ofCategory| *8 (|FiniteLinearAggregate| *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
   (|ofCategory| *2 (|AbelianMonoid|))
   (|ofCategory| *3 (|FiniteLinearAggregate| *2))
   (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|SquareMatrixCategory| *2 *3 *4 *5))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|DirectProductCategory| *2 *3))
   (|ofCategory| *5 (|DirectProductCategory| *2 *3))
   (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Tableau| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Tableau| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6 *6))
       (|isDomain| *5 (|List| (|List| *6))) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *4 (|List| *6))
       (|isDomain| *2
                   (|Record| (|:| |fs| (|Boolean|)) (|:| |sd| (|List| *6))
                             (|:| |td| (|List| (|List| *6)))))
       (|isDomain| *1 (|TableauxBumpers| *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|List| (|Polynomial| *5))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|Equation| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
   (|isDomain| *1 (|FloatingRealPackage| *4))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Symbol|))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|isDomain| *2 (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4))))
   (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *4 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *2 *4 *2 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *2 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1="failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| *7 #1#))
                              (|:| |basis| (|List| *7)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *5) #2="failed"))
                    (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                             (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                              (|:| |basis| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|Vector| *5))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                              (|:| |basis| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *4))))
 ((*1 *2 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|NonLinearFirstOrderODESolver| *5 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
   (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Symbol|))
   (|ofCategory| *6
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2 (|List| (|Vector| *6)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| (|Equation| *7)))
   (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |particular| *7) (|:| |basis| (|List| *7)))
                    *7 #3="failed"))
       (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |particular| *3) (|:| |basis| (|List| *3)))
                    *3 #3#))
       (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Equation| *2))
   (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *4 (|Equation| *2)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|isDomain| *5
               (|Mapping|
                (|Union|
                 (|Record| (|:| |particular| *6) (|:| |basis| (|List| *6)))
                 "failed")
                *7 *6))
   (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *6))
                         (|:| |basis| (|Matrix| *6))))
   (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Vector| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record|
                     (|:| |particular|
                          (|List|
                           (|Record| (|:| |ratpart| *6)
                                     (|:| |coeffs| (|Vector| *6)))))
                     (|:| |basis| (|List| *6)))
                    *7 (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| (|Vector| *6))
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *3 (|Matrix| *7))
   (|isDomain| *5 (|List| (|Vector| *4)))
   (|isDomain| *6
               (|Mapping|
                (|Record|
                 (|:| |particular|
                      (|List|
                       (|Record| (|:| |ratpart| *4)
                                 (|:| |coeffs| (|Vector| *4)))))
                 (|:| |basis| (|List| *4)))
                *7 (|List| *4)))
   (|ofCategory| *4 (|Field|))
   (|ofCategory| *7 (|UnivariateSkewPolynomialCategory| *4))
   (|isDomain| *2
               (|Record|
                (|:| |particular|
                     (|List|
                      (|Record| (|:| |ratpart| (|Vector| *4))
                                (|:| |coeffs| (|Vector| *4)))))
                (|:| |basis| (|List| (|Vector| *4)))))
   (|isDomain| *1 (|OrePolynomialMatrixOperations| *4 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Float|)) (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|TransSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Expression| *4)))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|TransSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Expression| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Kernel| (|Expression| *5))))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Expression| *5)))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))) 
(((*1 *2 *3 *2 *3)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *4 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *3 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|SymbolTable|))))
 ((*1 *2 *3 *2 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|FortranType|))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|FortranScalarType|))
       (|isDomain| *2
                   (|List|
                    (|Union| (|:| |name| (|Symbol|))
                             (|:| |bounds|
                                  (|List|
                                   (|Union| (|:| S (|Symbol|))
                                            (|:| P
                                                 (|Polynomial|
                                                  (|Integer|)))))))))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|List|
                 (|Union| (|:| |name| (|Symbol|))
                          (|:| |bounds|
                               (|List|
                                (|Union| (|:| S (|Symbol|))
                                         (|:| P
                                              (|Polynomial|
                                               (|Integer|))))))))))
   (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |key| (|Symbol|))
                          (|:| |entry| (|FortranType|)))))
   (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Union| (|:| |fst| (|FortranScalarType|))
                        (|:| |void| #1="void")))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| #1#)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| #1#)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| "void")))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SymbolTable|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|SymmetricFunctions| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|SymmetricFunctions| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FunctionCalled| *3))
       (|ofType| *3 *2)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RuleCalled| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |sub| (|List| (|OutputForm|)))
                         (|:| |sup| (|List| (|OutputForm|)))
                         (|:| |presup| (|List| (|OutputForm|)))
                         (|:| |presub| (|List| (|OutputForm|)))
                         (|:| |args| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |sub| (|List| (|OutputForm|)))
                         (|:| |sup| (|List| (|OutputForm|)))
                         (|:| |presup| (|List| (|OutputForm|)))
                         (|:| |presub| (|List| (|OutputForm|)))
                         (|:| |args| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Symbol|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|OutputForm|))))
       (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|StringCategory|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|)))
 ((*1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1) (|ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|JetVectorField| *5 (|JetBundleExpression| *5)))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *5 *6 *7))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *7 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|JetVectorField| *5 (|JetBundleExpression| *5)))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *5 *6 *7))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *7 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
   (|ofCategory| *4 (|JetBundleCategory|))
   (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
   (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
   (|isDomain| *2
               (|List|
                (|JetBundleLinearFunction| (|JetBundleSymAna| *4 *5 *6)
                                           (|JetBundleXExpression|
                                            (|JetBundleSymAna| *4 *5 *6)))))
   (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|JetBundleExpression| *4))
       (|isDomain| *1 (|JetCoordinateTransformation| *3 *4 *5 *6))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleCategory|)) (|ofType| *5 (|Vector| *2))
       (|ofType| *6 (|Vector| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|JetBundleExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|JetBundleExpression| *5))
       (|isDomain| *1 (|JetCoordinateTransformation| *4 *5 *6 *7))
       (|ofCategory| *5 (|JetBundleCategory|)) (|ofType| *6 (|Vector| *2))
       (|ofType| *7 (|Vector| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|JetBundleExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6)))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|JetVectorField| *3 (|JetBundleExpression| *3)))
       (|isDomain| *1 (|SymmetryAnalysis| *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofType| *4 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Switch|)))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|OutputForm|) (|OutputForm|) (|OutputForm|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|ListMonoidOps| *5 *6 *7))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|AbelianMonoid|))
       (|ofType| *7 *6)))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|SparseUnivariateSkewPolynomial| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Automorphism| *3))
       (|ofType| *5 (|Mapping| *3 *3))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Segment| *3))
       (|ofCategory| *3 (|PolynomialCategory| *7 *6 *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|))))
       (|isDomain| *1 (|InnerPolySum| *6 *4 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|))))
       (|isDomain| *1 (|InnerPolySum| *5 *4 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceSum| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|)
                             (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|)
                             (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceSum| *4 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Polynomial| *5)))
       (|isDomain| *3 (|Polynomial| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|Collection| *3))))
 ((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |exponent| (|NonNegativeInteger|))
                          (|:| |center| *4) (|:| |num| *4))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
   (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))
 ((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|Union| (|:| |fst| (|FortranScalarType|))
                        (|:| |void| #1="void")))
   (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
   (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Boolean|))
   (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *1 (|IndexedProductCategory| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InfiniteTuple| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LieAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *3))))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModuleMonomial| *2 *3 *4))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3))
                   (|Record| (|:| |index| *2) (|:| |exponent| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4))))
   (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *1 (|PatternMatchResult| *3 *4))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|Product| *2 *3)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|List| (|SplittingNode| *3 *5)))
       (|isDomain| *1 (|SplittingNode| *3 *5))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Record| (|:| |val| *4) (|:| |tower| *5))))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|List| (|SplittingNode| *4 *5)))
       (|isDomain| *1 (|SplittingNode| *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |tower| *4)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *3 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *2 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|SplittingNode| *2 *3)))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *2 *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|SplittingTree| *2 *3)))
       (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|SuchThat| *2 *3)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *3 *2))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursiveAggregate| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Point| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Point| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *5))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Boolean|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|SubSpaceComponentProperty|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Point| *4)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SubSpaceComponentProperty|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Point| *4))) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|SubResultantPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|PrimitiveArray| *3))
       (|isDomain| *1 (|SubResultantPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatElementaryFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|Float|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |sinh| (|Stream| *4))
                             (|:| |cosh| (|Stream| *4))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |sin| (|Stream| *4))
                             (|:| |cos| (|Stream| *4))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *4))))) 
(((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *4 (|Integer|)))
       (|isDomain| *5 (|Mapping| (|Stream| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| *4 (|Integer|)))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *1 (|ODEIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
   (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
   (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|CommutativeRing|))
   (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
   (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
   (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *3)))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2))
   (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
   (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|ComplexCategory| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|EntireRing|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *3 (|OrderedAbelianMonoid|))
   (|ofCategory| *2 (|EntireRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
   (|ofCategory| *2 (|AbelianMonoid|))
   (|ofCategory| *3 (|FiniteLinearAggregate| *2))
   (|ofCategory| *4 (|FiniteLinearAggregate| *2))
   (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|EntireRing|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *5 (|DirectProductCategory| *4 *2))
   (|ofCategory| *6 (|DirectProductCategory| *3 *2))
   (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *2 *2)
  (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
   (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|String|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SingleInteger|))) (|isDomain| *1 (|String|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Stream| *4))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |cycle?| (|Boolean|))
                             (|:| |prefix| (|NonNegativeInteger|))
                             (|:| |period| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|Stream| *3))) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Stream| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Stream| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Algebra| *2))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|Distribution| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |puiseux| (|Fraction| (|Integer|)))
                         (|:| |laurent| (|Fraction| (|Integer|)))
                         (|:| |coef| (|Sequence| *3))))
   (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Distribution| *3))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Algebra| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
   (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))
   (|isDomain| *2 (|Distribution| *4))
   (|isDomain| *1 (|STransformPackage| *4 *5 *6 *3))
   (|ofCategory| *3 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))
       (|isDomain| *1 (|STransformPackage| *4 *5 *6 *2))
       (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))
       (|isDomain| *1 (|STransformPackage| *4 *5 *6 *2))
       (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateLaurentSeriesConstructorCategory| *4 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|STransformPackage| *4 *2 *5 *6))
       (|ofCategory| *6 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|STransform| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|STransform| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DoubleFloat|)))
       (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| (|List| *4) *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|StreamTensor| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1) (|ofCategory| *1 (|StepThrough|)))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|StepThrough|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Stack| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5))
                   (|Record| (|:| |index| *4) (|:| |exponent| *5))))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *5 (|OrderedVariableList| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|isDomain| *2 (|ModuleMonomial| *5 *6 *7))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *8
                     (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|))
       (|ofType| *5 (|SquareMatrix| *4 *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|ModuleMonomial| *5 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *6 *7 *8))
       (|ofCategory| *8
                     (|PolynomialCategory| *2 *6 (|OrderedVariableList| *4)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3 *1 *4 *4 *4 *4 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *3)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3 *1 *4 *4 *4 *4 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *3)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |val| (|List| *8))
                             (|:| |towers|
                                  (|List|
                                   (|RegularTriangularSet| *5 *6 *7 *8)))))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |val| (|List| *8))
                             (|:| |towers|
                                  (|List|
                                   (|SquareFreeRegularTriangularSet| *5 *6 *7
                                                                     *8)))))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1
               (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *2 *5 *6)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11))))
   (|isDomain| *5
               (|Record| (|:| |done| (|List| *11))
                         (|:| |todo|
                              (|List|
                               (|Record| (|:| |val| (|List| *10))
                                         (|:| |tower| *11))))))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9))
   (|ofCategory| *11 (|RegularTriangularSetCategory| *7 *8 *9 *10))
   (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|OrderedSet|))
   (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *10 *11))))
 ((*1 *2 *3 *4 *2 *5 *6)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11))))
   (|isDomain| *5
               (|Record| (|:| |done| (|List| *11))
                         (|:| |todo|
                              (|List|
                               (|Record| (|:| |val| (|List| *10))
                                         (|:| |tower| *11))))))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9))
   (|ofCategory| *11 (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *10))
   (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|OrderedSet|))
   (|isDomain| *1
               (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *10 *11))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2
                   (|Record|
                    (|:| |id| (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))
                    (|:| |principalPart| *6)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |poly| *6) (|:| |normal| (|Fraction| *6))
                             (|:| |special| (|Fraction| *6))))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|PartialFractionUtilities| *4 *3))))
 ((*1 *2 *3 *2 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *2 *4 *4 *4 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *2 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))
 ((*1 *2 *3 *2 *4 *4 *4 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *9 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *9 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))
 ((*1 *1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))
 ((*1 *1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Character|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|UniversalSegment| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|BinaryFile|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|CachableSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|CubicalFacet|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *3 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|OrientedFacet|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *3 (|CharacterClass|))))
 ((*1 *2 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |less| (|BinarySearchTree| *3))
                         (|:| |greater| (|BinarySearchTree| *3))))
   (|isDomain| *1 (|BinarySearchTree| *3)) (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|IntegrationResult| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *3
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|IntegrationResultToFunction| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *3))))
       (|ofCategory| *3
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3)))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3)))
       (|isDomain| *1 (|ParallelIntegrationTools| *5 *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5)))
       (|isDomain| *4 (|Vector| (|Vector| *5))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|CharacterClass|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|StringAggregate|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Character|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|StringAggregate|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *2 *4))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SquareMatrix| *2 *3))
       (|ofType| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|SquareMatrix| *3 *4))
       (|ofType| *3 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|not| (|ofCategory| *1 (|arbitraryPrecision|)))
       (|not| (|ofCategory| *1 (|arbitraryExponent|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedMultisetAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|)))
 ((*1 *1) (|isDomain| *1 (|SingleInteger|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|not| (|ofCategory| *1 (|arbitraryPrecision|)))
       (|not| (|ofCategory| *1 (|arbitraryExponent|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1) (|isDomain| *1 (|SingleInteger|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PointCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|List| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|List| (|DoubleFloat|)))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|SplittingTree| *2 *3))
   (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
   (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|SplittingTree| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|SplittingTree| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|SplittingNode| *4 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *4 *5))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|SplittingNode| *5 *6))
       (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *5 *6))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|SplittingNode| *4 *5)))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *4 *5))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SplittingNode| *3 *4)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|HashState|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|QueryEquation|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *3 *2))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
   (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1 *1) (|isDomain| *1 (|BasicOperator|)))
 ((*1 *1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SplittingNode| *3 *2))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1 *1 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *5 *6))))) 
(((*1 *2 *1 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *4 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RetractableTo| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))))
 ((*1 *1 *2 *2 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|SpecialFunctionCategory|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RetractableTo| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|SpecialFunctionCategory|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *1 *1) (|isDomain| *1 (|Partition|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|OrderedRing|)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FortranProgramCategory|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SubSpace| 3 *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Point| *4)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Point| *3))))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *3))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|List| (|SubSpaceComponentProperty|)))
       (|isDomain| *4 (|SubSpaceComponentProperty|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *5))))
       (|isDomain| *3 (|List| (|SubSpaceComponentProperty|)))
       (|isDomain| *4 (|SubSpaceComponentProperty|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|List| (|NonNegativeInteger|)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|List| (|Point| *3)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|SubSpaceComponentProperty|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|SubSpaceComponentProperty|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |points| (|NonNegativeInteger|))
                             (|:| |curves| (|NonNegativeInteger|))
                             (|:| |polygons| (|NonNegativeInteger|))
                             (|:| |constructs| (|NonNegativeInteger|))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))
 ((*1 *2 *3 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6))
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|ofCategory| *6 (|EuclideanDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|SortPackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *4)
                             (|finiteAggregate|) (|shallowlyMutable|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|SortPackage| *3 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *3)
                             (|finiteAggregate|) (|shallowlyMutable|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|SortPackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *4)
                             (|finiteAggregate|) (|shallowlyMutable|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|SortPackage| *3 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *3)
                             (|finiteAggregate|) (|shallowlyMutable|)))))) 
(((*1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SmallOrdinal|))))) 
(((*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *2 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *3))))
   (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|TransSolvePackageService| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Expression| *5))
                               (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Expression| *5))
                               (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4)))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4)))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))) 
(((*1 *2 *2 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4 *5))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))
 ((*1 *2 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3 *5))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Field|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
   (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|ofCategory| *6 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Field|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
   (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| *5))
   (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
   (|isDomain| *2 (|Vector| (|Fraction| *5)))
   (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|ofCategory| *6 (|LinearlyExplicitOver| *5))
   (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
   (|isDomain| *2 (|Vector| (|Fraction| *5)))
   (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *2)
  (|partial| AND (|ofCategory| *4 (|Field|))
   (|ofCategory| *5 (|Join| (|FiniteLinearAggregate| *4) (|shallowlyMutable|)))
   (|ofCategory| *2 (|Join| (|FiniteLinearAggregate| *4) (|shallowlyMutable|)))
   (|isDomain| *1 (|LinearSystemMatrixPackage| *4 *5 *2 *3))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *2))))
 ((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Matrix| *4))
   (|ofCategory| *4 (|Field|))
   (|isDomain| *1 (|LinearSystemMatrixPackage1| *4))))
 ((*1 *2 *3 *2 *4 *5)
  (|partial| AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|Mapping| *2 *2))
   (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|ODETools| *2 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Stream| *7)))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Mapping| (|Stream| *7) *7))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *5 *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| *6 *7))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *6 *8))
       (|isDomain| *1 (|SparsePolynomialCoercionHelpers| *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|SmithNormalForm| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping|
                (|Record| (|:| |Smith| (|Matrix| (|Integer|)))
                          (|:| |leftEqMat| (|Matrix| (|Integer|)))
                          (|:| |rightEqMat| (|Matrix| (|Integer|))))
                (|Matrix| (|Integer|))))
   (|isDomain| *3 (|Matrix| (|Integer|)))
   (|isDomain| *2
               (|Record| (|:| |Smith| (|Matrix| (|Integer|)))
                         (|:| |leftEqMat| (|Matrix| (|Integer|)))
                         (|:| |rightEqMat| (|Matrix| (|Integer|)))))
   (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2
                   (|Record| (|:| |Smith| *3) (|:| |leftEqMat| *3)
                             (|:| |rightEqMat| *3)))
       (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *3 (|Mapping| (|Matrix| (|Integer|)) (|Matrix| (|Integer|))))
   (|isDomain| *2 (|Matrix| (|Integer|)))
   (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |Hermite| *3) (|:| |eqMat| *3)))
       (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixManipulation| *3 *4 *5 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|AbelianMonoid|))
       (|isDomain| *1 (|Matrix| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *3 *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|isDomain| *1 (|IntegralBasisTools| *2 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|DivisionRing|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialExtension| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|DifferentialExtension| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofType| *5 (|Union| *2 *3))
       (|ofType| *6 (|Union| *2 *3)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleSymAna| *4 *5 *6))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundle| *4 *5)) (|ofType| *4 *3) (|ofType| *5 *3)))
 ((*1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|PartialDifferentialOperator| *3 *2))
       (|ofCategory| *3 (|PartialDifferentialRing| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|SparseMultivariateSkewPolynomial| *3 *2 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|ofType| *4 (|Mapping| (|Automorphism| *3) *2))
       (|ofType| *5 (|Mapping| (|Mapping| *3 *3) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|SparseMultivariateSkewPolynomial| *3 *4 *5 *6))
       (|has| *4 (SIGNATURE |variable| (*4 *2))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofType| *5 (|Mapping| (|Automorphism| *3) *4))
       (|ofType| *6 (|Mapping| (|Mapping| *3 *3) *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|Lambda| *5))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Lambda| *5)) (|ofCategory| *5 (|VarCat|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|SKICombinators| *5))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|SKICombinators| *5)) (|ofCategory| *5 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Lambda| *3))) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SKICombinators| *3)))
       (|isDomain| *1 (|SKICombinators| *3)) (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DirectedGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1 *1) (|ofCategory| *1 (|Logic|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|MultifunctionGraph| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|JoinSemilattice|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|MeetSemilattice|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SingleInteger|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|DeltaComplex| *4))
       (|isDomain| *1 (|DeltaComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *4))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *4 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *5 (|AbelianGroup|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|DeltaComplex| *3))
   (|ofCategory| *3 (|AbelianGroup|))
   (|isDomain| *1 (|FiniteSimplicialComplex| *3))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *2 (|DeltaComplex| *4))
   (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|AbelianGroup|))
   (|isDomain| *1 (|FiniteSimplicialComplex| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|CubicalFacet|))))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|OrientedFacet|))))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2
                   (|Record| (|:| |under| *1) (|:| |floor| *1)
                             (|:| |upper| *1)))
       (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|CubicalFacet|))))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|OrientedFacet|))))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteCubicalComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|SBoundary| *4))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|NonNegativeInteger|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|DeltaComplex| *4)) (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|)) (|isDomain| *1 (|DeltaComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|CoChainComplex| *3))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|CoChainComplex| *3))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|))) (|isDomain| *1 (|ChainComplex|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *1 (|Homology|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *2 (|Vector| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *5 (|Boolean|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9))))
   (|isDomain| *1
               (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5)
  (|partial| AND (|isDomain| *3 (|List| *9)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4)
                         (|:| |ineq| (|List| *9))))
   (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *4))
   (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5)
  (|partial| AND (|isDomain| *3 (|List| *9)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4)
                         (|:| |ineq| (|List| *9))))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *4))
   (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10)
                              (|:| |ineq| (|List| *9)))))
       (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10)
                              (|:| |ineq| (|List| *9)))))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *10))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7))))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
   (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7))))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
   (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *5 *6 *7 *8 *3))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *5 *6 *7 *8 *3))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|GcdDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
   (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|GcdDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
   (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|FortranScalarType|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|SimpleFortranProgram| *5 *4))
       (|ofCategory| *4 (|FunctionSpace| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4))))
   (|isDomain| *1 (|PatternMatchResult| *3 *4))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|PositiveInteger|))
   (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2)
   (|ofType| *4 *2)))) 
(((*1 *1 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|PositiveInteger|))
   (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2)
   (|ofType| *4 *2)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|Finite|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Vector| (|SetOfMIntegersInOneToN| *3 *4)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3)
       (|ofType| *5 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|SubsetLattice| *3 *4)) (|ofType| *4 *2)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Finite|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|SubsetLattice| *3 *4)) (|ofType| *4 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SubsetLattice| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofType| *3 (|List| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|SingleInteger|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|HashState|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|SetAggregate| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PolynomialIdeal| *3 *4 *5 *6)))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| *4)))
       (|ofCategory| *4 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SBoundary| *3)))
       (|isDomain| *1 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *2 (|LeftModule| *5))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|ApplyUnivariateSkewPolynomial| *5 *2 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *2 (|Distribution| *6))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *6 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|IncidenceAlgebra| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|IncidenceAlgebra| *2 *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2 *2)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *3 *2 *2 *4 *5)
  (AND (|isDomain| *4 (|Automorphism| *2)) (|isDomain| *5 (|Mapping| *2 *2))
       (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *2 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Partition|)) (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|SequenceCategory| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *2 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|IndexedAggregate| *3 *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *2 *7))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *4 *6))
       (|ofCategory| *2 (|DirectProductCategory| *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |Indices| (|List| *4))
                             (|:| |Entries| (|List| *5))))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|IndexedAggregate| *2 *4))
       (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *4 *5)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|Ring|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *6 *7))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|Record| (|:| |Indices| (|List| *5))
                             (|:| |Entries| (|List| *6))))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *5 *6))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |Indices| (|List| *4))
                         (|:| |Entries| (|List| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |Indices| (|List| *4))
                         (|:| |Entries| (|List| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|DivisionRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *2))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|UnivariateSkewPolynomialCategory| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|OrePolynomialMatrixOperations| *3 *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *5 (|List| (|Vector| *4)))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *6 (|UnivariateSkewPolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *4)))))
       (|isDomain| *1 (|OrePolynomialMatrixOperations| *4 *6))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *2 *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *2 *4))
       (|ofCategory| *4 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Lt| (|Matrix| *4)) (|:| |Pivots| (|List| *4))
                         (|:| |Rank| (|NonNegativeInteger|))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Lt| (|Matrix| (|Fraction| *4)))
                         (|:| |Pivots| (|List| *4))
                         (|:| |Rank| (|NonNegativeInteger|))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Record| (|:| |Index| *4) (|:| |Entry| *5)))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Indices| (|List| *3))
                         (|:| |Entries| (|List| *4))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|Dcpo| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Left| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Right| (|SparseEchelonMatrix| *3 *4))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SegmentCategory| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedRing|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|QueryEquation|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Segment| *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|SegmentBinding| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *3)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Matrix| (|Polynomial| *5))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *5))))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|StructuralConstantsPackage| *4))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SConformal| *2)) (|ofType| *2 (|PositiveInteger|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Scene| *4)))
       (|isDomain| *3 (|List| (|String|))) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|String|)))
       (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|SceneNamedPoints| *4)))
       (|isDomain| *3 (|List| (|String|)))
       (|isDomain| *1 (|SceneNamedPoints| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *2))
       (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Scene| *4))
       (|isDomain| *1 (|SceneNamedPoints| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SPointCategory|))
       (|isDomain| *2 (|List| (|List| *6))) (|isDomain| *1 (|SceneIFS| *6))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |source| (|Mapping| *5 (|DoubleFloat|)))
                          (|:| |ranges| (|List| (|Segment| (|DoubleFloat|))))
                          (|:| |knots| (|List| (|DoubleFloat|)))
                          (|:| |points| (|List| *5)))))
   (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|))
   (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|SceneIFS| *5))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SceneIFS| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|SceneIFS| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| *4))) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|SceneIFS| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SubSpace| 3 (|DoubleFloat|)))
       (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Export3D|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Reference| (|List| *8)))
       (|isDomain| *4 (|Reference| (|List| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *5 (|Reference| (|NonNegativeInteger|)))
       (|isDomain| *6 (|STransform| *8)) (|isDomain| *7 (|SBoundary| *8))
       (|ofCategory| *8 (|SPointCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *8))))
 ((*1 *2 *1 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Reference| (|List| *8)))
       (|isDomain| *4 (|Reference| (|List| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *5 (|Reference| (|NonNegativeInteger|)))
       (|isDomain| *6 (|STransform| *8))
       (|isDomain| *7 (|Record| (|:| |mins| *8) (|:| |maxs| *8)))
       (|ofCategory| *8 (|SPointCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *8))))) 
(((*1 *2 *1 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *6)) (|isDomain| *5 (|SBoundary| *6))
   (|ofCategory| *6 (|SPointCategory|)) (|isDomain| *2 (|XmlElement|))
   (|isDomain| *1 (|Scene| *6))))
 ((*1 *2 *1 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *6))
   (|isDomain| *5 (|Record| (|:| |mins| *6) (|:| |maxs| *6)))
   (|ofCategory| *6 (|SPointCategory|)) (|isDomain| *2 (|XmlElement|))
   (|isDomain| *1 (|Scene| *6))))) 
(((*1 *2 *1 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *9)) (|isDomain| *5 (|SBoundary| *9))
   (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Boolean|))
   (|isDomain| *8 (|SceneNamedPoints| *9)) (|ofCategory| *9 (|SPointCategory|))
   (|isDomain| *2 (|XmlElement|)) (|isDomain| *1 (|Scene| *9))))
 ((*1 *2 *1 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *9))
   (|isDomain| *5 (|Record| (|:| |mins| *9) (|:| |maxs| *9)))
   (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Boolean|))
   (|isDomain| *8 (|SceneNamedPoints| *9)) (|ofCategory| *9 (|SPointCategory|))
   (|isDomain| *2 (|XmlElement|)) (|isDomain| *1 (|Scene| *9))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|STransform| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
       (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
       (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *1 (|Scene| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *1 (|Scene| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|DirectedGraph| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *1 (|Scene| *5)) (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|DirectedGraph| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *1 (|Scene| *5)) (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *4 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *4 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *4 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *4 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SBoundary| *5)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Record| (|:| |mins| *5) (|:| |maxs| *5)))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SBoundary| *5)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Record| (|:| |mins| *5) (|:| |maxs| *5)))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|SBoundary| *4))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *3 (|Record| (|:| |mins| *4) (|:| |maxs| *4)))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|SBoundary| *4))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *3 (|Record| (|:| |mins| *4) (|:| |maxs| *4)))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |txt| (|String|))
                         (|:| |siz| (|NonNegativeInteger|)) (|:| |pos| *3)
                         (|:| |np| (|List| (|String|)))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |txt| (|String|))
                         (|:| |siz| (|NonNegativeInteger|)) (|:| |pos| *3)
                         (|:| |np| (|List| (|String|)))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|DoubleFloat|)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|DoubleFloat|)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |shptype| (|Symbol|)) (|:| |centre| *3)
                         (|:| |size| *3) (|:| |fill| (|Boolean|))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |shptype| (|Symbol|)) (|:| |centre| *3)
                         (|:| |size| *3) (|:| |fill| (|Boolean|))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SimpleCell| *5 *6)))
       (|isDomain| *1 (|SimpleCell| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SimpleCell| *5 *3)))
       (|isDomain| *1 (|SimpleCell| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Cell| *4)) (|ofCategory| *4 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SimpleCell| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|RealClosedField|))
       (|isDomain| *1 (|SimpleCell| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|SimpleCell| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ScanningUtilities|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Integer|) *2 *2))
   (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
       (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Integer|) *2 *2))
       (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
   (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SortedCache| *3))
       (|ofCategory| *3 (|CachableSet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SBoundary| *3)))
       (|isDomain| *1 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1) (|isDomain| *1 (|SingletonAsOrderedSet|)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1
                   (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7
                                                                      *8 *3))
       (|ofCategory| *3
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *4 *5))
       (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5)))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|Ruleset| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5)))
       (|isDomain| *1 (|Ruleset| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *4 *5))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Pattern| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Mapping| (|Boolean|) (|List| *6)))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Mapping| (|Boolean|) *5))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|AttachPredicates| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|AttachPredicates| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|Mapping| (|Boolean|) (|List| *6)))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| *2)))
       (|isDomain| *2 (|Pattern| *3)) (|isDomain| *1 (|RewriteRule| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| *2)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|RewriteRule| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *5 (|Boolean|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9))))
   (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Union| (|Boolean|) (|List| *1)))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Union| *3 (|List| *1)))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *3 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|Ring|)) (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2))
       (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1)) (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2))
       (|ofCategory| *2 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5))
       (|isDomain| *1 (|AlgebraicFunction| *5 *2))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|OutputForm|))
   (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
   (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RealClosure| *3))
       (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |coef| *3) (|:| |gap| (|NonNegativeInteger|))
                         (|:| |quotient| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |remainder|
                              (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |polnum| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |polden| *3)
                         (|:| |power| (|NonNegativeInteger|))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |polnum| *1) (|:| |polden| *1)
                             (|:| |power| (|NonNegativeInteger|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Float|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2))
   (|ofType| *4 (|List| *2)) (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| *5))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Float|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Float|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
   (|has| *4 (SIGNATURE |retractIfCan| ((|Union| *4 "failed") *2)))
   (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleXExpression| *3))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|FiniteFieldCategory|))
   (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))
   (|ofType| *7 (|PositiveInteger|))))
 ((*1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|RetractableFrom| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RetractableTo| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Algebra| (|Integer|)))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Float|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2))
       (|ofType| *4 (|List| *2))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *5))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|)))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Float|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|)))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|)))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Expression| (|Float|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
       (|has| *4 (SIGNATURE |retractIfCan| ((|Union| *4 "failed") *2)))
       (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleXExpression| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|RetractableFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Integer|)))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |gcd| *1) (|:| |coef1| *1) (|:| |coef2| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef1| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef2| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *2 *4 *5))
       (|isDomain| *1 (|PolynomialSetCategory&| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|PolynomialSetCategory| *2 *4 *5 *6))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|RecursivePolynomialCategory&| *3 *2 *4 *5))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *2 *4 *5))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| *7)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|PositiveInteger|)))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RomanNumeral|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FramedModule&| *3 *4))
       (|ofCategory| *3 (|FramedModule| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSetAggregate&| *3 *4))
       (|ofCategory| *3 (|FiniteSetAggregate| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))
 ((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))
 ((*1 *2)
  (AND (|ofType| *4 *2) (|ofType| *5 *2)
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *5 *6))
       (|ofCategory| *8 (|DirectProductCategory| *4 *6))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RectangularMatrixCategory&| *3 *4 *5 *6 *7 *8))
       (|ofCategory| *3 (|RectangularMatrixCategory| *4 *5 *6 *7 *8))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Factored| *4) *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *4))
       (|isDomain| *1 (|FactoredFunctionUtilities| *4))))
 ((*1 *1 *1) (|isDomain| *1 (|Plot|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1) (|isDomain| *1 (|Plot3D|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| (|AlgebraicNumber|))))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Kernel| (|AlgebraicNumber|)))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
       (|isDomain| *3 (|List| (|Kernel| (|AlgebraicNumber|))))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
       (|isDomain| *3 (|Kernel| (|AlgebraicNumber|)))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdeal| *3 *2 *4 *5))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *2 *4) (|RetractableTo| *2)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4)) (|ofType| *6 (|Vector| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|MonogenicAlgebra| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|NormInMonogenicAlgebra| *4 *2 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RealNumberSystem|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionSpace&| *3 *4))
       (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerNumberSystem&| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|NonAssociativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OctonionCategory&| *3 *4))
       (|ofCategory| *3 (|OctonionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|QuotientFieldCategory&| *3 *4))
       (|ofCategory| *3 (|QuotientFieldCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|QuaternionCategory&| *3 *4))
       (|ofCategory| *3 (|QuaternionCategory| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealClosedField&| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealNumberSystem&| *3))
       (|ofCategory| *3 (|RealNumberSystem|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|Rng|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *5 (|Field|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3)) (|isDomain| *1 (|IncidenceAlgebra| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3 (|Mapping| *4 (|Integer|) (|Integer|)))
       (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|OutputForm|))))
       (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4))
       (|isDomain| *1 (|QuadraticForm| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *5)))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|XDistributedPolynomial| *4 *5))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *2))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|IndexedAggregate| *3 *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *7 *2))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *5 *6))
       (|ofCategory| *2 (|DirectProductCategory| *4 *6))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|DivisionRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| *5)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *5))
       (|isDomain| *3 (|List| *5)) (|ofType| *4 (|Symbol|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|PolynomialInterpolation| *4 *5))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *5))
       (|isDomain| *1 (|PolynomialInterpolation| *4 *5))
       (|ofType| *4 (|Symbol|))))
 ((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *6)))
       (|isDomain| *1 (|RationalInterpolation| *5 *6))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputBox|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *4))
       (|isDomain| *1 (|RandomDistributions| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|RetractableTo| *5)
                             (|Comparable|)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RootFSSplit| *6 *3))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |funs| (|List| *6)) (|:| |nroot| *6)
                              (|:| |npow1| (|Integer|))
                              (|:| |npow2| (|Integer|)))))
       (|isDomain| *1 (|RootFSSplit| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|Fraction| (|SparseUnivariatePolynomial| *2))))
   (|isDomain| *4 (|Kernel| *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *5 *2 *6))
   (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *2)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *2))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Fraction|
                (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *1 (|RationalFunction| *5))
   (|ofCategory| *5 (|IntegralDomain|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Kernel| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *1)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|Fraction| (|SparseUnivariatePolynomial| *3))))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *6)) (|isDomain| *4 (|Variable| *5))
       (|ofType| *5 (|Symbol|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 (|Polynomial| *6)))
       (|isDomain| *1 (|PolynomialToUnivariatePolynomial| *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Fraction|
                    (|SparseUnivariatePolynomial|
                     (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|RationalFunction| *5))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *2))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|PolynomialCategory| *5 *4 *2))
   (|ofCategory| *2 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *2 *5 *6 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *6))
                          (SIGNATURE |numer| (*6 $))
                          (SIGNATURE |denom| (*6 $)))))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeMonoid| *3)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|RetractableTo| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *6))))))
       (|isDomain| *1 (|RetractSolvePackage| *5 *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|Fraction| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|GenusZeroIntegration| *5 *6 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3 *4 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|isDomain| *4 (|SparseUnivariatePolynomial| *9))
   (|isDomain| *6 (|List| *11)) (|isDomain| *7 (|List| (|NonNegativeInteger|)))
   (|isDomain| *8 (|List| *9)) (|ofCategory| *11 (|OrderedSet|))
   (|ofCategory| *9 (|EuclideanDomain|))
   (|ofCategory| *5 (|PolynomialCategory| *9 *10 *11))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *1 (|MultivariateSquareFree| *10 *11 *9 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofType| *6 (|List| *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|RepeatedSquaring| *2))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $)))))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|RepeatedDoubling| *2))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE + ($ $ $)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Vector| *5))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|Field|))
       (|ofCategory| *6 (|Finite|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *6))))
       (|isDomain| *1 (|RepresentationPackage2| *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *4))))
       (|isDomain| *1 (|RepresentationPackage2| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Finite|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Matrix| *6))
       (|isDomain| *1 (|RepresentationPackage2| *6))
       (|ofCategory| *6 (|Field|)) (|ofCategory| *6 (|Ring|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|RepresentationPackage2| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Vector| (|Vector| *5)))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Vector| *4))) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Permutation| (|Integer|)))
       (|isDomain| *1 (|FiniteGroupPackage| *3))
       (|ofCategory| *3 (|Join| (|Group|) (|Finite|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Permutation| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|RepresentationPackage1| *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Permutation| (|Integer|))))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|RepresentationPackage1| *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|Polynomial| *4)))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
   (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |radval| (|Expression| (|Integer|)))
                              (|:| |radmult| (|Integer|))
                              (|:| |radvect|
                                   (|List|
                                    (|Matrix| (|Expression| (|Integer|))))))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|ReductionOfOrder| *3 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |eq| *3) (|:| |op| (|List| *5))))
       (|isDomain| *1 (|ReductionOfOrder| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RecurrenceOperator| *4 *3))
   (|ofCategory| *3
                 (|Join| (|FunctionSpace| *4) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))) 
(((*1 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|RecurrenceOperator| *3 *4))
   (|ofCategory| *4
                 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *3 *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Symbol|))
                             (|PartialDifferentialRing| (|Symbol|))
                             (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *1 (|RecurrenceOperator| *3 *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *3 *4 *4 *2 *5 *6)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
       (|isDomain| *6 (|Stream| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *7) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|)) (|RetractableTo| *4)
                             (|PartialDifferentialRing| *4)
                             (|CombinatorialOpsCategory|)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *7 *2))))) 
(((*1 *2 *3 *4 *2 *5 *6)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
       (|isDomain| *6 (|Stream| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *7) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|)) (|RetractableTo| *4)
                             (|PartialDifferentialRing| *4)
                             (|CombinatorialOpsCategory|)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *7 *2))))) 
(((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|RightOpenIntervalRootCharacterization| (|RealClosure| *4)
                                                        (|SparseUnivariatePolynomial|
                                                         (|RealClosure| *4))))
   (|isDomain| *3 (|OutputForm|)) (|isDomain| *1 (|RealClosure| *4))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|RightOpenIntervalRootCharacterization| (|RealClosure| *3)
                                                        (|SparseUnivariatePolynomial|
                                                         (|RealClosure| *3))))
   (|isDomain| *1 (|RealClosure| *3))
   (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |left| (|Fraction| (|Integer|)))
                              (|:| |right| (|Fraction| (|Integer|))))))
       (|isDomain| *1 (|RealZeroPackage| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *5 (|Fraction| (|Integer|)))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |left| (|Fraction| (|Integer|)))
                              (|:| |right| (|Fraction| (|Integer|))))))
       (|isDomain| *1 (|RealZeroPackageQ| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *5 (|Fraction| (|Integer|)))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|RealZeroPackage| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackage| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6))
       (|isDomain| *1 (|RandomDistributions| *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|Record| (|:| |value| *4) (|:| |weight| (|Integer|)))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Mapping| *4))
   (|isDomain| *1 (|RandomDistributions| *4))))) 
(((*1 *2 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Fraction| *5)))
   (|isDomain| *1 (|TranscendentalRischDESystem| *4 *5))))) 
(((*1 *2 *3 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| *6))
   (|isDomain| *4 (|Mapping| *6 *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |a| *6) (|:| |b| (|Fraction| *6)) (|:| |h| *6)
                         (|:| |c1| (|Fraction| *6)) (|:| |c2| (|Fraction| *6))
                         (|:| |t| *6)))
   (|isDomain| *1 (|TranscendentalRischDESystem| *5 *6))))) 
(((*1 *2 *3 *4 *2 *2 *5 *6 *7)
  (AND
   (|isDomain| *4 (|LaurentPolynomial| *6 (|SparseUnivariatePolynomial| *6)))
   (|isDomain| *7
               (|Mapping|
                (|Record| (|:| |logands| (|List| *6))
                          (|:| |basis|
                               (|List| (|Vector| (|Fraction| (|Integer|))))))
                (|List| (|Kernel| *6)) (|List| *6)))
   (|ofCategory| *6
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *8)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
   (|isDomain| *5 (|List| (|Kernel| *6)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| *2) (|LinearlyExplicitOver| *2)))
   (|isDomain| *1 (|ParametricRischDE| *8 *6))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *5 (|Symbol|))
       (|isDomain| *7
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *3)
                               (|:| |coeffs| (|Vector| *3))))
                    (|List| (|Kernel| *3)) (|List| *3)))
       (|isDomain| *8
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *3))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *3)) (|List| *3)))
       (|isDomain| *4 (|List| *3)) (|isDomain| *6 (|List| (|Kernel| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *9)))
       (|ofCategory| *9
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *3)
                              (|:| |coeffs| (|Vector| *3)))))
       (|isDomain| *1 (|ParametricRischDE| *9 *3))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *6 (|Symbol|))
       (|isDomain| *8
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *4)
                               (|:| |coeffs| (|Vector| *4))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *9
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *4))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|List| *4))
       (|isDomain| *7 (|List| (|Kernel| *4)))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *10)))
       (|ofCategory| *10
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *4)
                              (|:| |coeffs| (|Vector| *4)))))
       (|isDomain| *1 (|ParametricRischDE| *10 *4))))
 ((*1 *2 *3 *4 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *6 (|Symbol|))
       (|isDomain| *8
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *4)
                               (|:| |coeffs| (|Vector| *4))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *9
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *4))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *10)))
       (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|List| *4))
       (|isDomain| *7 (|List| (|Kernel| *4)))
       (|ofCategory| *10
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *4)
                                    (|:| |coeffs| (|Vector| *4)))
                          "failed"))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *4)
                                    (|:| |coeffs| (|Vector| *4)))))))
       (|isDomain| *1 (|ParametricRischDE| *10 *4))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|List| (|Kernel| *3)))
   (|ofCategory| *3
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *7)))
   (|ofCategory| *7
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeffs| (|Vector| *3))))
   (|isDomain| *1 (|ElementaryRischDEX2| *7 *3))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Kernel| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |ans| *3) (|:| |right| *3)
                             (|:| |primpart| *3) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX2| *6 *3))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| *3) (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record| (|:| |ans| *4) (|:| |right| *4)
                             (|:| |primpart| *4) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX2| *6 *4))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryRischDEX| *3 *2))
   (|ofCategory| *2
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|)
                         (|LiouvillianFunctionCategory|)
                         (|SpecialFunctionCategory|) (|FunctionSpace| *3)))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record| (|:| |ans| *4) (|:| |right| *4)
                             (|:| |primpart| *4) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX| *6 *4))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|)
                             (|FunctionSpace| *6)))))) 
(((*1 *2 *3 *4 *4 *4 *5 *6 *7)
  (|partial| AND (|isDomain| *5 (|Symbol|))
   (|isDomain| *6
               (|Mapping|
                (|Union|
                 (|Record| (|:| |mainpart| *4)
                           (|:| |limitedlogs|
                                (|List|
                                 (|Record| (|:| |coeff| *4)
                                           (|:| |logand| *4)))))
                 "failed")
                *4 (|List| *4)))
   (|isDomain| *7
               (|Mapping|
                (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4))
                         "failed")
                *4 *4))
   (|ofCategory| *4
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *8)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| *3) (|LinearlyExplicitOver| *3)))
   (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|ElementaryRischDESystem| *8 *4))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping| (|SparseUnivariatePolynomial| *5)
                          (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |ans| (|SparseUnivariatePolynomial| *5))
                         (|:| |remainder| (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|RDEaux| *5))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *5 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|SparseUnivariatePolynomial| *7)
                              (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|Field|))
       (|isDomain| *2
                   (|Union|
                    (|List|
                     (|Record| (|:| |ans| (|SparseUnivariatePolynomial| *7))
                               (|:| |remainder|
                                    (|SparseUnivariatePolynomial| *7))))
                    (|Record|
                     (|:| |ans| (|List| (|SparseUnivariatePolynomial| *7)))
                     (|:| |acoeff| (|SparseUnivariatePolynomial| *7))
                     (|:| |eegen| (|SparseUnivariatePolynomial| *7))
                     (|:| |bpar| (|SparseUnivariatePolynomial| *7))
                     (|:| |lcpar| (|List| (|SparseUnivariatePolynomial| *7)))
                     (|:| |dpar| (|Integer|)))))
       (|isDomain| *1 (|RDEaux| *7))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerPrimeField| *2))
       (|ofType| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PrimeField| *2)) (|ofType| *2 (|PositiveInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RadicalCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealClosedField|)))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RealClosedField|))
   (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursiveAggregate| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|ComplexCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|OctonionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OnePointCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OrderedCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|QuaternionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RationalRetractions| *3))
   (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RationalRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RationalRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Integer|))))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|RadixUtilities|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Factored| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *5) (|:| |radicand| (|List| *5))))
       (|isDomain| *1 (|FactoredFunctions| *5))))
 ((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RadicalCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Queue| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|QuadraticForm| *3 *4))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Algebra| *3)) (|isDomain| *1 (|LocalAlgebra| *2 *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Module| *3)) (|isDomain| *1 (|Localize| *2 *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|QuotientFieldCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *3 *2))
       (|ofCategory| *3 (|Algebra| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *2))
       (|ofCategory| *3 (|Module| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|QuasiAlgebraicSet| (|Fraction| (|Integer|))
                                    (|OrderedVariableList| *3)
                                    (|DirectProduct| (|#| *3)
                                                     (|NonNegativeInteger|))
                                    (|DistributedMultivariatePolynomial| *3
                                                                         (|Fraction|
                                                                          (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|QuasiAlgebraicSet2| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *4 *5 *6 *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|Boolean|) "failed"))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *2))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *2 *3 *5))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|MonogenicAlgebra| *2 *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4
                                           *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1="failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *3 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1#) (|Symbol|))))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4
                                           *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1="failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *3 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1#) (|Symbol|))))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| C (|Matrix| *5))
                              (|:| |lg| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|Automorphism| *5))
       (|isDomain| *4 (|Mapping| *5 *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *2))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Automorphism| *6))
       (|isDomain| *5 (|Mapping| *6 *6)) (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| R (|Matrix| *6)) (|:| A (|Matrix| *6))
                             (|:| |Ainv| (|Matrix| *6))))
       (|isDomain| *1 (|PseudoLinearNormalForm| *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *8))
       (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
       (|isDomain| *4 (|Mapping| *8 *8 *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|Mapping| (|Boolean|) *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *6 *7 *8 *9))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |bas| (|GeneralTriangularSet| *4 *5 *6 *7))
                         (|:| |top| (|List| *7))))
   (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *2))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *7) (|List| *7)))
       (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |rnum| *4) (|:| |polnum| *3)
                             (|:| |den| *4)))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|CartanKuranishi| *4 *5))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *2 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|EuclideanDomain|))))
 ((*1 *2 *1 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |lm| (|FreeMonoid| *3))
                         (|:| |rm| (|FreeMonoid| *3))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |quotient| (|NonNegativeInteger|))
                         (|:| |remainder| (|NonNegativeInteger|))))
   (|isDomain| *1 (|NonNegativeInteger|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultantReduit| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |resultantReduit| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|GcdDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |discriminant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |discriminant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|RetractableTo| (|Fraction| *2))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BoundIntegerRoots| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|LinearlyExplicitOver| *2)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|PolynomialRationalRoots| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceRationalRoots| *5 *3))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|PolynomialRationalRoots| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|PrintPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|IntegerPrimesPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerPrimesPackage| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerPrimesPackage| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |primelt| *5)
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *5)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *5))))
 ((*1 *2 *3 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |primelt| *3)
                         (|:| |pol1| (|SparseUnivariatePolynomial| *3))
                         (|:| |pol2| (|SparseUnivariatePolynomial| *3))
                         (|:| |prim| (|SparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *3))
   (|ofCategory| *3 (|AlgebraicallyClosedField|))
   (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *3 *4 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef1| (|Integer|))
                             (|:| |coef2| (|Integer|))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|PrimitiveElement| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| (|Integer|)))
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *5)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|PrimitiveElement| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| (|Integer|)))
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *6)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|PrimitiveElement| *6))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|IntegrationResult| *2))
       (|ofCategory| *2 (|RetractableTo| *3)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PrimitiveFunctionCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|PrimitiveFunctionCategory|))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *4 (|List| (|Symbol|)))
   (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |lczlc|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))
                    (|:| |k| (|Integer|))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |lcx0lc|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))
                    (|:| |lcx0m|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Preorder| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|PositiveInteger|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *5))
   (|isDomain| *1 (|PrecomputedAssociatedEquations| *5 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| (|List| *4)))
       (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                         (|:| |posY| (|NonNegativeInteger|))))
   (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|Poset| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|Poset| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|List| (|Boolean|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *1 (|Poset| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FiniteGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *3 (|NonNegativeInteger|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |name| (|String|))
                         (|:| |arrType| (|NonNegativeInteger|))
                         (|:| |fromOb| (|NonNegativeInteger|))
                         (|:| |toOb| (|NonNegativeInteger|))
                         (|:| |xOffset| (|Integer|))
                         (|:| |yOffset| (|Integer|))
                         (|:| |map| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PermutationCategory| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|U32Vector|)))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|)))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|U32Vector|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PrimitiveArray| (|ModMonic| *3 *4)))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *3 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *3) (|:| |radicand| (|List| *3))))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *3 *8))
       (|ofCategory| *8
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*3 $))
                              (SIGNATURE |denom| (*3 $))
                              (SIGNATURE |coerce| ($ *3)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *3) (|:| |radicand| *3)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*8 $))
                              (SIGNATURE |denom| (*8 $))
                              (SIGNATURE |coerce| ($ *8)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *9) (|:| |radicand| *9)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *9))
       (|ofCategory| *9
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*8 $))
                              (SIGNATURE |denom| (*8 $))
                              (SIGNATURE |coerce| ($ *8)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *7 (|PolynomialCategory| *3 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *8) (|:| |radicand| *8)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *3 *7 *8))
       (|ofCategory| *8
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $))
                              (SIGNATURE |coerce| ($ *7)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2 (|Record| (|:| |val| *1) (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |val| (|Pattern| *3))
                         (|:| |exponent| (|Pattern| *3))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *4))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *4))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |val| (|Pattern| *3))
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|SemiRing|))
   (|isDomain| *2
               (|Record| (|:| |var| *5)
                         (|:| |exponent| (|NonNegativeInteger|))))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *3 (|Comparable|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiRing|))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *3 (|Comparable|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|HeuGcd| *4))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|OrderedRing|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|CyclotomicPolynomialPackage|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *4 *2 *5)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|Pattern| *6)))
       (|isDomain| *5
                   (|Mapping| (|PatternMatchResult| *6 *8) *8 (|Pattern| *6)
                              (|PatternMatchResult| *6 *8)))
       (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *6))
                             (|RetractableTo| *7)))
       (|isDomain| *2 (|PatternMatchResult| *6 *8))
       (|ofCategory| *7 (|Join| (|Comparable|) (|Ring|)))
       (|isDomain| *1 (|PatternMatchTools| *6 *7 *8))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|ComplexCategory| *6))
       (|ofCategory| (|Polynomial| *6) (|PatternMatchable| *5))
       (|ofCategory| *6 (|Join| (|PatternMatchable| *5) (|CommutativeRing|)))
       (|isDomain| *1 (|ComplexPatternMatch| *5 *6 *3))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *4 *1))
       (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *1 (|PatternMatchable| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *6))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *3)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|isDomain| *1 (|PatternMatchPushDown| *5 *3 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|ConvertibleTo| *4)
                             (|PatternMatchable| *5)
                             (|RetractableTo| (|Kernel| $))))
       (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchFunctionSpace| *5 *6 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| (|Integer|) *3))
       (|isDomain| *4 (|Pattern| (|Integer|)))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *1 (|PatternMatchIntegerNumberSystem| *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *6))
       (|isDomain| *3 (|Kernel| *6)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|RetractableTo| (|Kernel| $))
                             (|ConvertibleTo| *4) (|PatternMatchable| *5)))
       (|isDomain| *4 (|Pattern| *5))
       (|isDomain| *1 (|PatternMatchKernel| *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchListResult| *5 *6 *3))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *3 (|ListAggregate| *6))
       (|isDomain| *1 (|PatternMatchListAggregate| *5 *6 *3))))
 ((*1 *2 *3 *4 *2 *5)
  (AND
   (|isDomain| *5
               (|Mapping| (|PatternMatchResult| *6 *3) *8 (|Pattern| *6)
                          (|PatternMatchResult| *6 *3)))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|PatternMatchResult| *6 *3)) (|isDomain| *4 (|Pattern| *6))
   (|ofCategory| *6 (|SetCategory|))
   (|ofCategory| *3
                 (|Join| (|PolynomialCategory| *9 *7 *8) (|ConvertibleTo| *4)))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *6)))
   (|isDomain| *1 (|PatternMatchPolynomialCategory| *6 *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|PolynomialCategory| *8 *6 *7)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *7 (|PatternMatchable| *5))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchPolynomialCategory| *5 *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|QuotientFieldCategory| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|PatternMatchable| *5)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5))
       (|isDomain| *1 (|PatternMatchQuotientFieldCategory| *5 *6 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 (|Symbol|)))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchSymbol| *5))))
 ((*1 *2 *3 *4 *5 *2 *6)
  (AND (|isDomain| *4 (|List| (|Pattern| *7)))
       (|isDomain| *5 (|Mapping| *9 (|List| *9)))
       (|isDomain| *6
                   (|Mapping| (|PatternMatchResult| *7 *9) *9 (|Pattern| *7)
                              (|PatternMatchResult| *7 *9)))
       (|ofCategory| *7 (|SetCategory|))
       (|ofCategory| *9
                     (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *7))
                             (|RetractableTo| *8)))
       (|isDomain| *2 (|PatternMatchResult| *7 *9)) (|isDomain| *3 (|List| *9))
       (|ofCategory| *8 (|Join| (|Comparable|) (|Ring|)))
       (|isDomain| *1 (|PatternMatchTools| *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *5)))
       (|ofCategory| *5 (|PatternMatchable| *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| (|Boolean|) *5))
       (|isDomain| *1 (|PatternMatchPushDown| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2 (|List| (|Segment| (|DoubleFloat|))))
       (|isDomain| *1 (|PlotTools|))))) 
(((*1 *1 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *2 *2 *2 *3 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Plot|))
       (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))
 ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *2))
   (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |det| *12) (|:| |rows| (|List| (|Integer|)))
                         (|:| |cols| (|List| (|Integer|)))))
   (|isDomain| *4 (|Matrix| *12))
   (|isDomain| *5 (|List| (|Fraction| (|Polynomial| *9))))
   (|isDomain| *6 (|List| (|List| *12))) (|isDomain| *7 (|NonNegativeInteger|))
   (|isDomain| *8 (|Integer|))
   (|ofCategory| *9
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *12 (|PolynomialCategory| *9 *11 *10))
   (|ofCategory| *10 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *11 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |eqzro| (|List| *12)) (|:| |neqzro| (|List| *12))
                         (|:| |wcond| (|List| (|Polynomial| *9)))
                         (|:| |bsoln|
                              (|Record|
                               (|:| |partsol|
                                    (|Vector| (|Fraction| (|Polynomial| *9))))
                               (|:| |basis|
                                    (|List|
                                     (|Vector|
                                      (|Fraction| (|Polynomial| *9)))))))))
   (|isDomain| *1 (|ParametricLinearEquations| *9 *10 *11 *12))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *7)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |det| *8) (|:| |rows| (|List| (|Integer|)))
                              (|:| |cols| (|List| (|Integer|))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *6)))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |rank| (|NonNegativeInteger|))
                          (|:| |eqns|
                               (|List|
                                (|Record| (|:| |det| *7)
                                          (|:| |rows| (|List| (|Integer|)))
                                          (|:| |cols| (|List| (|Integer|))))))
                          (|:| |fgb| (|List| *7)))))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |rank| (|NonNegativeInteger|))
                          (|:| |eqns|
                               (|List|
                                (|Record| (|:| |det| *7)
                                          (|:| |rows| (|List| (|Integer|)))
                                          (|:| |cols| (|List| (|Integer|))))))
                          (|:| |fgb| (|List| *7)))))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3))
   (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |mat| (|Matrix| (|Fraction| (|Polynomial| *4))))
                         (|:| |vec| (|List| (|Fraction| (|Polynomial| *4))))
                         (|:| |rank| (|NonNegativeInteger|))
                         (|:| |rows| (|List| (|Integer|)))
                         (|:| |cols| (|List| (|Integer|)))))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record|
                (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4))))
                (|:| |basis|
                     (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record|
                (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4))))
                (|:| |basis|
                     (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |rank| (|NonNegativeInteger|))
                              (|:| |eqns|
                                   (|List|
                                    (|Record| (|:| |det| *8)
                                              (|:| |rows| (|List| (|Integer|)))
                                              (|:| |cols|
                                                   (|List| (|Integer|))))))
                              (|:| |fgb| (|List| *8)))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |sysok| (|Boolean|)) (|:| |z0| (|List| *7))
                             (|:| |n0| (|List| *7))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *2 (|PolynomialCategory| *4 *6 *5))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *2))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3))
   (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Matrix| *11))
       (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *8))))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|String|))
       (|isDomain| *7 (|Integer|))
       (|ofCategory| *8
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *11 (|PolynomialCategory| *8 *10 *9))
       (|ofCategory| *9 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record|
                    (|:| |rgl|
                         (|List|
                          (|Record| (|:| |eqzro| (|List| *11))
                                    (|:| |neqzro| (|List| *11))
                                    (|:| |wcond| (|List| (|Polynomial| *8)))
                                    (|:| |bsoln|
                                         (|Record|
                                          (|:| |partsol|
                                               (|Vector|
                                                (|Fraction|
                                                 (|Polynomial| *8))))
                                          (|:| |basis|
                                               (|List|
                                                (|Vector|
                                                 (|Fraction|
                                                  (|Polynomial| *8))))))))))
                    (|:| |rgsz| (|Integer|))))
       (|isDomain| *1 (|ParametricLinearEquations| *8 *9 *10 *11))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *7))
                              (|:| |neqzro| (|List| *7))
                              (|:| |wcond| (|List| (|Polynomial| *4)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *4))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *4))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |eqzro| (|List| *8)) (|:| |neqzro| (|List| *8))
                          (|:| |wcond| (|List| (|Polynomial| *5)))
                          (|:| |bsoln|
                               (|Record|
                                (|:| |partsol|
                                     (|Vector| (|Fraction| (|Polynomial| *5))))
                                (|:| |basis|
                                     (|List|
                                      (|Vector|
                                       (|Fraction| (|Polynomial| *5))))))))))
   (|isDomain| *4 (|String|))
   (|ofCategory| *5
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
   (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *7))
                              (|:| |neqzro| (|List| *7))
                              (|:| |wcond| (|List| (|Polynomial| *4)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *4))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *4))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9))
       (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *9))
                              (|:| |neqzro| (|List| *9))
                              (|:| |wcond| (|List| (|Polynomial| *6)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *6))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *6))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *9))
                              (|:| |neqzro| (|List| *9))
                              (|:| |wcond| (|List| (|Polynomial| *6)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *6))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *6))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|String|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|))
       (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8))
       (|ofCategory| *7
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|))
       (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8))
       (|ofCategory| *7
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PolynomialInterpolationAlgorithms| *4 *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|PrincipalIdealDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| *1)) (|:| |generator| *1)))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PrincipalIdealDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PositiveInteger|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Partition|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Factored| (|Polynomial| *6)))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Polynomial| *6))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *6))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |num| *3) (|:| |den| (|Factored| *3)))))
   (|isDomain| *1 (|PartialFraction| *3))
   (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|))))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |order| (|NonNegativeInteger|))
                         (|:| |function| *8)))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
   (|isDomain| *2
               (|Record| (|:| |order| (|NonNegativeInteger|))
                         (|:| |function| *6)))
   (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
       (|ofCategory| *4
                     (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6
                     (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record| (|:| |ncurve| *8) (|:| |n_div_numer| (|Vector| *8))
                         (|:| |n_div_denom| *8)
                         (|:| |need_change| (|Boolean|))))
   (|isDomain| *4 (|List| (|Kernel| *6)))
   (|ofCategory| *6 (|AlgebraicallyClosedField|))
   (|ofCategory| *6 (|FunctionSpace| *5))
   (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
   (|ofCategory| *5 (|CharacteristicZero|))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrder| *5 *6 *7 *8 *9))
   (|ofCategory| *9 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |ncurve| *7)
                             (|:| |n_div_numer| (|Vector| *7))
                             (|:| |n_div_denom| *7)
                             (|:| |need_change| (|Boolean|))))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseMultivariatePolynomial| *4 (|Kernel| *5))))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|isDomain| *2 (|SparseMultivariatePolynomial| *4 (|Kernel| *5)))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|GcdDomain|) (|Comparable|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|ExpressionFactorPolynomial| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5 (|ComplexCategory| *4))
   (|ofCategory| *4 (|IntegerNumberSystem|))
   (|isDomain| *1 (|ComplexIntegerSolveLinearPolynomialEquation| *4 *5))))
 ((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldSolveLinearPolynomialEquation| *4 *5 *3))))
 ((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
   (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
   (|isDomain| *1 (|IntegerSolveLinearPolynomialEquation|))))
 ((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *1)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Matrix| *1))
   (|ofCategory| *1 (|CharacteristicNonZero|))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
   (|isDomain| *2 (|Vector| *1))))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|CharacteristicNonZero|)))
 ((*1 *1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|CharacteristicNonZero|))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
   (|ofCategory| *7 (|PolynomialCategory| *5 *6 *4))
   (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialFactorizationByRecursion| *5 *6 *4 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *2 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *2 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
   (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ProductFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |left| (|NonNegativeInteger|))
                              (|:| |right| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|NonNegativeInteger|))
                          (|:| |right| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|NonNegativeInteger|))
                         (|:| |right| (|NonNegativeInteger|))))
   (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Integer|))
   (|ofCategory| *1 (|ModularEvaluationCategory| *4 *2))
   (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|isDomain| *5
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |eval1coeffbuf| (|U32Vector|))
                         (|:| |eval1expbuf| (|SortedExponentVector|))))
   (|ofCategory| *1 (|ModularEvaluationCategory| *6 *2))
   (|ofCategory| *6 (|Type|)) (|ofCategory| *2 (|Type|))
   (|isDomain| *4 (|Integer|))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *5
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *5
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |eval1coeffbuf| (|U32Vector|))
                         (|:| |eval1expbuf| (|SortedExponentVector|))))
   (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *4
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|FinitelyGenerated|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1) (|ofCategory| *1 (|Finite|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1) (|isDomain| *1 (|Integer|)))
 ((*1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Permutation| *3))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Permutation| *4))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PermutationGroup| *3))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|PermutationCategory| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Set| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Set| (|List| *4)))
       (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Set| (|Set| *4)))
       (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| (|Set| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Permutation| *6))
       (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Vector| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SquareMatrix| *4 *2)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *2 (|Join| (|Ring|) (|CommutativeStar|)))
       (|isDomain| *1 (|Permanent| *4 *2))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |preimage| (|List| *3))
                         (|:| |image| (|List| *3))))
   (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Partition|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Finite|))
        (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))
   (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))
        (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Mapping| *4 *4))
       (|isDomain| *1 (|PartialDifferentialOperatorHelper| *4 *3))
       (|ofCategory| *4 (|PartialDifferentialRing| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Automorphism| *4))
       (|isDomain| *1 (|PartialDifferentialOperatorHelper| *4 *3))
       (|ofCategory| *4 (|PartialDifferentialRing| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |adjMat| *3) (|:| |detMat| *4)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|PartialDifferentialOperator| *2 *3))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1) (|ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| (|PoincareBirkhoffWittLyndonBasis| *3))
                          (|:| |c| *4))))
   (|isDomain| *1 (|LieExponentials| *3 *4 *5))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Module| (|Fraction| (|Integer|)))))
   (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LyndonWord| *3)))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Any|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|AnyFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|PatternFunctions1| *4 *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternFunctions1| *4 *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|PatternMatchResult| *4 *5))
   (|ofCategory| *5 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternFunctions1| *5 *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternFunctions1| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| (|Boolean|) *5))
       (|isDomain| *1 (|PatternFunctions1| *4 *5)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |op| (|BasicOperator|))
                         (|:| |arg| (|List| (|Pattern| *3)))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |num| (|Pattern| *3))
                         (|:| |den| (|Pattern| *3))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Any|))
       (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |var| (|List| (|Symbol|))) (|:| |pred| (|Any|))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternMatchResult| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|ListAggregate| *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|isDomain| *3 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
   (|isDomain| *1 (|PatternMatchResult| *4 *2))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *1 *3)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchListResult| *5 *6 (|List| *6)))
       (|isDomain| *1 (|PatternMatch| *5 *6 *4))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|List| (|Equation| *3)))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|ofCategory| *3 (|RetractableTo| (|Symbol|)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *3))))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4)) (|ofCategory| *3 (|Ring|))
       (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|))))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|))))
       (|not| (|ofCategory| *3 (|Ring|)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatch| *5 *6 *4))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PatternMatchResult| *4 *5))
       (|isDomain| *3 (|PatternMatchResult| *4 *6))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|ListAggregate| *5))
       (|isDomain| *1 (|PatternMatchListResult| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *3 *4))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *3 *5))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|List| *4))) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| *4)) (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| (|List| *4)))
       (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| (|List| *4)))
       (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|BalancedPAdicRational| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Integer|)))
       (|isDomain| *1 (|NumericContinuedFraction| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PAdicRational| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|Integer|))
       (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PAdicRationalConstructor| *3 *4))
       (|ofCategory| *4 (|PAdicIntegerCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FloatingPointSystem&| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FloatingPointSystem&| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Stream| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|EuclideanModularRing| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofType| *5 (|Mapping| *4 *4 *2))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *7 (|Mapping| (|Union| *4 "failed") *4 *4 *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularField| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularRing| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|PAdicIntegerCategory| *4))))) 
(((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6))
   (|isDomain| *1 (|PadeApproximants| *5 *4 *6))
   (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7))
   (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5)
   (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5)))
   (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))
 ((*1 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7))
   (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5)
   (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5)))
   (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))) 
(((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|ContinuedFraction| *6))
   (|isDomain| *1 (|PadeApproximants| *5 *4 *6))
   (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputBox|))) (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|OutputBox|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|OutputBox|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3 *4 *2 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *4 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputBox|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputBox|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *1 (|FormatterCategory&| *4))
   (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|OutputBox|) (|OutputBox|)))
       (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|OutputBox|) (|OutputBox|)))
       (|isDomain| *1 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Any|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Automorphism| *5)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *2))
       (|ofCategory| *2 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                             (|:| |generator| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                             (|:| |generator| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |generator| *1) (|:| |coef1| *1)
                             (|:| |coef2| *1) (|:| |coefu| *1)
                             (|:| |coefv| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Database| (|IndexCard|)))
       (|isDomain| *1 (|OperationsQuery|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OperatorHandlers| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1 *3 *4 *2)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *1 (|OperatorHandlers| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *1 (|OperatorHandlers| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OperatorHandlers| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *2 *2)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|List| *2))
   (|isDomain| *1 (|BasicOperatorFunctions1| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|Mapping| *4 (|List| *4)))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|Mapping| *4 (|List| *4)))
   (|isDomain| *1 (|BasicOperatorFunctions1| *4))
   (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Operator| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Operator| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *4 *2))
       (|ofCategory| *2 (|LeftModule| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *1 (|Operator| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|)))
       (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *2 *4))
       (|ofCategory| *4 (|LeftModule| *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|)))
       (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OnePointCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *4 (|Any|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *2 (|String|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|))
       (|isDomain| *2 (|Void|))))
 ((*1 *2 *3 *1 *4)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4))
       (|ofCategory| *4 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *5))
       (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *6))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *6 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *6))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathErrorKind|))
       (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OpenMathErrorKind|))
       (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |cd| (|String|)) (|:| |name| (|String|))))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|OpenMathEncoding|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|SingleInteger|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathDevice|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathDevice|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|CommonOperators|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *4))
       (|ofCategory| *4 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|ExpressionSpace&| *3))
       (|ofCategory| *3 (|ExpressionSpace|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpace&| *3 *4))
       (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|OrientedFacet|)))
   (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Boolean|))))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Boolean|))))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|List| *4)) (|ofCategory| *4 (|Field|))
   (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|ODETools| *4 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|ODETools| *4 *5))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|ODETools| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *6))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |particular| (|Union| *6 "failed"))
                              (|:| |basis| (|List| *6)))
                    *7 *6))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *6) "failed"))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|List| (|Vector| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record|
                     (|:| |particular|
                          (|List|
                           (|Record| (|:| |ratpart| *6)
                                     (|:| |coeffs| (|Vector| *6)))))
                     (|:| |basis| (|List| *6)))
                    *7 (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| (|Vector| *6))
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| A (|Matrix| *5))
                             (|:| |eqs|
                                  (|List|
                                   (|Record| (|:| C (|Matrix| *5))
                                             (|:| |g| (|Vector| *5))
                                             (|:| |eq| *6) (|:| |rh| *5))))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| A (|Matrix| *5))
                             (|:| |eqs|
                                  (|List|
                                   (|Record| (|:| C (|Matrix| *5))
                                             (|:| |lg| (|List| (|Vector| *5)))
                                             (|:| |eq| *6)
                                             (|:| |lrh| (|List| *5)))))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vec| (|Vector| *5))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Fraction| *6)))
       (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *7)))
       (|isDomain| *4 (|Mapping| (|List| *6) *7))
       (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
       (|ofCategory| *6
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *2 (|List| (|Fraction| *7)))
       (|isDomain| *1 (|RationalRicDE| *6 *7))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|List| *5) *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Fraction| *6)))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *7 (|Fraction| *7)))
   (|isDomain| *4 (|Mapping| (|List| *6) *7))
   (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
   (|ofCategory| *6
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2 (|List| (|Fraction| *7)))
   (|isDomain| *1 (|RationalRicDE| *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Fraction| *5)))
       (|isDomain| *1 (|RationalRicDE| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|AlgebraicallyClosedField|))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Fraction| *6)))
       (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *5 (|Fraction| *5)))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|AlgebraicallyClosedField|))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|List| (|Fraction| *5)))
   (|isDomain| *1 (|RationalRicDE| *4 *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|AlgebraicallyClosedField|))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|List| (|Fraction| *6)))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Record| (|:| |poly| *6) (|:| |eq| *3))))
       (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *7
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|List| *5) *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |poly| *6)
                          (|:| |eq|
                               (|LinearOrdinaryDifferentialOperator2| *6
                                                                      (|Fraction|
                                                                       *6))))))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4 (|Mapping| (|List| *7) *7 (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|ofCategory| *6
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List| (|Record| (|:| |frac| (|Fraction| *7)) (|:| |eq| *3))))
   (|isDomain| *1 (|PrimitiveRatRicDE| *6 *7 *3 *8))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *7))
   (|ofCategory| *8
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *7)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |frac| (|Fraction| *6))
                          (|:| |eq|
                               (|LinearOrdinaryDifferentialOperator2| *6
                                                                      (|Fraction|
                                                                       *6))))))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *4 (|MonogenicAlgebra| *5 *7))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vec| (|Vector| *5))))
       (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *4 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *8)) (|ofCategory| *8 (|MonogenicAlgebra| *5 *7))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *8 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *8))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping|
                (|Record| (|:| |particular| (|Union| *5 "failed"))
                          (|:| |basis| (|List| *5)))
                *3 *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3
                 (|Join| (|UnivariateSkewPolynomialCategory| *5)
                         (CATEGORY |domain| (SIGNATURE |adjoint| ($ $)))))
   (|isDomain| *2 (|Record| (|:| |ltilde| *3) (|:| |r| (|Union| *3 "failed"))))
   (|isDomain| *1 (|IntegrateSolutions| *5 *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |ltilde|
                         (|LinearOrdinaryDifferentialOperator1|
                          (|Fraction| *5)))
                    (|:| |r|
                         (|Union|
                          (|LinearOrdinaryDifferentialOperator1|
                           (|Fraction| *5))
                          "failed"))))
       (|isDomain| *1 (|RationalLODE| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|RationalLODE| *4 *2))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *2 (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|RationalLODE| *4 *2))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Fraction| *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Fraction| *6) #1="failed"))
                    (|:| |basis| (|List| (|Fraction| *6)))))
       (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|List| (|Fraction| *6)))
                             (|:| |mat| (|Matrix| *5))))
       (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Fraction| *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Union| (|Fraction| *6) #1#))
                         (|:| |basis| (|List| (|Fraction| *6)))))
   (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|List| (|Fraction| *6)))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|Record| (|:| |basis| (|List| (|Fraction| *6)))
                         (|:| |mat| (|Matrix| *5))))
   (|isDomain| *1 (|RationalLODE| *5 *6))))) 
(((*1 *2 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|PrimitiveRatRicDE| *4 *3 *2 *5))
   (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3))
   (|ofCategory| *5
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *2 *6))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Record| (|:| |constant| *5) (|:| |eq| *3))))
       (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *7
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |eq| *5))))
   (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatRicDE| *4 *2 *3 *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *5
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *3 *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *5
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *5 *3))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *3
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5))))
   (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4))))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5))))
   (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *6 *3))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *3
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4))))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *6 *3))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4))
   (|ofCategory| *3
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *4)))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Fraction| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *6
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *4))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *8))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *8)
                                    (|:| |coeffs| (|Vector| *5)))))
                    (|:| |basis| (|List| *8))))
       (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *8))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *1 (|ODEIntegration| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *1 (|ODEIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|ConstantLODE| *6 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Quaternion| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Octonion| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|DivisionRing|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedAbelianMonoidSup|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedAbelianMonoidSup|)))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *6 *5 *3 *7)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Record| (|:| |to_try| (|Float|)) (|:| |did| (|Float|))
                             (|:| |next| (|Float|))))
       (|isDomain| *7
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))
 ((*1 *2 *3 *4 *5 *6 *5 *3 *7 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Record| (|:| |to_try| (|Float|)) (|:| |did| (|Float|))
                             (|:| |next| (|Float|))))
       (|isDomain| *7
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *5 *5 *5 *4 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))
 ((*1 *2 *3 *4 *5 *5 *6 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
   (|ofCategory| *4 (|CommutativeRing|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|CommutativeRing|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Complex| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *3)) (|ofCategory| *3 (|ConvertibleTo| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|NewSparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| *4) (|:| |outmult| (|Integer|))
                              (|:| |outvect| (|List| (|Matrix| *4))))))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Matrix| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CharacteristicPolynomialPackage| *2))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1
                   (|CharacteristicPolynomialInMonogenicalAlgebra| *4 *2 *3))
       (|ofCategory| *3 (|MonogenicAlgebra| *4 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Polynomial| *5))
       (|isDomain| *1 (|EigenPackage| *5)) (|ofCategory| *5 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *2 (|Polynomial| *4)) (|isDomain| *1 (|EigenPackage| *4))
       (|ofCategory| *4 (|GcdDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerEigenPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *5))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|NumericRealEigenPackage| *5))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *10))
       (|isDomain| *4 (|List| *6)) (|isDomain| *5 (|List| *10))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *9 (|IntegralDomain|))
       (|ofCategory| *10 (|PolynomialCategory| *9 *7 *8))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|Record|
                    (|:| |deter| (|List| (|SparseUnivariatePolynomial| *10)))
                    (|:| |dterm|
                         (|List|
                          (|List|
                           (|Record| (|:| |expt| (|NonNegativeInteger|))
                                     (|:| |pcoef| *10)))))
                    (|:| |nfacts| (|List| *6)) (|:| |nlead| (|List| *10))))
       (|isDomain| *1 (|NPCoef| *6 *7 *8 *9 *10))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))
       (|ofType| *7 (|PositiveInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *4 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NormalizationPackage| *6 *7 *8 *4 *5))
       (|ofCategory| *5 (|RegularTriangularSetCategory| *6 *7 *8 *4))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofCategory| *3
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|)))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *1 (|NormalizationPackage| *4 *5 *6 *2 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *2))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2)
                         (|:| |polj| *2)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *2))
   (|ofCategory| *4 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2)
                         (|:| |polj| *2)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *4 *5))
   (|isDomain| *1 (|NGroebnerPackage| *4 *5 *2))
   (|ofCategory| *4 (|LeftOreRing|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|LeftOreRing|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|NGroebnerPackage| *4 *5 *3))
       (|ofCategory| *3 (|SolvableSkewPolynomialCategory| *4 *5))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                             (|VariablesCommuteWithCoefficients|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|LeftOreRing|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|NGroebnerPackage| *3 *4 *2))
       (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *3 *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *4 *5))
       (|ofCategory| *4 (|LeftOreRing|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|NGroebnerPackage| *4 *5 *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|DistributedJetBundlePolynomial| *3 *4 *5 *6)))
       (|ofType| *5 (|List| *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Polynomial| *3)))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|FGLMIfCanPackage| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|String|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|String|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|JetBundlePolynomial| *3 *4)))
       (|isDomain| *1 (|JetBundlePolynomial| *3 *4))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|JetBundleFunctionCategory| *4)
                             (|PolynomialCategory| *3 (|IndexedExponents| *4)
                                                   *4)))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|ofType| *5 (|List| *4)) (|isDomain| *1 (|JetGroebner| *3 *4 *5 *6 *7))
       (|ofCategory| *7
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *3
                                                   (|OrderedVariableList|
                                                    *4))))
   (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|LexTriangularPackage| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *5))
       (|ofCategory| *5 (|SolvableSkewPolynomialCategory| *3 *4))
       (|ofCategory| *3 (|LeftOreRing|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|NGroebnerPackage| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|NewtonInterpolation| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| (|Complex| *4))
                              (|:| |outmult| (|Integer|))
                              (|:| |outvect|
                                   (|List| (|Matrix| (|Complex| *4)))))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|TwoDimensionalArray| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeSemiRng|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|NonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *3 (|Integer|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|EuclideanDomain|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |factor| *2)
                              (|:| |exponent| (|NonNegativeInteger|)))))
       (|ofCategory| *2 (|PolynomialCategory| *7 *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|EuclideanDomain|))
       (|isDomain| *1 (|MultivariateSquareFree| *5 *6 *7 *2))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8)))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |upol| (|SparseUnivariatePolynomial| *8))
                             (|:| |Lval| (|List| *8))
                             (|:| |Lfact|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *8))
                                    (|:| |exponent| (|NonNegativeInteger|)))))
                             (|:| |ctpol| *8)))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8)))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |unitPart| *9)
                             (|:| |suPart|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *9))
                                    (|:| |exponent|
                                         (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *9))
                             (|:| |polval| (|SparseUnivariatePolynomial| *8))))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *5 *4 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6))
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|ofCategory| *6 (|EuclideanDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|MultiplicativeDependence|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|MergeThing| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|MoreSystemCommands|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Multiset| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|List| (|Kernel| (|Expression| (|Integer|)))))
       (|isDomain| *4 (|List| (|Expression| (|Integer|))))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (|partial| AND (|isDomain| *5 (|List| (|Expression| (|Integer|))))
   (|isDomain| *7
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| *3)))
                         (|:| |atan_kers| (|List| (|Kernel| *3)))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|List| (|Kernel| *3))) (|isDomain| *6 (|Symbol|))
   (|isDomain| *2
               (|Record| (|:| |degree| (|OrderedExpression|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| *3)))
                         (|:| |atan_kers| (|List| (|Kernel| *3)))))
   (|isDomain| *4 (|Kernel| (|Expression| (|Integer|))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|Record| (|:| |degree| (|OrderedExpression|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2
               (|Record|
                (|:| |lk| (|List| (|Kernel| (|Expression| (|Integer|)))))
                (|:| |lc| (|List| (|Expression| (|Integer|))))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Kernel| (|Expression| (|Integer|))))
   (|isDomain| *4 (|Symbol|))
   (|isDomain| *2
               (|Record| (|:| |sign| (|Integer|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| (|Expression| *2))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| *2))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Equation| (|OrderedCompletion| (|Expression| (|Integer|)))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|Union| (|OrderedCompletion| (|Expression| (|Integer|)))
                        (|Record|
                         (|:| |leftHandLimit|
                              (|Union|
                               (|OrderedCompletion| (|Expression| (|Integer|)))
                               #1="failed"))
                         (|:| |rightHandLimit|
                              (|Union|
                               (|OrderedCompletion| (|Expression| (|Integer|)))
                               #1#)))
                        #2="failed"))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|OrderedCompletion| (|Expression| (|Integer|))))
       (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2
                   (|Union| (|OrderedCompletion| (|Expression| (|Integer|)))
                            (|Record|
                             (|:| |leftHandLimit|
                                  (|Union|
                                   (|OrderedCompletion|
                                    (|Expression| (|Integer|)))
                                   #1#))
                             (|:| |rightHandLimit|
                                  (|Union|
                                   (|OrderedCompletion|
                                    (|Expression| (|Integer|)))
                                   #1#)))
                            #2#))
       (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| (|Expression| (|Integer|))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *6)))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5
                                           *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5
                                           *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *6 (|IntegralDomain|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *6 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |sup| (|Polynomial| *6))
                             (|:| |inf| (|Polynomial| *6))))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4
                                           *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *2)) (|isDomain| *4 (|Mapping| *2 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *2))
       (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |normal| (|Factored| *3))
                             (|:| |special| (|Factored| *3))))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|CyclicGroup| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofType| *3 (|Symbol|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *4)
  (|partial| AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|List| *6))
   (|ofCategory| *1 (|FiniteDivisorCategory| *5 *6 *7 *2))
   (|ofCategory| *5 (|Field|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *2 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|Field|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|InfiniteCyclicGroup| *2)) (|ofType| *2 (|Symbol|))))
 ((*1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *1)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *1 (|MonogenicAlgebra| *5 *6))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|Matrix| *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2
                   (|Record| (|:| |puiseux| (|Fraction| (|Integer|)))
                             (|:| |laurent| (|Fraction| (|Integer|)))
                             (|:| |coef| (|Sequence| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Stream| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Sequence| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|MomentPackage| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Sequence| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Stream| (|Record| (|:| |an| *4) (|:| |bn| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| *4))
                             (|:| |bn| (|Stream| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Record| (|:| |an| (|List| *4)) (|:| |bn| (|List| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|CommutativeRing|))
   (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
   (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
   (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CyclicGroup| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InfiniteCyclicGroup| *3))
       (|ofType| *3 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerLocalizedAtPrime| *3))
       (|ofType| *3 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|ModuleMonomial| *3 *2 *4))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *2))
                   (|Record| (|:| |index| *3) (|:| |exponent| *2))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|Finite|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|ModuleMonomial| *2 *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3))
                   (|Record| (|:| |index| *2) (|:| |exponent| *3))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PrimitiveArray| (|ModMonic| *3 *4)))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|FiniteFieldCategory|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModMonic| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
       (|ofCategory| *7 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| *7)))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
   (|ofCategory| *8 (|CommutativeRing|))))) 
(((*1 *2 *2 *3 *4 *4 *5 *6)
  (AND
   (|isDomain| *2
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List| (|SparseUnivariatePolynomial| *8))))
   (|isDomain| *3 (|List| (|List| *7))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *6
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|ofCategory| *8 (|CommutativeRing|))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| *9)))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List| (|SparseUnivariatePolynomial| *10))))
       (|ofCategory| *9 (|CommutativeRing|))
       (|ofCategory| *10 (|CommutativeRing|))
       (|isDomain| *2
                   (|Union| (|Matrix| (|SparseUnivariatePolynomial| *10))
                            (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *9 *10))))) 
(((*1 *2 *3 *4 *5 *6 *6)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|SortedExponentVector|))
       (|isDomain| *5 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *6 (|Integer|))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Symbol|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Vector|
                (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|)))))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
   (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Vector| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *6 *6)
  (AND
   (|isDomain| *5
               (|Mapping| (|Vector| *2) (|List| *2) (|Integer|) (|Integer|)))
   (|isDomain| *6 (|Integer|)) (|isDomain| *3 (|Vector| (|U32Vector|)))
   (|isDomain| *4 (|List| (|U32Vector|))) (|isDomain| *2 (|U32Vector|))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *8
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *9
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial| (|Integer|)))))
       (|isDomain| *6 (|Integer|))
       (|isDomain| *2
                   (|Union|
                    (|Matrix| (|SparseUnivariatePolynomial| (|Integer|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND
   (|isDomain| *3
               (|List|
                (|List| (|Fraction| (|Polynomial| (|AlgebraicNumber|))))))
   (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|isDomain| *8
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List|
                           (|SparseUnivariatePolynomial|
                            (|Polynomial| (|AlgebraicNumber|))))))
   (|isDomain| *2
               (|Union|
                (|Matrix|
                 (|SparseUnivariatePolynomial|
                  (|Polynomial| (|AlgebraicNumber|))))
                (|Boolean|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|isDomain| *8
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List|
                           (|SparseUnivariatePolynomial|
                            (|Polynomial| (|Integer|))))))
   (|isDomain| *2
               (|Union|
                (|Matrix|
                 (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
                (|Boolean|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial|
                                (|AlgebraicNumber|)))))
       (|isDomain| *2
                   (|Union|
                    (|Matrix|
                     (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial| (|Integer|)))))
       (|isDomain| *2
                   (|Union|
                    (|Matrix| (|SparseUnivariatePolynomial| (|Integer|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|List|
                (|Record| (|:| |ind| (|NonNegativeInteger|))
                          (|:| |poly| (|U32Vector|)))))
   (|isDomain| *3 (|U32Vector|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ind| (|NonNegativeInteger|))
                              (|:| |poly| (|U32Vector|)))))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *2 *3 *2 *4 *4 *5)
  (AND (|isDomain| *3 (|U32Matrix|))
       (|isDomain| *5
                   (|List|
                    (|Record| (|:| |ind| (|NonNegativeInteger|))
                              (|:| |poly| (|U32Vector|)))))
       (|isDomain| *2 (|U32Vector|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *5
               (|List|
                (|Record| (|:| |ind| (|NonNegativeInteger|))
                          (|:| |poly| (|U32Vector|)))))
   (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|NonNegativeInteger|))
   (|isDomain| *2
               (|Record| (|:| |matr| (|U32Matrix|))
                         (|:| |poly| (|U32Vector|))))
   (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |ind| (|NonNegativeInteger|))
                              (|:| |poly| (|U32Vector|)))))
       (|isDomain| *2 (|U32Vector|)) (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Matrix|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |poly| (|U32Vector|))
                              (|:| |degree| (|NonNegativeInteger|))
                              (|:| |separate_factors|
                                   (|Mapping| (|List| (|U32Vector|)))))))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|U32Vector|)))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *13))
   (|isDomain| *4 (|List| *11)) (|isDomain| *6 (|List| *12))
   (|isDomain| *7 (|List| *13)) (|isDomain| *8 (|List| (|NonNegativeInteger|)))
   (|isDomain| *9
               (|Mapping|
                (|Union|
                 (|Mapping|
                  (|Union| (|List| (|SparseUnivariatePolynomial| *12))
                           "failed")
                  (|SparseUnivariatePolynomial| *12))
                 "failed")
                (|List| (|SparseUnivariatePolynomial| *12))))
   (|ofCategory| *11 (|OrderedSet|)) (|ofCategory| *12 (|IntegralDomain|))
   (|ofCategory| *13 (|PolynomialCategory| *12 *10 *11))
   (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *12)))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *13)))
   (|isDomain| *1 (|MultivariateLifting| *10 *11 *12 *13))))
 ((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *12))
   (|isDomain| *4 (|List| *11))
   (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *9)))
   (|isDomain| *6 (|List| *9)) (|isDomain| *7 (|List| *12))
   (|isDomain| *8 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *9 (|EuclideanDomain|)) (|ofCategory| *11 (|OrderedSet|))
   (|ofCategory| *9 (|IntegralDomain|))
   (|ofCategory| *12 (|PolynomialCategory| *9 *10 *11))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *12)))
   (|isDomain| *1 (|MultivariateLifting| *10 *11 *9 *12))))) 
(((*1 *2 *3 *4 *5 *6 *2 *7)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *11)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *11))
   (|isDomain| *4 (|List| *9)) (|isDomain| *5 (|List| *10))
   (|isDomain| *6 (|List| (|NonNegativeInteger|)))
   (|isDomain| *7
               (|Mapping|
                (|Union| (|List| (|SparseUnivariatePolynomial| *10)) "failed")
                (|SparseUnivariatePolynomial| *10)))
   (|ofCategory| *9 (|OrderedSet|)) (|ofCategory| *10 (|IntegralDomain|))
   (|ofCategory| *11 (|PolynomialCategory| *10 *8 *9))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|MultivariateLifting| *8 *9 *10 *11))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6))
       (|isDomain| *1 (|MakeBinaryCompiledFunction| *3 *5 *6 *7))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MakeUnaryCompiledFunction| *3 *5 *6))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MakeUnaryCompiledFunction| *4 *5 *6))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|Record| (|:| |part1| *3) (|:| |part2| *4)))
       (|isDomain| *1 (|MakeRecord| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleExpression| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|JetBundleXExpression| *4)))
       (|isDomain| *1 (|JetBundleXExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6))
       (|isDomain| *1 (|MakeBinaryCompiledFunction| *4 *5 *6 *7))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *6))
       (|ofCategory| *6 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |next| (|List| (|NonNegativeInteger|)))
                          (|:| |map|
                               (|List| (|List| (|NonNegativeInteger|)))))))
   (|ofCategory| *3 (|SetCategory|))
   (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))) 
(((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|MultifunctionGraph| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|MultifunctionGraph| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Loop|))
       (|isDomain| *1 (|FunctionGraph| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|OrderedCompletion| *3)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|OrderedCompletion| *3)
                            (|Record|
                             (|:| |leftHandLimit|
                                  (|Union| (|OrderedCompletion| *3)
                                           #1="failed"))
                             (|:| |rightHandLimit|
                                  (|Union| (|OrderedCompletion| *3) #1#)))
                            "failed"))
       (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|String|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|OrderedCompletion| *3))
   (|isDomain| *1 (|PowerSeriesLimitPackage| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Equation| (|OrderedCompletion| (|Polynomial| *5))))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Union|
                    (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                    (|Record|
                     (|:| |leftHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2="failed"))
                     (|:| |rightHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#)))
                    #3="failed"))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Union|
                    (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                    (|Record|
                     (|:| |leftHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#))
                     (|:| |rightHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#)))
                    #3#))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *1 (|RationalFunctionLimitPackage| *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Loop|))
       (|isDomain| *1 (|MultifunctionGraph| *4))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|MultifunctionGraph| (|String|)))
       (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Permutation| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|MultifunctionGraph| (|String|)))
       (|isDomain| *1 (|MultifunctionGraph| *5))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|PermutationGroup| (|NonNegativeInteger|)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Polynomial| (|Integer|))) (|isDomain| *5 (|List| *3))
       (|isDomain| *7 (|List| (|Symbol|)))
       (|ofCategory| *1 (|ModularEvaluationCategory| *8 *3))
       (|ofCategory| *8 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *6 (|Symbol|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *1 (|ModularEvaluationCategory| *3 *2))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *3 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *3 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Union|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                           (|DoubleFloat|))
                "undefined"))
   (|isDomain| *5 (|Segment| (|DoubleFloat|)))
   (|isDomain| *6 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *5 *6)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Union|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                           (|DoubleFloat|))
                "undefined"))
   (|isDomain| *5 (|Segment| (|DoubleFloat|)))
   (|isDomain| *6 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|DoubleFloat|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))
 ((*1 *2 *2 *3 *4 *4 *5)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3
                   (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                              (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|DoubleFloat|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |prod| *5))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| *5))
   (|isDomain| *1 (|DistinctDegreeFactorize| *4 *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *5) (|:| |degree| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| *5))
   (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factor| *3) (|:| |degree| (|Integer|)))))
       (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MultiDictionary| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |entry| *3)
                              (|:| |count| (|NonNegativeInteger|)))))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|PartialDifferentialRing| *6))
       (|isDomain| *2 (|Matrix| *7))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *7 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *7))
       (|ofCategory| *4 (|FiniteLinearAggregate| *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Matrix| *6))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *6 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *6))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *6))
       (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *3 *7 *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|PartialDifferentialRing| *4))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *4 *2 *5 *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *3 (|FiniteLinearAggregate| *4))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|PartialDifferentialRing| *5))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Matrix| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|AbelianMonoid|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|SemiRng|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))) 
(((*1 *2 *1 *3 *4 *5 *6 *6 *7)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *5 (|List| *1)) (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7 (|Union| *8 "one"))
       (|ofCategory| *1 (|MatrixCategory| *8 *9 *10))
       (|ofCategory| *8 (|AbelianMonoid|))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5 *4))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))
       (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5 *4)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MappingPackage3| *5 *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *4 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5))
       (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofType| *4 (|List| *3)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *2 *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *4)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *3))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|NonNegativeInteger|) *2))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Mapping| *3 (|NonNegativeInteger|) *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MappingPackage1| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|MappingPackage1| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Mapping| *6 *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks3| *5 *6 *2))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| (|List| *1)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| (|List| *1)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|PositiveInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|FiniteLinearAggregate| *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *6))
       (|isDomain| *2 (|List| (|List| *3)))
       (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3))
       (|ofCategory| *3 (|TwoDimensionalArrayCategory| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|FiniteLinearAggregate| *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *6))
       (|isDomain| *2 (|List| (|List| *3)))
       (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3))
       (|ofCategory| *3 (|TwoDimensionalArrayCategory| *6 *7 *8))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MagmaWithUnit|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))) 
(((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))) 
(((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|))
   (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|isDomain| *1 (|ModularAlgebraicGcdTools3|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|SortedExponentVector|))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ModularAlgebraicGcdTools3|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|U32Vector|)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *7 *3 *6))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *5 *6 *4))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|SortedExponentVector|))))) 
(((*1 *2 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *5 (|List| (|Symbol|)))
   (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *3 *2 *6))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
   (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *6))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|))
   (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *6 *7 *2))
   (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *2 *3))
   (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
   (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *2 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *2 *3 *4 *5 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))
       (|isDomain| *1 (|ModularAlgebraicGcd| *6 *7 *8))
       (|ofCategory| *8 (|ModularAlgebraicGcdOperations| *2 *6 *7))))
 ((*1 *2 *3 *3 *4 *5 *6 *5)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|List| (|Symbol|)))
       (|isDomain| *6 (|Symbol|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|ofCategory| *9 (|Type|)) (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|ModularAlgebraicGcd2| *3 *7 *8 *9 *10 *11))
       (|ofCategory| *10 (|ModularEvaluationCategory| *3 *7))
       (|ofCategory| *11 (|ModularAlgebraicGcdOperations| *7 *8 *9))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|ThreeDimensionalMatrix| *2)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Vector| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|FreeMonoid| *3))
   (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|OneDimensionalArray| (|List| (|LyndonWord| *5))))
       (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LyndonWord| *5)))
       (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |Inv| (|Matrix| *4))
                             (|:| |Pivots| (|List| *4))))
       (|isDomain| *1 (|LUDecomposition| *4))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4 (|Vector| (|Integer|))) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|LUDecomposition| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| LU (|Matrix| *4))
                             (|:| |Perm| (|Vector| (|Integer|)))
                             (|:| |Pivots| (|List| *4))))
       (|isDomain| *1 (|LUDecomposition| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| (|Fraction| *8)))
                             (|:| |vec| (|Vector| (|Fraction| *8)))))
       (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| *8)) "failed"))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *8))))))
       (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|ListAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *4)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
   (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
   (|isDomain| *1 (|LinearPolynomialEquationByFractions| *4))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |llcm_res| *1) (|:| |coeff1| *1)
                         (|:| |coeff2| *1)))
   (|ofCategory| *1 (|LeftOreRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|Loop|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|Loop|))))) 
(((*1 *1) (|ofCategory| *1 (|Logic|)))) 
(((*1 *1) (|ofCategory| *1 (|Logic|)))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *3))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *5 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |singularity|
                      (|Record|
                       (|:| |point|
                            (|Union| (|Expression| (|Integer|)) "infinity"))
                       (|:| |lpf|
                            (|LinearOrdinaryDifferentialOperator3|
                             (|Expression| (|Integer|))
                             (|UnivariateTaylorSeries|
                              (|Expression| (|Integer|)) *6 *7)
                             (|UnivariateLaurentSeries|
                              (|Expression| (|Integer|)) *6 *7)))
                       (|:| |dxt| (|PositiveInteger|))))
                 (|:| |fos|
                      (|List|
                       (|Record|
                        (|:| |op|
                             (|LinearOrdinaryDifferentialOperator3|
                              (|Expression| (|Integer|))
                              (|UnivariateTaylorSeries|
                               (|Expression| (|Integer|)) *6 *7)
                              (|UnivariateLaurentSeries|
                               (|Expression| (|Integer|)) *6 *7)))
                        (|:| |ram|
                             (|UnivariatePolynomial| *6
                                                     (|Expression|
                                                      (|Integer|))))
                        (|:| |expart|
                             (|UnivariateLaurentSeries|
                              (|Expression| (|Integer|)) *6 *7)))))
                 (|:| |mge|
                      (|List|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Union| (|Expression| (|Integer|)) "infinity"))
   (|isDomain| *5
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))
                (|List| (|Expression| (|Integer|)))))
   (|isDomain| *6 (|List| (|Expression| (|Integer|)))) (|ofType| *7 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |ecs|
                      (|List|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *7
                                                  *8)))
                 (|:| |ecr|
                      (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
                 (|:| |ect|
                      (|Fraction|
                       (|UnivariatePolynomial| *7
                                               (|Expression| (|Integer|))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
   (|ofType| *8 (|Expression| (|Integer|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| (|Expression| (|Integer|)))) (|ofType| *5 *2)
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
       (|ofType| *4 (|Symbol|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))))
   (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
   (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Union| (|Expression| (|Integer|)) "infinity"))
   (|ofType| *5 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *5 *6)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *5 *6)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|ofType| *5 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator1|
                 (|Fraction|
                  (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Union|
                (|List|
                 (|Record|
                  (|:| |op|
                       (|LinearOrdinaryDifferentialOperator3|
                        (|Expression| (|Integer|))
                        (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                  *7)
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *6 *7)))
                  (|:| |ram|
                       (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
                  (|:| |expart|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))
                (|List|
                 (|Union|
                  (|LinearOrdinaryDifferentialOperator3|
                   (|Expression| (|Integer|))
                   (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                   (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                              *7))
                  (|Record|
                   (|:| |ope|
                        (|LinearOrdinaryDifferentialOperator3|
                         (|Expression| (|Integer|))
                         (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                   *6 *7)
                         (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                    *6 *7)))
                   (|:| |dext| (|PositiveInteger|))
                   (|:| |alpha| (|Expression| (|Integer|)))
                   (|:| |rami|
                        (|UnivariatePolynomial| *6
                                                (|Expression|
                                                 (|Integer|)))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Expression| (|Integer|)))
   (|isDomain| *5 (|PositiveInteger|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6 *7)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 *4)))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Union| (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *5 *6)))
   (|isDomain| *4
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *5 *6)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *5 *6)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Union|
                (|List|
                 (|Record|
                  (|:| |op|
                       (|LinearOrdinaryDifferentialOperator3|
                        (|Expression| (|Integer|))
                        (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                  *7)
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *6 *7)))
                  (|:| |ram|
                       (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
                  (|:| |expart|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))
                (|List|
                 (|Union|
                  (|LinearOrdinaryDifferentialOperator3|
                   (|Expression| (|Integer|))
                   (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                   (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                              *7))
                  (|Record|
                   (|:| |ope|
                        (|LinearOrdinaryDifferentialOperator3|
                         (|Expression| (|Integer|))
                         (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                   *6 *7)
                         (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                    *6 *7)))
                   (|:| |dext| (|PositiveInteger|))
                   (|:| |alpha| (|Expression| (|Integer|)))
                   (|:| |rami|
                        (|UnivariatePolynomial| *6
                                                (|Expression|
                                                 (|Integer|)))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))
       (|ofType| *4 (|Symbol|))
       (|isDomain| *2
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *4 *5)
                    (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *4
                                               *5)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
       (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *2 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *5 (|Integer|))
   (|ofType| *6 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *5 (|Integer|))
   (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6 *7)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| *5))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Stream|
                    (|Record|
                     (|:| |Qt|
                          (|LinearOrdinaryDifferentialOperator3|
                           (|Expression| (|Integer|))
                           (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                     *7 *8)
                           (|UnivariateLaurentSeries|
                            (|Expression| (|Integer|)) *7 *8)))
                     (|:| |Rt|
                          (|LinearOrdinaryDifferentialOperator3|
                           (|Expression| (|Integer|))
                           (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                     *7 *8)
                           (|UnivariateLaurentSeries|
                            (|Expression| (|Integer|)) *7 *8))))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |main|
                         (|Record|
                          (|:| |Qt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))
                          (|:| |Rt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))))
                    (|:| |nf|
                         (|Record|
                          (|:| |Qt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))
                          (|:| |Rt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))))
                    (|:| |error|
                         (|LinearOrdinaryDifferentialOperator3|
                          (|Expression| (|Integer|))
                          (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                    *7 *8)
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |llc|
                         (|List|
                          (|Stream|
                           (|Record| (|:| |k| (|Integer|))
                                     (|:| |c| (|Expression| (|Integer|)))))))
                    (|:| |rlc|
                         (|List|
                          (|Stream|
                           (|Record| (|:| |k| (|Integer|))
                                     (|:| |c| (|Expression| (|Integer|)))))))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |laurl|
                         (|List|
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))
                    (|:| |laurr|
                         (|List|
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
   (|isDomain| *5 (|Fraction| (|Integer|))) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Record|
                (|:| |Qt|
                     (|LinearOrdinaryDifferentialOperator3|
                      (|Expression| (|Integer|))
                      (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                *7)
                      (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                 *7)))
                (|:| |Rt|
                     (|LinearOrdinaryDifferentialOperator3|
                      (|Expression| (|Integer|))
                      (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                *7)
                      (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                 *7)))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator3|
                 (|Expression| (|Integer|))
                 (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                 (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                            *7))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *4 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))))
   (|ofType| *4 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |point|
                      (|Record| (|:| |x| (|Integer|)) (|:| |y| (|Integer|))))
                 (|:| |slope| (|Fraction| (|Integer|)))
                 (|:| |npoly|
                      (|UnivariatePolynomial| *4
                                              (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
   (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|AbelianMonoidRing| *3 (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperator3Aux| *3 *4 *2))
       (|ofCategory| *2 (|Join| (|DifferentialRing|) (|LeftModule| *4)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeMonoid| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ListMonoidOps| *4 *2 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofType| *5 *2)))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeMonoid| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|ListMonoidOps| *2 *4 *5))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND
   (|isDomain| *2 (|Mapping| (|NonNegativeInteger|) (|NonNegativeInteger|)))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeGroup| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeMonoid| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ListMultiDictionary| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *2 *1)
  (AND (|isDomain| *1 (|ListMultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Float|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Integer|)))
       (|isDomain| *2
                   (|Record| (|:| |lll| (|Matrix| (|Integer|)))
                             (|:| |trf| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|LLLReduction|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *5)))
       (|isDomain| *4 (|Matrix| (|Fraction| *7))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|LiftLinearDependence| *5 *6 *7))
       (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *5)))
       (|isDomain| *4 (|List| (|Fraction| *7))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|LiftLinearDependence| *5 *6 *7))
       (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *5)))
       (|isDomain| *4 (|List| *7)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|LiftLinearDependence| *5 *6 *7))
       (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *1 (|ListPackage| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|BasicType|)) (|isDomain| *2 (|List| (|List| *5)))
       (|isDomain| *1 (|ListPackage| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2
                   (|Record| (|:| |yes| (|List| *5)) (|:| |no| (|List| *5))))
       (|isDomain| *1 (|ListPackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|ListToMap| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Mapping| *5 *6)) (|isDomain| *1 (|ListToMap| *6 *5))))
 ((*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|isDomain| *6 (|Mapping| *2 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|List| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| (|Equation| (|Polynomial| *6))))
       (|ofCategory| *6 (|Field|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *3 (|Polynomial| *6))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *6)))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))) 
(((*1 *2 *1 *3 *3 *3 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *4 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *5))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Equation| (|Polynomial| *5))))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Matrix| *5)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))))) 
(((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3 *4 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|List| (|Matrix| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))) 
(((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))))) 
(((*1 *1 *1 *2 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|FreeMonoid| *5))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *6 (|Field|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3 *1 *3 *4)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ComplexDoubleFloatVector|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DoubleFloatVector|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3 (|List| (|FreeMonoid| *4)))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *5 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearMultivariateMatrixPencil| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
       (|isDomain| *5 (|List| (|Mapping| *7 *7)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *7))
                             (|:| |vec| (|Vector| *7))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *7))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|List| (|Mapping| *5 *5)))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|ConstantLinearDependence| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *1)) (|isDomain| *4 (|Vector| *1))
       (|ofCategory| *1 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *5))
                             (|:| |vec| (|Vector| *5))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *1))
       (|ofCategory| *1 (|LinearlyExplicitOver| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *5) #1="failed"))
                    (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|LinearlyExplicitOver| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *5) #1#))
                             (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| *5))
       (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| *5)) #2="failed"))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *5))))))
       (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|LinearlyExplicitOver| *5))
       (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| (|Fraction| *5)) #2#))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *5))))))
       (|isDomain| *1 (|LinearDependence| *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Vector| *5))
   (|ofCategory| *5 (|LinearlyExplicitOver| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *4))
   (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *5))
       (|ofCategory| *5 (|LinearlyExplicitOver| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *2)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *2 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| *2)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *2 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5)) (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|Fraction| *6))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5))
       (|isDomain| *4 (|List| (|LaurentPolynomial| *5 *6)))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|LaurentPolynomial| *5 *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *2))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |ratpart| *4) (|:| |coeffs| (|Vector| *4)))))
   (|ofCategory| *4 (|Field|))
   (|isDomain| *2
               (|Record|
                (|:| |particular|
                     (|Union|
                      (|Record| (|:| |ratpart| *4)
                                (|:| |coeffs| (|Vector| *4)))
                      "failed"))
                (|:| |basis|
                     (|List|
                      (|Record| (|:| |ratpart| *4)
                                (|:| |coeffs| (|Vector| *4)))))))
   (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Equation| (|OnePointCompletion| *3)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|OnePointCompletion| *3))
   (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Equation| (|OnePointCompletion| (|Polynomial| *5))))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|Library|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|KeyedAccessFile| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *2 *2)
  (AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *3 (|OrderedVariableList| *4)) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *5 *6))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *3 *4)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|LinGroebnerPackage| *3 *4))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|isDomain| *1 (|LinGroebnerPackage| *5 *6))
   (|ofCategory| *6 (|GcdDomain|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|isDomain| *1 (|LinGroebnerPackage| *5 *6))
   (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |glbase|
                         (|List| (|DistributedMultivariatePolynomial| *4 *5)))
                    (|:| |glval| (|List| (|Integer|)))))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2
               (|Record|
                (|:| |gblist|
                     (|List| (|DistributedMultivariatePolynomial| *4 *5)))
                (|:| |gvlist| (|List| (|Integer|)))))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgebraicFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|CombinatorialFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *5))
       (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ExpressionSpace&| *4))
       (|ofCategory| *4 (|ExpressionSpace|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FunctionSpace&| *4 *5))
       (|ofCategory| *4 (|FunctionSpace| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LiouvillianFunction| *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|SquareFreeRegularTriangularSet| *5
                                                  (|IndexedExponents|
                                                   (|OrderedVariableList| *6))
                                                  (|OrderedVariableList| *6)
                                                  (|NewSparseMultivariatePolynomial|
                                                   *5
                                                   (|OrderedVariableList|
                                                    *6)))))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|List| (|Polynomial| *3)))
   (|ofCategory| *3 (|GcdDomain|)) (|isDomain| *1 (|FGLMIfCanPackage| *3 *4))
   (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *3
                                                   (|OrderedVariableList|
                                                    *4))))
   (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|LexTriangularPackage| *3 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FGLMIfCanPackage| *4 *5))
       (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *4
                                                   (|OrderedVariableList|
                                                    *5))))
   (|ofCategory| *4 (|GcdDomain|)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LexTriangularPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LiePolynomial| *4 *5)))
       (|isDomain| *1 (|LieExponentials| *4 *5 *6))
       (|ofCategory| *5
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *6 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |k| (|LyndonWord| *3)) (|:| |c| *4))))
   (|isDomain| *1 (|LieExponentials| *3 *4 *5))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Module| (|Fraction| (|Integer|)))))
   (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *4)))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *6)
  (|partial| AND (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *3)))
   (|isDomain| *5
               (|Record| (|:| |contp| *3)
                         (|:| |factors|
                              (|List|
                               (|Record| (|:| |irr| *10)
                                         (|:| |pow|
                                              (|NonNegativeInteger|)))))))
   (|isDomain| *6 (|List| *3)) (|isDomain| *7 (|List| *8))
   (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *10 (|PolynomialCategory| *3 *9 *8))
   (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |polfac| (|List| *10)) (|:| |correct| *3)
                         (|:| |corrfact|
                              (|List| (|SparseUnivariatePolynomial| *3)))))
   (|isDomain| *1 (|LeadingCoefDetermination| *8 *9 *3 *10))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|List| *3))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LeadingCoefDetermination| *6 *7 *3 *8))
       (|ofCategory| *8 (|PolynomialCategory| *3 *7 *6))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|LazardSetSolvingPackage| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *2
                     (|SquareFreeRegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| |const| (|Record| (|:| |val| (|Symbol|))))
                        (|:| |var| (|Record| (|:| |str| (|String|))))))
   (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|CoDcpo| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| |const| (|Record| (|:| |val| (|Symbol|))))
                        (|:| |var| (|Record| (|:| |str| (|String|))))))
   (|isDomain| *1 (|LatticeJoinOfMeets|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|LaplaceTransform| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *2) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Kernel| *1))) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Equation| *1)) (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1 *1 *1)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|Lambda| *4)) (|ofCategory| *4 (|VarCat|))))) 
(((*1 *2 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4
                 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *5)))
   (|isDomain| *1 (|Kovacic| *4 *5))))
 ((*1 *2 *3 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| *6))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *6)))
   (|isDomain| *1 (|Kovacic| *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))
   (|ofCategory| *2 (|Comparable|))
   (|isDomain| *1 (|KernelFunctions2| *2 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Kernel| *4)) (|isDomain| *1 (|KernelFunctions2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|Comparable|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|TranscendentalFunctionCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *1 (|Kernel| *5))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
   (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|JetVectorField| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *4 *5))
                             (|:| IC (|List| *5))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputFormatterCategory|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FormattedOutput|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Type|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JFriCASSupport|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Type|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JFriCASSupport|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|isDomain| *3 (|List| (|OrderedVariableList| *4)))
   (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Rank| (|NonNegativeInteger|))
                         (|:| |NumMultVar| (|NonNegativeInteger|))
                         (|:| |Betas| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
   (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |Rank| (|NonNegativeInteger|))
                             (|:| |NumMultVar| (|NonNegativeInteger|))
                             (|:| |Betas| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|List| (|List| *5)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *5 *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *1))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|SparseEchelonMatrix| *3 *4)))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleBaseFunctionCategory| *2))))) 
(((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *4 *5))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|SparseEchelonMatrix| *6 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *6))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |DSys| (|List| *1))
                             (|:| |JVars| (|List| (|List| *6)))))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|Record| (|:| |DPhi| *1) (|:| |JVars| (|List| *5))))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
   (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *2 *3 *4 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |Sys| (|List| *1))
                             (|:| JM (|SparseEchelonMatrix| *5 *1))
                             (|:| |Depend|
                                  (|Union| "failed"
                                           (|List|
                                            (|List|
                                             (|NonNegativeInteger|)))))))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Expression| (|Integer|)) *3))
   (|isDomain| *1 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|PositiveInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|PositiveInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|List| (|PositiveInteger|))))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|List| (|PositiveInteger|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|JetBundleCategory|))
   (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OneDimensionalArray| *4))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|IndexedAggregate| *4 *3)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *4 (|List| (|Complex| *6)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Complex| *6))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *5 *6 *7))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Complex| *5))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Complex| *5))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *3))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *3 *2))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *2 *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
   (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *6))))
       (|isDomain| *4 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *6))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Algebra| *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1
                   (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7
                                                                      *8 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *4 (|Permutation| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *4 (|List| (|Permutation| (|Integer|))))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Expression| *5))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|IntegrationResultToFunction| *4 *2))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Expression| *4))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|IrredPolyOverFiniteField| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerRoots| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerRoots| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRoots| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerRoots| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *1 (|IntegerRoots| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |base| *3)
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|isDomain| *1 (|IntegerRoots| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerRoots| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |scalar| (|Fraction| (|Integer|)))
                          (|:| |coeff| (|SparseUnivariatePolynomial| *2))
                          (|:| |logand| (|SparseUnivariatePolynomial| *2)))))
   (|isDomain| *4 (|List| (|Record| (|:| |integrand| *2) (|:| |intvar| *2))))
   (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|IntegrationResult| *2))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |scalar| (|Fraction| (|Integer|)))
                          (|:| |coeff| (|SparseUnivariatePolynomial| *3))
                          (|:| |logand| (|SparseUnivariatePolynomial| *3)))))
   (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |integrand| *3) (|:| |intvar| *3))))
   (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegrationResult| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InternalPrintPackage|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|InnerPrimeField| *2))
       (|ofType| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|Comparable|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *1 (|IndexedProductCategory| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Record| (|:| |k| *4) (|:| |c| *3)))))) 
(((*1 *2 *2 *3 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|InverseLaplaceTransform| *4 *2))
   (|ofCategory| *2
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)
                         (|SpecialFunctionCategory|)
                         (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |polypart| *3)))
       (|isDomain| *1 (|TranscendentalIntegration| *5 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |ir| (|IntegrationResult| (|Fraction| *6)))
                             (|:| |specpart| (|Fraction| *6))
                             (|:| |polypart| *6)))
       (|isDomain| *1 (|TranscendentalIntegration| *5 *6))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Fraction| *9)) (|isDomain| *5 (|Mapping| *4 *4))
       (|isDomain| *6 (|Mapping| *9 *9))
       (|isDomain| *7
                   (|Mapping|
                    (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4))
                             "failed")
                    *4))
       (|isDomain| *8 (|Mapping| (|IntegrationResult| *4) *4))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *9)))
                    (|:| |a0| (|IntegrationResult| *4))))
       (|isDomain| *1 (|TranscendentalIntegration| *4 *9))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |answer| (|Fraction| *8))
                              (|:| |logpart| (|Fraction| *8))
                              (|:| |ir| (|IntegrationResult| (|Fraction| *8))))
                    (|Fraction| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Record| (|:| |ans| *7) (|:| |right| *7)
                              (|:| |primpart| *7) (|:| |sol?| (|Boolean|)))
                    (|Integer|) *7))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *3 (|Fraction| *8))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *8)))
                    (|:| |a0| *7)))
       (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |answer| (|Fraction| *8))
                              (|:| |logpart| (|Fraction| *8))
                              (|:| |ir| (|IntegrationResult| (|Fraction| *8))))
                    (|Fraction| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Union|
                     (|Record| (|:| |ratpart| *7) (|:| |coeff| *7)
                               (|:| |prim| *7))
                     "failed")
                    *7 (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *3 (|Fraction| *8))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *8)))
                    (|:| |a0| *7)))
       (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Mapping| (|IntegrationResult| *3) *3 (|Symbol|)))
       (|isDomain| *6
                   (|Mapping|
                    (|Union| (|Record| (|:| |special| *3) (|:| |integrand| *3))
                             "failed")
                    *3 (|Symbol|)))
       (|ofCategory| *3 (|ElementaryFunctionCategory|))
       (|ofCategory| *3 (|LiouvillianFunctionCategory|))
       (|ofCategory| *3 (|RetractableTo| *4))
       (|ofCategory| *3 (|FunctionSpace| *7)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7 (|ConvertibleTo| (|Pattern| (|Integer|))))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *7 (|PatternMatchable| (|Integer|)))
       (|ofCategory| *7 (|Comparable|))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|IntegrationTools| *7 *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *2))
       (|ofCategory| *2 (|ElementaryFunctionCategory|))
       (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *2 (|List| (|Kernel| *6)))
       (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Kernel| *6))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Kernel| *6)) (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *5))) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Kernel| *5)) (|isDomain| *1 (|IntegrationTools| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Kernel| *5))) (|isDomain| *3 (|Symbol|))
       (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *5))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
   (|isDomain| *3 (|Symbol|))
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|RationalFunctionIntegration| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegrationAux| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionIntegration| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|IntegerRetractions| *3))
   (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|RationalIntegration| *3 *4))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |special| *3) (|:| |integrand| *3)))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
   (|ofCategory| *3 (|LiouvillianFunctionCategory|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))
 ((*1 *2 *2 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|isDomain| *4 (|OrderedCompletion| *2))
   (|ofCategory| *2 (|SpecialFunctionCategory|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *2))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |special| *3) (|:| |integrand| *3)))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
   (|ofCategory| *3 (|LiouvillianFunctionCategory|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                             (|GcdDomain|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Record| (|:| |const| *3) (|:| |nconst| *3)))
       (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *9 *9))
       (|isDomain| *4 (|Mapping| (|Factored| *9) *9))
       (|isDomain| *5
                   (|Mapping| (|List| (|Vector| (|Fraction| (|Integer|))))
                              (|Matrix| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| (|Fraction| *9)))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| *9)))
       (|isDomain| *7 (|List| (|Fraction| *9))) (|ofCategory| *8 (|Field|))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *8))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| (|Fraction| *9)))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Kernel| *7)))
       (|isDomain| *5 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| *7))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Kernel| *7)))
       (|isDomain| *5 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *7)
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricIntegration| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Kernel| *3)))
       (|isDomain| *6 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))
                          #1="failed"))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))))
       (|isDomain| *1 (|ParametricIntegration| *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))
                          #1#))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))))
       (|isDomain| *1 (|ParametricIntegration| *6 *3))))) 
(((*1 *2 *3 *4 *5 *6 *7 *3)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7 (|List| (|Kernel| *3))) (|isDomain| *5 (|Kernel| *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *8)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |ratpart| *3) (|:| |coeff| *3) (|:| |prim| *3)))
   (|isDomain| *1 (|ParametricIntegration| *8 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| (|List| (|Vector| (|Fraction| (|Integer|))))
                              (|Matrix| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *6))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| (|Fraction| *7)))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping|
                (|List|
                 (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6))))
                (|List| *6)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *6)))
   (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6)))))
   (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping|
                (|List|
                 (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6))))
                (|List| *7)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *6)))
   (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6)))))
   (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *7)
                               (|:| |coeffs| (|Vector| *7))))
                    (|Integer|) (|List| *7)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| (|Fraction| *8))
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *7)
                               (|:| |coeffs| (|Vector| *7))))
                    (|List| *7)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| (|Fraction| *8))
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *5 (|Kernel| *4)) (|isDomain| *6 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *6)
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| *6))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *5 *6 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|Kernel| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))
                    (|:| |basis| (|List| *3))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2 *2 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 "failed") *2 *2 (|Symbol|)))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|PureAlgebraicIntegration| *5 *2 *6))
   (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|PureAlgebraicIntegration| *5 *3 *6))
       (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerLocalizedAtPrime| *3))
       (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3)))
       (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3 *4 *3)
  (AND (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3)))
       (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |answer| (|Fraction| *6))
                             (|:| |logpart| (|Fraction| *6))
                             (|:| |specpart| (|Fraction| *6))
                             (|:| |polypart| *6)))
       (|isDomain| *1 (|TranscendentalHermiteIntegration| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| *5)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |answer| (|Fraction| *5))
                             (|:| |logpart| (|Fraction| *5))
                             (|:| |specpart| (|Fraction| *5))
                             (|:| |polypart| *5)))
       (|isDomain| *1 (|TranscendentalHermiteIntegration| *6 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|CRApackage| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7)
                              (|:| |basisInv| (|Matrix| *7)))))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7)
                             (|:| |basisInv| (|Matrix| *7))))
       (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *6 *7 *8))))
 ((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6)
  (AND (|isDomain| *5 (|Kernel| *4))
       (|isDomain| *6 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1="failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4 *5 *5 *5 *4 *6 *4)
  (AND (|isDomain| *5 (|Kernel| *4))
       (|isDomain| *6 (|Fraction| (|SparseUnivariatePolynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1#))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|IntegrationResult| *5)) (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|GenusZeroIntegration| *4 *5 *6))
       (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *2 *2 *3 *3 *4 *2 *5)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 #1="failed") *2 *2 (|Symbol|)))
   (|isDomain| *5 (|SparseUnivariatePolynomial| *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7))
   (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *2 *2 *3 *3 *4 *3 *2 *5 *2)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 #1#) *2 *2 (|Symbol|)))
   (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7))
   (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4 *3 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *3 *4 *4 *4 *3 *5 *3)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerFactorizationPackage| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|ElementaryIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *3)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeff| *3)))
   (|isDomain| *1 (|ElementaryIntegration| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| (|List| *3)))
   (|isDomain| *1 (|DenominatorIntegration| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|LiouvillianFunctionCategory|)
                         (|SpecialFunctionCategory|) (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *4 (|Kernel| *7)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|) (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |logpart|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |ir|
                         (|IntegrationResult|
                          (|Fraction| (|SparseUnivariatePolynomial| *7))))))
       (|isDomain| *1 (|DenominatorIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *4 (|Kernel| *7)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|) (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |logpart|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |ir|
                         (|IntegrationResult|
                          (|Fraction| (|SparseUnivariatePolynomial| *7))))))
       (|isDomain| *1 (|DenominatorIntegration| *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Kernel| *8))
       (|isDomain| *4
                   (|Mapping| (|SparseUnivariatePolynomial| *8)
                              (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *8)) (|Matrix| *8)))
       (|isDomain| *6 (|List| *8))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *8)
                              (|:| |coeffs| (|Vector| *8)))))
       (|isDomain| *1 (|AlgebraicIntegration| *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *5 (|List| *10))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *10 (|FunctionFieldCategory| *7 *8 *9))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *10)
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|AlgebraicIntegrate2| *6 *7 *8 *9 *10))))) 
(((*1 *2 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Kernel| *10))
       (|isDomain| *4
                   (|Mapping| (|SparseUnivariatePolynomial| *10)
                              (|SparseUnivariatePolynomial| *10)))
       (|isDomain| *5
                   (|Mapping|
                    (|List|
                     (|Record|
                      (|:| |ratpart|
                           (|Fraction| (|SparseUnivariatePolynomial| *10)))
                      (|:| |coeffs| (|Vector| *10))))
                    (|List| (|Fraction| (|SparseUnivariatePolynomial| *10)))))
       (|isDomain| *6
                   (|Mapping|
                    (|List|
                     (|Record|
                      (|:| |ratpart|
                           (|Fraction| (|SparseUnivariatePolynomial| *10)))
                      (|:| |coeffs| (|Vector| *10))))
                    (|Fraction| (|SparseUnivariatePolynomial| *10))
                    (|List| (|Fraction| (|SparseUnivariatePolynomial| *10)))))
       (|isDomain| *7 (|Mapping| (|List| (|Vector| *10)) (|Matrix| *10)))
       (|isDomain| *8 (|List| *10))
       (|ofCategory| *10
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *9)))
       (|ofCategory| *9 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *10)
                              (|:| |coeffs| (|Vector| *10)))))
       (|isDomain| *1 (|AlgebraicIntegration| *9 *10))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *10 *10))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| (|Fraction| *10))
                               (|:| |coeffs| (|Vector| *9))))
                    (|List| (|Fraction| *10))))
       (|isDomain| *5
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| (|Fraction| *10))
                               (|:| |coeffs| (|Vector| *9))))
                    (|Fraction| *10) (|List| (|Fraction| *10))))
       (|isDomain| *6 (|Mapping| (|List| (|Vector| *9)) (|Matrix| *9)))
       (|isDomain| *7 (|List| *12))
       (|ofCategory| *9
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *8)))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *12 (|FunctionFieldCategory| *9 *10 *11))
       (|ofCategory| *8
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| (|Fraction| *10)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *12)
                              (|:| |coeffs| (|Vector| *9)))))
       (|isDomain| *1 (|AlgebraicIntegrate2| *8 *9 *10 *11 *12))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *7 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegrate| *5 *6 *7 *8 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5 (|Mapping| (|IntegrationResult| *7) *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegrate| *6 *7 *8 *9 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *7 *8 *9))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5
                   (|Mapping| (|SparseUnivariatePolynomial| *3)
                              (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *6 (|Mapping| (|IntegrationResult| *3) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegration| *7 *3))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Integer|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *3 *2 *4)
  (|partial| AND
   (|isDomain| *4 (|Mapping| (|Union| (|Integer|) #1="failed") *5))
   (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *5 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4 *2 *5)
  (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) #1#) *4))
   (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) #1#) *4))
   (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|GenExEuclid| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|GeneralHenselPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofType| *4 *3)
       (|ofType| *5 (|Mapping| *3 *3 (|NonNegativeInteger|)))
       (|isDomain| *1 (|InnerModularGcd| *3 *2 *4 *5))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|InnerModularGcd| *4 *2 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|)) (|ofType| *5 *4)
       (|ofType| *6 (|Mapping| *4 *4 (|NonNegativeInteger|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *6))))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *7 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *6 *7 *5))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *4 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|InputForm|))
       (|isDomain| *1 (|InputFormFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|InputForm|)))
       (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|FormatterCategory&| *3))
   (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|InputForm|))) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|DirectedGraph| *1))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|InputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|InputForm|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|InputForm|)))
       (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6))
       (|isDomain| *5
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *6))
                              (|SparseUnivariatePolynomial| *6)))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| *7) (|:| |outmult| (|Integer|))
                              (|:| |outvect| (|List| (|Matrix| *7))))))
       (|isDomain| *1 (|InnerNumericEigenPackage| *6 *7 *4))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericEigenPackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNumericEigenPackage| *4 *5 *6))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|isDomain| *1 (|IncrementingMaps| *3))
       (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|isDomain| *1 (|IncrementingMaps| *3))
       (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|OneDimensionalArray| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|SingleInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SingleInteger|))
       (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4 *4 *5 *6 *5 *6)
  (AND (|isDomain| *4 (|List| (|Integer|)))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|isDomain| *6 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *4 *5)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *8 *9)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4
                   (|List|
                    (|PrimitiveArray|
                     (|Fraction| (|Polynomial| (|Integer|))))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|isDomain| *6 (|NonNegativeInteger|)) (|isDomain| *8 (|Symbol|))
       (|isDomain| *9
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *7 (|U32Vector|))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |defects| (|Vector| (|Integer|)))
                              (|:| |cinds| (|Vector| (|Integer|)))
                              (|:| |rowlen| (|Integer|))
                              (|:| |offsetdata| (|Vector| (|Integer|)))
                              (|:| |expdata| (|SortedExponentVector|))
                              (|:| |coeffdata| (|PrimitiveArray| (|Integer|))))
                    "no_solution"))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|U32Vector|))
       (|isDomain| *7 (|Integer|)) (|isDomain| *8 (|Symbol|))
       (|isDomain| *2
                   (|Union|
                    (|Record|
                     (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                     (|:| |defects| (|Vector| (|Integer|)))
                     (|:| |cinds| (|Vector| (|Integer|))))
                    "no_solution"))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|DivisionRing|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|DivisionRing|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|DivisionRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|ILogic|))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ILogic|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|ILogic|))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ILogic|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|FlexibleArray| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofType| *4 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FlexibleArray| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FlexibleArray| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FlexibleArray| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FlexibleArray| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|IndexedFlexibleArray| *2 *3))
       (|ofCategory| *2 (|Type|)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| (|Fraction| (|Polynomial| *4))
                                   (|SuchThat| (|Symbol|) (|Polynomial| *4))))
                     (|:| |geneigvec|
                          (|List|
                           (|Matrix| (|Fraction| (|Polynomial| *4))))))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                     (|:| |geneigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *5)))))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *4 (|SparseUnivariatePolynomial| *4)))
                     (|:| |geneigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *4)))))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| (|Fraction| (|Polynomial| *4))
                                   (|SuchThat| (|Symbol|) (|Polynomial| *4))))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Matrix| (|Fraction| (|Polynomial| *4))))))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *5)))))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *4 (|SparseUnivariatePolynomial| *4)))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *4)))))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Union| (|Fraction| (|Polynomial| *4))
                             (|SuchThat| (|Symbol|) (|Polynomial| *4)))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Union| *5 (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|List| (|Union| *4 (|SparseUnivariatePolynomial| *4))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND
   (|isDomain| *3
               (|Union| (|Fraction| (|Polynomial| *6))
                        (|SuchThat| (|Symbol|) (|Polynomial| *6))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *6)))))
   (|isDomain| *1 (|EigenPackage| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record|
                (|:| |eigval|
                     (|Union| (|Fraction| (|Polynomial| *5))
                              (|SuchThat| (|Symbol|) (|Polynomial| *5))))
                (|:| |eigmult| (|NonNegativeInteger|))
                (|:| |eigvec|
                     (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *1 (|EigenPackage| *5))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|Union| *6 (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *4 (|Matrix| *6)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|InnerEigenPackage| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record|
                (|:| |eigval| (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                (|:| |eigmult| (|NonNegativeInteger|))
                (|:| |eigvec|
                     (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))))
   (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|InnerEigenPackage| *5))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Union| (|Fraction| (|Polynomial| *5))
                        (|SuchThat| (|Symbol|) (|Polynomial| *5))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *1 (|EigenPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Union| *5 (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|PolynomialIdeal| (|Fraction| (|Integer|))
                                   (|DirectProduct| (|#| *4)
                                                    (|NonNegativeInteger|))
                                   (|OrderedVariableList| *4)
                                   (|DistributedMultivariatePolynomial| *4
                                                                        (|Fraction|
                                                                         (|Integer|))))))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *3)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *3)
                                  (|DistributedMultivariatePolynomial| *3
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|IdealDecompositionPackage| *3))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |mval| (|Matrix| *4))
                             (|:| |invmval| (|Matrix| *4))
                             (|:| |genIdeal| (|PolynomialIdeal| *4 *5 *6 *7))))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mval| (|Matrix| *3))
                         (|:| |invmval| (|Matrix| *3))
                         (|:| |genIdeal| (|PolynomialIdeal| *3 *4 *5 *6))))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
   (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6))
       (|ofCategory| *6 (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *6 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Polynomial| *4))
                               (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Database| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| (*2 $))
                              (SIGNATURE |fullDisplay| (*2 $)))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| (*2 $))
                              (SIGNATURE |fullDisplay| (*2 $)))))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *7 (|Ring|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *4 *7))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *8))
   (|isDomain| *4 (|Matrix| (|SparseUnivariatePolynomial| *8)))
   (|ofCategory| *5 (|Ring|)) (|ofCategory| *8 (|Ring|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|Matrix| *6))
   (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *7 *8))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *7))
   (|isDomain| *4 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *7 (|Ring|))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *7))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *7 (|Ring|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *7 (|Ring|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *4 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| $) $)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *3 *3 *2 *4)
  (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6)
                         (|:| |basisInv| (|Matrix| *6))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6)
                          (|:| |basisInv| (|Matrix| *6)))))
   (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *5 *6 *7))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |flag| (|Union| "nil" "sqfr" "irred" "prime"))
                          (|:| |factor| *3)
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *3 *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|HopfAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|Module| *2))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|))) (|isDomain| *1 (|Homology|))))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Homology|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|HeuGcd| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|Heap| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|DistributedMultivariatePolynomial| *3 *4))
       (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|ofType| *3 (|List| (|Symbol|)))
       (|isDomain| *1 (|GeneralDistributedMultivariatePolynomial| *3 *4 *5))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|HomogeneousDistributedMultivariatePolynomial| *3 *4))
       (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|HallBasis|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|HallBasis|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|HashState|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|HankelPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *5 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *5)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                     (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|AlgebraicNumber|)))
                           (|UnivariateFormalPowerSeries|
                            (|AlgebraicNumber|))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|AlgebraicNumber|) (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|AlgebraicNumber|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|AlgebraicNumber|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *4 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *4)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Integer|))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Integer|))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Integer|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Integer|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Polynomial| *4))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Polynomial| *4))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Polynomial| *4))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Polynomial| *4))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping|
                (|Record|
                 (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                 (|:| |guessStream|
                      (|Mapping|
                       (|Stream|
                        (|UnivariateFormalPowerSeries|
                         (|Fraction| (|Polynomial| (|Integer|)))))
                       (|UnivariateFormalPowerSeries|
                        (|Fraction| (|Polynomial| (|Integer|))))))
                 (|:| |guessModGen|
                      (|Mapping|
                       (|Mapping| (|Vector| (|U32Vector|))
                                  (|List| (|U32Vector|)) (|Integer|)
                                  (|Integer|))
                       (|NonNegativeInteger|)))
                 (|:| |testGen|
                      (|Mapping|
                       (|Mapping|
                        (|Vector|
                         (|UnivariateFormalPowerSeries|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))))
                        (|UnivariateFormalPowerSeries|
                         (|SparseMultivariatePolynomial|
                          (|Fraction| (|Polynomial| (|Integer|)))
                          (|NonNegativeInteger|))))
                       (|List| (|PositiveInteger|))))
                 (|:| |exprStream|
                      (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                 (|Expression| (|Integer|)) (|Symbol|)))
                 (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                 (|:| A
                      (|Mapping| (|Polynomial| (|Integer|))
                                 (|NonNegativeInteger|) (|NonNegativeInteger|)
                                 (|SparseUnivariatePolynomial|
                                  (|Polynomial| (|Integer|)))))
                 (|:| AF
                      (|Mapping|
                       (|SparseMultivariatePolynomial|
                        (|Fraction| (|Polynomial| (|Integer|)))
                        (|NonNegativeInteger|))
                       (|NonNegativeInteger|) (|NonNegativeInteger|)
                       (|UnivariateFormalPowerSeries|
                        (|SparseMultivariatePolynomial|
                         (|Fraction| (|Polynomial| (|Integer|)))
                         (|NonNegativeInteger|)))))
                 (|:| AX
                      (|Mapping| (|Expression| (|Integer|))
                                 (|NonNegativeInteger|) (|Symbol|)
                                 (|Expression| (|Integer|))))
                 (|:| C
                      (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|))))
                (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *5 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *5)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                     (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|AlgebraicNumber|)))
                           (|UnivariateFormalPowerSeries|
                            (|AlgebraicNumber|))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|AlgebraicNumber|) (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|AlgebraicNumber|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|AlgebraicNumber|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *4 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *4)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Integer|))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Integer|))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Integer|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Integer|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Polynomial| *4))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Polynomial| *4))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Polynomial| *4))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Polynomial| *4))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping|
                (|Record|
                 (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                 (|:| |guessStream|
                      (|Mapping|
                       (|Stream|
                        (|UnivariateFormalPowerSeries|
                         (|Fraction| (|Polynomial| (|Integer|)))))
                       (|UnivariateFormalPowerSeries|
                        (|Fraction| (|Polynomial| (|Integer|))))))
                 (|:| |guessModGen|
                      (|Mapping|
                       (|Mapping| (|Vector| (|U32Vector|))
                                  (|List| (|U32Vector|)) (|Integer|)
                                  (|Integer|))
                       (|NonNegativeInteger|)))
                 (|:| |testGen|
                      (|Mapping|
                       (|Mapping|
                        (|Vector|
                         (|UnivariateFormalPowerSeries|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))))
                        (|UnivariateFormalPowerSeries|
                         (|SparseMultivariatePolynomial|
                          (|Fraction| (|Polynomial| (|Integer|)))
                          (|NonNegativeInteger|))))
                       (|List| (|PositiveInteger|))))
                 (|:| |exprStream|
                      (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                 (|Expression| (|Integer|)) (|Symbol|)))
                 (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                 (|:| A
                      (|Mapping| (|Polynomial| (|Integer|))
                                 (|NonNegativeInteger|) (|NonNegativeInteger|)
                                 (|SparseUnivariatePolynomial|
                                  (|Polynomial| (|Integer|)))))
                 (|:| AF
                      (|Mapping|
                       (|SparseMultivariatePolynomial|
                        (|Fraction| (|Polynomial| (|Integer|)))
                        (|NonNegativeInteger|))
                       (|NonNegativeInteger|) (|NonNegativeInteger|)
                       (|UnivariateFormalPowerSeries|
                        (|SparseMultivariatePolynomial|
                         (|Fraction| (|Polynomial| (|Integer|)))
                         (|NonNegativeInteger|)))))
                 (|:| AX
                      (|Mapping| (|Expression| (|Integer|))
                                 (|NonNegativeInteger|) (|Symbol|)
                                 (|Expression| (|Integer|))))
                 (|:| C
                      (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|))))
                (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *5))
                          (|UnivariateFormalPowerSeries| *5)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *5
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *5
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *7) *7 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *6 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *6)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *5
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *5
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *7 (|NonNegativeInteger|) (|Symbol|) *7))
                    (|:| C (|Mapping| (|List| *6) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *5))
                          (|UnivariateFormalPowerSeries| *5)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *5
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *5
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *5
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *5
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *5))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *5)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *5))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *5))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *5) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *5))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *5))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *5))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *5))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|GuessOption|)))
   (|isDomain| *2
               (|Record| (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                         (|:| |guessStream|
                              (|Mapping|
                               (|Stream|
                                (|UnivariateFormalPowerSeries|
                                 (|Fraction| (|Polynomial| (|Integer|)))))
                               (|UnivariateFormalPowerSeries|
                                (|Fraction| (|Polynomial| (|Integer|))))))
                         (|:| |guessModGen|
                              (|Mapping|
                               (|Mapping| (|Vector| (|U32Vector|))
                                          (|List| (|U32Vector|)) (|Integer|)
                                          (|Integer|))
                               (|NonNegativeInteger|)))
                         (|:| |testGen|
                              (|Mapping|
                               (|Mapping|
                                (|Vector|
                                 (|UnivariateFormalPowerSeries|
                                  (|SparseMultivariatePolynomial|
                                   (|Fraction| (|Polynomial| (|Integer|)))
                                   (|NonNegativeInteger|))))
                                (|UnivariateFormalPowerSeries|
                                 (|SparseMultivariatePolynomial|
                                  (|Fraction| (|Polynomial| (|Integer|)))
                                  (|NonNegativeInteger|))))
                               (|List| (|PositiveInteger|))))
                         (|:| |exprStream|
                              (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                         (|Expression| (|Integer|))
                                         (|Symbol|)))
                         (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                         (|:| A
                              (|Mapping| (|Polynomial| (|Integer|))
                                         (|NonNegativeInteger|)
                                         (|NonNegativeInteger|)
                                         (|SparseUnivariatePolynomial|
                                          (|Polynomial| (|Integer|)))))
                         (|:| AF
                              (|Mapping|
                               (|SparseMultivariatePolynomial|
                                (|Fraction| (|Polynomial| (|Integer|)))
                                (|NonNegativeInteger|))
                               (|NonNegativeInteger|) (|NonNegativeInteger|)
                               (|UnivariateFormalPowerSeries|
                                (|SparseMultivariatePolynomial|
                                 (|Fraction| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|)))))
                         (|:| AX
                              (|Mapping| (|Expression| (|Integer|))
                                         (|NonNegativeInteger|) (|Symbol|)
                                         (|Expression| (|Integer|))))
                         (|:| C
                              (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                         (|NonNegativeInteger|)))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4)))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4)))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|GuessOption|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| *8) (|List| *6) (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6))
   (|ofCategory| *6 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
   (|ofType| *9 (|Mapping| *6 *8)) (|ofType| *10 (|Mapping| *8 *6))
   (|isDomain| *2 (|List| *8)) (|isDomain| *1 (|Guess| *6 *7 *8 *9 *10))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8
                 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                         (|RetractableTo| (|Symbol|))
                         (|RetractableTo| (|Integer|))
                         (|CombinatorialOpsCategory|)
                         (|PartialDifferentialRing| (|Symbol|))
                         (CATEGORY |domain| (SIGNATURE * ($ $ $))
                          (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                          (SIGNATURE |numerator| ($ $))
                          (SIGNATURE |denominator| ($ $))
                          (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| *9) (|List| *7) (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *7 (|Join| (|Field|) (|PolynomialFactorizationExplicit|)))
   (|ofType| *10 (|Mapping| *7 *9)) (|ofType| *11 (|Mapping| *9 *7))
   (|isDomain| *2 (|List| *9)) (|isDomain| *1 (|Guess| *7 *8 *9 *10 *11))
   (|ofCategory| *8 (|GcdDomain|))
   (|ofCategory| *9
                 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                         (|RetractableTo| (|Symbol|))
                         (|RetractableTo| (|Integer|))
                         (|CombinatorialOpsCategory|)
                         (|PartialDifferentialRing| (|Symbol|))
                         (CATEGORY |domain| (SIGNATURE * ($ $ $))
                          (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                          (SIGNATURE |numerator| ($ $))
                          (SIGNATURE |denominator| ($ $))
                          (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|AlgebraicNumber|))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|AlgebraicNumber|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|AlgebraicNumber|))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|AlgebraicNumber|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *6)
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6))
   (|ofCategory| *6
                 (|Join| (|FiniteFieldCategory|)
                         (|ConvertibleTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessFinite| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *7)
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *7
                 (|Join| (|FiniteFieldCategory|)
                         (|ConvertibleTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessFinite| *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Integer|)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Integer|)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| *6)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *6))))
   (|ofCategory| *6 (|Ring|))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomial| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| *7)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *7))))
   (|ofCategory| *7 (|Ring|))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomial| *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| (|Integer|))))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| (|Integer|))))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| (|Expression| (|Integer|))))
       (|isDomain| *2 (|Polynomial| *4))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessFiniteFunctions| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessFiniteFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))))) 
(((*1 *1) (|isDomain| *1 (|GroupPresentation|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|GroupPresentation|))))) 
(((*1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *4)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *1 (|DirectProductCategory| *3 *4))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))) 
(((*1 *2 *1 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| (|Integer|))))
   (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Boolean|))
   (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|isDomain| *4 (|List| (|OrderedVariableList| *5)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |dpolys|
                         (|List| (|DistributedMultivariatePolynomial| *5 *6)))
                    (|:| |coords| (|List| (|Integer|)))))
       (|isDomain| *1 (|GroebnerSolve| *5 *6 *7))
       (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *3 (|List| (|OrderedVariableList| *4)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerSolve| *4 *5 *6)) (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|isDomain| *4 (|List| (|OrderedVariableList| *5)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|DistributedMultivariatePolynomial| *5 *6))))
       (|isDomain| *1 (|GroebnerSolve| *5 *6 *7))
       (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *1) (|isDomain| *1 (|GraphImage|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|))) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|Vector| (|Vector| (|Integer|))))
       (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Vector| (|Integer|))))
       (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|FreeModuleCategory| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SemiRing|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Mapping| *3))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *5 *3))
   (|isDomain| *1 (|GosperSummationMethod| *5 *3 *6 *7 *2))
   (|ofCategory| *2
                 (|Join| (|RetractableTo| (|Fraction| (|Integer|))) (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|DrawOptionFunctions1| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|GuessOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *2))
                   (|Record| (|:| |index| *5) (|:| |exponent| *2))))
       (|ofCategory| *2
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *2 (|OrderedVariableList| *3)))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5))
                   (|Record| (|:| |index| *2) (|:| |exponent| *5))))
       (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))) 
(((*1 *1 *2 *3 *4)
  (AND (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *4
                     (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *4))
                   (|Record| (|:| |index| *3) (|:| |exponent| *4))))
       (|isDomain| *1 (|GeneralModulePolynomial| *5 *2 *3 *4 *6 *7))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *4 (|OrderedVariableList| *5)))))) 
(((*1 *1 *2 *3 *1)
  (AND (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3
                     (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *3))
                   (|Record| (|:| |index| *5) (|:| |exponent| *3))))
       (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *3 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *3 (|OrderedVariableList| *4)))))) 
(((*1 *2 *3 *2 *4 *5)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *1 (|GeneralHenselPackage| *4 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *6 (|PositiveInteger|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *2 (|Record| (|:| |plist| (|List| *3)) (|:| |modulo| *5)))
       (|isDomain| *1 (|GeneralHenselPackage| *5 *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2 (|Stream| (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6)))
   (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *3)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *2 *4 *5))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Mapping| *5 *4 *4))
       (|ofCategory| *4 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GenExEuclid| *3 *5))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Vector| (|List| *3)))
   (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|GenExEuclid| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *5 (|List| *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|Vector| (|List| *6)))
   (|isDomain| *1 (|GenExEuclid| *4 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GenExEuclid| *5 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|String|))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1))))
   (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))
 ((*1 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record|
                (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
                (|:| |basis|
                     (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1))))
   (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))
 ((*1 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record|
                (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
                (|:| |basis|
                     (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Symbol|)))
       (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| (|Symbol|)))
       (|ofType| *7 (|Vector| (|Matrix| *4)))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| *2)) (|ofType| *7 (|Vector| (|Matrix| *4)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Symbol|)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| *2)) (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|GenericNonAssociativeAlgebra| *2 *3 *4 *5))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofType| *3 (|PositiveInteger|))
       (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|Vector| (|Matrix| *2)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *3)))))
 ((*1 *2)
  (AND (|isDomain| *2 (|List| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| (|Symbol|)))
       (|ofType| *7 (|Vector| (|Matrix| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Vector| *4))
                             (|:| |transform| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|GcdBasis| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Fraction| *4)))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Vector| *4))
                             (|:| |transform| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|GcdBasis| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|GcdBasis| *3))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |totdeg| (|NonNegativeInteger|)) (|:| |pol| *4)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *4
                 (|Join| (|FiniteAbelianMonoidRing| *6 *7)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |lcmfij| *7)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *4)
                         (|:| |polj| *4)))
   (|isDomain| *1 (|GroebnerInternalPackage| *6 *7 *4))))) 
(((*1 *2 *3 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                         (|:| |polj| *6)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|Record| (|:| |lcmfij| *6)
                             (|:| |totdeg| (|NonNegativeInteger|))
                             (|:| |poli| *4) (|:| |polj| *4)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *4))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|Record| (|:| |lcmfij| *6)
                             (|:| |totdeg| (|NonNegativeInteger|))
                             (|:| |poli| *4) (|:| |polj| *4)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5))))) 
(((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *4)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *5)
                          (|:| |polj| *5))))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5
                 (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *3 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |totdeg| (|NonNegativeInteger|))
                          (|:| |pol| *3))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *3
                 (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteAbelianMonoidRing| *5 *6)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Record| (|:| |poly| *3) (|:| |mult| *5)))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *3))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *3)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *5)
                          (|:| |polj| *5))))
   (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5
                 (|Join| (|FiniteAbelianMonoidRing| *4 *3)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *4)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *5)
                          (|:| |polj| *5))))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5
                 (|Join| (|FiniteAbelianMonoidRing| *3 *4)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *3 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *5)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *3)
                          (|:| |polj| *3))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *3
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *3))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *4 *3)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5))
       (|ofCategory| *5
                     (|Join| (|FiniteAbelianMonoidRing| *4 *3)
                             (|VariablesCommuteWithCoefficients|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                         (|:| |polj| *6)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6
                 (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                         (|VariablesCommuteWithCoefficients|)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteAbelianMonoidRing| *4 *5)
                             (|VariablesCommuteWithCoefficients|)))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *2))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|GaloisGroupUtilities| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *6))))) 
(((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4 *5)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4 *5 *6)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *2))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|Multiset| (|NonNegativeInteger|)))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Multiset| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *6
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Set| (|NonNegativeInteger|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |contp| (|Integer|))
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow|
                                                  (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *2
                   (|Record| (|:| |contp| (|Integer|))
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow|
                                                  (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Set| (|NonNegativeInteger|)))
       (|isDomain| *2
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |factors| (|List| *3))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |flag| (|Union| "nil" "sqfr" "irred" "prime"))
                          (|:| |factor| *2)
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|Factored| *2))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |contp| (|Integer|))
                         (|:| |factors|
                              (|List|
                               (|Record| (|:| |irr| *4)
                                         (|:| |pow|
                                              (|NonNegativeInteger|)))))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|Factored| *4))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranType|))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| *3)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FunctionSpaceReduce| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|FunctionSpaceReduce| *4 *3))
   (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceReduce| *5 *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|DoubleFloat|)))
       (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2)) (|ofCategory| *2 (|Finite|))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *5
                 (|Join| (|UnivariatePowerSeriesCategory| *2 *4) (|Field|)
                         (|PowerSeriesCategory| *2 *4
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *2))
   (|ofType| *9 (|Mapping| *2 *4))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *2 *4 *5 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *2 *4 (|SingletonAsOrderedSet|) *5
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Record| (|:| |pos_Check?| (|Boolean|))
                             (|:| |atan_Flag|
                                  (|Union| "complex" "real: two sides"
                                           "real: left side" "real: right side"
                                           "just do it"))
                             (|:| |coeff_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6)
                                           #1="none"))
                             (|:| |inv_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6) #1#))
                             (|:| |zero_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6) #1#))
                             (|:| |log_x_replace| (|Boolean|))
                             (|:| |log_x_val| *6)))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *6 *7) (|Field|)
                             (|PowerSeriesCategory| *6 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *6))
       (|ofType| *12 (|Mapping| *6 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *5 *6 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *6 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *6
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *6 *7 *2 *8 *9
                                                        *10))
   (|ofCategory| *7 (|PartialTranscendentalFunctions| *6))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *6
                                          *2))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *3 *2 *4 *5))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *4 (|Symbol|)) (|ofType| *5 *2)))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *5
                 (|Join| (|UnivariatePowerSeriesCategory| *2 *4) (|Field|)
                         (|PowerSeriesCategory| *2 *4
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *2))
   (|ofType| *9 (|Mapping| *2 *4))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *2 *4 *5 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *2 *4 (|SingletonAsOrderedSet|) *5
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *3 *4 *5 *4 *3)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| #1="complex" #2="real: two sides"
                            #3="real: left side" #4="real: right side"
                            #5="just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3 *6 *6 *6)
  (AND (|isDomain| *5 (|Union| #1# #2# #3# #4# #5#))
       (|isDomain| *6 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *7)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *8)))))
       (|ofCategory| *8 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *9
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *8) (|Field|)
                             (|PowerSeriesCategory| *3 *8
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *11 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *9)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *7 *3 *8 *9 *10 *11
                                                           *12 *13))
       (|ofCategory| *10 (|PartialTranscendentalFunctions| *9))
       (|ofCategory| *12
                     (|TaylorSeriesExpansion| *3 *8 (|SingletonAsOrderedSet|)
                                              *9 *11))
       (|ofType| *13 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| #6="complex" #7="real: two sides"
                            #8="real: left side" #9="real: right side"
                            #10="just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3 *6 *6 *6)
  (AND (|isDomain| *5 (|Union| #6# #7# #8# #9# #10#))
       (|isDomain| *6 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *8 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *9
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *8) (|Field|)
                             (|PowerSeriesCategory| *3 *8
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *11 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *13 (|Mapping| *3 *8))
       (|isDomain| *2
                   (|Union| (|:| |%series| *9)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *7 *3 *8 *9 *10 *11
                                                            *12 *13 *14))
       (|ofCategory| *10 (|PartialTranscendentalFunctions| *9))
       (|ofCategory| *12
                     (|TaylorSeriesExpansion| *3 *8 (|SingletonAsOrderedSet|)
                                              *9 *11))
       (|ofType| *14 (|Symbol|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union|
                    (|:| |%expansion| (|ExponentialExpansion| *5 *3 *6 *7))
                    (|:| |%problem|
                         (|Record| (|:| |func| (|String|))
                                   (|:| |prob| (|String|))))))
       (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *5 *3 *6 *7))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofType| *6 (|Symbol|)) (|ofType| *7 *3)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|))))
 ((*1 *1 *2 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |coef| (|Integer|)) (|:| |var| (|Kernel| *1))))
   (|ofCategory| *1 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Kernel| *1)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|List| (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|FramedModule| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|RetractableTo| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6)) (|ofCategory| *6 (|FramedAlgebra| *4 *5))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofType| *7 *2)))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|EuclideanDomain|))
       (|ofCategory| *3 (|QuotientFieldCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Vector| *2))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|QuotientFieldCategory| *5))
       (|ofCategory| *2 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6)))
       (|isDomain| *1 (|FractionalIdeal| *5 *6 *7 *2))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedAlgebra&| *3 *4 *5))
       (|ofCategory| *3 (|FramedAlgebra| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|FiniteGroupPackage| *3))
       (|ofCategory| *3 (|Join| (|Group|) (|Finite|)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Factored| *3)))
       (|isDomain| *1 (|Fraction| *3))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Factored| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *6))
       (|isDomain| *1 (|FactoredFunctions2| *5 *6))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| (|Integer|)))))
   (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |gen| *3) (|:| |exp| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |factor| *3)
                          (|:| |exponent| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Union| "nil" "sqfr" "irred" "prime"))
       (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))
 ((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Bits|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|FieldOfPrimeCharacteristic|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |exponent| (|NonNegativeInteger|))
                              (|:| |center| *4) (|:| |num| *4))))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|Formatter| *3))
       (|ofCategory| *3 (|FormatterCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Mapping| (|OutputBox|) (|String|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |prolog| (|Mapping| (|OutputBox|) (|String|)))
                    (|:| |epilog| (|Mapping| (|OutputBox|) (|String|)))))
       (|isDomain| *1 (|Formatter| *4))
       (|ofCategory| *4 (|FormatterCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|OperatorHandlers|
                    (|Mapping| (|OutputBox|) (|Integer|)
                               (|List| (|OutputForm|)))))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|OperatorHandlers|
                (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Formatter| *3)) (|ofCategory| *3 (|FormatterCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|Formatter| *4))
       (|ofCategory| *4 (|FormatterCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FileName|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Stack| (|String|)))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Stack| (|String|)))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |next| (|NonNegativeInteger|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FunctionGraph| *3))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *1 (|FormatLaTeX|))))
 ((*1 *2 *3 *3 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *1 (|FormatMathJax|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FormatterCategory&| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FormatterCategory&| *3))
       (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|OutputBox|)) (|isDomain| *1 (|FormatterCategory&| *5))
       (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|OutputForm|))
       (|isDomain| *2 (|OutputBox|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|OutputForm|))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *3 (|String|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|OutputBox|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *2 (|OutputBox|))
       (|isDomain| *3 (|Boolean|))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|FormatterCategory&| *3))
   (|ofCategory| *3 (|FormatterCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|String|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FormatterCategory&| *4))
   (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))) 
(((*1 *2 *3 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|OutputBox|) (|Integer|) (|List| (|OutputForm|))))
   (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|FormatterCategory&| *5))
   (|ofCategory| *5 (|FormatterCategory|))))
 ((*1 *2 *3 *3 *4 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|String|)) (|isDomain| *4 (|Integer|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputBox|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|FormatterCategory&| *4))
       (|ofCategory| *4 (|FormatterCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FormatterCategory|)) (|isDomain| *3 (|OutputForm|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3 *2 *2)
  (AND (|ofCategory| *1 (|FormatterCategory|))
       (|isDomain| *2
                   (|Mapping| (|OutputBox|) (|Integer|)
                              (|List| (|OutputForm|))))
       (|isDomain| *3 (|Integer|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lm| (|FreeMonoid| *3))
                         (|:| |mm| (|FreeMonoid| *3))
                         (|:| |rm| (|FreeMonoid| *3))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|isDomain| *1 (|FiniteMoebiusFunction| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|List| *5)))
       (|isDomain| *1 (|FloatingRealPackage| *5))
       (|ofCategory| *5 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|FloatingComplexPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *4 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|List| (|Complex| *5))))
   (|isDomain| *1 (|FloatingComplexPackage| *5))
   (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4))))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Equation|
                 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4))))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4)))))
       (|isDomain| *1 (|FloatingComplexPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Equation|
                (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4)))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|FiniteLattice| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofType| *3 (|FiniteBiCPO| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteLattice| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 (|FiniteBiCPO| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Vector| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *1 (|FileCategory| *2 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |value| *3)
                              (|:| |posX| (|NonNegativeInteger|))
                              (|:| |posY| (|NonNegativeInteger|)))))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |name| (|String|))
                              (|:| |arrType| (|NonNegativeInteger|))
                              (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|))
                              (|:| |xOffset| (|Integer|))
                              (|:| |yOffset| (|Integer|))
                              (|:| |map| (|List| (|NonNegativeInteger|))))))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Tree| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Tree| (|Integer|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Tree| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Tree| (|Integer|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1 *4 *4)
  (AND (|isDomain| *3 (|Scene| (|SCartesian| 2))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| *1))
       (|isDomain| *5 (|Boolean|)) (|ofCategory| *1 (|FiniteGraph| *6))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2
                     (|Join| (|FieldOfPrimeCharacteristic|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *4))
                              (SIGNATURE |lookup| ((|PositiveInteger|) $))
                              (SIGNATURE |basis|
                               ((|Vector| $) (|PositiveInteger|)))
                              (SIGNATURE |Frobenius| ($ $)))))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage2| *2 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| (|PrimeField| *3))
                           (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
   (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|ofType| *4 (|Union| (|SparseUnivariatePolynomial| *3) *2))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Matrix| (|PrimeField| *3)))
       (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4
        (|Union| (|SparseUnivariatePolynomial| *3)
                 (|Vector|
                  (|List|
                   (|Record| (|:| |value| *3)
                             (|:| |index| (|SingleInteger|)))))))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4
        (|Union| (|SparseUnivariatePolynomial| *3)
                 (|Vector|
                  (|List|
                   (|Record| (|:| |value| *3)
                             (|:| |index| (|SingleInteger|)))))))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factor| (|Integer|))
                              (|:| |exponent| (|NonNegativeInteger|)))))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Table| (|PositiveInteger|) (|NonNegativeInteger|)))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Union| "prime" "polynomial" "normal" "cyclic"))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *8))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|Mapping| *8 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *9))
       (|isDomain| *5 (|Vector| *9)) (|isDomain| *6 (|Vector| (|Integer|)))
       (|ofCategory| *8 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *9 (|AbelianMonoidRing| *8 *7))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *8 *9))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *9))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|FiniteAbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|ofCategory| *9
                     (|FiniteAbelianMonoidRing| (|Fraction| *7)
                                                (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussianFractions| *7 *8 *9))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|FractionFreeFastGaussian| *3 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *3 *4))))) 
(((*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Mapping| *2 (|NonNegativeInteger|) (|NonNegativeInteger|) *7))
   (|isDomain| *4 (|Vector| *7))
   (|isDomain| *6 (|Vector| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *7 (|AbelianMonoidRing| *2 *5))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
   (|isDomain| *1 (|FractionFreeFastGaussian| *2 *7))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *7))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Mapping| *6 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *6 *7))
       (|ofCategory| *7 (|AbelianMonoidRing| *6 (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2
                   (|Union| (|SparseUnivariatePolynomial| *4)
                            (|Vector|
                             (|List|
                              (|Record| (|:| |value| *4)
                                        (|:| |index| (|SingleInteger|)))))))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Matrix| *4))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Vector|
                    (|List|
                     (|Record| (|:| |value| *4)
                               (|:| |index| (|SingleInteger|))))))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroup| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroupExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroupExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionFieldCategory&| *4 *3 *5 *6))
       (|ofCategory| *4 (|FunctionFieldCategory| *3 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *5)) (|:| |den| *5)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5))
   (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4))
   (|ofCategory| *3 (|UniqueFactorizationDomain|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5))
   (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4))
   (|ofCategory| *3 (|UniqueFactorizationDomain|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2
                   (|Record| (|:| |num| *1) (|:| |den| *5) (|:| |derivden| *5)
                             (|:| |gd| *5)))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FunctionFieldCategory&| *4 *5 *6 *7))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| (|Polynomial| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *3 (|Finite|)) (|isDomain| *2 (|List| (|List| *3)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Complex| (|Float|))))
       (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Complex| (|Float|))))
       (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *2 *3)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *4 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *1 *2 *3 *3 *3 *4)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *4 *3 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *4 *3 *5))))
 ((*1 *1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *4 *3 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *4 *3 *5))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *2 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *2 *4 *5))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5))
       (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FreeMonoid| *3)))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|LinearMultivariateMatrixPencil| *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *3))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Matrix| (|XDistributedPolynomial| *3 *4))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *4 *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|XDistributedPolynomial| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Matrix| (|XDistributedPolynomial| *3 *4))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Matrix| (|XDistributedPolynomial| *3 *4))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *3 *4)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|FreeDivisionAlgebra| *4 *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|Equation| (|Polynomial| *6))))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|List| (|Matrix| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *5)))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeDivisionAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FreeDivisionAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Field|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|Equation| (|Polynomial| *6))))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|List| (|Matrix| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *1 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|Polynomial| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *1 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|Polynomial| *6)))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))) 
(((*1 *2 *1 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *6)))))
       (|isDomain| *1 (|FreeDivisionAlgebra| *5 *6))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Field|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Symbol|))) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FourierComponent| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |Null| "null") (|:| |Assignment| "assignment")
                        (|:| |Conditional| "conditional")
                        (|:| |Return| "return") (|:| |Block| "block")
                        (|:| |Comment| "comment") (|:| |Call| "call")
                        (|:| |For| "for") (|:| |While| "while")
                        (|:| |Repeat| "repeat") (|:| |Goto| "goto")
                        (|:| |Continue| "continue")
                        (|:| |ArrayAssignment| "arrayAssignment")
                        (|:| |Save| "save") (|:| |Stop| "stop")
                        (|:| |Common| "common") (|:| |Print| "print")))
   (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |nullBranch| "null")
                        (|:| |assignmentBranch|
                             (|Record| (|:| |var| (|Symbol|))
                                       (|:| |arrayIndex|
                                            (|List|
                                             (|Polynomial| (|Integer|))))
                                       (|:| |rand|
                                            (|Record|
                                             (|:| |ints2Floats?| (|Boolean|))
                                             (|:| |expr| (|OutputForm|))))))
                        (|:| |arrayAssignmentBranch|
                             (|Record| (|:| |var| (|Symbol|))
                                       (|:| |rand| (|OutputForm|))
                                       (|:| |ints2Floats?| (|Boolean|))))
                        (|:| |conditionalBranch|
                             (|Record| (|:| |switch| (|Switch|))
                                       (|:| |thenClause| (|FortranCode|))
                                       (|:| |elseClause| (|FortranCode|))))
                        (|:| |returnBranch|
                             (|Record| (|:| |empty?| (|Boolean|))
                                       (|:| |value|
                                            (|Record|
                                             (|:| |ints2Floats?| (|Boolean|))
                                             (|:| |expr| (|OutputForm|))))))
                        (|:| |blockBranch| (|List| (|FortranCode|)))
                        (|:| |commentBranch| (|List| (|String|)))
                        (|:| |callBranch| (|String|))
                        (|:| |forBranch|
                             (|Record|
                              (|:| |range|
                                   (|SegmentBinding|
                                    (|Polynomial| (|Integer|))))
                              (|:| |span| (|Polynomial| (|Integer|)))
                              (|:| |body| (|FortranCode|))))
                        (|:| |labelBranch| (|SingleInteger|))
                        (|:| |loopBranch|
                             (|Record| (|:| |switch| (|Switch|))
                                       (|:| |body| (|FortranCode|))))
                        (|:| |commonBranch|
                             (|Record| (|:| |name| (|Symbol|))
                                       (|:| |contents| (|List| (|Symbol|)))))
                        (|:| |printBranch| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Finite|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
   (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|FakePolynomial|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial|
                (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|FakePolynomial|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *2 *6))
       (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|Ring|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *1 (|FactoringUtilities| *6 *7 *8 *9))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *3 *3 *4 *5 *4 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *4 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *7 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *8 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|ofCategory| *2 (|FunctionSpace| *5))
       (|isDomain| *1 (|ExpressionSolve| *5 *2 *6 *7))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *7
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *2)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|EuclideanDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1 *1)
  (|partial| AND (|isDomain| *2 (|Record| (|:| |coef1| *1) (|:| |coef2| *1)))
   (|ofCategory| *1 (|EuclideanDomain|))))
 ((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                         (|:| |generator| *1)))
   (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))
 ((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Kernel| *1))
   (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|List| (|Kernel| *1)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Kernel| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|List| (|Kernel| *1)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Kernel| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|List| (|BasicOperator|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|RetractableTo| (|Integer|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *5))
       (|isDomain| *1 (|AlgebraicFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *1)) (|ofCategory| *1 (|Ring|))
       (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Exit|)) (|isDomain| *1 (|ErrorFunctions|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|CommuteUnivariatePolynomialCategory| *3 *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *3))) (|isDomain| *1 (|Equation| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |unit| *1) (|:| |canonical| *1)
                         (|:| |associate| *1)))
   (|ofCategory| *1 (|EntireRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|EntireRing|)))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| *5))
   (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ExpressionLinearSolve| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|List| (|Stream| *4)))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *4 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |vec| (|Vector| (|Fraction| (|Integer|))))
                            (|:| |func| *5) (|:| |fail| (|Boolean|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Kernel| *2)))
   (|isDomain| *4 (|Symbol|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *2))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |funcs| (|List| *6))
                             (|:| |kers| (|List| (|Kernel| *6)))
                             (|:| |vals| (|List| *6))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *6))))) 
(((*1 *2 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *4 (|OrderedAbelianMonoid|))
   (|isDomain| *1
               (|ElementaryFunctionsGeneralizedUnivariatePowerSeries| *3 *4
                                                                      *2))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *3 *4)
                         (CATEGORY |domain| (SIGNATURE |removeZeros| ($ $ *4))
                          (SIGNATURE |apply_taylor| ($ (|Stream| *3) $)))))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseMultivariatePolynomial| *4 (|Kernel| *5))))
   (|ofCategory| *4 (|Join| (|GcdDomain|) (|Comparable|)))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseMultivariatePolynomial| *4 (|Kernel| *5)))))
   (|isDomain| *1 (|ExpressionFactorPolynomial| *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *3))
       (|ofCategory| *3 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))) 
(((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|List| (|Record| (|:| |func| *2) (|:| |pole| (|Boolean|)))))
   (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))
   (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|ElementaryFunction| *4 *2))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|DifferentialRing|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|isDomain| *4 (|UnivariatePolynomial| *6 *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofType| *6 (|Symbol|))
       (|isDomain| *2 (|ContinuedFraction| (|UnivariatePolynomial| *6 *5)))
       (|isDomain| *1 (|DistributionContinuedFractionPackage| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|isDomain| *4 (|UnivariatePolynomial| *6 (|Fraction| *5)))
       (|ofCategory| *5 (|IntegralDomain|)) (|not| (|ofCategory| *5 (|Field|)))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofType| *6 (|Symbol|))
       (|isDomain| *2
                   (|ContinuedFraction|
                    (|UnivariatePolynomial| *6 (|Fraction| *5))))
       (|isDomain| *1 (|DistributionContinuedFractionPackage| *5 *6))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Plot|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|ParametricSurface| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|ParametricSurface| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|TwoDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|TwoDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|DoubleFloat|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|DoubleFloat|))) (|isDomain| *5 (|Boolean|))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|ParametricSurface| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|ParametricSurface| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *3
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|DifferentialVariableCategory| *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3 *3 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|DiscreteLogarithmPackage| *3))
   (|ofCategory| *3
                 (|Join| (|Monoid|) (|Finite|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Integer|))))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|DistributionFunctions2| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|isDomain| *2 (|Distribution| *6))
       (|isDomain| *1 (|DistributionFunctions2| *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Sequence| *2))
       (|isDomain| *1 (|Distribution| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Distribution| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|)) (|not| (|ofCategory| *3 (|Field|)))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| (|Fraction| *3)))
                             (|:| |bn| (|Stream| (|Fraction| *3)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| *3))
                             (|:| |bn| (|Stream| *3))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|)) (|not| (|ofCategory| *3 (|Field|)))
       (|isDomain| *2
                   (|Stream| (|SparseUnivariatePolynomial| (|Fraction| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Stream| (|SparseUnivariatePolynomial| *3)))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|DirichletRing| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Polynomial| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |varOrder| (|List| (|Symbol|)))
                             (|:| |inhom|
                                  (|Union|
                                   (|List| (|Vector| (|NonNegativeInteger|)))
                                   "failed"))
                             (|:| |hom|
                                  (|List| (|Vector| (|NonNegativeInteger|))))))
       (|isDomain| *1 (|DiophantineSolutionPackage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|DictionaryOperations| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|DictionaryOperations| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|IntegerMod| *3))
       (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|IntegerMod| 2))
       (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DoubleFloat|))))) 
(((*1 *2 *3 *4 *5 *5 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|Polynomial| *6))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *7))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *7
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|isDomain| *1 (|DefiniteIntegrationTools| *6 *7))))
 ((*1 *2 *3 *4 *4 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
   (|isDomain| *4 (|OrderedCompletion| *6))
   (|ofCategory| *6
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|DefiniteIntegrationTools| *5 *6))))) 
(((*1 *2 *3 *4 *2 *2 *5)
  (|partial| AND (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *3 (|Kernel| *4)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *4
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|DefiniteIntegrationTools| *6 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DefiniteIntegrationTools| *4 *5))
       (|ofCategory| *5
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatElementaryFunctions|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *3))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Dequeue| *3))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|DeltaComplex| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|List| (|List| (|Integer|)))))
       (|ofCategory| *5 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *5))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|DeltaComplex| *4)) (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *3))
       (|isDomain| *6 (|Boolean|))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| "failed")
                            (|:| |pole| "potentialPole")))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *7 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |deg| (|NonNegativeInteger|))
                              (|:| |prod| *3))))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Record| (|:| |cont| *5)
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow|
                                                  (|NonNegativeInteger|)))))))
       (|isDomain| *1 (|DistinctDegreeFactorize| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|DoubleResultantPackage| *5 *2 *6 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *2 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *1 (|CyclotomicPolynomialPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *1 (|CyclotomicPolynomialPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Matrix| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|List| (|Integer|)))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Segment| (|Integer|)))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|CubicalFacet|)))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|CubicalFacet|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|CyclicStreamTools| *3 *2))
       (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CyclicStreamTools| *4 *3))
       (|ofCategory| *3 (|LazyStreamAggregate| *4))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Type|))
   (|isDomain| *1 (|CyclicStreamTools| *3 *2))
   (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|Record| (|:| |start| *3) (|:| |factors| (|Factored| *3))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| *4))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *2)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factors| (|List| *3)) (|:| |error| *5))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *5)))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factors| (|List| *3)) (|:| |error| *4))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootPackage| *3 *4))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory| (|Complex| (|Integer|))))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *2))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Fraction| *3)))
       (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Fraction| *3)))
       (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Lambda| (|Typed|)))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|ILogic|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|RealNumberSystem|))
       (|ofCategory| *3 (|TranscendentalFunctionCategory|))
       (|isDomain| *2 (|Record| (|:| |r| *3) (|:| |phi| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|Comparable|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Commutator|)))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Commutator|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1) (|ofCategory| *1 (|CombinatorialOpsCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|CombinatorialOpsCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))
       (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))))) 
(((*1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|ChainComplex|)) (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ChainComplex|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|CoChainComplex| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Coalgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Coalgebra| *2 *3)) (|ofCategory| *3 (|Module| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Plot|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Vector| *6)))
       (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |transform| (|Matrix| *6))
                             (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Vector| *4)) (|isDomain| *5 (|List| (|Mapping| *4 *4)))
       (|ofCategory| *4 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *4) #1="failed"))
                    (|:| |basis| (|List| (|Vector| *4)))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
       (|isDomain| *5 (|List| (|Mapping| *7 *7)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *7) #1#))
                             (|:| |basis| (|List| (|Vector| *7)))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *7))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|Vector| *3))
   (|isDomain| *4 (|List| (|Mapping| *3 *3)))
   (|ofCategory| *3 (|FunctionSpace| *5))
   (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *5 *3))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *2 (|Vector| *6)) (|isDomain| *3 (|Matrix| *6))
   (|isDomain| *4 (|List| (|Mapping| *6 *6)))
   (|ofCategory| *6 (|FunctionSpace| *5))
   (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Vector| *5))
   (|isDomain| *3 (|List| (|Mapping| *5 *5)))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5)) (|ofType| *3 *2)
       (|ofCategory| *4 (|Field|)) (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Mapping| (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *2 (|Matrix| (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
   (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
   (|ofType| *6 (|SquareMatrix| *4 *5))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Mapping| (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *2 (|Matrix| (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
   (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
   (|ofType| *6 (|SquareMatrix| *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofType| *6 (|SquareMatrix| *4 *5))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
   (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |IDe| (|JetDifferentialEquation| *4 *5))
                             (|:| |ISys| (|List| *5))
                             (|:| |Order| (|NonNegativeInteger|))
                             (|:| |NumProj| (|NonNegativeInteger|))
                             (|:| |Dim| (|NonNegativeInteger|))
                             (|:| |CarChar| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CartanKuranishi| *5 *6))
       (|ofCategory| *6 (|JetBundleFunctionCategory| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartanKuranishi| *6 *7))
       (|ofCategory| *7 (|JetBundleFunctionCategory| *6))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartanKuranishi| *6 *7))
       (|ofCategory| *7 (|JetBundleFunctionCategory| *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |func| *3) (|:| |poly| *3)
                             (|:| |c1| (|Fraction| *5))
                             (|:| |c2| (|Fraction| *5))
                             (|:| |deg| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|isDomain| *2
                   (|Record| (|:| |func| (|List| *4)) (|:| |poly| *4)
                             (|:| |c1| (|Fraction| *6))
                             (|:| |c2| (|Fraction| *6))
                             (|:| |deg| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ChangeOfVariable| *5 *6 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|isDomain| *1 (|ChangeOfVariable| *2 *5 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *3 (|Fraction| *6))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| (|Fraction| *6)) (|:| |radicand| *6)))
       (|isDomain| *1 (|ChangeOfVariable| *5 *6 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2
               (|Record| (|:| |radicand| (|Fraction| *5))
                         (|:| |deg| (|NonNegativeInteger|))))
   (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Record| (|:| |coef| (|Fraction| *5)) (|:| |poly| *3)))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| *4)))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *4)))
       (|isDomain| *1 (|CharacteristicPolynomial3| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| *4)))
       (|isDomain| *2 (|Fraction| *4))
       (|isDomain| *1 (|CharacteristicPolynomial3| *4))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|CharacteristicPolynomial3| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|CharacteristicPolynomial2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |matrix| (|Matrix| *4))
                             (|:| |block_list| (|List| (|Integer|)))))
       (|isDomain| *1 (|CharacteristicPolynomial2| *4))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Character|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|ChainComplex|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|ChainComplex|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))))
   (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Cell| *2))
   (|ofCategory| *2 (|RealClosedField|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|Cell| *3)) (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Character|)))
       (|isDomain| *1 (|CharacterClass|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|CharacterClass|))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|CartesianTensor| *5 *6 *7))
       (|ofType| *5 (|Integer|)) (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *7 (|CommutativeRing|))
       (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|CartesianTensor| *5 *6 *8))
       (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Cell| *5))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Cell| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Cell| *5)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|CachableSet|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|CancellationAbelianMonoid|)))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|BinaryTournament| *3))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|BinaryTreeCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|BinarySearchTree| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinarySearchTree| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *1 (|BasicOperatorFunctions1| *2))
   (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|List| (|Mapping| *4 (|List| *4))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|List| (|Mapping| *4 (|List| *4))))
   (|isDomain| *1 (|BasicOperatorFunctions1| *4))
   (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|None|))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *1) (|ofCategory| *1 (|BoundedMeetSemilattice|)))) 
(((*1 *1) (|ofCategory| *1 (|BoundedJoinSemilattice|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|BitStreamFrame|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Boolean|)))
       (|isDomain| *1 (|BitStreamFrame|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|BinaryFile|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *6 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *6 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|IndexedVector| *3 0))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *5 *6 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|IndexedVector| *3 0))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|BezoutMatrixWrapper| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|BezoutMatrixWrapper| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3 *3 *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|isDomain| *1 (|BalancedBinaryTree| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *2) *2 *2 *2))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|BalancedFactorisation| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Join| (|GcdDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|BalancedFactorisation| *5 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ArrayStack| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |minor| (|List| (|PositiveInteger|)))
                             (|:| |eq| *3)
                             (|:| |minors|
                                  (|List| (|List| (|PositiveInteger|))))
                             (|:| |ops| (|List| *3))))
       (|isDomain| *1 (|AssociatedEquations| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|AssociatedEquations| *4 *5))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *5))
                             (|:| |vec|
                                  (|Vector| (|List| (|PositiveInteger|))))))
       (|isDomain| *1 (|AssociatedEquations| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OneDimensionalArray| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|OneDimensionalArray| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|Segment| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|Segment| (|Integer|)))))) 
(((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *3 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *1))) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|RewriteRule| *4 *5 *2)))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|ApplyRules| *4 *5 *2))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| (|RewriteRule| *5 *6 *2)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6
                     (|Join| (|Ring|) (|PatternMatchable| *5) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *5))))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *6) (|PatternMatchable| *5)
                             (|ConvertibleTo| (|Pattern| *5))))
       (|isDomain| *1 (|ApplyRules| *5 *6 *2))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgebraicNumber|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *5 *2))
       (|ofCategory| *2 (|FunctionSpace| *5))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *5
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *5
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *5
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 $)))))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 $)))))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|AlgebraicFunctionField| *4 *5 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofType| *7 *6)))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|AssociationListAggregate| *3 *4))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Type|))
   (|isDomain| *2 (|Record| (|:| |key| *3) (|:| |entry| *4)))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *2 (|FunctionSpace| *3))
       (|isDomain| *1 (|AlgebraicFunction| *3 *2))
       (|ofCategory| *3 (|RetractableTo| *4))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|AlgebraicFunction| *4 *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *4 *2))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *5 *2))))) 
(((*1 *1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|Segment| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2))
       (|ofCategory| *2 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))) 
((|opposite?| . 2072399) (|zerosOf| . 2071490) (|zeroOf| . 2070756)
 (|rootsOf| . 2069847) (|makeSketch| . 2069630) (|rootSum| . 2069113)
 (|inrootof| . 2068871) (|droot| . 2068623) (|iroot| . 2068364)
 (|size?| . 2068231) (|eq?| . 2068144) (|assoc| . 2067928)
 (|doublyTransitive?| . 2067765) (|knownInfBasis| . 2067421)
 (|rootSplit| . 2066414) (|ratDenom| . 2062302) (|ratPoly| . 2061238)
 (|rootFactor| . 2060003) (|rootPower| . 2058823) (|rootProduct| . 2057643)
 (|rootSimp| . 2056463) (|rootKerSimp| . 2055197) (|leftRank| . 2054982)
 (|rightRank| . 2054767) (|doubleRank| . 2054552) (|weakBiRank| . 2054337)
 (|biRank| . 2054122) (|basisOfCommutingElements| . 2053928)
 (|basisOfLeftAnnihilator| . 2053731) (|basisOfRightAnnihilator| . 2053534)
 (|basisOfLeftNucleus| . 2053340) (|basisOfRightNucleus| . 2053146)
 (|basisOfMiddleNucleus| . 2052952) (|basisOfNucleus| . 2052758)
 (|basisOfCenter| . 2052564) (|basisOfLeftNucloid| . 2052352)
 (|basisOfRightNucloid| . 2052140) (|basisOfCentroid| . 2051928)
 (|radicalOfLeftTraceForm| . 2051734) (|trueEqual| . 2051643)
 (|showTypeInOutput| . 2051533) (|obj| . 2051462) (|dom| . 2051384)
 (|objectOf| . 2051307) (|domainOf| . 2051230) (|any| . 2051115)
 (|applyRules| . 2050094) (|vertSplit| . 2049451) (|blockConcat| . 2049175)
 (|vertConcat| . 2048668) (|horizConcat| . 2048161) (|squareTop| . 2047922)
 (|setColumn!| . 2047667) (|colSlice| . 2047381) (|rowSlice| . 2047095)
 (|oneDimensionalArray| . 2046825) (|associatedSystem| . 2046403)
 (|uncouplingMatrices| . 2046136) (|associatedEquations| . 2045565)
 (|arrayStack| . 2045438) (|morphism| . 2045043)
 (|balancedFactorisation| . 2044518) (|mapDown!| . 2044201)
 (|mapUp!| . 2043886) (|setleaves!| . 2043748) (|balancedBinaryTree| . 2043592)
 (|sylvesterMatrix| . 2043072) (|subSylvesterMatrix| . 2041858)
 (|bezoutMatrix| . 2041338) (|subresultants| . 2040673)
 (|bezoutResultant| . 2040100) (|bezoutDiscriminant| . 2039533)
 (|inspect| . 2039444) (|extract!| . 2039355) (|position!| . 2039263)
 (|starts| . 2039076) (|_\|_| . 2039018) (T$ . 2038960) (|test| . 2038916)
 (|setProperties| . 2038792) (|setProperty| . 2038669) (|property| . 2038543)
 (|deleteProperty!| . 2038455) (|assert| . 2038367) (|has?| . 2038244)
 (|input| . 2037974) (|comparison| . 2037831) (|equality| . 2037688)
 (|nary?| . 2037602) (|unary?| . 2037516) (|nullary?| . 2037430)
 (|arity| . 2037320) (|properties| . 2037199) (|derivative| . 2036588)
 (|constantOperator| . 2036435) (|constantOpIfCan| . 2036280)
 (|setright!| . 2036123) (|setleft!| . 2035966)
 (|brillhartIrreducible?| . 2035645) (|brillhartTrials| . 2035294)
 (|noLinearFactor?| . 2035134) (|insertRoot!| . 2035027)
 (|binarySearchTree| . 2034895) (|nor| . 2034796) (|nand| . 2034697)
 (|node| . 2034582) (|binaryTournament| . 2034450) (|binaryTree| . 2034262)
 (|subtractIfCan| . 2034185) (|setPosition| . 2034053)
 (|cylindricalDecomposition| . 2033555) (|projectionSet| . 2033300)
 (|coefficientSet| . 2033045) (|discriminantSet| . 2032790)
 (|resultantSet| . 2032535) (|principalSubResultantSet| . 2032277)
 (|specialise| . 2031997) (|squareFreeBasis| . 2031769)
 (|generalizedContinuumHypothesisAssumed| . 2031682)
 (|generalizedContinuumHypothesisAssumed?| . 2031600) (|countable?| . 2031513)
 (|Aleph| . 2031408) (|unravel| . 2031196) (|ravel| . 2030984)
 (|leviCivitaSymbol| . 2030803) (|kroneckerDelta| . 2030622)
 (|reshape| . 2030245) (|alphanumeric| . 2030197) (|alphabetic| . 2030149)
 (|hexDigit| . 2030101) (|digit| . 2030053) (|charClass| . 2029864)
 (|simpleCells| . 2029691) (|projection| . 2029588) (|variablesOf| . 2029455)
 (|mainVariableOf| . 2029331) (|makeCell| . 2028992) (|setMult| . 2028904)
 (|getIntervals| . 2028791) (|cubicalFacet| . 2028422)
 (|transition_matrices| . 2028310) (|chainComplex| . 2028198)
 (|alphanumeric?| . 2028118) (|lowerCase?| . 2028038) (|upperCase?| . 2027958)
 (|alphabetic?| . 2027878) (|hexDigit?| . 2027798) (|digit?| . 2027718)
 (|newline| . 2027675) (|escape| . 2027632) (|char| . 2027475)
 (|ord| . 2027395) (|danilewski| . 2027106) (|char_pol| . 2026911)
 (|char_pol_via_interpolation| . 2026707)
 (|det_via_common_denominator| . 2026469)
 (|char_pol_via_den_interpolation| . 2026200) (|mkIntegral| . 2025861)
 (|radPoly| . 2025465) (|rootPoly| . 2024966) (|goodPoint| . 2024668)
 (|chvar| . 2023578) (|setOutMode| . 2023361) (|setRedMode| . 2023144)
 (|stirling| . 2022921) (|alpha| . 2022646) (|hilbert| . 2022341)
 (|alphaHilbert| . 2022036) (|arbFunctions| . 2021679) (|gauge| . 2021322)
 (|gaugeHilbert| . 2020968) (|bound| . 2020745) (|complete2| . 2020089)
 (|removeDuplicates| . 2019918) (|find| . 2019772) (|setMode| . 2019525)
 (|conj| . 2019343) (|gradeInvolution| . 2019161) (|rc| . 2018976)
 (|lc| . 2018791) (|toTable| . 2018006) (|ePseudoscalar| . 2017827)
 (|eFromBinaryMap| . 2017599) (|multivector| . 2017382) (|ee| . 2017148)
 (|e| . 2016947) (|linearlyDependentOverConstants?| . 2016640)
 (|linearDependenceOverConstants| . 2016367)
 (|particularSolutionOverConstants| . 2015787)
 (|solveLinearOverConstants| . 2014851) (|nullSpaceOverConstants| . 2014533)
 (|constant_subspace| . 2014094) (|clipParametric| . 2013325)
 (|clipWithRanges| . 2012877) (|counit| . 2012738) (|coproduct| . 2012599)
 (|coboundary| . 2012415) (|validate| . 2012200) (|coChainComplex| . 2011906)
 (|numberOfHues| . 2011825) (|blue| . 2011786) (|green| . 2011747)
 (|yellow| . 2011708) (|red| . 2011669) (|iifact| . 2011483)
 (|iibinom| . 2011269) (|iiperm| . 2011055) (|iipow| . 2010841)
 (|iidsum| . 2010627) (|iidprod| . 2010413) (|ipow| . 2010199)
 (|factorial| . 2009824) (|multinomial| . 2009668)
 (|distinct_partition| . 2009543) (|permutation| . 2009159)
 (|stirling1| . 2009031) (|stirling2| . 2008903) (|catalan| . 2008778)
 (|summation| . 2008100) (|factorials| . 2007526) (|mkcomm| . 2007397)
 (|smaller?| . 2007309) (|polarCoordinates| . 2007031) (|complex| . 2006918)
 (|imaginary| . 2006811) (|writeCategory| . 2006654) (|writePackage| . 2006484)
 (|solid| . 2006376) (|solid?| . 2006271) (|denominators| . 2006131)
 (|numerators| . 2005991) (|convergents| . 2005831) (|approximants| . 2005671)
 (|reducedForm| . 2005561) (|partialQuotients| . 2005421)
 (|partialDenominators| . 2005281) (|partialNumerators| . 2005141)
 (|reducedContinuedFraction| . 2004998) (|polar| . 2004748)
 (|cylindrical| . 2004498) (|spherical| . 2004248) (|parabolic| . 2003998)
 (|parabolicCylindrical| . 2003748) (|paraboloidal| . 2003498)
 (|ellipticCylindrical| . 2003223) (|prolateSpheroidal| . 2002948)
 (|oblateSpheroidal| . 2002673) (|bipolar| . 2002398)
 (|bipolarCylindrical| . 2002123) (|toroidal| . 2001848) (|conical| . 2001570)
 (|modTree| . 2001436) (|multiEuclideanTree| . 2001302)
 (|complexZeros| . 2000509) (|divisorCascade| . 1999795) (|graeffe| . 1999586)
 (|pleskenSplit| . 1999048) (|reciprocalPolynomial| . 1998839)
 (|rootRadius| . 1998420) (|schwerpunkt| . 1998185) (|setErrorBound| . 1997976)
 (|startPolynomial| . 1997665) (|cycleElt| . 1997509)
 (|computeCycleLength| . 1997316) (|computeCycleEntry| . 1997166)
 (|addCube| . 1997013) (|cubicalComplex| . 1996268) (|coerceP| . 1996039)
 (|powerSum| . 1995872) (|elementary| . 1995705) (|alternating| . 1995538)
 (|cyclic| . 1995371) (|dihedral| . 1995204) (|cap| . 1995021)
 (|cup| . 1994886) (|wreath| . 1994751) (|SFunction| . 1994575)
 (|skewSFunction| . 1994396) (|cyclotomicDecomposition| . 1994214)
 (|cyclotomicFactorization| . 1994028) (|doubleResultant| . 1993682)
 (|distdfact| . 1993119) (|separateDegrees| . 1992772) (|exptMod| . 1992536)
 (|trace2PowMod| . 1992300) (|tracePowMod| . 1992064)
 (|irreducible?| . 1991852) (|decimal| . 1991743) (|innerint| . 1990764)
 (|faceMap| . 1990567) (|triangle| . 1990420) (|deltaComplex| . 1989707)
 (|circle| . 1989558) (|dequeue| . 1989434) (|exteriorDifferential| . 1989271)
 (|totalDifferential| . 1989067) (|homogeneous?| . 1988723)
 (|leadingBasisTerm| . 1988435) (|log_plus_1| . 1988321) (|ignore?| . 1987770)
 (|computeInt| . 1987218) (|checkForZero| . 1986065)
 (|doubleFloatFormat| . 1985984) (|qsqrt| . 1985936) (|qlog| . 1985888)
 (|hypergeometric0F1| . 1985650) (|directedGraph| . 1983701)
 (|rotatez| . 1983530) (|rotatey| . 1983359) (|rotatex| . 1983188)
 (|exponentb| . 1982995) (|exponenta| . 1982802) (|expb| . 1982597)
 (|expa| . 1982391) (|dictionary| . 1982160) (|dioSolve| . 1981609)
 (|additive?| . 1981447) (|multiplicative?| . 1981285) (|zeta| . 1981200)
 (|newLine| . 1981119) (|copies| . 1980995) (|say| . 1980752)
 (|sayLength| . 1980503) (|subordinationConvolution| . 1980385)
 (|orthogonalConvolution| . 1980267) (|monotoneConvolution| . 1980149)
 (|booleanConvolution| . 1980031) (|freeConvolution| . 1979913)
 (|classicalConvolution| . 1979795) (|orthogonalPolynomials| . 1979291)
 (|jacobiParameters| . 1978665) (|monotoneCumulants| . 1978449)
 (|hankelDeterminants| . 1978304) (|booleanCumulants| . 1978157)
 (|freeCumulants| . 1978010) (|classicalCumulants| . 1977863)
 (|moments| . 1977716) (|booleanCumulant| . 1977555) (|freeCumulant| . 1977394)
 (|classicalCumulant| . 1977233) (|moment| . 1977069)
 (|gaussianDistribution| . 1976914) (|poissonDistribution| . 1976759)
 (|wignerDistribution| . 1976604) (|freePoissonDistribution| . 1976449)
 (|bernoulliDistribution01| . 1976294) (|arcsineDistribution| . 1976077)
 (|freeMultiplicativeConvolution| . 1975907)
 (|distributionByMonotoneCumulants| . 1975499)
 (|booleanCumulantFromJacobi| . 1975321)
 (|distributionByJacobiParameters| . 1975045)
 (|distributionByBooleanCumulants| . 1974775)
 (|distributionByFreeCumulants| . 1974505)
 (|distributionByClassicalCumulants| . 1974235)
 (|distributionByEvenMoments| . 1973965) (|distributionByMoments| . 1973695)
 (|mapall| . 1973409) (|R1_to_R2_coercion| . 1973246) (|setnext!| . 1973092)
 (|setprevious!| . 1972938) (|next| . 1972833) (|previous| . 1972728)
 (|datalist| . 1972604) (|shanksDiscLogAlgorithm| . 1972302)
 (|separant| . 1972032) (|leader| . 1971762) (|isobaric?| . 1971457)
 (|weights| . 1970806) (|differentialVariables| . 1970501)
 (|extractBottom!| . 1970408) (|extractTop!| . 1970315)
 (|insertBottom!| . 1970219) (|insertTop!| . 1970123) (|recolor| . 1969765)
 (|makeObject| . 1962777) (|drawComplex| . 1962458)
 (|drawComplexVectorField| . 1962170) (|setRealSteps| . 1962088)
 (|setImagSteps| . 1962006) (|setClipValue| . 1961918) (|draw| . 1952492)
 (|option?| . 1952332) (|range| . 1952101) (|colorFunction| . 1951652)
 (|curveColor| . 1951494) (|pointColor| . 1951336) (|clip| . 1949600)
 (|clipBoolean| . 1949457) (|style| . 1949237) (|toScale| . 1949015)
 (|pointColorPalette| . 1948872) (|curveColorPalette| . 1948729)
 (|var1Steps| . 1948482) (|var2Steps| . 1948235) (|space| . 1947921)
 (|tubePoints| . 1947674) (|tubeRadius| . 1947456)
 (|JContinuedFraction| . 1946612) (|makeVariable| . 1945741) (|Nul| . 1945646)
 (|exponents| . 1945553) (|iisqrt2| . 1945344) (|iisqrt3| . 1945135)
 (|iiexp| . 1944923) (|iilog| . 1944711) (|iisin| . 1944499)
 (|iicos| . 1944287) (|iitan| . 1944075) (|iicot| . 1943863)
 (|iisec| . 1943651) (|iicsc| . 1943439) (|iiasin| . 1943227)
 (|iiacos| . 1943015) (|iiatan| . 1942803) (|iiacot| . 1942591)
 (|iiasec| . 1942379) (|iiacsc| . 1942167) (|iisinh| . 1941955)
 (|iicosh| . 1941743) (|iitanh| . 1941531) (|iicoth| . 1941319)
 (|iisech| . 1941107) (|iicsch| . 1940895) (|iiasinh| . 1940683)
 (|iiacosh| . 1940471) (|iiatanh| . 1940259) (|iiacoth| . 1940047)
 (|iiasech| . 1939835) (|iiacsch| . 1939623) (|specialTrigs| . 1939323)
 (|localReal?| . 1939083) (|poly_factor| . 1938610) (|do_quo| . 1938063)
 (|rischNormalize| . 1935845) (|realLiouvillian| . 1934845)
 (|realElementary| . 1933845) (|validExponential| . 1933292)
 (|rootNormalize| . 1932755) (|rmap| . 1932203) (|tanQ| . 1931655)
 (|irootDep| . 1930952) (|select!| . 1930590) (|delete!| . 1930277)
 (|sncndn| . 1930010) (|lin_sol| . 1929752) (|ellipticRC| . 1929512)
 (|ellipticRD| . 1929266) (|ellipticRF| . 1929020) (|ellipticRJ| . 1928768)
 (|unit?| . 1928683) (|associates?| . 1928595) (|unitCanonical| . 1928546)
 (|unitNormal| . 1928358) (|factorAndSplit| . 1928190) (|rightOne| . 1928065)
 (|leftOne| . 1927940) (|rightZero| . 1927815) (|leftZero| . 1927690)
 (|swap| . 1927366) (|error| . 1926849) (|minPoly| . 1926344)
 (|operators| . 1926232) (|tower| . 1925990) (|kernels| . 1925748)
 (|mainKernel| . 1925643) (|distribute| . 1925534) (|multiEuclidean| . 1925428)
 (|extendedEuclidean| . 1925095) (|euclideanSize| . 1924987)
 (|sizeLess?| . 1924894) (|getSimplifyDenomsFlag| . 1924734)
 (|setSimplifyDenomsFlag| . 1924571) (|number?| . 1924408)
 (|replaceDiffs| . 1923853) (|constantToUnaryFunction| . 1923684)
 (|tubePlot| . 1922256) (|exponentialOrder| . 1922010) (|getMult| . 1921922)
 (|completeEval| . 1921487) (|lowerPolynomial| . 1921121)
 (|raisePolynomial| . 1920755) (|normalDeriv| . 1920408) (|ran| . 1920121)
 (|to_UP| . 1919938) (|subst_var| . 1919837) (|binomThmExpt| . 1919550)
 (|fmecg| . 1919324) (|pomopo!| . 1919125) (|mapExponents| . 1918891)
 (|linearAssociatedLog| . 1918488) (|linearAssociatedOrder| . 1918288)
 (|linearAssociatedExp| . 1918078) (|createNormalElement| . 1917938)
 (|setLabelValue| . 1917848) (|getCode| . 1917756) (|printCode| . 1917677)
 (|code| . 1915051) (|operation| . 1914314) (|common| . 1914185)
 (|printStatement| . 1914082) (|save| . 1914037) (|stop| . 1913992)
 (|block| . 1913888) (|cond| . 1913715) (|returns| . 1913019)
 (|call| . 1912938) (|comment| . 1912767) (|continue| . 1912677)
 (|gotoJump| . 1912587) (|repeatUntilLoop| . 1912501) (|whileLoop| . 1912415)
 (|forLoop| . 1912108) (|sin?| . 1911976) (|zeroVector| . 1911793)
 (|zeroSquareMatrix| . 1911610) (|identitySquareMatrix| . 1911427)
 (|fort_clean_lines| . 1911323) (|do_with_error_env3| . 1911126)
 (|do_with_error_env2| . 1910929) (|do_with_error_env1| . 1910770)
 (|expression2Fortran1| . 1910555) (|statement2Fortran| . 1910420)
 (|expression2Fortran| . 1910285) (|getStatement| . 1910112)
 (|changeExprLength| . 1909991) (|displayLines| . 1909862)
 (|dispStatement| . 1909738) (|fortFormatHead| . 1909479)
 (|fortFormatTypeLines| . 1909320) (|fort_format_types| . 1909157)
 (|indentFortLevel| . 1909036) (|checkType| . 1908948)
 (|newFortranTempVar| . 1908863) (|clear_used_intrinsics| . 1908782)
 (|get_used_intrinsics| . 1908681) (|get_fort_indent| . 1908595)
 (|refinementSolve| . 1908296) (|refinementGroebner| . 1908019)
 (|refinementEquations| . 1907742) (|refinementTransformations| . 1907440)
 (|refine!| . 1907128) (|setRefined!| . 1906941) (|invertMIN| . 1906803)
 (|multiplyMIN| . 1906662) (|addMIN| . 1906521) (|rightMinimization| . 1906331)
 (|leftMinimization| . 1906141) (|normalALS| . 1906003)
 (|extendedALS| . 1905865) (|refineUR!| . 1905542)
 (|factorizationSolve| . 1905280) (|factorizationGroebner| . 1905040)
 (|factorizationEquations| . 1904800)
 (|factorizationTransformations| . 1904498) (|factorize| . 1904249)
 (|rightFactor| . 1904062) (|leftFactor| . 1903875) (|ratexpr| . 1903699)
 (|ratexprInverse| . 1903492) (|rightFamily| . 1903307)
 (|leftFamily| . 1903122) (|summands| . 1902922) (|invertSTD| . 1902784)
 (|invertALS| . 1902646) (|multiplyALS| . 1902505) (|addALS| . 1902364)
 (|scaleALS| . 1902223) (|rowSpan| . 1902007) (|columnSpan| . 1901791)
 (|solutionVector| . 1901334) (|normalize!| . 1901196)
 (|normalizeDIAG!| . 1901058) (|normalizePLS!| . 1900920)
 (|normalizeRHS!| . 1900782) (|transformationMatrix| . 1900607)
 (|representation| . 1900393) (|linearization| . 1899988)
 (|admissibleLinearSystem| . 1899812) (|refined?| . 1899639)
 (|blockStructure| . 1899444) (|addColumnsRows!| . 1899251)
 (|addRowsColumns!| . 1899058) (|swapRowsColumns!| . 1898868)
 (|pencil| . 1898669) (|appendSupport!| . 1898471) (|polynomial?| . 1898298)
 (|regular?| . 1898125) (|scalar?| . 1897736) (|qregular?| . 1897518)
 (|mutable?| . 1897345) (|minimal?| . 1897172)
 (|toggleAlternativeOutput| . 1897034) (|disableAlternativeOutput| . 1896896)
 (|enableAlternativeOutput| . 1896758) (|toggleDebugOutput| . 1896620)
 (|disableDebugOutput| . 1896482) (|enableDebugOutput| . 1896344)
 (|lSpaceBasis| . 1896007) (|finiteBasis| . 1895670) (|principal?| . 1895325)
 (|divisor| . 1893352) (|weierstrassHalfPeriods| . 1893183)
 (|weierstrassInvariants| . 1893014) (|modularInvariantJ| . 1892902)
 (|landen1| . 1892597) (|landen2| . 1892260) (|landen| . 1891929)
 (|kprod| . 1891630) (|sn2| . 1891325) (|useNagFunctions| . 1890856)
 (|rationalPoints| . 1890151) (|nonSingularModel| . 1889361)
 (|algSplitSimple| . 1888904) (|hyperelliptic| . 1888324)
 (|elliptic| . 1887471) (|integralDerivationMatrix| . 1887088)
 (|integralRepresents| . 1886781) (|integralCoordinates| . 1886439)
 (|yCoordinates| . 1886097) (|inverseIntegralMatrixAtInfinity| . 1885783)
 (|integralMatrixAtInfinity| . 1885469) (|inverseIntegralMatrix| . 1885155)
 (|integralMatrix| . 1884841) (|reduceBasisAtInfinity| . 1884537)
 (|normalizeAtInfinity| . 1884233) (|complementaryBasis| . 1883929)
 (|integral?| . 1883021) (|special_order| . 1882681)
 (|integralAtInfinity?| . 1882379) (|integralBasisAtInfinity| . 1882078)
 (|ramified?| . 1881476) (|ramifiedAtInfinity?| . 1881177)
 (|singular?| . 1880575) (|singularAtInfinity?| . 1880276)
 (|branchPoint?| . 1879674) (|branchPointAtInfinity?| . 1879375)
 (|rationalPoint?| . 1878705) (|absolutelyIrreducible?| . 1878047)
 (|genus| . 1877367) (|getZechTable| . 1876682) (|createZechTable| . 1876448)
 (|createMultiplicationTable| . 1876080)
 (|createMultiplicationMatrix| . 1875787)
 (|createLowComplexityTable| . 1875478)
 (|createLowComplexityNormalBasis| . 1875025) (|fffg| . 1873939)
 (|generalCoefficient| . 1873503) (|ShiftAction| . 1873256)
 (|ShiftC| . 1872980) (|DiffAction| . 1872733) (|DiffC| . 1872457)
 (|qShiftAction| . 1872207) (|qShiftC| . 1871928) (|genVectorStream| . 1871615)
 (|genVectorStream2| . 1871302) (|generalInterpolation| . 1869449)
 (|representationType| . 1869314) (|createPrimitiveElement| . 1869259)
 (|tableForDiscreteLogarithm| . 1869089) (|factorsOfCyclicGroupSize| . 1868847)
 (|sizeMultiplication| . 1867720) (|getMultiplicationMatrix| . 1866908)
 (|getMultiplicationTable| . 1865918) (|primitive?| . 1865616)
 (|numberOfIrreduciblePoly| . 1865448) (|numberOfPrimitivePoly| . 1865280)
 (|numberOfNormalPoly| . 1865112) (|createIrreduciblePoly| . 1864887)
 (|createPrimitivePoly| . 1864662) (|createNormalPoly| . 1864437)
 (|createNormalPrimitivePoly| . 1864212)
 (|createPrimitiveNormalPoly| . 1863987) (|lexSmaller?| . 1863774)
 (|clexSmaller?| . 1863561) (|nlexSmaller?| . 1863348)
 (|cnlexSmaller?| . 1863135) (|nextIrreduciblePoly| . 1862951)
 (|nextPrimitivePoly| . 1862767) (|nextNormalPoly| . 1862583)
 (|nextNormalPrimitivePoly| . 1862399) (|nextPrimitiveNormalPoly| . 1862215)
 (|leastAffineMultiple| . 1862033) (|reducedQPowers| . 1861775)
 (|rootOfIrreduciblePoly| . 1861175) (|mapContra| . 1860950)
 (|looseEquals| . 1860817) (|diagramHeight| . 1860676)
 (|diagramWidth| . 1860535) (|deepDiagramSvg| . 1860340)
 (|diagramsSvg| . 1860117) (|diagramSvg| . 1859922) (|subdiagramSvg| . 1859708)
 (|isFunctional?| . 1859578) (|distanceMatrix| . 1859437)
 (|laplacianMatrix| . 1859296) (|adjacencyMatrix| . 1859144)
 (|incidenceMatrix| . 1859003) (|isAcyclic?| . 1858873)
 (|loopsArrows| . 1858737) (|loopsAtNode| . 1858552) (|loopsNodes| . 1858416)
 (|spanningForestNode| . 1858268) (|spanningTreeNode| . 1858080)
 (|spanningForestArrow| . 1857932) (|spanningTreeArrow| . 1857744)
 (|routeArrows| . 1857542) (|routeNodes| . 1857340) (|arrowsToArrow| . 1857141)
 (|arrowsFromArrow| . 1856942) (|nodeToArrow| . 1856743)
 (|nodeFromArrow| . 1856544) (|arrowsToNode| . 1856345)
 (|arrowsFromNode| . 1856146) (|nodeToNode| . 1855947)
 (|nodeFromNode| . 1855748) (|outDegree| . 1855604) (|inDegree| . 1855460)
 (|getArrowIndex| . 1855313) (|arrowName| . 1855132) (|isFixPoint?| . 1854953)
 (|isGreaterThan?| . 1854771) (|isDirectSuccessor?| . 1854589)
 (|kgraph| . 1854429) (|cycleClosed| . 1854269) (|cycleOpen| . 1854109)
 (|terminal| . 1854014) (|initial| . 1853654) (|getArrows| . 1853060)
 (|getVertexIndex| . 1852916) (|getVertices| . 1852590) (|flush| . 1852418)
 (|write!| . 1852275) (|read!| . 1852135) (|iomode| . 1851961)
 (|reopen!| . 1851791) (|open| . 1851483) (|rightUnit| . 1851317)
 (|leftUnit| . 1851151) (|rightMinimalPolynomial| . 1850924)
 (|leftMinimalPolynomial| . 1850697) (|associatorDependence| . 1850251)
 (|lieAlgebra?| . 1849885) (|jordanAlgebra?| . 1849519)
 (|noncommutativeJordanAlgebra?| . 1849153) (|jordanAdmissible?| . 1848787)
 (|lieAdmissible?| . 1848421) (|jacobiIdentity?| . 1848055)
 (|powerAssociative?| . 1847904) (|alternative?| . 1847538)
 (|flexible?| . 1847172) (|rightAlternative?| . 1846806)
 (|leftAlternative?| . 1846440) (|antiAssociative?| . 1846074)
 (|associative?| . 1845708) (|antiCommutative?| . 1845342)
 (|commutative?| . 1844976) (|rightCharacteristicPolynomial| . 1844793)
 (|leftCharacteristicPolynomial| . 1844610) (|rightNorm| . 1844484)
 (|leftNorm| . 1844358) (|rightTrace| . 1844232) (|leftTrace| . 1844106)
 (|someBasis| . 1843953) (|finiteLattice| . 1843633) (|LiePoly| . 1843447)
 (|quickSort| . 1843154) (|heapSort| . 1842861) (|shellSort| . 1842568)
 (|gamma| . 1842457) (|outputSpacing| . 1842336) (|outputGeneral| . 1842147)
 (|outputFixed| . 1841958) (|outputFloating| . 1841769) (|exp1| . 1841688)
 (|log10| . 1841364) (|log2| . 1841240) (|rationalApproximation| . 1840654)
 (|relerror| . 1840609) (|complexSolve| . 1839369) (|complexRoots| . 1838810)
 (|realRoots| . 1838306) (|support| . 1838102) (|moebiusFunction| . 1837931)
 (|overlap| . 1837651) (|hcrf| . 1837556) (|hclf| . 1837461)
 (|fraction| . 1837222) (|numberOfPrimes| . 1836915) (|altsupersub| . 1836689)
 (|theMap| . 1836517) (|naryPlus| . 1835975) (|nary| . 1835439)
 (|precedence| . 1834966) (|formatConstant| . 1834462) (|nothing| . 1834064)
 (|parenthesizeIf| . 1833753) (|parenthesize| . 1833619)
 (|formatFunctionSymbol| . 1833316) (|formatSymbol| . 1833013)
 (|formatString| . 1832710) (|formatFloat| . 1832407)
 (|formatInteger| . 1832102) (|formatExpression| . 1830916)
 (|maxPrecedence| . 1830691) (|minPrecedence| . 1830466)
 (|defaultEpilogue| . 1830338) (|defaultPrologue| . 1830210)
 (|environment| . 1829828) (|writable?| . 1829737) (|readable?| . 1829646)
 (|exists?| . 1829555) (|extension| . 1829465) (|directory| . 1829375)
 (|filename| . 1829279) (|functionGraph| . 1827845) (|shallowExpand| . 1827604)
 (|deepExpand| . 1827363) (|clearFortranOutputStack| . 1827252)
 (|showFortranOutputStack| . 1827141) (|popFortranOutputStack| . 1827049)
 (|pushFortranOutputStack| . 1826791) (|topFortranOutputStack| . 1826690)
 (|formatStep| . 1826517) (|operatorHandlers| . 1826052)
 (|setDefault!| . 1825688) (|format| . 1825421) (|fracPart| . 1825029)
 (|polyPart| . 1824822) (|fullPartialFraction| . 1824576)
 (|primeFrobenius| . 1824391) (|discreteLog| . 1824153)
 (|decreasePrecision| . 1823968) (|increasePrecision| . 1823783)
 (|bits| . 1823398) (|mergeFactors| . 1823302) (|unitNormalize| . 1823209)
 (|unit| . 1822706) (|flagFactor| . 1822499) (|sqfrFactor| . 1822357)
 (|primeFactor| . 1822215) (|irreducibleFactor| . 1822073)
 (|factors| . 1821242) (|nilFactor| . 1821100) (|map_preserving| . 1820835)
 (|factorFraction| . 1820628) (|regularRepresentation| . 1820003)
 (|traceMatrix| . 1819294) (|randomLC| . 1818904) (|minimize| . 1818436)
 (|module| . 1817671) (|represents| . 1816765)
 (|rightRegularRepresentation| . 1816419)
 (|leftRegularRepresentation| . 1816073) (|rightTraceMatrix| . 1815524)
 (|leftTraceMatrix| . 1814975) (|rightDiscriminant| . 1814516)
 (|leftDiscriminant| . 1814057) (|algtower| . 1813659) (|isMult| . 1813412)
 (|applyQuote| . 1812702) (|exprToXXP| . 1811832) (|exprToUPS| . 1808095)
 (|exprToGenUPS| . 1804358) (|exprToPS| . 1796862) (|localAbs| . 1795045)
 (|atan1| . 1793741) (|integ| . 1792437) (|integt| . 1791133)
 (|integ_df| . 1789826) (|powToUPS| . 1787260) (|my_digamma| . 1785956)
 (|universe| . 1785821) (|cardinality| . 1785666)
 (|internalIntegrate0| . 1785014) (|makeCos| . 1784740) (|makeSin| . 1784466)
 (|logGamma| . 1784035) (|li2| . 1783924) (|rabs| . 1783213)
 (|lambert_via_newton1| . 1782705) (|lambert_via_newton2| . 1782197)
 (|lambert_inverse_series| . 1781766) (|iiGamma| . 1781576) (|iiabs| . 1781386)
 (|iiconjugate| . 1781196) (|iiBeta| . 1780978) (|iidigamma| . 1780788)
 (|iipolygamma| . 1780570) (|iiBesselJ| . 1780352) (|iiBesselY| . 1780134)
 (|iiBesselI| . 1779916) (|iiBesselK| . 1779698) (|iiAiryAi| . 1779508)
 (|iiAiryAiPrime| . 1779318) (|iiAiryBi| . 1779128) (|iiAiryBiPrime| . 1778938)
 (|iAiryAi| . 1778748) (|iAiryAiPrime| . 1778558) (|iAiryBi| . 1778368)
 (|iAiryBiPrime| . 1778178) (|iiHypergeometricF| . 1777960)
 (|iiPolylog| . 1777767) (|iLambertW| . 1777577) (|bringDown| . 1776908)
 (|newReduc| . 1776593) (|logical?| . 1776503) (|character?| . 1776413)
 (|doubleComplex?| . 1776323) (|complex?| . 1776233) (|double?| . 1776143)
 (|fortranCharacter| . 1776098) (|fortranDoubleComplex| . 1776053)
 (|fortranComplex| . 1776008) (|fortranLogical| . 1775963)
 (|fortranInteger| . 1775918) (|fortranDouble| . 1775873)
 (|fortranReal| . 1775828) (|external?| . 1775746) (|dimensionsOf| . 1775631)
 (|scalarTypeOf| . 1775474) (|fortranCarriageReturn| . 1775394)
 (|fortranLiteral| . 1775275) (|fortranLiteralLine| . 1775156)
 (|processTemplate| . 1774977) (|makeFR| . 1774145) (|musserTrials| . 1773786)
 (|stopMusserTrials| . 1773427) (|numberOfFactors| . 1772995)
 (|modularFactor| . 1772663) (|useSingleFactorBound?| . 1772499)
 (|useSingleFactorBound| . 1772332) (|useEisensteinCriterion?| . 1772168)
 (|useEisensteinCriterion| . 1772001) (|eisensteinIrreducible?| . 1771834)
 (|tryFunctionalDecomposition?| . 1771670)
 (|tryFunctionalDecomposition| . 1771503) (|henselFact| . 1770968)
 (|btwFact| . 1770327) (|beauzamyBound| . 1769883) (|bombieriNorm| . 1769014)
 (|rootBound| . 1768570) (|singleFactorBound| . 1767635)
 (|quadraticNorm| . 1767219) (|infinityNorm| . 1766803)
 (|scaleRoots| . 1766624) (|shiftRoots| . 1766445)
 (|degreePartition| . 1765865) (|factorOfDegree| . 1764358)
 (|factorsOfDegree| . 1764076) (|pascalTriangle| . 1763904)
 (|rangePascalTriangle| . 1763627) (|sizePascalTriangle| . 1763489)
 (|fillPascalTriangle| . 1763365) (|safeCeiling| . 1763193)
 (|safeFloor| . 1763021) (|safetyMargin| . 1762646) (|sumSquares| . 1762501)
 (|euclideanNormalForm| . 1762182) (|euclideanGroebner| . 1761175)
 (|factorGroebnerBasis| . 1760246) (|groebnerFactorize| . 1758384)
 (|credPol| . 1758022) (|gbasis| . 1757629) (|gbasisExtend| . 1757233)
 (|critT| . 1756715) (|critM| . 1756353) (|critB| . 1755985)
 (|critBonD| . 1755465) (|critMTonD1| . 1754948) (|critMonD1| . 1754428)
 (|redPo| . 1754000) (|updatF| . 1753496) (|updatD| . 1752976)
 (|minGbasis| . 1752617) (|lepol| . 1752258) (|prinshINFO| . 1751909)
 (|prindINFO| . 1751336) (|fprindINFO| . 1750760) (|prinpolINFO| . 1750376)
 (|prinb| . 1749999) (|critpOrder| . 1749478) (|makeCrit| . 1748842)
 (|gcdBasis| . 1748491) (|gcdDecomposition| . 1747921)
 (|conditionsForIdempotents| . 1746550) (|genericRightDiscriminant| . 1746204)
 (|genericRightTraceForm| . 1745852) (|genericLeftDiscriminant| . 1745506)
 (|genericLeftTraceForm| . 1745154) (|genericRightNorm| . 1744805)
 (|genericRightTrace| . 1744456) (|genericRightMinimalPolynomial| . 1744081)
 (|rightRankPolynomial| . 1743241) (|genericLeftNorm| . 1742892)
 (|genericLeftTrace| . 1742543) (|genericLeftMinimalPolynomial| . 1742168)
 (|leftRankPolynomial| . 1741328) (|generic| . 1739464)
 (|rightUnits| . 1738743) (|leftUnits| . 1738022) (|gnuDraw| . 1736720)
 (|compBound| . 1736468) (|tablePow| . 1736180) (|solveid| . 1735934)
 (|testModulus| . 1735700) (|generalizedMoebiusFunction| . 1735440)
 (|canonicalMoebiusFunction| . 1735220) (|moebiusMatrix| . 1734818)
 (|removeZeros| . 1734571) (|infsum| . 1734257) (|HenselLift| . 1733922)
 (|completeHensel| . 1733665) (|multMonom| . 1733080) (|build| . 1732495)
 (|leadingIndex| . 1731916) (|leadingExponent| . 1731337) (|option| . 1730828)
 (|checkOptions| . 1730689) (|displayKind| . 1730469) (|indexName| . 1730249)
 (|variableName| . 1730029) (|functionNames| . 1729782)
 (|functionName| . 1729562) (|one| . 1729340) (|checkExtraValues| . 1729118)
 (|safety| . 1728865) (|allDegrees| . 1728643) (|maxMixedDegree| . 1728390)
 (|maxDegree| . 1728086) (|maxLevel| . 1727782) (|Somos| . 1727484)
 (|homogeneous| . 1727186) (|maxPower| . 1726888) (|maxSubst| . 1726590)
 (|maxShift| . 1726286) (|maxDerivative| . 1725982) (|GospersMethod| . 1725394)
 (|primitiveMonomials| . 1725088) (|totalDegreeSorted| . 1724764)
 (|totalDegree| . 1724156) (|monomials| . 1723686) (|nextSubsetGray| . 1723537)
 (|firstSubsetGray| . 1723384) (|clipPointsDefault| . 1723211)
 (|drawToScale| . 1723038) (|adaptive| . 1722645) (|putColorInfo| . 1722483)
 (|appendPoint| . 1722351) (|component| . 1721790) (|ranges| . 1721297)
 (|pointLists| . 1721175) (|makeGraphImage| . 1720560)
 (|sendGraphImage| . 1720482) (|graphImage| . 1720438) (|groebSolve| . 1719997)
 (|testDim| . 1719660) (|genericPosition| . 1719121)
 (|toPermutationIfCan| . 1718636) (|directProduct| . 1718443)
 (|refactor| . 1718389) (|groupPresentation| . 1718052) (F2EXPRR . 1717595)
 (EXPRR2F . 1717131) (|iim2| . 1716975) (|iiretractVar| . 1716767)
 (|guess| . 1705318) (|guessExpRat| . 1695435) (|guessBinRat| . 1685552)
 (|guessAlgDep| . 1681067) (|guessFE| . 1676690) (|guessAlg| . 1672313)
 (|guessPade| . 1667936) (|algDepHP| . 1649279) (|substHP| . 1631274)
 (|shiftHP| . 1594217) (|diffHP| . 1557160) (|guessRec| . 1549487)
 (|guessPRec| . 1541814) (|guessRat| . 1534141) (|guessADE| . 1526468)
 (|guessHolo| . 1518795) (|HankelMatrix| . 1518642) (|update!| . 1518551)
 (|lfunc| . 1518466) (|inHallBasis?| . 1518340) (|reorder| . 1517576)
 (|heap| . 1517456) (|gcdprim| . 1517304) (|gcdcofact| . 1517145)
 (|gcdcofactprim| . 1516986) (|lintgcd| . 1516799) (|hex| . 1516686)
 (|members| . 1516129) (|parts| . 1515680) (|count| . 1515218)
 (|every?| . 1514988) (|any?| . 1514758) (|map!| . 1514290)
 (|dispGenerators| . 1514208) (|homologyzc2| . 1514166)
 (|homologyc2| . 1514124) (|homologyzz| . 1514082) (|homologyz| . 1514040)
 (|homology0| . 1513998) (|homologyGroup| . 1513903) (|antipode| . 1513762)
 (|exprex| . 1513642) (|factorList| . 1512933) (|listConjugateBases| . 1512308)
 (|matrixGcd| . 1511846) (|divideIfCan!| . 1511392) (|leastPower| . 1510963)
 (|idealiser| . 1510122) (|idealiserMatrix| . 1509702) (|moduleSum| . 1509191)
 (|mapUnivariate| . 1508455) (|mapUnivariateIfCan| . 1508077)
 (|mapMatrixIfCan| . 1507655) (|mapBivariate| . 1507216)
 (|fullDisplay| . 1506302) (|relationsIdeal| . 1505803) (|saturate| . 1505254)
 (|groebner?| . 1504969) (|groebnerIdeal| . 1504677) (|ideal| . 1503663)
 (|leadingIdeal| . 1503406) (|backOldPos| . 1502964)
 (|generalPosition| . 1502459) (|quotient| . 1501707) (|zeroDim?| . 1501101)
 (|inRadical?| . 1500813) (|in?| . 1500525) (|element?| . 1500237)
 (|zeroDimPrime?| . 1499578) (|zeroDimPrimary?| . 1498919)
 (|radical| . 1498288) (|primaryDecomp| . 1497108)
 (|numberOfMonomials| . 1496906) (|eigenvector| . 1496255)
 (|generalizedEigenvector| . 1494422) (|eigenvalues| . 1493357)
 (|eigenvectors| . 1491383) (|generalizedEigenvectors| . 1489580)
 (|removeRepeats!| . 1489363) (|shrinkable| . 1489076)
 (|physicalLength!| . 1488792) (|physicalLength| . 1488483)
 (|flexibleArray| . 1488196) (|parseILTerm| . 1487928) (|parseIL2| . 1487660)
 (|parseIL| . 1487584) (|proposition| . 1487508)
 (|generalizedInverse| . 1487187) (|row_operation_base| . 1486826)
 (|row_operation_modular| . 1486462) (|do_modular_solve| . 1485839)
 (|do_poly_integer| . 1484742) (|merge_exponents| . 1484487)
 (|merge2| . 1484070) (|setFieldInfo| . 1483769) (|pol| . 1483555)
 (|xn| . 1483325) (|dAndcExp| . 1483075) (|repSq| . 1482869)
 (|expPot| . 1482665) (|qPot| . 1482470) (|lookup| . 1482183)
 (|normal?| . 1481607) (|normalElement| . 1481269)
 (|minimalPolynomial| . 1480609) (|incidenceAlgebra| . 1480190)
 (|increment| . 1480022) (|incrementBy| . 1479851) (|charpol| . 1479556)
 (|solve1| . 1479260) (|innerEigenvectors| . 1478647) (|compile| . 1478517)
 (|declare| . 1478390) (|parse| . 1478311) (|unparse| . 1478232)
 (|flatten| . 1478049) (|binary| . 1477439) (|packageCall| . 1477076)
 (|coerceToType| . 1476945) (|atType| . 1476814) (|pretendOfType| . 1476683)
 (|interpret| . 1476478) (|infiniteProduct| . 1476308)
 (|evenInfiniteProduct| . 1476138) (|oddInfiniteProduct| . 1475968)
 (|generalInfiniteProduct| . 1475764) (|innerSolve1| . 1475172)
 (|innerSolve| . 1474816) (|makeEq| . 1474462)
 (|modularGcdPrimitive| . 1474170) (|reduction| . 1473563)
 (|signAround| . 1472788) (|invmod| . 1472727) (|powmod| . 1472663)
 (|mulmod| . 1472599) (|submod| . 1472535) (|addmod| . 1472471)
 (|mask| . 1472413) (|dec| . 1472355) (|inc| . 1472297)
 (|symmetricRemainder| . 1472236) (|positiveRemainder| . 1472175)
 (|bit?| . 1472078) (|seedRandom| . 1472006) (|algint| . 1471421)
 (|algintegrate| . 1470713) (|palgintegrate| . 1470071) (|algextint| . 1467120)
 (|algextint_base| . 1465507) (|bitCoef| . 1465374) (|bitTruth| . 1465213)
 (|contains?| . 1464966) (|qinterval| . 1464754) (|interval| . 1463840)
 (|li_int| . 1462660) (|poly_int| . 1461480) (|solve_u| . 1460838)
 (|lfextendedint| . 1460195) (|lfintegrate| . 1459514)
 (|BasicMethod| . 1459351) (|PollardSmallFactor| . 1459221)
 (|palgint0| . 1457864) (|palgRDE0| . 1456513) (|rationalize_ir| . 1455916)
 (|palgLODE0| . 1454203) (|carmichaelLambda| . 1454095)
 (|chineseRemainder| . 1452971) (|divisors| . 1452826) (|eulerPhi| . 1452718)
 (|fibonacci| . 1452610) (|harmonic| . 1452461) (|jacobi| . 1452350)
 (|moebiusMu| . 1452074) (|numberOfDivisors| . 1451966)
 (|sumOfDivisors| . 1451858) (|sumOfKthPowerDivisors| . 1451708)
 (|HermiteIntegrate| . 1449828) (|unitPart| . 1449668) (|palgint| . 1449057)
 (|palgRDE| . 1448441) (|param_RDE| . 1447554) (|param_LODE| . 1446667)
 (|palgLODE| . 1445847) (|primextint| . 1445103) (|expextint| . 1444347)
 (|diffextint| . 1443762) (|unkextint| . 1443177) (|monologextint| . 1442255)
 (|polylog_int| . 1441519) (|extendedint| . 1438529) (|logextint| . 1436606)
 (|splitConstant| . 1436019) (|pmComplexintegrate| . 1435312)
 (|pmintegrate| . 1433924) (|infieldint| . 1433617) (|integerIfCan| . 1433468)
 (|internalIntegrate| . 1431767) (|infieldIntegrate| . 1431455)
 (|varselect| . 1431233) (|kmax| . 1431011) (|ksec| . 1430749)
 (|vark| . 1430492) (|removeConstantTerm| . 1430265) (|mkPrim| . 1429987)
 (|intPatternMatch| . 1429146) (|primintegrate| . 1428157)
 (|expintegrate| . 1427216) (|lambintegrate| . 1426478)
 (|monomialIntegrate| . 1426017) (|monomialIntPoly| . 1425729)
 (|inverseLaplace| . 1425132) (|leadingTerm| . 1424882)
 (|constructOrdered| . 1424623) (|leadingSupport| . 1424433)
 (|quadraticNonResidue| . 1424332) (|iprint| . 1424208) (|elem?| . 1424080)
 (|notelem| . 1423906) (|logpart| . 1423551) (|ratpart| . 1423458)
 (|mkAnswer| . 1423019) (|perfectNthPower?| . 1422833)
 (|perfectNthRoot| . 1422441) (|approxNthRoot| . 1422283)
 (|perfectSquare?| . 1422146) (|perfectSqrt| . 1422031)
 (|approxSqrt| . 1421922) (|generateIrredPoly| . 1421701)
 (|complexExpand| . 1420806) (|complexIntegrate| . 1419745)
 (|dimensionOfIrreducibleRepresentation| . 1419591)
 (|irreducibleRepresentation| . 1418998) (|checkRur| . 1418347)
 (|cAcsch| . 1418171) (|cAsech| . 1417995) (|cAcoth| . 1417819)
 (|cAtanh| . 1417643) (|cAcosh| . 1417467) (|cAsinh| . 1417291)
 (|cCsch| . 1417115) (|cSech| . 1416939) (|cCoth| . 1416763)
 (|cTanh| . 1416587) (|cCosh| . 1416411) (|cSinh| . 1416235)
 (|cAcsc| . 1416059) (|cAsec| . 1415883) (|cAcot| . 1415707)
 (|cAtan| . 1415531) (|cAcos| . 1415355) (|cAsin| . 1415179) (|cCsc| . 1415003)
 (|cSec| . 1414827) (|cCot| . 1414651) (|cTan| . 1414475) (|cCos| . 1414299)
 (|cSin| . 1414123) (|cLog| . 1413947) (|cExp| . 1413771)
 (|cRationalPower| . 1413573) (|cPower| . 1413394)
 (|seriesToOutputForm| . 1413011) (|iCompose| . 1412894)
 (|taylorQuoByVar| . 1412780) (|iExquo| . 1412623) (|getStream| . 1412429)
 (|getRef| . 1412244) (|makeSeries| . 1411976) (GF2FG . 1411424)
 (FG2F . 1410910) (F2FG . 1410396) (|explogs2trigs| . 1409844)
 (|do_liou| . 1409201) (|swap!| . 1408994) (|fill!| . 1408575)
 (|entry?| . 1408330) (|indices| . 1407989) (|index?| . 1407828)
 (|dimS| . 1407561) (|dimJ| . 1407294) (|Pr| . 1407132) (|Pm| . 1406967)
 (|integrateIfCan| . 1406851) (|derivativeOf?| . 1406729) (|weight| . 1405619)
 (|type| . 1405528) (|allRepeated| . 1405121) (|m2r| . 1404732)
 (|r2m| . 1404343) (|repeatedIndex| . 1404227) (|multiIndex| . 1404108)
 (|numerJP| . 1403898) (|autoReduce| . 1403741) (|reduceMod| . 1403581)
 (|simpMod| . 1402792) (|simpOne| . 1402670) (|dSubst| . 1402542)
 (|solveFor| . 1402411) (|sortLD| . 1402254) (|leadingDer| . 1402132)
 (|freeOf?| . 1401763) (|orderDim| . 1401508) (|formalDiff2| . 1400816)
 (|formalDiff| . 1400276) (|class| . 1399625) (|const?| . 1399475)
 (|jetVariables| . 1399325) (|numDepVar| . 1398841) (|numIndVar| . 1398357)
 (|getNotation| . 1397921) (|setNotation| . 1397412) (P . 1396094)
 (U . 1395656) (X . 1395218) (|ground| . 1394534) (|printSys| . 1394289)
 (|jacobiMatrix| . 1393592) (|makeSystem| . 1393378) (|setSimpMode| . 1392938)
 (|extractSymbol| . 1392502) (|analyseSymbol| . 1392035)
 (|prolongSymbol| . 1391803) (|prolongMV| . 1391410) (|project| . 1391182)
 (|contract| . 1389856) (|differentials| . 1389657) (|dP| . 1389385)
 (|dU| . 1389171) (|dX| . 1388957) (|d| . 1388617) (|setFormat!| . 1388366)
 (|setFormats!| . 1388098) (|eqRep?| . 1387896) (|ground?| . 1387143)
 (|prolong| . 1386223) (|lie| . 1385830) (|directions| . 1385632)
 (|diffP| . 1385361) (|diffU| . 1385148) (|diffX| . 1384935)
 (|search| . 1384797) (|keys| . 1384640) (|key?| . 1384480)
 (|symbolIfCan| . 1384353) (|kernel| . 1383790) (|argument| . 1383398)
 (|constantKernel| . 1383228) (|constantIfCan| . 1383049) (|kovacic| . 1382090)
 (|toStringConven| . 1381934) (|unbind| . 1381853) (|bind| . 1381772)
 (|subst| . 1381082) (|free?| . 1380964) (|getBoundValue| . 1380835)
 (|isFreeNode?| . 1380717) (|isBoundNode?| . 1380599) (|isLambda?| . 1380481)
 (|isCompound?| . 1380363) (|parseLambda| . 1380246) (|lambda| . 1379779)
 (|laplace| . 1379171) (|latticeJoinOfMeets| . 1378943)
 (|toStringUnwrapped| . 1378691) (|opType| . 1378439) (|deductions| . 1378120)
 (|meet| . 1377746) (|emptyLattice| . 1377644) (|latticeMeetOfJoins| . 1377416)
 (|logicF| . 1377276) (|logicT| . 1377136) (|trailingCoefficient| . 1376963)
 (|normalizeIfCan| . 1376508) (|polCase| . 1376130) (|distFact| . 1375202)
 (|identification| . 1374861) (|LyndonCoordinates| . 1374508)
 (|LyndonBasis| . 1374134) (|zeroDimensional?| . 1373512)
 (|fglmIfCan| . 1372941) (|lexTriangular| . 1372485)
 (|squareFreeLexTriangular| . 1371487) (|belong?| . 1369545)
 (|fresnelC| . 1368868) (|fresnelS| . 1368191) (|erfi| . 1367514)
 (|erf| . 1366837) (|dilog| . 1366366) (|li| . 1365689) (|Chi| . 1365012)
 (|Shi| . 1364335) (|Ci| . 1363658) (|Si| . 1362981) (|Ei| . 1362304)
 (|linGenPos| . 1361863) (|groebgen| . 1361424) (|totolex| . 1361113)
 (|minPol| . 1360388) (|computeBasis| . 1360149) (|coord| . 1359439)
 (|anticoord| . 1359106) (|intcompBasis| . 1358815) (|choosemon| . 1358527)
 (|close!| . 1358345) (|pack!| . 1358199) (|library| . 1358120)
 (|complexLimit| . 1356917) (|dehomogenize| . 1356203) (|lin_comb!| . 1355948)
 (|lin_comb| . 1354045) (|linearlyDependent?| . 1353816)
 (|linearDependence| . 1353587) (|solveLinear| . 1351799)
 (|reducedSystem| . 1350615) (|qnew| . 1349558) (|append!| . 1349397)
 (|equal?| . 1349186) (|qequal?| . 1348933) (|nelem| . 1348775)
 (|qzero?| . 1347475) (|qsemizero?| . 1347274) (|qdiagonal?| . 1347079)
 (|qdiagonal| . 1346884) (|uppertriangular?| . 1346695)
 (|quppertriangular?| . 1346500) (|qnilpotent?| . 1346305)
 (|qcolumnIndices| . 1345634) (|qrowIndices| . 1344963) (|subPencil| . 1344622)
 (|removeRowsColumns| . 1344252) (|insertRowsColumns| . 1343882)
 (|swapRows!| . 1343277) (|qswapRows!| . 1342925) (|addRows!| . 1342567)
 (|qaddRows!| . 1342209) (|qmultiplyRow!| . 1342045) (|multiplyRow!| . 1341693)
 (|qswapColumns!| . 1341341) (|swapColumns!| . 1340736)
 (|addColumns!| . 1340378) (|qaddColumns!| . 1340020)
 (|multiplyColumn!| . 1339668) (|qmultiplyColumn!| . 1339504)
 (|qscaleBlock!| . 1339328) (|transformRows!| . 1339007)
 (|transformColumns!| . 1338686) (|leftIdentity| . 1338537)
 (|rightIdentity| . 1338388) (|qsetelt!| . 1337589) (|setsubMatrix!| . 1337133)
 (|setsubPencil!| . 1336966) (|blockElimination| . 1336175)
 (|eliminationTransformations| . 1335284) (|eliminationEquations| . 1334453)
 (|eliminationGroebner| . 1334178) (|eliminationSolve| . 1332700)
 (|setDifference| . 1332579) (|setIntersection| . 1332458)
 (|setUnion| . 1332337) (|tails| . 1332214) (|append| . 1331975)
 (|match| . 1330664) (|splitList| . 1330385) (|topologicalSort!| . 1330203)
 (|topologicalSort| . 1329841) (|cartesianPower| . 1329629)
 (|minShift| . 1329470) (|csolve_pol| . 1329116) (|csolve_rf| . 1328749)
 (|csolve_rmat| . 1328380) (LLL . 1328277) (|extendedLLL!| . 1328125)
 (|extendedLLL| . 1327870) (|find_relation| . 1327685) (|substitute| . 1327571)
 (|duplicates?| . 1327435) (|mapGen| . 1326963) (|mapExpon| . 1326434)
 (|leftMult| . 1326263) (|rightMult| . 1326092) (|makeUnit| . 1325927)
 (|nthFactor| . 1325473) (|nthExpon| . 1324980) (|makeMulti| . 1324746)
 (|makeTerm| . 1324575) (|listOfMonoms| . 1324334) (|sort!| . 1323874)
 (|reverse!| . 1323434) (|copyInto!| . 1323217) (|sorted?| . 1322786)
 (|insert| . 1322307) (|delete| . 1322028) (|delta_deriv| . 1321756)
 (|symmetricSquare| . 1321602) (|factor1| . 1320967) (|testnp| . 1320119)
 (|testfn| . 1319060) (|testf2| . 1317636) (|testll| . 1316518)
 (|testlc| . 1315342) (|testln| . 1312402) (|testlw| . 1310853)
 (|testcp| . 1310054) (|testco| . 1309497) (|testcx| . 1308919)
 (|testpd| . 1308328) (|testfr| . 1305695) (|testsb| . 1304730)
 (|testro| . 1303936) (|testfo| . 1301303) (|testsc| . 1300585)
 (|testfg| . 1299810) (|testlp| . 1299124) (|testis| . 1298750)
 (|testgt| . 1298491) (|gen_exp| . 1297182) (|ge_minimal| . 1294795)
 (|symmetricProduct| . 1294401) (|symmetricPower| . 1293915)
 (|directSum| . 1293521) (|false| . 1293480) (|true| . 1293439)
 (|entries| . 1293179) (|loop| . 1293075) (|lcmCoef| . 1292885)
 (|solveLinearPolynomialEquationByFractions| . 1292617) (|list| . 1292527)
 (|hasSolution?| . 1291846) (|linSolve| . 1291267) (|intoMatrix| . 1290761)
 (|LUDecomp| . 1290436) (|LUSolve| . 1290226) (|LUInverse| . 1289963)
 (|LyndonWordsList| . 1289741) (|LyndonWordsList1| . 1289495)
 (|lyndonIfCan| . 1289357) (|lyndon| . 1289225) (|lyndon?| . 1289065)
 (|lexico| . 1288649) (|numberOfComputedEntries| . 1288507) (|rst| . 1288404)
 (|frst| . 1288301) (|lazyEvaluate| . 1288198) (|lazy?| . 1288067)
 (|explicitlyEmpty?| . 1287936) (|explicitEntries?| . 1287805)
 (|matrixDimensions| . 1287637) (|matrixConcat3D| . 1287493) (|plus| . 1287352)
 (|identityMatrix| . 1287168) (|zeroMatrix| . 1286584)
 (|algebraicGcd| . 1285689) (|pseudoRem| . 1285503)
 (|canonicalIfCan| . 1285318) (|pack_modulus| . 1285032) (|MPtoMPT| . 1284775)
 (|pack_exps| . 1284513) (|repack1| . 1284234) (|pack_exps0| . 1284010)
 (|m_inverse| . 1283753) (|rightRecip| . 1283524) (|leftRecip| . 1283295)
 (|leftPower| . 1283097) (|rightPower| . 1282899) (|one?| . 1282438)
 (|element| . 1282121) (|rowMatrix| . 1281807) (|rows| . 1281160)
 (|columnMatrix| . 1280846) (|columns| . 1280199) (|subMatrix| . 1279086)
 (|bandMatrix| . 1278353) (|blockSplit| . 1276835) (|iter| . 1276632)
 (|arg1| . 1276475) (|arg2| . 1276318) (|comp| . 1276039) (|nullary| . 1275904)
 (|id| . 1275800) (|recur| . 1275408) (|const| . 1274884) (|curry| . 1274668)
 (|diag| . 1274449) (|curryRight| . 1274183) (|curryLeft| . 1273917)
 (|constantRight| . 1273654) (|constantLeft| . 1273391) (|twist| . 1273125)
 (|kronecker_prod1| . 1272637) (|positivePower| . 1272341)
 (|kroneckerSum| . 1271870) (|kroneckerProduct| . 1271325)
 (|elRow1!| . 1271000) (|elRow2!| . 1270672) (|elColumn2!| . 1270344)
 (|fractionFreeGauss!| . 1270009) (|invertIfCan| . 1269546) (|copy!| . 1269399)
 (|plus!| . 1269249) (|minus!| . 1268954) (|leftScalarTimes!| . 1268804)
 (|rightScalarTimes!| . 1268654) (|times!| . 1268504) (|power!| . 1268302)
 (|gradient| . 1267970) (|divergence| . 1267675) (|laplacian| . 1267380)
 (|hessian| . 1267048) (|bandedHessian| . 1266674) (|jacobian| . 1266342)
 (|bandedJacobian| . 1265965) (|duplicates| . 1265693)
 (|removeDuplicates!| . 1265448) (|ddFact| . 1265143)
 (|separateFactors| . 1264501) (|meshPar2Var| . 1263237)
 (|meshFun2Var| . 1262729) (|meshPar1Var| . 1262362) (|ptFunc| . 1261922)
 (|ldegree| . 1261700) (|subst_vars| . 1261512) (|trial_division| . 1261178)
 (|toPermutation| . 1261004) (|toCayleyGraph| . 1260549) (|limit| . 1256675)
 (|contraAdjoint| . 1256351) (|coAdjoint| . 1256027)
 (|multifunctionGraph| . 1254304) (|minimumExponent| . 1254141)
 (|maximumExponent| . 1253978) (|precision| . 1253538) (|mantissa| . 1253361)
 (|rowEch| . 1253210) (|rowEchLocal| . 1253056) (|rowEchelonLocal| . 1252899)
 (|normalizedDivide| . 1252288) (|maxint| . 1252103)
 (|binaryFunction| . 1251797) (|makeFloatFunction| . 1251293)
 (|function| . 1250061) (|makeRecord| . 1249868) (|unaryFunction| . 1249603)
 (|compiledFunction| . 1249025) (|corrPoly| . 1248340) (|lifting| . 1246733)
 (|coerceS| . 1246493) (|mfactor| . 1246314) (|ddfact| . 1245879)
 (|mmul| . 1245743) (|mod_exp| . 1245433) (|power_matrix| . 1245005)
 (|modular_compose| . 1244638) (|ini_rdata| . 1244331) (|red_pol| . 1244044)
 (|HP_solve_I| . 1243262) (|HP_solve_A| . 1242416) (|HP_solve_P| . 1241594)
 (|HP_solve_PA| . 1240699) (|HP_solve_M| . 1239892) (|check_sol1a| . 1239571)
 (|VSUPI_to_VPA| . 1239352) (|VSUPPI_to_VPA| . 1239010)
 (|LLFI_to_LPA| . 1238799) (|LLFPI_to_LPA| . 1238488)
 (|get_variables| . 1238273) (|unpack_poly| . 1237918) (|HP_solve| . 1237110)
 (|gen_Monte_Carlo_check| . 1236530) (|LLF_to_LPA| . 1236165)
 (|VSUPS_to_VPA| . 1235767) (|frobenius| . 1235571) (|computePowers| . 1235359)
 (|An| . 1235175) (|UnVectorise| . 1234991) (|Vectorise| . 1234807)
 (|setPoly| . 1234660) (|index| . 1233950) (|exponent| . 1232767)
 (|exQuo| . 1231753) (|cumulant2moment| . 1231615)
 (|moment2cumulant| . 1231477) (|moment2nthJacobi| . 1231228)
 (|moment2jacobi| . 1230923) (|moment2jacobi2| . 1230677)
 (|freeCumulant2moment| . 1230539) (|moment2freeCumulant| . 1230401)
 (|booleanCumulant2moment| . 1230263) (|moment2booleanCumulant| . 1230125)
 (|monotoneCumulant2moment| . 1229987)
 (|monotoneCumulant2momentPoly| . 1229779) (|hankelDeterminant| . 1229592)
 (|jacobi2poly| . 1229385) (|moment2Stransform| . 1228956)
 (|moment2monotoneCumulant| . 1228613) (|derivationCoordinates| . 1228299)
 (|generator| . 1226539) (|splitSquarefree| . 1226181)
 (|normalDenom| . 1225936) (|totalfract| . 1225271) (|pushdterm| . 1224688)
 (|pushucoef| . 1224090) (|pushuconst| . 1223602) (|mrv_normalize| . 1223076)
 (|mrv_limit| . 1220266) (|mrv_limit1| . 1220049) (|mrv_sign| . 1219533)
 (|mrv_cmp| . 1218844) (|mrv_set| . 1218126) (|expr_to_series| . 1217520)
 (|mrv_rewrite| . 1216844) (|mrv_rewrite0| . 1216596) (|multiset| . 1216298)
 (|systemCommand| . 1216176) (|mergeDifference| . 1216047)
 (|logDependenceQ| . 1215813) (|compdegd| . 1215339) (|univcase| . 1215030)
 (|consnewpol| . 1214431) (|nsqfree| . 1213580) (|intChoose| . 1212644)
 (|coefChoose| . 1212166) (|myDegree| . 1211700) (|normDeriv2| . 1211338)
 (|plenaryPower| . 1211176) (|commutator| . 1210901) (|associator| . 1210839)
 (|antiCommutator| . 1210776) (|naiveBeckermannLabahn| . 1210169)
 (|naiveBeckermannLabahnMultipoint| . 1209594)
 (|naiveBeckermannLabahn1| . 1208649) (|naiveBeckermannLabahn0| . 1208195)
 (|reduceBasis0| . 1207737) (|reduceBasis| . 1207292)
 (|complexEigenvalues| . 1207037) (|complexEigenvectors| . 1206543)
 (|newton| . 1206347) (|groebner| . 1202870) (|redPol| . 1202242)
 (|hMonic| . 1201690) (|virtualDegree| . 1201046) (|sPol| . 1200154)
 (|shift| . 1199741) (|normalizedAssociate| . 1199390) (|normalize| . 1196827)
 (|outputArgs| . 1196411) (|normInvertible?| . 1195937)
 (|normFactors| . 1195550) (|npcoef| . 1194662)
 (|characteristicPolynomial| . 1192319) (|realEigenvalues| . 1192091)
 (|realEigenvectors| . 1191701) (|halfExtendedResultant2| . 1191409)
 (|halfExtendedResultant1| . 1191117) (|extendedResultant| . 1190749)
 (|subResultantsChain| . 1190529) (|lazyPseudoQuotient| . 1190415)
 (|lazyPseudoRemainder| . 1190301) (|bernoulliB| . 1190063)
 (|eulerE| . 1189825) (|numeric| . 1188106) (|complexNumeric| . 1184064)
 (|numericIfCan| . 1182631) (|complexNumericIfCan| . 1179430)
 (|FormatArabic| . 1179302) (|ScanArabic| . 1179174) (|FormatRoman| . 1179046)
 (|ScanRoman| . 1178918) (|ScanFloatIgnoreSpaces| . 1178800)
 (|ScanFloatIgnoreSpacesIfCan| . 1178676) (|FormatRadix| . 1178553)
 (|rk4| . 1177803) (|rk4a| . 1177424) (|rk4qc| . 1176349) (|rk4f| . 1175976)
 (|aromberg| . 1175568) (|asimpson| . 1175160) (|atrapezoidal| . 1174752)
 (|romberg| . 1174347) (|simpson| . 1173942) (|trapezoidal| . 1173537)
 (|rombergo| . 1173132) (|simpsono| . 1172727) (|trapezoidalo| . 1172322)
 (|inf| . 1172050) (|sup| . 1171778) (|inv| . 1170457) (|imagE| . 1170346)
 (|imagk| . 1170235) (|imagj| . 1170124) (|imagi| . 1170013)
 (|octon| . 1169745) (|constDsolve| . 1168962) (|expint| . 1168359)
 (|diff| . 1167550) (|algDsolve| . 1165961) (|denomLODE| . 1164948)
 (|indicialEquations| . 1162764) (|indicialEquation| . 1161764)
 (|denomRicDE| . 1161263) (|leadingCoefficientRicDE| . 1160672)
 (|constantCoefficientRicDE| . 1160041) (|changeVar| . 1159081)
 (|ratDsolve| . 1156628) (|indicialEquationAtInfinity| . 1155804)
 (|integrate_sols| . 1154274) (|reduceLODE| . 1153228) (|singRicDE| . 1151700)
 (|polyRicDE| . 1150267) (|ricDsolve| . 1145969) (|triangulate| . 1143892)
 (|solveInField| . 1141708) (|wronskianMatrix| . 1141207)
 (|variationOfParameters| . 1140972) (|addVertex| . 1140865)
 (|boolWordPermute| . 1140544) (|reindex| . 1140265) (|subtract| . 1140212)
 (|sameFace?| . 1140037) (|isSubsetOf?| . 1139948) (|allSubsets| . 1139324)
 (|getIndexesSigned| . 1139229) (|getIndexes| . 1139116)
 (|orientedFacetIfCan| . 1139002) (|orientedFacetSigned| . 1138907)
 (|orientedFacetUnsigned| . 1138812) (|orientedFacet| . 1138574)
 (|operator| . 1136321) (|arguments| . 1136183) (|has_op?| . 1136027)
 (|is_symbol?| . 1135871) (|precondition| . 1135780) (|OMmakeConn| . 1135676)
 (|OMcloseConn| . 1135588) (|OMconnInDevice| . 1135483)
 (|OMconnOutDevice| . 1135378) (|OMconnectTCP| . 1135213)
 (|OMbindTCP| . 1135078) (|OMopenFile| . 1134942) (|OMopenString| . 1134809)
 (|OMclose| . 1134727) (|OMsetEncoding| . 1134596) (|OMputApp| . 1134514)
 (|OMputAtp| . 1134432) (|OMputAttr| . 1134350) (|OMputBind| . 1134268)
 (|OMputBVar| . 1134186) (|OMputError| . 1134104) (|OMputObject| . 1134022)
 (|OMputEndApp| . 1133940) (|OMputEndAtp| . 1133858) (|OMputEndAttr| . 1133776)
 (|OMputEndBind| . 1133694) (|OMputEndBVar| . 1133612)
 (|OMputEndError| . 1133530) (|OMputEndObject| . 1133448)
 (|OMputInteger| . 1133326) (|OMputFloat| . 1133200)
 (|OMputVariable| . 1133079) (|OMputString| . 1132958)
 (|OMputSymbol| . 1132834) (|OMgetApp| . 1132752) (|OMgetAtp| . 1132670)
 (|OMgetAttr| . 1132588) (|OMgetBind| . 1132506) (|OMgetBVar| . 1132424)
 (|OMgetError| . 1132342) (|OMgetObject| . 1132260) (|OMgetEndApp| . 1132178)
 (|OMgetEndAtp| . 1132096) (|OMgetEndAttr| . 1132014)
 (|OMgetEndBind| . 1131932) (|OMgetEndBVar| . 1131850)
 (|OMgetEndError| . 1131768) (|OMgetEndObject| . 1131686)
 (|OMgetInteger| . 1131599) (|OMgetFloat| . 1131508)
 (|OMgetVariable| . 1131422) (|OMgetString| . 1131336)
 (|OMgetSymbol| . 1131197) (|OMgetType| . 1131111)
 (|OMencodingBinary| . 1131061) (|OMencodingSGML| . 1131011)
 (|OMencodingXML| . 1130961) (|OMencodingUnknown| . 1130911)
 (|omError| . 1130769) (|errorInfo| . 1130675) (|errorKind| . 1130572)
 (|OMReadError?| . 1130482) (|OMUnknownSymbol?| . 1130392)
 (|OMUnknownCD?| . 1130302) (|OMParseError?| . 1130212) (|OMwrite| . 1128776)
 (|OMread| . 1128650) (|OMreadFile| . 1128532) (|OMreadStr| . 1128414)
 (|OMlistCDs| . 1128314) (|OMlistSymbols| . 1128184)
 (|OMsupportsCD?| . 1128062) (|OMsupportsSymbol?| . 1127937)
 (|OMunhandledSymbol| . 1127815) (|OMreceive| . 1127679) (|OMsend| . 1127515)
 (|OMserve| . 1127380) (|infinity| . 1127170) (|makeop| . 1126838)
 (|opeval| . 1126534) (|evaluateInverse| . 1126237) (|evaluate| . 1125165)
 (|conjug| . 1124859) (|knownHandler?| . 1124665) (|handler| . 1124506)
 (|setHandler!| . 1124344) (|removeHandler!| . 1124153)
 (|getDatabase| . 1124016) (|whatInfinity| . 1123869) (|infinite?| . 1123602)
 (|finite?| . 1123250) (|minusInfinity| . 1123042) (|plusInfinity| . 1122834)
 (|pureLex| . 1122611) (|totalLex| . 1122388) (|reverseLex| . 1122165)
 (|leftLcm| . 1122018) (|right_ext_ext_GCD| . 1121671)
 (|rightExtendedGcd| . 1121387) (|rightGcd| . 1121240)
 (|rightExactQuotient| . 1121087) (|rightRemainder| . 1120940)
 (|rightQuotient| . 1120793) (|rightLcm| . 1120646)
 (|leftExtendedGcd| . 1120362) (|leftGcd| . 1120215)
 (|leftExactQuotient| . 1120062) (|leftRemainder| . 1119915)
 (|leftQuotient| . 1119768) (|times| . 1119497) (|monicLeftDivide| . 1118922)
 (|monicRightDivide| . 1118347) (|leftDivide| . 1117790)
 (|rightDivide| . 1117233) (|output| . 1116848) (|outputList| . 1116725)
 (|hcenter| . 1116562) (|pad| . 1116390) (|lines| . 1116300)
 (|width| . 1116000) (|height| . 1115256) (|or| . 1115109) (|and| . 1114962)
 (|quo| . 1114801) (|rem| . 1114640) (~= . 1114505) (|blankSeparate| . 1114410)
 (|semicolonSeparate| . 1114315) (|commaSeparate| . 1114220) (|pile| . 1113929)
 (|paren| . 1113737) (|bracket| . 1113122) (|brace| . 1112982)
 (|prod| . 1112836) (|overlabel| . 1112786) (|overbar| . 1112505)
 (|prime| . 1112139) (|quote| . 1112051) (|supersub| . 1111953)
 (|presuper| . 1111903) (|presub| . 1111853) (|super| . 1111803)
 (|sub| . 1111753) (|rarrow| . 1111703) (|assign| . 1106735)
 (|slash| . 1106448) (|over| . 1106398) (|zag| . 1106178) (|box| . 1105806)
 (|label| . 1105756) (|infix?| . 1105675) (|postfix| . 1105625)
 (|infix| . 1104936) (|prefix| . 1104304) (|vconcat| . 1103647)
 (|hconcat| . 1103413) (|rspace| . 1103327) (|vspace| . 1103246)
 (|hspace| . 1103165) (|messagePrint| . 1103051) (|message| . 1102971)
 (|padecf| . 1102652) (|pade| . 1101693) (|root| . 1101426)
 (|quotientByP| . 1101364) (|moduloP| . 1101259) (|modulus| . 1099983)
 (|digits| . 1099295) (|continuedFraction| . 1098286) (|light| . 1098210)
 (|pastel| . 1098134) (|bright| . 1097838) (|dim| . 1097762) (|dark| . 1097686)
 (|motzkinPathArray| . 1097506) (|jacobiPathArray| . 1097329)
 (|bottom| . 1097071) (|surface| . 1096973) (|coordinate| . 1096548)
 (|partitions| . 1096063) (|odd_partitions| . 1095739)
 (|distinct_partitions| . 1095415) (|conjugates| . 1095290)
 (|shuffle| . 1095118) (|shufflein| . 1094946) (|sequences| . 1094607)
 (|permutations| . 1094447) (|lists| . 1094191) (|atoms| . 1093935)
 (|makeResult| . 1093631) (|is?| . 1092430) (|Is| . 1091062)
 (|addMatchRestricted| . 1090871) (|insertMatch| . 1090683)
 (|addMatch| . 1090495) (|getMatch| . 1090308) (|failed| . 1089968)
 (|failed?| . 1089566) (|optpair| . 1089424) (|getBadValues| . 1089295)
 (|resetBadValues| . 1089206) (|hasTopPredicate?| . 1089082)
 (|topPredicate| . 1088892) (|setTopPredicate| . 1088730)
 (|patternVariable| . 1088570) (|withPredicates| . 1088438)
 (|setPredicates| . 1088306) (|predicates| . 1088177)
 (|hasPredicate?| . 1088053) (|optional?| . 1087929) (|multiple?| . 1087805)
 (|generic?| . 1087681) (|quoted?| . 1087557) (|inR?| . 1087433)
 (|depth| . 1087207) (|isList| . 1087065) (|isQuotient| . 1086839)
 (|isOp| . 1086422) (|predicate| . 1086205) (|satisfy?| . 1085546)
 (|addBadValue| . 1085255) (|badValues| . 1085053) (|retractable?| . 1084165)
 (|listOfTerms| . 1083344) (|One| . 1082856) (|adjoint| . 1081541)
 (|id_map| . 1081325) (|diff_map| . 1081111) (|ptree| . 1080924)
 (|coerceImages| . 1080602) (|fixedPoints| . 1080446) (|odd?| . 1080083)
 (|even?| . 1079720) (|numberOfCycles| . 1079581) (|cyclePartition| . 1079451)
 (|coerceListOfPairs| . 1079314) (|coercePreimagesImages| . 1079177)
 (|listRepresentation| . 1078956) (|permanent| . 1078753) (|cycles| . 1078606)
 (|cycle| . 1078468) (|perm_to_vec| . 1078191)
 (|relationsInGenerators| . 1078033) (|relationsInStrongGenerators| . 1077875)
 (|initializeGroupForWordProblem| . 1077576) (|movedPoints| . 1077319)
 (|wordInGenerators| . 1077121) (|wordInStrongGenerators| . 1076923)
 (|orbits| . 1076776) (|orbit| . 1076151) (|permutationGroup| . 1075995)
 (|wordsForStrongGenerators| . 1075826) (|strongGenerators| . 1075670)
 (|base| . 1075201) (|random| . 1074040) (|generators| . 1073514)
 (|eval1a| . 1073131) (|eval1| . 1071625) (|modpreduction| . 1070966)
 (|modpeval| . 1070718) (|addVertex2| . 1070512) (|setMult!| . 1070337)
 (|getMaxRight| . 1070234) (|getMaxLeft| . 1070131) (|getIndexs| . 1069902)
 (|productFacet| . 1069536)
 (|solveLinearPolynomialEquationByRecursion| . 1069122)
 (|factorByRecursion| . 1068693) (|factorSquareFreeByRecursion| . 1068264)
 (|randomR| . 1067637) (|bivariateSLPEBR| . 1067220) (|charthRoot| . 1066961)
 (|conditionP| . 1066760) (|solveLinearPolynomialEquation| . 1065722)
 (|factorSquareFreePolynomial| . 1065517) (|factorPolynomial| . 1065001)
 (|squareFreePolynomial| . 1064796) (|gcdPolynomial| . 1064191)
 (|cmult| . 1063601) (|possibleOrder| . 1063034) (|handle_imaginary| . 1062266)
 (|simplifyCoeffs| . 1061440) (|torsion?| . 1060414) (|torsionIfCan| . 1059271)
 (|getGoodPrime| . 1058970) (|badNum| . 1058391) (|mix| . 1058021)
 (|doubleDisc| . 1057763) (|polyred| . 1057536) (|padicFraction| . 1057428)
 (|padicallyExpand| . 1057260) (|fractionalTerms| . 1057056)
 (|numberOfFractionalTerms| . 1056920) (|compactFraction| . 1056812)
 (|partialFraction| . 1055682) (|gcdPrimitive| . 1054793)
 (|symmetricGroup| . 1054355) (|alternatingGroup| . 1054020)
 (|abelianGroup| . 1053843) (|cyclicGroup| . 1053405)
 (|dihedralGroup| . 1052967) (|mathieu11| . 1052678) (|mathieu12| . 1052389)
 (|mathieu22| . 1052100) (|mathieu23| . 1051811) (|mathieu24| . 1051522)
 (|janko2| . 1051233) (|rubiksGroup| . 1051111) (|youngGroup| . 1050782)
 (|lexGroebner| . 1050594) (|totalGroebner| . 1050406) (|qcoerce| . 1050229)
 (|expressIdealMember| . 1050118) (|principalIdeal| . 1049924)
 (|LagrangeInterpolation| . 1049713) (|psolve| . 1038143)
 (|wrregime| . 1037035) (|rdregime| . 1035765) (|bsolve| . 1034061)
 (|dmp2rfi| . 1032454) (|se2rfi| . 1031886) (|pr2dmp| . 1031383)
 (|hasoln| . 1030729) (|ParCondList| . 1029656) (|redpps| . 1028964)
 (|B1solve| . 1027951) (|factorset| . 1027486) (|maxrank| . 1026562)
 (|minrank| . 1025638) (|minset| . 1025132) (|nextSublist| . 1024579)
 (|overset?| . 1024007) (|ParCond| . 1023271) (|redmat| . 1022741)
 (|regime| . 1021342) (|sqfree| . 1020905) (|inconsistent?| . 1019828)
 (|debug| . 1019533) (|numFunEvals| . 1019461) (|setAdaptive| . 1019386)
 (|adaptive?| . 1019314) (|setScreenResolution| . 1019239)
 (|screenResolution| . 1018996) (|setMaxPoints| . 1018921)
 (|maxPoints| . 1018678) (|setMinPoints| . 1018603) (|minPoints| . 1018360)
 (|parametric?| . 1018285) (|plotPolar| . 1017603) (|debug3D| . 1017526)
 (|numFunEvals3D| . 1017452) (|setAdaptive3D| . 1017375)
 (|adaptive3D?| . 1017301) (|setScreenResolution3D| . 1017224)
 (|screenResolution3D| . 1017150) (|setMaxPoints3D| . 1017073)
 (|maxPoints3D| . 1016999) (|setMinPoints3D| . 1016922)
 (|minPoints3D| . 1016848) (|tValues| . 1016740) (|tRange| . 1016554)
 (|plot| . 1014552) (|pointPlot| . 1013847) (|calcRanges| . 1013666)
 (|optional| . 1013364) (|multiple| . 1013062) (|fixPredicate| . 1012727)
 (|patternMatch| . 1007743) (|patternMatchTimes| . 1007130)
 (|bernoulli| . 1006793) (|chebyshevT| . 1006447) (|chebyshevU| . 1006101)
 (|cyclotomic| . 1005579) (|euler| . 1005283) (|fixedDivisor| . 1005106)
 (|laguerre| . 1004929) (|legendre| . 1004630) (|dmpToHdmp| . 1004358)
 (|hdmpToDmp| . 1004086) (|pToHdmp| . 1003847) (|hdmpToP| . 1003608)
 (|dmpToP| . 1003380) (|pToDmp| . 1003152) (|sylvesterSequence| . 1002944)
 (|sturmSequence| . 1002739) (|boundOfCauchy| . 1002528)
 (|sturmVariationsOf| . 1002243) (|lazyVariations| . 1001917)
 (|content| . 1001230) (|minimumDegree| . 1000440) (|isPlus| . 999331)
 (|isTimes| . 998195) (|isExpt| . 996137) (|isPower| . 995120)
 (|rroot| . 994395) (|qroot| . 993622) (|froot| . 992865) (|nthr| . 992131)
 (|copy_first| . 991954) (|copy_slice| . 991774) (|eval_at| . 991626)
 (|vector_add_mul| . 991440) (|mul_by_binomial| . 991085)
 (|mul_by_scalar| . 990905) (|mul| . 990760)
 (|truncated_multiplication| . 990612) (|truncated_mul_add| . 990429)
 (|pow| . 989989) (|divide!| . 989809) (|remainder!| . 989632)
 (|vector_combination| . 989443) (|to_mod_pa| . 989235) (|pa_to_sup| . 989058)
 (|lcm| . 988725) (|extended_gcd| . 988534) (< . 988123) (> . 987892)
 (>= . 987754) (<= . 987482) (|createY| . 986981) (|createX| . 986480)
 (|createWidth| . 985988) (|isDirected?| . 985538) (|coverMatrix| . 985390)
 (|zetaMatrix| . 985242) (|moebius| . 984995) (|isAntiChain?| . 984871)
 (|isChain?| . 984747) (|isAntisymmetric?| . 984623)
 (|completeTransitivity| . 984534) (|completeReflexivity| . 984445)
 (|objectToIndex| . 984307) (|indexToObject| . 984169) (|lowerSet| . 984080)
 (|upperSet| . 983991) (|lub| . 983796) (|glb| . 983601) (|joinIfCan| . 983261)
 (|meetIfCan| . 982921) (|implies| . 982663) (|powerSetStructure| . 982574)
 (|opposite| . 982485) (|addArrow!| . 981262) (|setArr| . 981085)
 (|setVert| . 980933) (|getArr| . 980791) (|getVert| . 980667)
 (|finitePoset| . 980309) (|addObject!| . 979863) (|powerset| . 979683)
 (|completelyOrderedSet| . 979519) (|posetN5| . 979355) (|posetM5| . 979191)
 (|posetO6| . 979027) (|posetP6| . 978863) (|posetL7| . 978699)
 (|firstUncouplingMatrix| . 978425) (|le| . 978253) (|lcx0| . 977678)
 (|lcz| . 977243) (|coeffs0| . 976956) (|coeffs1| . 976652)
 (|alg_reduce0| . 976442) (|alg_reduce| . 976149)
 (|alg_trial_division| . 975825) (|integral| . 974436)
 (|primitiveElement| . 971776) (|nextPrime| . 971659) (|prevPrime| . 971542)
 (|primes| . 971394) (|print| . 971198) (|merge!| . 970774)
 (|get_rational_roots| . 969982) (|integerBound| . 969507)
 (|resultantEuclidean| . 969188) (|semiResultantEuclidean2| . 968934)
 (|semiResultantEuclidean1| . 968680) (|indiceSubResultant| . 968449)
 (|indiceSubResultantEuclidean| . 968078)
 (|semiIndiceSubResultantEuclidean| . 967772) (|degreeSubResultant| . 967541)
 (|degreeSubResultantEuclidean| . 967170)
 (|semiDegreeSubResultantEuclidean| . 966864)
 (|lastSubResultantEuclidean| . 966542)
 (|semiLastSubResultantEuclidean| . 966285)
 (|subResultantGcdEuclidean| . 966001)
 (|semiSubResultantGcdEuclidean2| . 965753)
 (|semiSubResultantGcdEuclidean1| . 965505) (|discriminantEuclidean| . 965186)
 (|semiDiscriminantEuclidean| . 964932) (|chainSubResultants| . 964722)
 (|schema| . 964485) (|resultantReduit| . 964271)
 (|resultantReduitEuclidean| . 963914)
 (|semiResultantReduitEuclidean| . 963622) (|divide| . 962775)
 (|next_sousResultant2| . 962587) (|pdct| . 962507) (|powers| . 962356)
 (|partition| . 962142) (|complete| . 961265) (|pole?| . 960920)
 (|zRange| . 960795) (|yRange| . 960547) (|xRange| . 960299)
 (|listBranches| . 960019) (|triangular?| . 959681)
 (|rewriteIdealWithRemainder| . 959333)
 (|rewriteIdealWithHeadRemainder| . 958985) (|remainder| . 958541)
 (|headRemainder| . 958164) (|roughUnitIdeal?| . 957826)
 (|roughEqualIdeals?| . 957485) (|roughSubIdeal?| . 957144)
 (|roughBase?| . 956806) (|trivialIdeal?| . 956505) (|collectUpper| . 956236)
 (|collect| . 955798) (|collectUnder| . 955529) (|mainVariable?| . 955225)
 (|mainVariables| . 954924) (|removeSquaresIfCan| . 954600)
 (|unprotectedRemoveRedundantFactors| . 954280)
 (|removeRedundantFactors| . 952601) (|certainlySubVariety?| . 952246)
 (|possiblyNewVariety?| . 951854) (|probablyZeroDim?| . 951502)
 (|selectPolynomials| . 950993) (|selectOrPolynomials| . 950468)
 (|selectAndPolynomials| . 949943) (|quasiMonicPolynomials| . 949480)
 (|univariate?| . 949163) (|univariatePolynomials| . 948700)
 (|linear?| . 948383) (|linearPolynomials| . 947920) (|bivariate?| . 947603)
 (|bivariatePolynomials| . 947140)
 (|removeRoughlyRedundantFactorsInPols| . 946457)
 (|removeRoughlyRedundantFactorsInPol| . 946130) (|interReduce| . 945806)
 (|roughBasicSet| . 945349) (|crushedSet| . 945025)
 (|rewriteSetByReducingWithParticularGenerators| . 944552)
 (|rewriteIdealWithQuasiMonicGenerators| . 944125)
 (|squareFreeFactors| . 943776) (|univariatePolynomialsGcds| . 943035)
 (|removeRoughlyRedundantFactorsInContents| . 942676)
 (|removeRedundantFactorsInContents| . 942317)
 (|removeRedundantFactorsInPols| . 941958) (|irreducibleFactors| . 941525)
 (|lazyIrreducibleFactors| . 941092)
 (|removeIrreducibleRedundantFactors| . 940656) (|normalForm| . 939905)
 (|changeBase| . 939552) (|companionBlocks| . 939200) (|xCoord| . 939077)
 (|yCoord| . 938954) (|zCoord| . 938831) (|rCoord| . 938708)
 (|thetaCoord| . 938585) (|phiCoord| . 938462) (|color| . 938265)
 (|hue| . 937994) (|shade| . 937795) (|nthRootIfCan| . 937630)
 (|expIfCan| . 937510) (|logIfCan| . 937390) (|sinIfCan| . 937270)
 (|cosIfCan| . 937150) (|tanIfCan| . 937030) (|cotIfCan| . 936910)
 (|secIfCan| . 936790) (|cscIfCan| . 936670) (|asinIfCan| . 936550)
 (|acosIfCan| . 936430) (|atanIfCan| . 936310) (|acotIfCan| . 936190)
 (|asecIfCan| . 936070) (|acscIfCan| . 935950) (|sinhIfCan| . 935830)
 (|coshIfCan| . 935710) (|tanhIfCan| . 935590) (|cothIfCan| . 935470)
 (|sechIfCan| . 935350) (|cschIfCan| . 935230) (|asinhIfCan| . 935110)
 (|acoshIfCan| . 934990) (|atanhIfCan| . 934870) (|acothIfCan| . 934750)
 (|asechIfCan| . 934630) (|acschIfCan| . 934510) (|pushdown| . 932897)
 (|pushup| . 931284) (|reducedDiscriminant| . 930969)
 (|idealSimplify| . 930713) (|definingInequation| . 930457)
 (|definingEquations| . 930166) (|setStatus| . 929853)
 (|quasiAlgebraicSet| . 929559) (|radicalSimplify| . 928921)
 (|denominator| . 928548) (|numerator| . 928185) (|denom| . 927031)
 (|numer| . 925857) (|quadraticForm| . 925685) (|back| . 925594)
 (|front| . 925503) (|rotate!| . 925412) (|dequeue!| . 925321)
 (|enqueue!| . 925227) (|quatern| . 925105) (|imagK| . 924883)
 (|imagJ| . 924661) (|imagI| . 924439) (|queue| . 924317) (|nthRoot| . 923632)
 (|fractRadix| . 923497) (|wholeRadix| . 923365) (|cycleRagits| . 923233)
 (|prefixRagits| . 923101) (|fractRagits| . 922967) (|wholeRagits| . 922835)
 (|radix| . 922673) (|randnum| . 922496) (|reseed| . 922373) (|seed| . 922285)
 (|factorSquareFree| . 920716) (|rational| . 919233) (|rational?| . 917881)
 (|rationalIfCan| . 916398) (|setvalue!| . 916254) (|setchildren!| . 916082)
 (|node?| . 915917) (|child?| . 915752) (|leaves| . 915622)
 (|cyclic?| . 915492) (|nodes| . 915362) (|rename| . 915266)
 (|rename!| . 915170) (|mainValue| . 915045)
 (|mainDefiningPolynomial| . 914920) (|mainForm| . 914814) (|sqrt| . 913908)
 (|multi_SPDE| . 912781) (SPDE1 . 912326) (|rischDEsys| . 911243)
 (|ei_int| . 910392) (|mk_erf| . 909812) (|risch_de_ext| . 909035)
 (|do_risch_DE| . 908200) (|do_param_RDE| . 907496) (|param_rde| . 904421)
 (|param_rde2| . 903034) (|exp_lower_bound| . 902143) (|monomRDEsys| . 901568)
 (|baseRDEsys| . 901203) (|weighted| . 900967) (|rdHack1| . 900711)
 (|midpoint| . 900388) (|midpoints| . 900030) (|realZeros| . 896728)
 (|mainCharacterization| . 896325) (|algebraicOf| . 895898)
 (|makeRec| . 895235) (|makeFEq| . 894569) (|getEq| . 894046)
 (|values| . 892884) (|eltable?| . 892333) (|ReduceOrder| . 891883)
 (|setref| . 891796) (|deref| . 891714) (|ref| . 891632)
 (|radicalEigenvectors| . 891148) (|radicalEigenvector| . 890887)
 (|radicalEigenvalues| . 890690) (|eigenMatrix| . 890486)
 (|normalise| . 890361) (|gramschmidt| . 890227) (|orthonormalBasis| . 890019)
 (|antisymmetricTensors| . 889569) (|createGenericMatrix| . 889367)
 (|symmetricTensors| . 889000) (|tensorProduct| . 888446)
 (|permutationRepresentation| . 887387) (|completeEchelonBasis| . 887205)
 (|createRandomElement| . 887022) (|cyclicSubmodule| . 886753)
 (|standardBasisOfCyclicSubmodule| . 886495) (|areEquivalent?| . 885759)
 (|isAbsolutelyIrreducible?| . 885311) (|meatAxe| . 884113)
 (|scanOneDimSubspaces| . 883831) (|double| . 883579) (|expt| . 883327)
 (|lift| . 881407) (|showArrayValues| . 881330) (|showScalarValues| . 881253)
 (|solveRetract| . 880845) (|variables| . 878037) (|mainVariable| . 877106)
 (|univariate| . 873710) (|multivariate| . 871569) (|uniform01| . 871477)
 (|normal01| . 871385) (|exponential1| . 871293) (|chiSquare1| . 871152)
 (|normal| . 871009) (|exponential| . 870613) (|chiSquare| . 870453)
 (F . 870290) (|t| . 870130) (|alg_split_roots| . 869567)
 (|alg_split_root0| . 869221) (|uniform| . 868744) (|binomial| . 867947)
 (|poisson| . 867781) (|geometric| . 867615) (|ridHack1| . 867500)
 (|interpolate| . 866057) (|nullity| . 864677) (|column| . 864124)
 (|qelt| . 862835) (|maxColIndex| . 862288) (|minColIndex| . 861741)
 (|maxRowIndex| . 861194) (|minRowIndex| . 860647) (|antisymmetric?| . 860058)
 (|symmetric?| . 859504) (|diagonal?| . 858763) (|square?| . 858209)
 (|matrix| . 856027) (|rectangularMatrix| . 855767) (|annihilate?| . 855688)
 (|characteristic| . 853664) (|round| . 853609) (|fractionPart| . 852938)
 (|wholePart| . 852475) (|floor| . 852258) (|ceiling| . 852041)
 (|norm| . 848872) (|mightHaveRoots| . 848625) (|refine| . 846571)
 (|middle| . 846362) (|size| . 844231) (|right| . 843610) (|left| . 842989)
 (|roman| . 842824) (|mainSquareFreePart| . 842589)
 (|mainPrimitivePart| . 842354) (|mainContent| . 842119)
 (|primitivePart!| . 841884) (|gcd| . 839249) (|iexactQuo| . 838091)
 (|next_subResultant2| . 837842) (|LazardQuotient2| . 837315)
 (|LazardQuotient| . 836794) (|subResultantChain| . 836516)
 (|halfExtendedSubResultantGcd2| . 835882)
 (|halfExtendedSubResultantGcd1| . 835248) (|extendedSubResultantGcd| . 834502)
 (|exactQuotient!| . 834018) (|exactQuotient| . 833534)
 (|primPartElseUnitCanonical!| . 833294) (|primPartElseUnitCanonical| . 833054)
 (|retract| . 826365) (|retractIfCan| . 819347) (|lazyResidueClass| . 818673)
 (|monicModulo| . 818355) (|lazyPseudoDivide| . 817198)
 (|lazyPremWithDefault| . 816477) (|lazyPquo| . 816064) (|lazyPrem| . 815651)
 (|pquo| . 815238) (|prem| . 814825) (|supRittWu?| . 814591)
 (|RittWuCompare| . 814355) (|mainMonomials| . 814124)
 (|mainCoefficients| . 813893) (|leastMonomial| . 813690)
 (|mainMonomial| . 813487) (|quasiMonic?| . 813256) (|monic?| . 812823)
 (|deepestInitial| . 812620) (|iteratedInitials| . 812389)
 (|deepestTail| . 812186) (|head| . 811880) (|mdeg| . 811631) (|mvar| . 811164)
 (|relativeApprox| . 810554) (|rootOf| . 808944) (|allRootsOf| . 807819)
 (|definingPolynomial| . 806743) (|positive?| . 806173) (|negative?| . 805603)
 (|augment| . 804261) (|lastSubResultant| . 803325)
 (|lastSubResultantElseSplit| . 802986) (|invertibleSet| . 802663)
 (|invertible?| . 801931) (|invertibleElseSplit?| . 801586)
 (|purelyAlgebraicLeadingMonomial?| . 801263)
 (|algebraicCoefficients?| . 800940) (|purelyTranscendental?| . 800617)
 (|purelyAlgebraic?| . 799976) (|prepareSubResAlgo| . 799489)
 (|internalLastSubResultant| . 798489) (|integralLastSubResultant| . 798050)
 (|toseLastSubResultant| . 797611) (|toseInvertible?| . 796733)
 (|toseInvertibleSet| . 796337) (|toseSquareFreePart| . 795901)
 (|quotedOperators| . 795425) (|pattern| . 794985) (|suchThat| . 792755)
 (|rule| . 791846) (|rules| . 791360) (|ruleset| . 790874) (|rur| . 788493)
 (|create| . 788438) (|nullBoundary| . 788347) (|boxBoundary| . 788250)
 (|ellipseBoundary| . 788153) (|intersection| . 788010) (|sunion| . 787913)
 (|extendToPoint| . 787816) (|containsPoint?| . 787684)
 (|lineIntersect| . 787587) (|isNull?| . 787458) (|isEllipse?| . 787329)
 (|isBox?| . 787200) (|getMin| . 787106) (|getMax| . 787012)
 (|getCentre| . 786918) (|clearCache| . 786796) (|linearSearch| . 786644)
 (|enterInCache| . 786351) (|binarySearch| . 786196) (|parse_integer| . 786072)
 (|variableOf| . 785878) (|samplePoint| . 785588) (|hasDimension?| . 785240)
 (|allSimpleCells| . 784707) (|createSceneRoot| . 784206)
 (|createSceneGroup| . 784119) (|addSceneGroup| . 784029)
 (|createSceneLine| . 783607) (|addSceneLine| . 783176)
 (|createSceneLines| . 783042) (|addSceneLines| . 782905)
 (|createSceneShape| . 782528) (|addSceneShape| . 782145)
 (|createSceneDef| . 782018) (|addSceneDef| . 781888)
 (|createSceneUse| . 781764) (|addSceneUse| . 781637)
 (|createSceneArrows| . 781431) (|addSceneArrows| . 781222)
 (|createSceneArrow| . 780851) (|addSceneArrow| . 780474)
 (|createSceneNamedPoints| . 780337) (|addSceneNamedPoints| . 780197)
 (|createSceneIFS| . 779878) (|addSceneIFS| . 779553)
 (|createSceneBox| . 779424) (|addSceneBox| . 779292)
 (|createSceneText| . 778650) (|addSceneText| . 777999)
 (|createSceneClip| . 777715) (|addSceneClip| . 777425)
 (|createSceneGrid| . 776782) (|addSceneGrid| . 776127)
 (|createScenePattern| . 775685) (|addScenePattern| . 775237)
 (|createSceneRuler| . 774880) (|addSceneRuler| . 774517)
 (|createSceneGraph| . 774292) (|addSceneGraph| . 774064)
 (|createSceneMaterial| . 773593) (|addSceneMaterial| . 773116)
 (|createSceneTransform| . 772985) (|addSceneTransform| . 772851)
 (|createPlot1Din2D| . 772346) (|addPlot1Din2D| . 771835)
 (|createPlot1Din2Dparametric| . 771528) (|addPlot1Din2Dparametric| . 771218)
 (|createPlot1Din3Dparametric| . 770666) (|addPlot1Din3Dparametric| . 770108)
 (|createPlot2Din3D| . 769574) (|addPlot2Din3D| . 769301)
 (|createPlot2Din3Dparametric| . 768714) (|addPlot2Din3Dparametric| . 768121)
 (|createArrows2Din2D| . 767884) (|addArrows2Din2D| . 767644)
 (|addChild!| . 767519) (|removeChild!| . 767394) (|setTransform!| . 767235)
 (|toSVG| . 766130) (|toX3D| . 765255) (|toObj| . 764428) (|writeSvg| . 764276)
 (|writeSvgQuantised| . 764124) (|writeX3d| . 763972) (|writeObj| . 763653)
 (|smesh| . 763485) (|singleFace| . 763357) (|subdivide| . 763264)
 (|sierpinskiDivide| . 763122) (|stube| . 762645) (|curveLoops| . 762407)
 (|indexes| . 762250) (|pointList| . 761991) (|findNode| . 761817)
 (|addNode!| . 761640) (|addPoints!| . 761499) (|findPoint| . 761361)
 (|getNames| . 761210) (|isNodeBranch?| . 761074) (|isNodeLeaf?| . 760938)
 (|isPointLeaf?| . 760802) (|namedBranch| . 760592) (|namedPoints| . 760220)
 (|normalisePoint| . 760128) (|structuralConstants| . 758776)
 (|equation| . 758415) (|reverse| . 757627) (|incr| . 757500) (|high| . 757408)
 (|low| . 757316) (BY . 757186) (|horizSplit| . 756249) (|horizJoin| . 756109)
 (|join| . 755368) (|pivots| . 755106) (|pivot| . 754863)
 (|primitiveRowEchelon| . 754429) (|setGcdMode| . 754226)
 (|rowEchelon| . 751302) (|extract| . 751124) (|appendRow!| . 750834)
 (|consRow!| . 750544) (|deleteRow!| . 750344) (|setRow!| . 749483)
 (|row| . 748619) (|sortedPurge!| . 748397) (|purge!| . 748175)
 (|elimZeroCols!| . 748013) (|allIndices| . 747841) (|nrows| . 746910)
 (|ncols| . 745979) (|dilate| . 745865) (|firstn| . 745677)
 (|sequence| . 745390) (|apply| . 743118) (|union| . 742325)
 (|subset?| . 742191) (|symmetricDifference| . 742085) (|difference| . 741875)
 (|intersect| . 739852) (|set| . 739623) (|latex| . 739538)
 (|hashUpdate!| . 739447) (|hash| . 739355) (|complement| . 738937)
 (|subsetLattice| . 738787) (|delta| . 738578) (|enumerate| . 738292)
 (|setOfMinN| . 738092) (|elements| . 737892) (|replaceKthElement| . 737727)
 (|incrementKthElement| . 737565) (|cdr| . 737337) (|car| . 737109)
 (|float| . 736645) (|integer| . 736155) (|symbol| . 735596)
 (|destruct| . 735113) (|float?| . 734850) (|integer?| . 734228)
 (|symbol?| . 733719) (|string?| . 733332) (|list?| . 733069)
 (|pair?| . 732806) (|null?| . 732543) (|eq| . 732277) (|fortran| . 732042)
 (|startTable!| . 731206) (|stopTable!| . 730442)
 (|supDimElseRittWu?| . 729660) (|algebraicSort| . 728884)
 (|moreAlgebraic?| . 728102) (|subTriSet?| . 727320) (|subPolSet?| . 726482)
 (|internalSubPolSet?| . 725644) (|internalInfRittWu?| . 724806)
 (|internalSubQuasiComponent?| . 724052) (|subQuasiComponent?| . 722420)
 (|removeSuperfluousQuasiComponents| . 721644) (|subCase?| . 720726)
 (|removeSuperfluousCases| . 719894) (|prepareDecompose| . 718612)
 (|branchIfCan| . 717496) (|startTableGcd!| . 716623)
 (|stopTableGcd!| . 715822) (|startTableInvSet!| . 714949)
 (|stopTableInvSet!| . 714148) (|stosePrepareSubResAlgo| . 713632)
 (|stoseInternalLastSubResultant| . 712578)
 (|stoseIntegralLastSubResultant| . 712110) (|stoseLastSubResultant| . 711642)
 (|stoseInvertible?_sqfreg| . 711129) (|stoseInvertibleSet_sqfreg| . 710704)
 (|stoseInvertible?_reg| . 710191) (|stoseInvertibleSet_reg| . 709766)
 (|stoseInvertible?| . 708830) (|stoseInvertibleSet| . 708405)
 (|stoseSquareFreePart| . 707940) (|coleman| . 707764)
 (|inverseColeman| . 707588) (|listYoungTableaus| . 707409)
 (|makeYoungTableau| . 707236) (|nextColeman| . 707060)
 (|nextLatticePermutation| . 706902) (|nextPartition| . 706540)
 (|numberOfImproperPartitions| . 706422) (|subSet| . 706264)
 (|unrankImproperPartitions0| . 706106) (|unrankImproperPartitions1| . 705948)
 (|SturmHabichtSequence| . 705735) (|SturmHabichtCoefficients| . 705522)
 (|SturmHabicht| . 705309) (|countRealRoots| . 705099)
 (|SturmHabichtMultiple| . 704847) (|countRealRootsMultiple| . 704598)
 (|coHomology| . 704155) (|homology| . 703466) (|coChain| . 703170)
 (|chain| . 702736) (|fundamentalGroup| . 701738) (|oneSkeleton| . 701402)
 (|simplicialJoin| . 701248) (|makeDisjoint| . 701132)
 (|refactorIndexes| . 700865) (|cone| . 700703) (|link| . 700274)
 (|star| . 700117) (|boundary| . 699523) (|addImpliedFaces| . 699185)
 (|sort| . 698164) (|grade| . 697600) (|minIndex| . 697178)
 (|maxIndex| . 696602) (|addSimplex| . 696445)
 (|simplicialComplexIfCan| . 696100) (|simplicialComplex| . 695484)
 (|sphereSolid| . 695100) (|sphereSurface| . 694716) (|line| . 694551)
 (|torusSurface| . 694118) (|band| . 693832) (|moebiusBand| . 693546)
 (|projectiveSpace| . 692995) (|kleinBottle| . 692562) (|dunceHat| . 692250)
 (|Or| . 692111) (|And| . 691972) (|Not| . 691839) (|xor| . 691689)
 (|not| . 691503) (|qconvert| . 691417) (|/\\| . 691126) (|\\/| . 690835)
 (~ . 690324) (|top| . 690233) (|pop!| . 690142) (|push!| . 690048)
 (|redux| . 689731) (|freeVariable?| . 689602) (|getVariable| . 689432)
 (|isS?| . 689306) (|isK?| . 689180) (|isI?| . 689054) (|variable?| . 688928)
 (|atom?| . 688048) (|getChildren| . 687459) (|parseTerm| . 686839)
 (|parseSki| . 686714) (S . 686626) (K . 686538) (I . 686450) (|ski| . 686267)
 (|Delta| . 685918) (D . 683345) (|Pfaffian| . 682779) (|minordet| . 681924)
 (|determinant| . 680750) (|diagonalProduct| . 680078) (|trace| . 679259)
 (|diagonal| . 678815) (|diagonalMatrix| . 677232) (|scalarMatrix| . 676707)
 (|hermite| . 676254) (|completeHermite| . 675906) (|smith| . 675327)
 (|completeSmith| . 674295) (|diophantineSystem| . 673865)
 (|remap_variables| . 673480) (|csubst| . 673122)
 (|particularSolution| . 670772) (|linear| . 669793) (|quadratic| . 668811)
 (|cubic| . 667826) (|quartic| . 666838) (|aLinear| . 666377)
 (|aQuadratic| . 665913) (|aCubic| . 665446) (|aQuartic| . 664976)
 (|radicalSolve| . 661964) (|radicalRoots| . 661207) (|contractSolve| . 660258)
 (|decomposeFunc| . 660017) (|limitPart| . 659968) (|integerPart| . 659865)
 (|ordinalPower| . 659813) (|ordinalMul| . 659761) (|ordinalAdd| . 659709)
 (|omegapower| . 659660) (|omega| . 659614) (|bubbleSort!| . 659020)
 (|insertionSort!| . 658426) (|check| . 657552) (|objects| . 657159)
 (|lprop| . 657002) (|llprop| . 656836) (|lllp| . 656678) (|lllip| . 656510)
 (|lp| . 656370) (|mesh?| . 656240) (|mesh| . 654834) (|polygon?| . 654704)
 (|polygon| . 654145) (|closedCurve?| . 654015) (|closedCurve| . 653456)
 (|curve?| . 653326) (|curve| . 652572) (|point?| . 652442)
 (|enterPointData| . 652253) (|composites| . 652123) (|components| . 651993)
 (|numberOfComposites| . 651852) (|numberOfComponents| . 651033)
 (|create3Space| . 650807) (|outputAsFortran| . 650296)
 (|outputAsScript| . 650033) (|outputAsTex| . 649770) (|abs| . 648806)
 (|conjugate| . 648027) (|Beta| . 647169) (|digamma| . 646490)
 (|polygamma| . 645913) (|Gamma| . 644980) (|besselJ| . 644488)
 (|besselY| . 643996) (|besselI| . 643504) (|besselK| . 643012)
 (|airyAi| . 642532) (|airyAiPrime| . 642282) (|airyBi| . 641802)
 (|airyBiPrime| . 641552) (|lambertW| . 640885) (|polylog| . 640629)
 (|weierstrassP| . 640154) (|weierstrassPPrime| . 639679)
 (|weierstrassSigma| . 639417) (|weierstrassZeta| . 639155)
 (|weierstrassPInverse| . 638893) (|whittakerM| . 638631)
 (|whittakerW| . 638369) (|angerJ| . 638113) (|weberE| . 637857)
 (|struveH| . 637601) (|struveL| . 637345) (|hankelH1| . 637089)
 (|hankelH2| . 636833) (|lommelS1| . 636571) (|lommelS2| . 636309)
 (|kummerM| . 636047) (|kummerU| . 635785) (|legendreP| . 635292)
 (|legendreQ| . 635030) (|kelvinBei| . 634774) (|kelvinBer| . 634518)
 (|kelvinKei| . 634262) (|kelvinKer| . 634006) (|ellipticK| . 633323)
 (|ellipticE| . 631690) (|ellipticF| . 630738) (|ellipticPi| . 629765)
 (|jacobiSn| . 629113) (|jacobiCn| . 628461) (|jacobiDn| . 627809)
 (|jacobiZeta| . 627459) (|jacobiTheta| . 627203) (|lerchPhi| . 626941)
 (|riemannZeta| . 626691) (|charlierC| . 626429) (|hermiteH| . 626004)
 (|jacobiP| . 625736) (|laguerreL| . 625133) (|meixnerM| . 624865)
 (|hypergeometricF| . 624415) (|meijerG| . 623953) (|lambertW0| . 623767)
 (|weierstrassP0| . 623575) (|weierstrassPPrime0| . 623383)
 (|weierstrassZeta0| . 623191) (|weierstrassSigma0| . 622999)
 (|subNode?| . 622720) (|infLex?| . 622385) (|setEmpty!| . 622193)
 (|setStatus!| . 621970) (|setCondition!| . 621775) (|setValue!| . 621580)
 (|copy| . 619964) (|status| . 619461) (|condition| . 619269)
 (|value| . 618486) (|splitNodeOf!| . 617924) (|remove!| . 616561)
 (|remove| . 615509) (|subNodeOf?| . 615183) (|nodeOf?| . 614913)
 (|result| . 614646) (|conditions| . 614426) (|updateStatus!| . 614234)
 (|extractSplittingLeaf| . 614040) (|extendedCoords| . 613931)
 (|screenCoords| . 613822) (|screenCoordZ| . 613729) (|screenCoordY| . 613636)
 (|screenCoordX| . 613543) (|inBounds?| . 613448) (|isVector?| . 613359)
 (|isPoint?| . 613270) (|toVector| . 613217) (|toPoint| . 613164)
 (|perpendicular| . 613108) (|colinearity| . 613012) (|parallel| . 612916)
 (|distance| . 612509) (|distanceSquared| . 612413) (|Pnan?| . 612324)
 (|dimension| . 610500) (|max| . 609348) (|min| . 608397) (|sivec| . 608212)
 (|svec| . 608019) (|sipnt| . 607834) (|spnt| . 607641)
 (|squareMatrix| . 607433) (|transpose| . 606417) (|rightTrim| . 606133)
 (|leftTrim| . 605849) (|trim| . 605565) (|split| . 602872)
 (|position| . 601543) (|replace| . 601419) (|match?| . 601286)
 (|substring?| . 601155) (|suffix?| . 601062) (|prefix?| . 600969)
 (|upperCase!| . 600915) (|upperCase| . 600771) (|lowerCase!| . 600717)
 (|lowerCase| . 600573) (|KrullNumber| . 599547) (|numberOfVariables| . 598521)
 (|algebraicDecompose| . 597120) (|transcendentalDecompose| . 594298)
 (|internalDecompose| . 589948) (|decompose| . 586779)
 (|upDateBranches| . 585082) (|printInfo| . 584067) (|pre_process| . 582820)
 (|internalZeroSetSplit| . 581970) (|internalAugment| . 580565)
 (|monomial| . 578101) (|leadingMonomial| . 576925)
 (|leadingCoefficient| . 575091) (|stack| . 574969)
 (|possiblyInfinite?| . 574842) (|explicitlyFinite?| . 574715)
 (|nextItem| . 574655) (|init| . 574407) (|exp0| . 574251) (|log1| . 574095)
 (|tensorMap| . 573925) (|stransform| . 573274) (|stranslate| . 573125)
 (|identity| . 572867) (|xform| . 572769) (|compound| . 572671)
 (|STransform1| . 572194) (|STransform2| . 571717) (|STransform| . 571240)
 (|distributionBySTransform| . 570196) (|filterUntil| . 569923)
 (|filterWhile| . 569650) (|stream| . 569139) (|showAll?| . 568992)
 (|showAllElements| . 568839) (|showElements| . 568637) (|cons| . 568365)
 (|delay| . 568235) (|findCycle| . 567891) (|repeating?| . 567703)
 (|repeating| . 567587) (|uentries| . 567493) (|ucodeToString| . 567416)
 (|exquo| . 565990) (|recip| . 563945) (|integers| . 563761)
 (|oddintegers| . 563577) (|int| . 562685) (|mapmult| . 562542)
 (|deriv| . 562248) (|gderiv| . 562055) (|compose| . 561912)
 (|addiag| . 561724) (|prodiag| . 561536) (|general_Lambert_product| . 561355)
 (|lazyIntegrate| . 560895) (|nlde| . 560645) (|powern| . 560421)
 (|mapdiv| . 560243) (|lazyGintegrate| . 559970) (|power| . 559555)
 (|sincos| . 559245) (|sinhcosh| . 558933) (|asin| . 557410) (|acos| . 555887)
 (|atan| . 554272) (|acot| . 552949) (|asec| . 551626) (|acsc| . 550303)
 (|sinh| . 548786) (|cosh| . 547269) (|tanh| . 545752) (|coth| . 544435)
 (|sech| . 543118) (|csch| . 541801) (|asinh| . 540481) (|acosh| . 539161)
 (|atanh| . 537717) (|acoth| . 536397) (|asech| . 535077) (|acsch| . 533757)
 (|subresultantVector| . 533534) (|primitivePart| . 532294)
 (|pointData| . 532129) (|parent| . 532002) (|level| . 531829)
 (|extractProperty| . 531649) (|extractClosed| . 531494)
 (|extractIndex| . 531321) (|extractPoint| . 531165) (|traverse| . 530980)
 (|defineProperty| . 530739) (|closeComponent| . 530523)
 (|modifyPoint| . 529868) (|addPointLast| . 529657) (|addPoint2| . 529498)
 (|addPoint| . 528846) (|merge| . 527621) (|deepCopy| . 527494)
 (|shallowCopy| . 527367) (|numberOfChildren| . 527194) (|children| . 526888)
 (|child| . 526712) (|birth| . 526585) (|internal?| . 526430)
 (|root?| . 526275) (|leaf?| . 525992) (|rhs| . 525348) (|lhs| . 524704)
 (|construct| . 519233) (|sum| . 515507) (|outputForm| . 514542) (NOT . 514191)
 (AND . 513878) (EQ . 513565) (OR . 513252) (GE . 512939) (LE . 512626)
 (GT . 512313) (LT . 512000) (|ansatz| . 511690) (|transform| . 510410)
 (|linearize| . 509825) (|detSys| . 508617) (|ncDetSys| . 507409)
 (|detSysNS| . 506612) (|sample| . 506256) (|string| . 505744)
 (|argscript| . 505650) (|superscript| . 505556) (|subscript| . 505238)
 (|script| . 504741) (|scripts| . 504035) (|scripted?| . 503958)
 (|name| . 503180) (|resetNew| . 503109) (|symFunc| . 502777)
 (|symbolTableOf| . 502649) (|argumentListOf| . 502517)
 (|returnTypeOf| . 502287) (|printHeader| . 501973) (|returnType!| . 501258)
 (|argumentList!| . 500818) (|endSubProgram| . 500737)
 (|currentSubProgram| . 500656) (|newSubProgram| . 500538)
 (|clearTheSymbolTable| . 500343) (|showTheSymbolTable| . 500295)
 (|symbolTable| . 500087) (|printTypes| . 499892) (|newTypeLists| . 499804)
 (|typeLists| . 499315) (|externalList| . 499223) (|typeList| . 498685)
 (|parametersOf| . 498593) (|fortranTypeOf| . 498468) (|declare!| . 497650)
 (|solve| . 476057) (|triangularSystems| . 475786) (|bumprow| . 475392)
 (|bumptab| . 475149) (|bumptab1| . 474962) (|untab| . 474766)
 (|bat1| . 474566) (|bat| . 474379) (|tab1| . 474186) (|tab| . 474008)
 (|lex| . 473868) (|slex| . 473693) (|inverse| . 471785) (|maxrow| . 471265)
 (|mr| . 470832) (|listOfLists| . 470111) (|tableau| . 469405)
 (|tanSum| . 469277) (|tanAn| . 469081) (|tanNa| . 468950)
 (|initTable!| . 468768) (|printInfo!| . 468553) (|startStats!| . 468341)
 (|printStats!| . 468159) (|clearTable!| . 467977) (|usingTable?| . 467792)
 (|printingInfo?| . 467607) (|makingStats?| . 467422) (|extractIfCan| . 467260)
 (|insert!| . 466320) (|interpretString| . 466200)
 (|stripCommentsAndBlanks| . 466111) (|linearExtend| . 465165)
 (|tensor| . 464459) (|testEqualsAux| . 464303) (|xftestEqualsAux| . 464147)
 (|testNotEqualsAux| . 463991) (|xftestNotEqualsAux| . 463835)
 (|testTrueAux| . 463682) (|xftestTrueAux| . 463529)
 (|testLibraryErrorAux| . 463376) (|xftestLibraryErrorAux| . 463223)
 (|testEqualsAuxCmp| . 463094) (|testRealEqualsAux| . 462892)
 (|xftestRealEqualsAux| . 462690) (|testComplexEqualsAux| . 462457)
 (|xftestComplexEqualsAux| . 462224) (|testAbsolutePrecision| . 462087)
 (|testRelativePrecision| . 461950) (|testsuite| . 461833)
 (|testsuiteNoClear| . 461716) (|testcase| . 461599)
 (|testcaseNoClear| . 461482) (|statistics| . 461213) (|incPass| . 461135)
 (|incFail| . 460975) (|incXfPass| . 460815) (|decXfPass| . 460737)
 (|incXfFail| . 460659) (|chkLibraryError| . 460581)
 (|incLibraryError| . 460421) (|incXfLibraryError| . 460261)
 (|incFatal| . 460144) (|incXfFatal| . 460027) (|decFatal| . 459949)
 (|decXfFatal| . 459871) (|addWarning| . 459750) (|testEquals| . 459635)
 (|xftestEquals| . 459520) (|testRealEquals| . 459405)
 (|xftestRealEquals| . 459290) (|testComplexEquals| . 459175)
 (|xftestComplexEquals| . 459060) (|testNotEquals| . 458945)
 (|xftestNotEquals| . 458830) (|testTrue| . 458718) (|xftestTrue| . 458606)
 (|testLibraryError| . 458494) (|xftestLibraryError| . 458382)
 (|setPrologue!| . 458154) (|setTex!| . 458061) (|setEpilogue!| . 457833)
 (|prologue| . 457611) (|new| . 455458) (|tex| . 455368) (|epilogue| . 455146)
 (|endOfFile?| . 455067) (|readIfCan!| . 454780) (|readLineIfCan!| . 454690)
 (|readLine!| . 454612) (|writeLine!| . 454455) (|coerceL| . 454094)
 (|sign| . 451241) (|nonQsign| . 451113) (|direction| . 450964)
 (|createThreeSpace| . 450850) (|pi| . 450346) (|tree| . 450010)
 (|cos| . 448388) (|cot| . 447068) (|csc| . 445748) (|sec| . 444428)
 (|sin| . 442806) (|tan| . 441286) (|complexNormalize| . 439420)
 (|complexElementary| . 437554) (|trigs| . 436684) (|real| . 435449)
 (|imag| . 434434) (|real?| . 433414) (|complexForm| . 432461)
 (|trigs2explogs| . 431543) (|UpTriBddDenomInv| . 431252)
 (|LowTriBddDenomInv| . 430961) (|simplify| . 429049) (|htrigs| . 428768)
 (|simplifyExp| . 428487) (|simplifyLog| . 428206) (|expandPower| . 427925)
 (|expandLog| . 427644) (|cos2sec| . 427363) (|cosh2sech| . 427082)
 (|cot2trig| . 426801) (|coth2trigh| . 426520) (|csc2sin| . 426239)
 (|csch2sinh| . 425958) (|sec2cos| . 425677) (|sech2cosh| . 425396)
 (|sin2csc| . 425115) (|sinh2csch| . 424834) (|tan2trig| . 424553)
 (|tanh2trigh| . 424272) (|tan2cot| . 423991) (|tanh2coth| . 423710)
 (|cot2tan| . 423429) (|coth2tanh| . 423148) (|removeCosSq| . 422867)
 (|removeSinSq| . 422586) (|removeCoshSq| . 422305) (|removeSinhSq| . 422024)
 (|expandTrigProducts| . 421529) (|fintegrate| . 420911)
 (|coefficient| . 417925) (|taylor_via_deriv| . 416035)
 (|taylor_via_lode| . 415610) (|applyTaylor| . 415210)
 (|apply_taylor| . 414569) (|coHeight| . 414211) (|extendIfCan| . 413931)
 (|algebraicVariables| . 413613) (|zeroSetSplitIntoTriangularSystems| . 413171)
 (|zeroSetSplit| . 408303) (|reduceByQuasiMonic| . 408017)
 (|collectQuasiMonic| . 407734) (|removeZero| . 407448)
 (|initiallyReduce| . 406958) (|headReduce| . 406468)
 (|stronglyReduce| . 406182) (|rewriteSetWithReduction| . 405765)
 (|autoReduced?| . 405382) (|initiallyReduced?| . 404246)
 (|headReduced?| . 403110) (|stronglyReduced?| . 402473) (|reduced?| . 401597)
 (|normalized?| . 400461) (|quasiComponent| . 400045) (|initials| . 399727)
 (|basicSet| . 398822) (|infRittWu?| . 397433) (|getCurve| . 397320)
 (|listLoops| . 397140) (|closed?| . 396896) (|open?| . 396755)
 (|setClosed| . 396611) (|tube| . 396174) (|point| . 395072)
 (|unitVector| . 394116) (|cosSinInfo| . 393966) (|loopPoints| . 393693)
 (|select| . 392810) (|generalTwoFactor| . 392442) (|tryTwoFactor| . 392074)
 (|generalSqFr| . 391706) (|twoFactor| . 391307) (|doFactor| . 390874)
 (|diagramSvg2| . 390677) (|undirectedGraph| . 388846) (|setOrder| . 388495)
 (|getOrder| . 388305) (|less?| . 387819) (|userOrdered?| . 387672)
 (|largest| . 387285) (|more?| . 386968) (|setVariableOrder| . 386687)
 (|getVariableOrder| . 386480) (|resetVariableOrder| . 386379)
 (|prime?| . 385326) (|hadamard| . 385147) (|pre_gauss| . 385033)
 (|pre_smith| . 384919) (|pre_lr| . 384753) (|rationalFunction| . 384264)
 (|taylorIfCan| . 384067) (|taylor| . 376507) (|removeZeroes| . 375333)
 (|taylorRep| . 375141) (|hasHi| . 375015) (|segment| . 374706)
 (SEGMENT . 374429) (|commonDenominator| . 373096)
 (|clearDenominator| . 371726) (|splitDenominator| . 369376)
 (|monicRightFactorIfCan| . 369133) (|rightFactorIfCan| . 368887)
 (|leftFactorIfCan| . 368686) (|monicDecomposeIfCan| . 368425)
 (|monicCompleteDecompose| . 368201) (|decomposeIfCan| . 367909)
 (|completeDecompose| . 367650) (|divideIfCan| . 367383)
 (|noKaratsuba| . 367193) (|karatsubaOnce| . 367003) (|karatsuba| . 366768)
 (|separate| . 365933) (|pseudoDivide| . 365326) (|pseudoQuotient| . 365137)
 (|composite| . 364594) (|subResultantGcd| . 363984) (|resultant| . 362957)
 (|discriminant| . 361357) (|pseudoRemainder| . 361178) (|shiftRight| . 360953)
 (|karatsubaDivide| . 360660) (|monicDivide| . 360062) (|shiftLeft| . 359747)
 (|divideExponents| . 359554) (|unmakeSUP| . 359355) (|makeSUP| . 359156)
 (|unvectorise| . 358662) (|vectorise| . 358434) (|eval| . 350685)
 (|extend| . 348197) (|approximate| . 346956) (|truncate| . 346578)
 (|order| . 341051) (|center| . 340477) (|terms| . 340046)
 (|squareFreePart| . 339023) (|BumInSepFFE| . 338521)
 (|multiplyExponents| . 337963) (|laurentIfCan| . 337765) (|laurent| . 332087)
 (|laurentRep| . 331894) (|rationalPower| . 331653) (|puiseux| . 325886)
 (|dominantTerm| . 324753) (|limitPlus| . 323585) (|split!| . 323383)
 (|setlast!| . 323227) (|qsetrest!| . 323071) (|setrest!| . 322795)
 (|setelt!| . 316107) (|qsetfirst!| . 315951) (|setfirst!| . 315795)
 (|cycleSplit!| . 315642) (|concat!| . 314781) (|cycleTail| . 314674)
 (|cycleLength| . 314528) (|cycleEntry| . 314421) (|third| . 314314)
 (|second| . 314076) (|tail| . 313665) (|last| . 313026) (|rest| . 312195)
 (|elt| . 297503) (|first| . 296042) (|concat| . 295253)
 (|invmultisect| . 294733) (|multisect| . 294213) (|revert| . 293816)
 (|generalLambert| . 293296) (|evenlambert| . 292899) (|oddlambert| . 292502)
 (|lambert| . 292105) (|lagrange| . 291708) (|differentiate| . 286777)
 (|univariatePolynomial| . 286051) (|integrate| . 272498) (^ . 266552)
 (|polynomial| . 265482) (|multiplyCoefficients| . 264991)
 (|quoByVar| . 264877) (|coefficients| . 263747) (|series| . 253008)
 (|stFunc1| . 252697) (|stFunc2| . 252369) (|stFuncN| . 252040)
 (|fixedPointExquo| . 251830) (|ode1| . 251579) (|ode2| . 251322)
 (|ode| . 251034) (|mpsode| . 250695) (UP2UTS . 250394) (UTS2UP . 250051)
 (LODO2FUN . 249700) (RF2UTS . 249323) (|seriesSolve| . 244207) (= . 243041)
 (|parseVarTerm| . 242779) (|parseVar| . 242701) (|toString| . 241771)
 (|getType| . 241567) (|getName| . 241489) (|var| . 241296)
 (|variable| . 240374) (|add_slots| . 240231) (|repack_polys| . 239685)
 (|empty| . 238819) (|chinese_update| . 238473) (|hensel_update| . 238299)
 (|rational_reconstruction| . 237333) (|remove_denoms| . 236948)
 (|reconstruct| . 235753) (|length| . 234558) (|cross| . 234231)
 (|outerProduct| . 234073) (|dot| . 233444) (- . 230462) (|zero?| . 228823)
 (|zero| . 228375) (|vector| . 227756) (|scan| . 225511) (|reduce| . 217622)
 (|hp_solve| . 217188) (|graphCurves| . 216538) (|drawCurves| . 216006)
 (|update| . 215834) (|show| . 215666) (|scale| . 215138) (|connect| . 214970)
 (|region| . 214802) (|points| . 214634) (|units| . 213965)
 (|getGraph| . 213821) (|putGraph| . 213649) (|graphs| . 213346)
 (|graphStates| . 212598) (|graphState| . 212329) (|makeViewport2D| . 212124)
 (|viewport2D| . 212068) (|getPickedPoints| . 211943) (|key| . 211667)
 (|close| . 211377) (|write| . 210687) (|colorDef| . 210554) (|reset| . 210370)
 (|intensity| . 210240) (|lighting| . 210104) (|clipSurface| . 209973)
 (|showClipRegion| . 209842) (|showRegion| . 209711) (|hitherPlane| . 209581)
 (|eyeDistance| . 209451) (|perspective| . 209320) (|translate| . 208844)
 (|zoom| . 208287) (|rotate| . 208021) (|drawStyle| . 207890)
 (|outlineRender| . 207759) (|diagonals| . 207628) (|axes| . 207164)
 (|controlPanel| . 206906) (|viewpoint| . 204143) (|dimensions| . 203757)
 (|title| . 203281) (|resize| . 202999) (|move| . 202711) (|options| . 202251)
 (|modifyPointData| . 201882) (|subspace| . 201379) (|makeViewport3D| . 200989)
 (|viewport3D| . 200931) (|viewDeltaYDefault| . 200746)
 (|viewDeltaXDefault| . 200561) (|viewZoomDefault| . 200376)
 (|viewPhiDefault| . 200191) (|viewThetaDefault| . 200006)
 (|pointColorDefault| . 199827) (|lineColorDefault| . 199648)
 (|axesColorDefault| . 199469) (|unitsColorDefault| . 199290)
 (|pointSizeDefault| . 199081) (|viewPosDefault| . 198848)
 (|viewSizeDefault| . 198621) (|viewDefaults| . 198535)
 (|viewWriteDefault| . 198326) (|viewWriteAvailable| . 198222)
 (|var1StepsDefault| . 198013) (|var2StepsDefault| . 197804)
 (|tubePointsDefault| . 197595) (|tubeRadiusDefault| . 197368)
 (|void| . 197330) (|coordinates| . 195586) (|coordinatesIfCan| . 195448)
 (|member?| . 194723) (|complementSpace| . 194171) (|canonicalBasis| . 194033)
 (|Zero| . 193514) (|subspace?| . 193384) (|isBasis?| . 193218)
 (|rank| . 189496) (|intBasis| . 188971) (+ . 185734) (|sumBasis| . 185209)
 (|columnSpace| . 184452) (|nullSpace| . 182279) (|basis| . 180444)
 (|weierstrass| . 180221) (|integralBasis| . 178060)
 (|localIntegralBasis| . 176169) (|weightedDistanceMatrix| . 175943)
 (|closedCartesian| . 175309) (|closedTensor| . 174532) (|cartesian| . 173438)
 (|routeArrowWeight| . 173225) (|routeNodeWeight| . 173012)
 (|distanceWeighted| . 172758) (|addWArrow!| . 172518)
 (|weightedGraph| . 169552) (|changeWeightLevel| . 168863)
 (|characteristicSerie| . 167986) (|characteristicSet| . 167279)
 (|medialSet| . 166572) (|hankelIndices| . 166316) (|hankelMatrix| . 165829)
 (|hankelSystem| . 165410) (|display| . 162949) (|minimalMatrix| . 162713)
 (|findNonZeroEntry| . 162419) (|transformationMatrices| . 162186)
 (|minimalRepresentation| . 161727) (|Hausdorff| . 161432)
 (|Frobenius| . 160779) (|transcendenceDegree| . 160432)
 (|extensionDegree| . 159684) (|inGroundField?| . 159557)
 (|transcendent?| . 159430) (|algebraic?| . 158984) (|varList| . 157767)
 (|sh| . 157363) (|mirror| . 156622) (|monomial?| . 155926) (|monom| . 155581)
 (|rquo| . 154727) (|lquo| . 153873) (|mindegTerm| . 153666) (|table| . 152860)
 (|writeXml| . 152713) (|writeVRML| . 152416) (|xmlAttribute| . 152201)
 (|xmlElement| . 151882) (|empty?| . 150872) (|outputVRML| . 150634)
 (|log| . 147602) (|exp| . 144720) (|product| . 142902)
 (|LiePolyIfCan| . 142512) (|homo_fact| . 142255) (|top_split| . 141998)
 (|left_ext_GCD| . 141437) (|ldivide| . 141025) (|lift1| . 140252)
 (|factor| . 127239) (|trunc| . 126863) (|degree| . 121727) (/ . 117656)
 (|quasiRegular| . 117390) (|quasiRegular?| . 117061) (|constant| . 116277)
 (|constant?| . 115826) (|coef| . 115180) (|reductum| . 113450)
 (|mindeg| . 113143) (|maxdeg| . 112833) (|coerce| . 71351) (|#| . 70646)
 (|map| . 40300) (* . 29053) (|RemainderList| . 28559) (|unexpand| . 28217)
 (|expand| . 25835) (Y . 25360) (|triangSolve| . 23901)
 (|univariateSolve| . 20619) (|realSolve| . 17858) (|positiveSolve| . 15860)
 (|squareFree| . 12771) (|convert| . 1895) (|linearlyDependentOverZ?| . 1690)
 (|linearDependenceOverZ| . 1476) (|particularSolutionOverQ| . 988)
 (|solveLinearlyOverQ| . 30)) 